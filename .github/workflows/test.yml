# This is a basic workflow to help you get started with Actions

name: CI test

# Controls when the action will run. 
on:

  # Triggers the workflow on pull request events but only for the main & dev branch
  pull_request:
    branches: [ main , dev ]
  
  # Triggers the workflow on push events
  push:
    branches: [ main , dev ]

  # Allows you to run this workflow Actions manually
  workflow_dispatch:

   # Triggers the action 2am every day
  schedule:
    - cron: "0 2 * * *"


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  ACT-sail-spike:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        isa_group: 
          - RV32IMAFDCZicsr_Zifencei
          - RV64IMAFDCZicsr_Zifencei


    steps:

      - name: Checkout source
        uses: actions/checkout@v4

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y python3 python3-pip python3-venv
          sudo apt-get install -y gcc git autoconf automake libtool curl make unzip
          pip3 install git+https://github.com/riscv/riscof.git
      
      - name: Build 32-bit RISCV-GNU Toolchain
        run: |
          sudo apt-get install autoconf automake autotools-dev curl python3 libmpc-dev libmpfr-dev libgmp-dev gawk build-essential bison flex texinfo gperf libtool patchutils bc zlib1g-dev libexpat-dev
          git clone --recursive https://github.com/riscv-collab/riscv-gnu-toolchain.git
          cd riscv-gnu-toolchain
          ./configure --prefix=/opt/riscv --with-arch=rv32gc --with-abi=ilp32d
          make

      - name: Build 64-bit RISCV-GNU Toolchain
        run: |
          sudo apt-get install autoconf automake autotools-dev curl python3 libmpc-dev libmpfr-dev libgmp-dev gawk build-essential bison flex texinfo gperf libtool patchutils bc zlib1g-dev libexpat-dev
          git clone --recursive https://github.com/riscv-collab/riscv-gnu-toolchain.git
          cd riscv-gnu-toolchain
          ./configure --prefix=/opt/riscv
          make

      - name: Install Spike
        run: |
          git clone https://github.com/riscv/riscv-isa-sim.git
          cd riscv-isa-sim
          mkdir build
          cd build
          ../configure --prefix=/opt/riscv
          make -j$(nproc)
          sudo make install
          export PATH=/opt/riscv/bin:$PATH
      

      - name: Install Sail
        run: |
          sudo apt-get install opam build-essential libgmp-dev z3 pkg-config zlib1g-dev
          opam init -y --disable-sandboxing
          opam switch create ocaml-base-compiler
          opam install sail -y
          eval $(opam config env)
          git clone https://github.com/riscv/sail-riscv.git
          cd sail-riscv
          ARCH=RV32 make
          ARCH=RV64 make
          ln -s sail-riscv/c_emulator/riscv_sim_RV64 /usr/bin/riscv_sim_RV64
          ln -s sail-riscv/c_emulator/riscv_sim_RV32 /usr/bin/riscv_sim_RV32      
      
      - name: Config and run riscof for RV32
        run: |
          riscof run --config riscof-plugin/rv32/config.ini --suite riscv-test-suite/ --env riscv-test-suite/env


      - name: Config and run riscof for RV64
        run: |
          riscof run --config riscof-plugin/rv64/config.ini --suite riscv-test-suite/ --env riscv-test-suite/env
