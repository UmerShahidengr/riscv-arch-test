
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 14:17:59 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32F/fmadd.s.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmadd.s instruction of the RISC-V RV32F_Zicsr,RV32FD_Zicsr,RV64F_Zicsr,RV64FD_Zicsr extension for the fmadd_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF_Zicsr,RV32IFD_Zicsr,RV64IF_Zicsr,RV64IFD_Zicsr,RV32EF_Zicsr,RV32EFD_Zicsr,RV64EF_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fmadd_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*F.*);def TEST_CASE_1=True;",fmadd_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_26112:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0250a3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3edcf1 and fs3 == 0 and fe3 == 0x3f and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0250a3; op2val:0x3edcf1;
op3val:0x1f807fff; valaddr_reg:x3; val_offset:78336*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78336*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26113:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0250a3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3edcf1 and fs3 == 0 and fe3 == 0x3f and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0250a3; op2val:0x3edcf1;
op3val:0x1f80ffff; valaddr_reg:x3; val_offset:78339*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78339*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26114:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0250a3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3edcf1 and fs3 == 0 and fe3 == 0x3f and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0250a3; op2val:0x3edcf1;
op3val:0x1f81ffff; valaddr_reg:x3; val_offset:78342*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78342*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26115:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0250a3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3edcf1 and fs3 == 0 and fe3 == 0x3f and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0250a3; op2val:0x3edcf1;
op3val:0x1f83ffff; valaddr_reg:x3; val_offset:78345*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78345*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26116:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0250a3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3edcf1 and fs3 == 0 and fe3 == 0x3f and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0250a3; op2val:0x3edcf1;
op3val:0x1f87ffff; valaddr_reg:x3; val_offset:78348*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78348*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26117:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0250a3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3edcf1 and fs3 == 0 and fe3 == 0x3f and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0250a3; op2val:0x3edcf1;
op3val:0x1f8fffff; valaddr_reg:x3; val_offset:78351*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78351*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26118:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0250a3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3edcf1 and fs3 == 0 and fe3 == 0x3f and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0250a3; op2val:0x3edcf1;
op3val:0x1f9fffff; valaddr_reg:x3; val_offset:78354*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78354*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26119:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0250a3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3edcf1 and fs3 == 0 and fe3 == 0x3f and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0250a3; op2val:0x3edcf1;
op3val:0x1fbfffff; valaddr_reg:x3; val_offset:78357*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78357*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26120:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0250a3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3edcf1 and fs3 == 0 and fe3 == 0x3f and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0250a3; op2val:0x3edcf1;
op3val:0x1fc00000; valaddr_reg:x3; val_offset:78360*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78360*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26121:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0250a3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3edcf1 and fs3 == 0 and fe3 == 0x3f and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0250a3; op2val:0x3edcf1;
op3val:0x1fe00000; valaddr_reg:x3; val_offset:78363*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78363*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26122:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0250a3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3edcf1 and fs3 == 0 and fe3 == 0x3f and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0250a3; op2val:0x3edcf1;
op3val:0x1ff00000; valaddr_reg:x3; val_offset:78366*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78366*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26123:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0250a3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3edcf1 and fs3 == 0 and fe3 == 0x3f and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0250a3; op2val:0x3edcf1;
op3val:0x1ff80000; valaddr_reg:x3; val_offset:78369*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78369*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26124:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0250a3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3edcf1 and fs3 == 0 and fe3 == 0x3f and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0250a3; op2val:0x3edcf1;
op3val:0x1ffc0000; valaddr_reg:x3; val_offset:78372*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78372*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26125:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0250a3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3edcf1 and fs3 == 0 and fe3 == 0x3f and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0250a3; op2val:0x3edcf1;
op3val:0x1ffe0000; valaddr_reg:x3; val_offset:78375*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78375*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26126:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0250a3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3edcf1 and fs3 == 0 and fe3 == 0x3f and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0250a3; op2val:0x3edcf1;
op3val:0x1fff0000; valaddr_reg:x3; val_offset:78378*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78378*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26127:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0250a3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3edcf1 and fs3 == 0 and fe3 == 0x3f and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0250a3; op2val:0x3edcf1;
op3val:0x1fff8000; valaddr_reg:x3; val_offset:78381*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78381*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26128:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0250a3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3edcf1 and fs3 == 0 and fe3 == 0x3f and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0250a3; op2val:0x3edcf1;
op3val:0x1fffc000; valaddr_reg:x3; val_offset:78384*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78384*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26129:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0250a3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3edcf1 and fs3 == 0 and fe3 == 0x3f and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0250a3; op2val:0x3edcf1;
op3val:0x1fffe000; valaddr_reg:x3; val_offset:78387*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78387*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26130:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0250a3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3edcf1 and fs3 == 0 and fe3 == 0x3f and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0250a3; op2val:0x3edcf1;
op3val:0x1ffff000; valaddr_reg:x3; val_offset:78390*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78390*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26131:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0250a3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3edcf1 and fs3 == 0 and fe3 == 0x3f and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0250a3; op2val:0x3edcf1;
op3val:0x1ffff800; valaddr_reg:x3; val_offset:78393*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78393*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26132:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0250a3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3edcf1 and fs3 == 0 and fe3 == 0x3f and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0250a3; op2val:0x3edcf1;
op3val:0x1ffffc00; valaddr_reg:x3; val_offset:78396*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78396*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26133:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0250a3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3edcf1 and fs3 == 0 and fe3 == 0x3f and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0250a3; op2val:0x3edcf1;
op3val:0x1ffffe00; valaddr_reg:x3; val_offset:78399*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78399*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26134:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0250a3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3edcf1 and fs3 == 0 and fe3 == 0x3f and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0250a3; op2val:0x3edcf1;
op3val:0x1fffff00; valaddr_reg:x3; val_offset:78402*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78402*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26135:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0250a3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3edcf1 and fs3 == 0 and fe3 == 0x3f and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0250a3; op2val:0x3edcf1;
op3val:0x1fffff80; valaddr_reg:x3; val_offset:78405*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78405*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26136:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0250a3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3edcf1 and fs3 == 0 and fe3 == 0x3f and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0250a3; op2val:0x3edcf1;
op3val:0x1fffffc0; valaddr_reg:x3; val_offset:78408*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78408*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26137:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0250a3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3edcf1 and fs3 == 0 and fe3 == 0x3f and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0250a3; op2val:0x3edcf1;
op3val:0x1fffffe0; valaddr_reg:x3; val_offset:78411*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78411*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26138:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0250a3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3edcf1 and fs3 == 0 and fe3 == 0x3f and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0250a3; op2val:0x3edcf1;
op3val:0x1ffffff0; valaddr_reg:x3; val_offset:78414*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78414*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26139:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0250a3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3edcf1 and fs3 == 0 and fe3 == 0x3f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0250a3; op2val:0x3edcf1;
op3val:0x1ffffff8; valaddr_reg:x3; val_offset:78417*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78417*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26140:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0250a3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3edcf1 and fs3 == 0 and fe3 == 0x3f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0250a3; op2val:0x3edcf1;
op3val:0x1ffffffc; valaddr_reg:x3; val_offset:78420*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78420*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26141:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0250a3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3edcf1 and fs3 == 0 and fe3 == 0x3f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0250a3; op2val:0x3edcf1;
op3val:0x1ffffffe; valaddr_reg:x3; val_offset:78423*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78423*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26142:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0250a3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3edcf1 and fs3 == 0 and fe3 == 0x3f and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0250a3; op2val:0x3edcf1;
op3val:0x1fffffff; valaddr_reg:x3; val_offset:78426*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78426*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26143:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0250a3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3edcf1 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0250a3; op2val:0x3edcf1;
op3val:0x3f800001; valaddr_reg:x3; val_offset:78429*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78429*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26144:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0250a3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3edcf1 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0250a3; op2val:0x3edcf1;
op3val:0x3f800003; valaddr_reg:x3; val_offset:78432*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78432*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26145:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0250a3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3edcf1 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0250a3; op2val:0x3edcf1;
op3val:0x3f800007; valaddr_reg:x3; val_offset:78435*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78435*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26146:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0250a3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3edcf1 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0250a3; op2val:0x3edcf1;
op3val:0x3f999999; valaddr_reg:x3; val_offset:78438*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78438*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26147:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0250a3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3edcf1 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0250a3; op2val:0x3edcf1;
op3val:0x3fa49249; valaddr_reg:x3; val_offset:78441*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78441*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26148:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0250a3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3edcf1 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0250a3; op2val:0x3edcf1;
op3val:0x3fb33333; valaddr_reg:x3; val_offset:78444*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78444*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26149:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0250a3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3edcf1 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0250a3; op2val:0x3edcf1;
op3val:0x3fb6db6d; valaddr_reg:x3; val_offset:78447*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78447*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26150:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0250a3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3edcf1 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0250a3; op2val:0x3edcf1;
op3val:0x3fbbbbbb; valaddr_reg:x3; val_offset:78450*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78450*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26151:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0250a3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3edcf1 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0250a3; op2val:0x3edcf1;
op3val:0x3fc44444; valaddr_reg:x3; val_offset:78453*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78453*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26152:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0250a3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3edcf1 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0250a3; op2val:0x3edcf1;
op3val:0x3fcccccc; valaddr_reg:x3; val_offset:78456*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78456*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26153:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0250a3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3edcf1 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0250a3; op2val:0x3edcf1;
op3val:0x3fdb6db6; valaddr_reg:x3; val_offset:78459*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78459*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26154:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0250a3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3edcf1 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0250a3; op2val:0x3edcf1;
op3val:0x3fe66666; valaddr_reg:x3; val_offset:78462*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78462*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26155:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0250a3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3edcf1 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0250a3; op2val:0x3edcf1;
op3val:0x3fedb6db; valaddr_reg:x3; val_offset:78465*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78465*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26156:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0250a3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3edcf1 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0250a3; op2val:0x3edcf1;
op3val:0x3ffffff8; valaddr_reg:x3; val_offset:78468*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78468*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26157:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0250a3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3edcf1 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0250a3; op2val:0x3edcf1;
op3val:0x3ffffffc; valaddr_reg:x3; val_offset:78471*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78471*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26158:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0250a3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3edcf1 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0250a3; op2val:0x3edcf1;
op3val:0x3ffffffe; valaddr_reg:x3; val_offset:78474*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78474*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26159:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x026f45 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3ece2e and fs3 == 0 and fe3 == 0x77 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f026f45; op2val:0x3ece2e;
op3val:0x3b800000; valaddr_reg:x3; val_offset:78477*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78477*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26160:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x026f45 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3ece2e and fs3 == 0 and fe3 == 0x77 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f026f45; op2val:0x3ece2e;
op3val:0x3b800001; valaddr_reg:x3; val_offset:78480*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78480*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26161:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x026f45 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3ece2e and fs3 == 0 and fe3 == 0x77 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f026f45; op2val:0x3ece2e;
op3val:0x3b800003; valaddr_reg:x3; val_offset:78483*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78483*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26162:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x026f45 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3ece2e and fs3 == 0 and fe3 == 0x77 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f026f45; op2val:0x3ece2e;
op3val:0x3b800007; valaddr_reg:x3; val_offset:78486*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78486*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26163:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x026f45 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3ece2e and fs3 == 0 and fe3 == 0x77 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f026f45; op2val:0x3ece2e;
op3val:0x3b80000f; valaddr_reg:x3; val_offset:78489*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78489*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26164:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x026f45 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3ece2e and fs3 == 0 and fe3 == 0x77 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f026f45; op2val:0x3ece2e;
op3val:0x3b80001f; valaddr_reg:x3; val_offset:78492*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78492*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26165:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x026f45 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3ece2e and fs3 == 0 and fe3 == 0x77 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f026f45; op2val:0x3ece2e;
op3val:0x3b80003f; valaddr_reg:x3; val_offset:78495*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78495*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26166:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x026f45 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3ece2e and fs3 == 0 and fe3 == 0x77 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f026f45; op2val:0x3ece2e;
op3val:0x3b80007f; valaddr_reg:x3; val_offset:78498*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78498*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26167:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x026f45 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3ece2e and fs3 == 0 and fe3 == 0x77 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f026f45; op2val:0x3ece2e;
op3val:0x3b8000ff; valaddr_reg:x3; val_offset:78501*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78501*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26168:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x026f45 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3ece2e and fs3 == 0 and fe3 == 0x77 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f026f45; op2val:0x3ece2e;
op3val:0x3b8001ff; valaddr_reg:x3; val_offset:78504*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78504*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26169:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x026f45 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3ece2e and fs3 == 0 and fe3 == 0x77 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f026f45; op2val:0x3ece2e;
op3val:0x3b8003ff; valaddr_reg:x3; val_offset:78507*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78507*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26170:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x026f45 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3ece2e and fs3 == 0 and fe3 == 0x77 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f026f45; op2val:0x3ece2e;
op3val:0x3b8007ff; valaddr_reg:x3; val_offset:78510*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78510*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26171:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x026f45 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3ece2e and fs3 == 0 and fe3 == 0x77 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f026f45; op2val:0x3ece2e;
op3val:0x3b800fff; valaddr_reg:x3; val_offset:78513*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78513*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26172:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x026f45 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3ece2e and fs3 == 0 and fe3 == 0x77 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f026f45; op2val:0x3ece2e;
op3val:0x3b801fff; valaddr_reg:x3; val_offset:78516*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78516*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26173:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x026f45 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3ece2e and fs3 == 0 and fe3 == 0x77 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f026f45; op2val:0x3ece2e;
op3val:0x3b803fff; valaddr_reg:x3; val_offset:78519*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78519*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26174:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x026f45 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3ece2e and fs3 == 0 and fe3 == 0x77 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f026f45; op2val:0x3ece2e;
op3val:0x3b807fff; valaddr_reg:x3; val_offset:78522*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78522*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26175:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x026f45 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3ece2e and fs3 == 0 and fe3 == 0x77 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f026f45; op2val:0x3ece2e;
op3val:0x3b80ffff; valaddr_reg:x3; val_offset:78525*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78525*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26176:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x026f45 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3ece2e and fs3 == 0 and fe3 == 0x77 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f026f45; op2val:0x3ece2e;
op3val:0x3b81ffff; valaddr_reg:x3; val_offset:78528*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78528*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26177:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x026f45 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3ece2e and fs3 == 0 and fe3 == 0x77 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f026f45; op2val:0x3ece2e;
op3val:0x3b83ffff; valaddr_reg:x3; val_offset:78531*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78531*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26178:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x026f45 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3ece2e and fs3 == 0 and fe3 == 0x77 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f026f45; op2val:0x3ece2e;
op3val:0x3b87ffff; valaddr_reg:x3; val_offset:78534*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78534*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26179:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x026f45 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3ece2e and fs3 == 0 and fe3 == 0x77 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f026f45; op2val:0x3ece2e;
op3val:0x3b8fffff; valaddr_reg:x3; val_offset:78537*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78537*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26180:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x026f45 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3ece2e and fs3 == 0 and fe3 == 0x77 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f026f45; op2val:0x3ece2e;
op3val:0x3b9fffff; valaddr_reg:x3; val_offset:78540*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78540*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26181:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x026f45 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3ece2e and fs3 == 0 and fe3 == 0x77 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f026f45; op2val:0x3ece2e;
op3val:0x3bbfffff; valaddr_reg:x3; val_offset:78543*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78543*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26182:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x026f45 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3ece2e and fs3 == 0 and fe3 == 0x77 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f026f45; op2val:0x3ece2e;
op3val:0x3bc00000; valaddr_reg:x3; val_offset:78546*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78546*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26183:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x026f45 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3ece2e and fs3 == 0 and fe3 == 0x77 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f026f45; op2val:0x3ece2e;
op3val:0x3be00000; valaddr_reg:x3; val_offset:78549*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78549*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26184:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x026f45 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3ece2e and fs3 == 0 and fe3 == 0x77 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f026f45; op2val:0x3ece2e;
op3val:0x3bf00000; valaddr_reg:x3; val_offset:78552*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78552*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26185:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x026f45 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3ece2e and fs3 == 0 and fe3 == 0x77 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f026f45; op2val:0x3ece2e;
op3val:0x3bf80000; valaddr_reg:x3; val_offset:78555*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78555*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26186:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x026f45 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3ece2e and fs3 == 0 and fe3 == 0x77 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f026f45; op2val:0x3ece2e;
op3val:0x3bfc0000; valaddr_reg:x3; val_offset:78558*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78558*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26187:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x026f45 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3ece2e and fs3 == 0 and fe3 == 0x77 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f026f45; op2val:0x3ece2e;
op3val:0x3bfe0000; valaddr_reg:x3; val_offset:78561*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78561*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26188:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x026f45 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3ece2e and fs3 == 0 and fe3 == 0x77 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f026f45; op2val:0x3ece2e;
op3val:0x3bff0000; valaddr_reg:x3; val_offset:78564*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78564*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26189:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x026f45 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3ece2e and fs3 == 0 and fe3 == 0x77 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f026f45; op2val:0x3ece2e;
op3val:0x3bff8000; valaddr_reg:x3; val_offset:78567*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78567*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26190:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x026f45 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3ece2e and fs3 == 0 and fe3 == 0x77 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f026f45; op2val:0x3ece2e;
op3val:0x3bffc000; valaddr_reg:x3; val_offset:78570*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78570*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26191:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x026f45 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3ece2e and fs3 == 0 and fe3 == 0x77 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f026f45; op2val:0x3ece2e;
op3val:0x3bffe000; valaddr_reg:x3; val_offset:78573*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78573*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26192:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x026f45 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3ece2e and fs3 == 0 and fe3 == 0x77 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f026f45; op2val:0x3ece2e;
op3val:0x3bfff000; valaddr_reg:x3; val_offset:78576*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78576*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26193:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x026f45 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3ece2e and fs3 == 0 and fe3 == 0x77 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f026f45; op2val:0x3ece2e;
op3val:0x3bfff800; valaddr_reg:x3; val_offset:78579*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78579*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26194:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x026f45 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3ece2e and fs3 == 0 and fe3 == 0x77 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f026f45; op2val:0x3ece2e;
op3val:0x3bfffc00; valaddr_reg:x3; val_offset:78582*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78582*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26195:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x026f45 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3ece2e and fs3 == 0 and fe3 == 0x77 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f026f45; op2val:0x3ece2e;
op3val:0x3bfffe00; valaddr_reg:x3; val_offset:78585*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78585*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26196:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x026f45 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3ece2e and fs3 == 0 and fe3 == 0x77 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f026f45; op2val:0x3ece2e;
op3val:0x3bffff00; valaddr_reg:x3; val_offset:78588*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78588*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26197:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x026f45 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3ece2e and fs3 == 0 and fe3 == 0x77 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f026f45; op2val:0x3ece2e;
op3val:0x3bffff80; valaddr_reg:x3; val_offset:78591*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78591*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26198:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x026f45 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3ece2e and fs3 == 0 and fe3 == 0x77 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f026f45; op2val:0x3ece2e;
op3val:0x3bffffc0; valaddr_reg:x3; val_offset:78594*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78594*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26199:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x026f45 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3ece2e and fs3 == 0 and fe3 == 0x77 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f026f45; op2val:0x3ece2e;
op3val:0x3bffffe0; valaddr_reg:x3; val_offset:78597*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78597*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26200:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x026f45 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3ece2e and fs3 == 0 and fe3 == 0x77 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f026f45; op2val:0x3ece2e;
op3val:0x3bfffff0; valaddr_reg:x3; val_offset:78600*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78600*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26201:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x026f45 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3ece2e and fs3 == 0 and fe3 == 0x77 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f026f45; op2val:0x3ece2e;
op3val:0x3bfffff8; valaddr_reg:x3; val_offset:78603*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78603*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26202:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x026f45 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3ece2e and fs3 == 0 and fe3 == 0x77 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f026f45; op2val:0x3ece2e;
op3val:0x3bfffffc; valaddr_reg:x3; val_offset:78606*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78606*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26203:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x026f45 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3ece2e and fs3 == 0 and fe3 == 0x77 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f026f45; op2val:0x3ece2e;
op3val:0x3bfffffe; valaddr_reg:x3; val_offset:78609*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78609*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26204:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x026f45 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3ece2e and fs3 == 0 and fe3 == 0x77 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f026f45; op2val:0x3ece2e;
op3val:0x3bffffff; valaddr_reg:x3; val_offset:78612*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78612*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26205:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x026f45 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3ece2e and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f026f45; op2val:0x3ece2e;
op3val:0x3f800001; valaddr_reg:x3; val_offset:78615*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78615*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26206:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x026f45 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3ece2e and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f026f45; op2val:0x3ece2e;
op3val:0x3f800003; valaddr_reg:x3; val_offset:78618*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78618*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26207:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x026f45 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3ece2e and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f026f45; op2val:0x3ece2e;
op3val:0x3f800007; valaddr_reg:x3; val_offset:78621*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78621*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26208:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x026f45 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3ece2e and fs3 == 0 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f026f45; op2val:0x3ece2e;
op3val:0x3f999999; valaddr_reg:x3; val_offset:78624*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78624*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26209:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x026f45 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3ece2e and fs3 == 0 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f026f45; op2val:0x3ece2e;
op3val:0x3fa49249; valaddr_reg:x3; val_offset:78627*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78627*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26210:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x026f45 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3ece2e and fs3 == 0 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f026f45; op2val:0x3ece2e;
op3val:0x3fb33333; valaddr_reg:x3; val_offset:78630*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78630*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26211:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x026f45 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3ece2e and fs3 == 0 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f026f45; op2val:0x3ece2e;
op3val:0x3fb6db6d; valaddr_reg:x3; val_offset:78633*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78633*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26212:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x026f45 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3ece2e and fs3 == 0 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f026f45; op2val:0x3ece2e;
op3val:0x3fbbbbbb; valaddr_reg:x3; val_offset:78636*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78636*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26213:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x026f45 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3ece2e and fs3 == 0 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f026f45; op2val:0x3ece2e;
op3val:0x3fc44444; valaddr_reg:x3; val_offset:78639*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78639*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26214:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x026f45 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3ece2e and fs3 == 0 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f026f45; op2val:0x3ece2e;
op3val:0x3fcccccc; valaddr_reg:x3; val_offset:78642*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78642*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26215:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x026f45 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3ece2e and fs3 == 0 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f026f45; op2val:0x3ece2e;
op3val:0x3fdb6db6; valaddr_reg:x3; val_offset:78645*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78645*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26216:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x026f45 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3ece2e and fs3 == 0 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f026f45; op2val:0x3ece2e;
op3val:0x3fe66666; valaddr_reg:x3; val_offset:78648*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78648*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26217:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x026f45 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3ece2e and fs3 == 0 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f026f45; op2val:0x3ece2e;
op3val:0x3fedb6db; valaddr_reg:x3; val_offset:78651*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78651*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26218:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x026f45 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3ece2e and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f026f45; op2val:0x3ece2e;
op3val:0x3ffffff8; valaddr_reg:x3; val_offset:78654*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78654*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26219:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x026f45 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3ece2e and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f026f45; op2val:0x3ece2e;
op3val:0x3ffffffc; valaddr_reg:x3; val_offset:78657*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78657*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26220:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x026f45 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3ece2e and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f026f45; op2val:0x3ece2e;
op3val:0x3ffffffe; valaddr_reg:x3; val_offset:78660*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78660*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26221:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x027585 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3ecb2c and fs3 == 0 and fe3 == 0x4c and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f027585; op2val:0x3ecb2c;
op3val:0x26000000; valaddr_reg:x3; val_offset:78663*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78663*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26222:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x027585 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3ecb2c and fs3 == 0 and fe3 == 0x4c and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f027585; op2val:0x3ecb2c;
op3val:0x26000001; valaddr_reg:x3; val_offset:78666*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78666*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26223:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x027585 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3ecb2c and fs3 == 0 and fe3 == 0x4c and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f027585; op2val:0x3ecb2c;
op3val:0x26000003; valaddr_reg:x3; val_offset:78669*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78669*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26224:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x027585 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3ecb2c and fs3 == 0 and fe3 == 0x4c and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f027585; op2val:0x3ecb2c;
op3val:0x26000007; valaddr_reg:x3; val_offset:78672*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78672*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26225:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x027585 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3ecb2c and fs3 == 0 and fe3 == 0x4c and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f027585; op2val:0x3ecb2c;
op3val:0x2600000f; valaddr_reg:x3; val_offset:78675*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78675*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26226:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x027585 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3ecb2c and fs3 == 0 and fe3 == 0x4c and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f027585; op2val:0x3ecb2c;
op3val:0x2600001f; valaddr_reg:x3; val_offset:78678*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78678*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26227:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x027585 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3ecb2c and fs3 == 0 and fe3 == 0x4c and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f027585; op2val:0x3ecb2c;
op3val:0x2600003f; valaddr_reg:x3; val_offset:78681*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78681*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26228:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x027585 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3ecb2c and fs3 == 0 and fe3 == 0x4c and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f027585; op2val:0x3ecb2c;
op3val:0x2600007f; valaddr_reg:x3; val_offset:78684*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78684*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26229:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x027585 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3ecb2c and fs3 == 0 and fe3 == 0x4c and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f027585; op2val:0x3ecb2c;
op3val:0x260000ff; valaddr_reg:x3; val_offset:78687*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78687*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26230:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x027585 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3ecb2c and fs3 == 0 and fe3 == 0x4c and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f027585; op2val:0x3ecb2c;
op3val:0x260001ff; valaddr_reg:x3; val_offset:78690*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78690*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26231:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x027585 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3ecb2c and fs3 == 0 and fe3 == 0x4c and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f027585; op2val:0x3ecb2c;
op3val:0x260003ff; valaddr_reg:x3; val_offset:78693*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78693*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26232:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x027585 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3ecb2c and fs3 == 0 and fe3 == 0x4c and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f027585; op2val:0x3ecb2c;
op3val:0x260007ff; valaddr_reg:x3; val_offset:78696*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78696*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26233:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x027585 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3ecb2c and fs3 == 0 and fe3 == 0x4c and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f027585; op2val:0x3ecb2c;
op3val:0x26000fff; valaddr_reg:x3; val_offset:78699*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78699*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26234:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x027585 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3ecb2c and fs3 == 0 and fe3 == 0x4c and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f027585; op2val:0x3ecb2c;
op3val:0x26001fff; valaddr_reg:x3; val_offset:78702*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78702*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26235:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x027585 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3ecb2c and fs3 == 0 and fe3 == 0x4c and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f027585; op2val:0x3ecb2c;
op3val:0x26003fff; valaddr_reg:x3; val_offset:78705*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78705*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26236:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x027585 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3ecb2c and fs3 == 0 and fe3 == 0x4c and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f027585; op2val:0x3ecb2c;
op3val:0x26007fff; valaddr_reg:x3; val_offset:78708*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78708*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26237:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x027585 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3ecb2c and fs3 == 0 and fe3 == 0x4c and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f027585; op2val:0x3ecb2c;
op3val:0x2600ffff; valaddr_reg:x3; val_offset:78711*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78711*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26238:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x027585 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3ecb2c and fs3 == 0 and fe3 == 0x4c and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f027585; op2val:0x3ecb2c;
op3val:0x2601ffff; valaddr_reg:x3; val_offset:78714*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78714*0 + 3*204*FLEN/8, x4, x1, x2)

inst_26239:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x027585 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3ecb2c and fs3 == 0 and fe3 == 0x4c and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f027585; op2val:0x3ecb2c;
op3val:0x2603ffff; valaddr_reg:x3; val_offset:78717*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78717*0 + 3*204*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(2130858147,32,FLEN)
NAN_BOXED(4119793,32,FLEN)
NAN_BOXED(528515071,32,FLEN)
NAN_BOXED(2130858147,32,FLEN)
NAN_BOXED(4119793,32,FLEN)
NAN_BOXED(528547839,32,FLEN)
NAN_BOXED(2130858147,32,FLEN)
NAN_BOXED(4119793,32,FLEN)
NAN_BOXED(528613375,32,FLEN)
NAN_BOXED(2130858147,32,FLEN)
NAN_BOXED(4119793,32,FLEN)
NAN_BOXED(528744447,32,FLEN)
NAN_BOXED(2130858147,32,FLEN)
NAN_BOXED(4119793,32,FLEN)
NAN_BOXED(529006591,32,FLEN)
NAN_BOXED(2130858147,32,FLEN)
NAN_BOXED(4119793,32,FLEN)
NAN_BOXED(529530879,32,FLEN)
NAN_BOXED(2130858147,32,FLEN)
NAN_BOXED(4119793,32,FLEN)
NAN_BOXED(530579455,32,FLEN)
NAN_BOXED(2130858147,32,FLEN)
NAN_BOXED(4119793,32,FLEN)
NAN_BOXED(532676607,32,FLEN)
NAN_BOXED(2130858147,32,FLEN)
NAN_BOXED(4119793,32,FLEN)
NAN_BOXED(532676608,32,FLEN)
NAN_BOXED(2130858147,32,FLEN)
NAN_BOXED(4119793,32,FLEN)
NAN_BOXED(534773760,32,FLEN)
NAN_BOXED(2130858147,32,FLEN)
NAN_BOXED(4119793,32,FLEN)
NAN_BOXED(535822336,32,FLEN)
NAN_BOXED(2130858147,32,FLEN)
NAN_BOXED(4119793,32,FLEN)
NAN_BOXED(536346624,32,FLEN)
NAN_BOXED(2130858147,32,FLEN)
NAN_BOXED(4119793,32,FLEN)
NAN_BOXED(536608768,32,FLEN)
NAN_BOXED(2130858147,32,FLEN)
NAN_BOXED(4119793,32,FLEN)
NAN_BOXED(536739840,32,FLEN)
NAN_BOXED(2130858147,32,FLEN)
NAN_BOXED(4119793,32,FLEN)
NAN_BOXED(536805376,32,FLEN)
NAN_BOXED(2130858147,32,FLEN)
NAN_BOXED(4119793,32,FLEN)
NAN_BOXED(536838144,32,FLEN)
NAN_BOXED(2130858147,32,FLEN)
NAN_BOXED(4119793,32,FLEN)
NAN_BOXED(536854528,32,FLEN)
NAN_BOXED(2130858147,32,FLEN)
NAN_BOXED(4119793,32,FLEN)
NAN_BOXED(536862720,32,FLEN)
NAN_BOXED(2130858147,32,FLEN)
NAN_BOXED(4119793,32,FLEN)
NAN_BOXED(536866816,32,FLEN)
NAN_BOXED(2130858147,32,FLEN)
NAN_BOXED(4119793,32,FLEN)
NAN_BOXED(536868864,32,FLEN)
NAN_BOXED(2130858147,32,FLEN)
NAN_BOXED(4119793,32,FLEN)
NAN_BOXED(536869888,32,FLEN)
NAN_BOXED(2130858147,32,FLEN)
NAN_BOXED(4119793,32,FLEN)
NAN_BOXED(536870400,32,FLEN)
NAN_BOXED(2130858147,32,FLEN)
NAN_BOXED(4119793,32,FLEN)
NAN_BOXED(536870656,32,FLEN)
NAN_BOXED(2130858147,32,FLEN)
NAN_BOXED(4119793,32,FLEN)
NAN_BOXED(536870784,32,FLEN)
NAN_BOXED(2130858147,32,FLEN)
NAN_BOXED(4119793,32,FLEN)
NAN_BOXED(536870848,32,FLEN)
NAN_BOXED(2130858147,32,FLEN)
NAN_BOXED(4119793,32,FLEN)
NAN_BOXED(536870880,32,FLEN)
NAN_BOXED(2130858147,32,FLEN)
NAN_BOXED(4119793,32,FLEN)
NAN_BOXED(536870896,32,FLEN)
NAN_BOXED(2130858147,32,FLEN)
NAN_BOXED(4119793,32,FLEN)
NAN_BOXED(536870904,32,FLEN)
NAN_BOXED(2130858147,32,FLEN)
NAN_BOXED(4119793,32,FLEN)
NAN_BOXED(536870908,32,FLEN)
NAN_BOXED(2130858147,32,FLEN)
NAN_BOXED(4119793,32,FLEN)
NAN_BOXED(536870910,32,FLEN)
NAN_BOXED(2130858147,32,FLEN)
NAN_BOXED(4119793,32,FLEN)
NAN_BOXED(536870911,32,FLEN)
NAN_BOXED(2130858147,32,FLEN)
NAN_BOXED(4119793,32,FLEN)
NAN_BOXED(1065353217,32,FLEN)
NAN_BOXED(2130858147,32,FLEN)
NAN_BOXED(4119793,32,FLEN)
NAN_BOXED(1065353219,32,FLEN)
NAN_BOXED(2130858147,32,FLEN)
NAN_BOXED(4119793,32,FLEN)
NAN_BOXED(1065353223,32,FLEN)
NAN_BOXED(2130858147,32,FLEN)
NAN_BOXED(4119793,32,FLEN)
NAN_BOXED(1067030937,32,FLEN)
NAN_BOXED(2130858147,32,FLEN)
NAN_BOXED(4119793,32,FLEN)
NAN_BOXED(1067749961,32,FLEN)
NAN_BOXED(2130858147,32,FLEN)
NAN_BOXED(4119793,32,FLEN)
NAN_BOXED(1068708659,32,FLEN)
NAN_BOXED(2130858147,32,FLEN)
NAN_BOXED(4119793,32,FLEN)
NAN_BOXED(1068948333,32,FLEN)
NAN_BOXED(2130858147,32,FLEN)
NAN_BOXED(4119793,32,FLEN)
NAN_BOXED(1069267899,32,FLEN)
NAN_BOXED(2130858147,32,FLEN)
NAN_BOXED(4119793,32,FLEN)
NAN_BOXED(1069827140,32,FLEN)
NAN_BOXED(2130858147,32,FLEN)
NAN_BOXED(4119793,32,FLEN)
NAN_BOXED(1070386380,32,FLEN)
NAN_BOXED(2130858147,32,FLEN)
NAN_BOXED(4119793,32,FLEN)
NAN_BOXED(1071345078,32,FLEN)
NAN_BOXED(2130858147,32,FLEN)
NAN_BOXED(4119793,32,FLEN)
NAN_BOXED(1072064102,32,FLEN)
NAN_BOXED(2130858147,32,FLEN)
NAN_BOXED(4119793,32,FLEN)
NAN_BOXED(1072543451,32,FLEN)
NAN_BOXED(2130858147,32,FLEN)
NAN_BOXED(4119793,32,FLEN)
NAN_BOXED(1073741816,32,FLEN)
NAN_BOXED(2130858147,32,FLEN)
NAN_BOXED(4119793,32,FLEN)
NAN_BOXED(1073741820,32,FLEN)
NAN_BOXED(2130858147,32,FLEN)
NAN_BOXED(4119793,32,FLEN)
NAN_BOXED(1073741822,32,FLEN)
NAN_BOXED(2130865989,32,FLEN)
NAN_BOXED(4116014,32,FLEN)
NAN_BOXED(998244352,32,FLEN)
NAN_BOXED(2130865989,32,FLEN)
NAN_BOXED(4116014,32,FLEN)
NAN_BOXED(998244353,32,FLEN)
NAN_BOXED(2130865989,32,FLEN)
NAN_BOXED(4116014,32,FLEN)
NAN_BOXED(998244355,32,FLEN)
NAN_BOXED(2130865989,32,FLEN)
NAN_BOXED(4116014,32,FLEN)
NAN_BOXED(998244359,32,FLEN)
NAN_BOXED(2130865989,32,FLEN)
NAN_BOXED(4116014,32,FLEN)
NAN_BOXED(998244367,32,FLEN)
NAN_BOXED(2130865989,32,FLEN)
NAN_BOXED(4116014,32,FLEN)
NAN_BOXED(998244383,32,FLEN)
NAN_BOXED(2130865989,32,FLEN)
NAN_BOXED(4116014,32,FLEN)
NAN_BOXED(998244415,32,FLEN)
NAN_BOXED(2130865989,32,FLEN)
NAN_BOXED(4116014,32,FLEN)
NAN_BOXED(998244479,32,FLEN)
NAN_BOXED(2130865989,32,FLEN)
NAN_BOXED(4116014,32,FLEN)
NAN_BOXED(998244607,32,FLEN)
NAN_BOXED(2130865989,32,FLEN)
NAN_BOXED(4116014,32,FLEN)
NAN_BOXED(998244863,32,FLEN)
NAN_BOXED(2130865989,32,FLEN)
NAN_BOXED(4116014,32,FLEN)
NAN_BOXED(998245375,32,FLEN)
NAN_BOXED(2130865989,32,FLEN)
NAN_BOXED(4116014,32,FLEN)
NAN_BOXED(998246399,32,FLEN)
NAN_BOXED(2130865989,32,FLEN)
NAN_BOXED(4116014,32,FLEN)
NAN_BOXED(998248447,32,FLEN)
NAN_BOXED(2130865989,32,FLEN)
NAN_BOXED(4116014,32,FLEN)
NAN_BOXED(998252543,32,FLEN)
NAN_BOXED(2130865989,32,FLEN)
NAN_BOXED(4116014,32,FLEN)
NAN_BOXED(998260735,32,FLEN)
NAN_BOXED(2130865989,32,FLEN)
NAN_BOXED(4116014,32,FLEN)
NAN_BOXED(998277119,32,FLEN)
NAN_BOXED(2130865989,32,FLEN)
NAN_BOXED(4116014,32,FLEN)
NAN_BOXED(998309887,32,FLEN)
NAN_BOXED(2130865989,32,FLEN)
NAN_BOXED(4116014,32,FLEN)
NAN_BOXED(998375423,32,FLEN)
NAN_BOXED(2130865989,32,FLEN)
NAN_BOXED(4116014,32,FLEN)
NAN_BOXED(998506495,32,FLEN)
NAN_BOXED(2130865989,32,FLEN)
NAN_BOXED(4116014,32,FLEN)
NAN_BOXED(998768639,32,FLEN)
NAN_BOXED(2130865989,32,FLEN)
NAN_BOXED(4116014,32,FLEN)
NAN_BOXED(999292927,32,FLEN)
NAN_BOXED(2130865989,32,FLEN)
NAN_BOXED(4116014,32,FLEN)
NAN_BOXED(1000341503,32,FLEN)
NAN_BOXED(2130865989,32,FLEN)
NAN_BOXED(4116014,32,FLEN)
NAN_BOXED(1002438655,32,FLEN)
NAN_BOXED(2130865989,32,FLEN)
NAN_BOXED(4116014,32,FLEN)
NAN_BOXED(1002438656,32,FLEN)
NAN_BOXED(2130865989,32,FLEN)
NAN_BOXED(4116014,32,FLEN)
NAN_BOXED(1004535808,32,FLEN)
NAN_BOXED(2130865989,32,FLEN)
NAN_BOXED(4116014,32,FLEN)
NAN_BOXED(1005584384,32,FLEN)
NAN_BOXED(2130865989,32,FLEN)
NAN_BOXED(4116014,32,FLEN)
NAN_BOXED(1006108672,32,FLEN)
NAN_BOXED(2130865989,32,FLEN)
NAN_BOXED(4116014,32,FLEN)
NAN_BOXED(1006370816,32,FLEN)
NAN_BOXED(2130865989,32,FLEN)
NAN_BOXED(4116014,32,FLEN)
NAN_BOXED(1006501888,32,FLEN)
NAN_BOXED(2130865989,32,FLEN)
NAN_BOXED(4116014,32,FLEN)
NAN_BOXED(1006567424,32,FLEN)
NAN_BOXED(2130865989,32,FLEN)
NAN_BOXED(4116014,32,FLEN)
NAN_BOXED(1006600192,32,FLEN)
NAN_BOXED(2130865989,32,FLEN)
NAN_BOXED(4116014,32,FLEN)
NAN_BOXED(1006616576,32,FLEN)
NAN_BOXED(2130865989,32,FLEN)
NAN_BOXED(4116014,32,FLEN)
NAN_BOXED(1006624768,32,FLEN)
NAN_BOXED(2130865989,32,FLEN)
NAN_BOXED(4116014,32,FLEN)
NAN_BOXED(1006628864,32,FLEN)
NAN_BOXED(2130865989,32,FLEN)
NAN_BOXED(4116014,32,FLEN)
NAN_BOXED(1006630912,32,FLEN)
NAN_BOXED(2130865989,32,FLEN)
NAN_BOXED(4116014,32,FLEN)
NAN_BOXED(1006631936,32,FLEN)
NAN_BOXED(2130865989,32,FLEN)
NAN_BOXED(4116014,32,FLEN)
NAN_BOXED(1006632448,32,FLEN)
NAN_BOXED(2130865989,32,FLEN)
NAN_BOXED(4116014,32,FLEN)
NAN_BOXED(1006632704,32,FLEN)
NAN_BOXED(2130865989,32,FLEN)
NAN_BOXED(4116014,32,FLEN)
NAN_BOXED(1006632832,32,FLEN)
NAN_BOXED(2130865989,32,FLEN)
NAN_BOXED(4116014,32,FLEN)
NAN_BOXED(1006632896,32,FLEN)
NAN_BOXED(2130865989,32,FLEN)
NAN_BOXED(4116014,32,FLEN)
NAN_BOXED(1006632928,32,FLEN)
NAN_BOXED(2130865989,32,FLEN)
NAN_BOXED(4116014,32,FLEN)
NAN_BOXED(1006632944,32,FLEN)
NAN_BOXED(2130865989,32,FLEN)
NAN_BOXED(4116014,32,FLEN)
NAN_BOXED(1006632952,32,FLEN)
NAN_BOXED(2130865989,32,FLEN)
NAN_BOXED(4116014,32,FLEN)
NAN_BOXED(1006632956,32,FLEN)
NAN_BOXED(2130865989,32,FLEN)
NAN_BOXED(4116014,32,FLEN)
NAN_BOXED(1006632958,32,FLEN)
NAN_BOXED(2130865989,32,FLEN)
NAN_BOXED(4116014,32,FLEN)
NAN_BOXED(1006632959,32,FLEN)
NAN_BOXED(2130865989,32,FLEN)
NAN_BOXED(4116014,32,FLEN)
NAN_BOXED(1065353217,32,FLEN)
NAN_BOXED(2130865989,32,FLEN)
NAN_BOXED(4116014,32,FLEN)
NAN_BOXED(1065353219,32,FLEN)
NAN_BOXED(2130865989,32,FLEN)
NAN_BOXED(4116014,32,FLEN)
NAN_BOXED(1065353223,32,FLEN)
NAN_BOXED(2130865989,32,FLEN)
NAN_BOXED(4116014,32,FLEN)
NAN_BOXED(1067030937,32,FLEN)
NAN_BOXED(2130865989,32,FLEN)
NAN_BOXED(4116014,32,FLEN)
NAN_BOXED(1067749961,32,FLEN)
NAN_BOXED(2130865989,32,FLEN)
NAN_BOXED(4116014,32,FLEN)
NAN_BOXED(1068708659,32,FLEN)
NAN_BOXED(2130865989,32,FLEN)
NAN_BOXED(4116014,32,FLEN)
NAN_BOXED(1068948333,32,FLEN)
NAN_BOXED(2130865989,32,FLEN)
NAN_BOXED(4116014,32,FLEN)
NAN_BOXED(1069267899,32,FLEN)
NAN_BOXED(2130865989,32,FLEN)
NAN_BOXED(4116014,32,FLEN)
NAN_BOXED(1069827140,32,FLEN)
NAN_BOXED(2130865989,32,FLEN)
NAN_BOXED(4116014,32,FLEN)
NAN_BOXED(1070386380,32,FLEN)
NAN_BOXED(2130865989,32,FLEN)
NAN_BOXED(4116014,32,FLEN)
NAN_BOXED(1071345078,32,FLEN)
NAN_BOXED(2130865989,32,FLEN)
NAN_BOXED(4116014,32,FLEN)
NAN_BOXED(1072064102,32,FLEN)
NAN_BOXED(2130865989,32,FLEN)
NAN_BOXED(4116014,32,FLEN)
NAN_BOXED(1072543451,32,FLEN)
NAN_BOXED(2130865989,32,FLEN)
NAN_BOXED(4116014,32,FLEN)
NAN_BOXED(1073741816,32,FLEN)
NAN_BOXED(2130865989,32,FLEN)
NAN_BOXED(4116014,32,FLEN)
NAN_BOXED(1073741820,32,FLEN)
NAN_BOXED(2130865989,32,FLEN)
NAN_BOXED(4116014,32,FLEN)
NAN_BOXED(1073741822,32,FLEN)
NAN_BOXED(2130867589,32,FLEN)
NAN_BOXED(4115244,32,FLEN)
NAN_BOXED(637534208,32,FLEN)
NAN_BOXED(2130867589,32,FLEN)
NAN_BOXED(4115244,32,FLEN)
NAN_BOXED(637534209,32,FLEN)
NAN_BOXED(2130867589,32,FLEN)
NAN_BOXED(4115244,32,FLEN)
NAN_BOXED(637534211,32,FLEN)
NAN_BOXED(2130867589,32,FLEN)
NAN_BOXED(4115244,32,FLEN)
NAN_BOXED(637534215,32,FLEN)
NAN_BOXED(2130867589,32,FLEN)
NAN_BOXED(4115244,32,FLEN)
NAN_BOXED(637534223,32,FLEN)
NAN_BOXED(2130867589,32,FLEN)
NAN_BOXED(4115244,32,FLEN)
NAN_BOXED(637534239,32,FLEN)
NAN_BOXED(2130867589,32,FLEN)
NAN_BOXED(4115244,32,FLEN)
NAN_BOXED(637534271,32,FLEN)
NAN_BOXED(2130867589,32,FLEN)
NAN_BOXED(4115244,32,FLEN)
NAN_BOXED(637534335,32,FLEN)
NAN_BOXED(2130867589,32,FLEN)
NAN_BOXED(4115244,32,FLEN)
NAN_BOXED(637534463,32,FLEN)
NAN_BOXED(2130867589,32,FLEN)
NAN_BOXED(4115244,32,FLEN)
NAN_BOXED(637534719,32,FLEN)
NAN_BOXED(2130867589,32,FLEN)
NAN_BOXED(4115244,32,FLEN)
NAN_BOXED(637535231,32,FLEN)
NAN_BOXED(2130867589,32,FLEN)
NAN_BOXED(4115244,32,FLEN)
NAN_BOXED(637536255,32,FLEN)
NAN_BOXED(2130867589,32,FLEN)
NAN_BOXED(4115244,32,FLEN)
NAN_BOXED(637538303,32,FLEN)
NAN_BOXED(2130867589,32,FLEN)
NAN_BOXED(4115244,32,FLEN)
NAN_BOXED(637542399,32,FLEN)
NAN_BOXED(2130867589,32,FLEN)
NAN_BOXED(4115244,32,FLEN)
NAN_BOXED(637550591,32,FLEN)
NAN_BOXED(2130867589,32,FLEN)
NAN_BOXED(4115244,32,FLEN)
NAN_BOXED(637566975,32,FLEN)
NAN_BOXED(2130867589,32,FLEN)
NAN_BOXED(4115244,32,FLEN)
NAN_BOXED(637599743,32,FLEN)
NAN_BOXED(2130867589,32,FLEN)
NAN_BOXED(4115244,32,FLEN)
NAN_BOXED(637665279,32,FLEN)
NAN_BOXED(2130867589,32,FLEN)
NAN_BOXED(4115244,32,FLEN)
NAN_BOXED(637796351,32,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
