
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 14:17:59 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32F/fmadd.s.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmadd.s instruction of the RISC-V RV32F_Zicsr,RV32FD_Zicsr,RV64F_Zicsr,RV64FD_Zicsr extension for the fmadd_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF_Zicsr,RV32IFD_Zicsr,RV64IF_Zicsr,RV64IFD_Zicsr,RV32EF_Zicsr,RV32EFD_Zicsr,RV64EF_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fmadd_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*F.*);def TEST_CASE_1=True;",fmadd_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_4992:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x37da2c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x323ae6 and fs3 == 0 and fe3 == 0x6c and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db7da2c; op2val:0x1323ae6;
op3val:0x36000000; valaddr_reg:x3; val_offset:14976*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14976*0 + 3*39*FLEN/8, x4, x1, x2)

inst_4993:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x37da2c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x323ae6 and fs3 == 0 and fe3 == 0x6c and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db7da2c; op2val:0x1323ae6;
op3val:0x36000001; valaddr_reg:x3; val_offset:14979*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14979*0 + 3*39*FLEN/8, x4, x1, x2)

inst_4994:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x37da2c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x323ae6 and fs3 == 0 and fe3 == 0x6c and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db7da2c; op2val:0x1323ae6;
op3val:0x36000003; valaddr_reg:x3; val_offset:14982*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14982*0 + 3*39*FLEN/8, x4, x1, x2)

inst_4995:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x37da2c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x323ae6 and fs3 == 0 and fe3 == 0x6c and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db7da2c; op2val:0x1323ae6;
op3val:0x36000007; valaddr_reg:x3; val_offset:14985*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14985*0 + 3*39*FLEN/8, x4, x1, x2)

inst_4996:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x37da2c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x323ae6 and fs3 == 0 and fe3 == 0x6c and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db7da2c; op2val:0x1323ae6;
op3val:0x3600000f; valaddr_reg:x3; val_offset:14988*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14988*0 + 3*39*FLEN/8, x4, x1, x2)

inst_4997:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x37da2c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x323ae6 and fs3 == 0 and fe3 == 0x6c and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db7da2c; op2val:0x1323ae6;
op3val:0x3600001f; valaddr_reg:x3; val_offset:14991*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14991*0 + 3*39*FLEN/8, x4, x1, x2)

inst_4998:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x37da2c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x323ae6 and fs3 == 0 and fe3 == 0x6c and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db7da2c; op2val:0x1323ae6;
op3val:0x3600003f; valaddr_reg:x3; val_offset:14994*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14994*0 + 3*39*FLEN/8, x4, x1, x2)

inst_4999:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x37da2c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x323ae6 and fs3 == 0 and fe3 == 0x6c and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db7da2c; op2val:0x1323ae6;
op3val:0x3600007f; valaddr_reg:x3; val_offset:14997*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14997*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5000:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x37da2c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x323ae6 and fs3 == 0 and fe3 == 0x6c and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db7da2c; op2val:0x1323ae6;
op3val:0x360000ff; valaddr_reg:x3; val_offset:15000*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15000*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5001:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x37da2c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x323ae6 and fs3 == 0 and fe3 == 0x6c and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db7da2c; op2val:0x1323ae6;
op3val:0x360001ff; valaddr_reg:x3; val_offset:15003*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15003*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5002:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x37da2c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x323ae6 and fs3 == 0 and fe3 == 0x6c and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db7da2c; op2val:0x1323ae6;
op3val:0x360003ff; valaddr_reg:x3; val_offset:15006*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15006*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5003:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x37da2c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x323ae6 and fs3 == 0 and fe3 == 0x6c and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db7da2c; op2val:0x1323ae6;
op3val:0x360007ff; valaddr_reg:x3; val_offset:15009*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15009*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5004:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x37da2c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x323ae6 and fs3 == 0 and fe3 == 0x6c and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db7da2c; op2val:0x1323ae6;
op3val:0x36000fff; valaddr_reg:x3; val_offset:15012*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15012*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5005:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x37da2c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x323ae6 and fs3 == 0 and fe3 == 0x6c and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db7da2c; op2val:0x1323ae6;
op3val:0x36001fff; valaddr_reg:x3; val_offset:15015*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15015*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5006:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x37da2c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x323ae6 and fs3 == 0 and fe3 == 0x6c and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db7da2c; op2val:0x1323ae6;
op3val:0x36003fff; valaddr_reg:x3; val_offset:15018*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15018*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5007:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x37da2c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x323ae6 and fs3 == 0 and fe3 == 0x6c and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db7da2c; op2val:0x1323ae6;
op3val:0x36007fff; valaddr_reg:x3; val_offset:15021*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15021*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5008:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x37da2c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x323ae6 and fs3 == 0 and fe3 == 0x6c and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db7da2c; op2val:0x1323ae6;
op3val:0x3600ffff; valaddr_reg:x3; val_offset:15024*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15024*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5009:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x37da2c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x323ae6 and fs3 == 0 and fe3 == 0x6c and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db7da2c; op2val:0x1323ae6;
op3val:0x3601ffff; valaddr_reg:x3; val_offset:15027*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15027*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5010:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x37da2c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x323ae6 and fs3 == 0 and fe3 == 0x6c and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db7da2c; op2val:0x1323ae6;
op3val:0x3603ffff; valaddr_reg:x3; val_offset:15030*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15030*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5011:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x37da2c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x323ae6 and fs3 == 0 and fe3 == 0x6c and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db7da2c; op2val:0x1323ae6;
op3val:0x3607ffff; valaddr_reg:x3; val_offset:15033*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15033*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5012:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x37da2c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x323ae6 and fs3 == 0 and fe3 == 0x6c and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db7da2c; op2val:0x1323ae6;
op3val:0x360fffff; valaddr_reg:x3; val_offset:15036*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15036*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5013:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x37da2c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x323ae6 and fs3 == 0 and fe3 == 0x6c and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db7da2c; op2val:0x1323ae6;
op3val:0x361fffff; valaddr_reg:x3; val_offset:15039*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15039*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5014:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x37da2c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x323ae6 and fs3 == 0 and fe3 == 0x6c and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db7da2c; op2val:0x1323ae6;
op3val:0x363fffff; valaddr_reg:x3; val_offset:15042*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15042*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5015:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x37da2c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x323ae6 and fs3 == 0 and fe3 == 0x6c and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db7da2c; op2val:0x1323ae6;
op3val:0x36400000; valaddr_reg:x3; val_offset:15045*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15045*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5016:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x37da2c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x323ae6 and fs3 == 0 and fe3 == 0x6c and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db7da2c; op2val:0x1323ae6;
op3val:0x36600000; valaddr_reg:x3; val_offset:15048*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15048*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5017:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x37da2c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x323ae6 and fs3 == 0 and fe3 == 0x6c and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db7da2c; op2val:0x1323ae6;
op3val:0x36700000; valaddr_reg:x3; val_offset:15051*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15051*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5018:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x37da2c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x323ae6 and fs3 == 0 and fe3 == 0x6c and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db7da2c; op2val:0x1323ae6;
op3val:0x36780000; valaddr_reg:x3; val_offset:15054*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15054*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5019:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x37da2c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x323ae6 and fs3 == 0 and fe3 == 0x6c and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db7da2c; op2val:0x1323ae6;
op3val:0x367c0000; valaddr_reg:x3; val_offset:15057*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15057*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5020:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x37da2c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x323ae6 and fs3 == 0 and fe3 == 0x6c and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db7da2c; op2val:0x1323ae6;
op3val:0x367e0000; valaddr_reg:x3; val_offset:15060*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15060*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5021:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x37da2c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x323ae6 and fs3 == 0 and fe3 == 0x6c and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db7da2c; op2val:0x1323ae6;
op3val:0x367f0000; valaddr_reg:x3; val_offset:15063*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15063*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5022:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x37da2c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x323ae6 and fs3 == 0 and fe3 == 0x6c and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db7da2c; op2val:0x1323ae6;
op3val:0x367f8000; valaddr_reg:x3; val_offset:15066*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15066*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5023:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x37da2c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x323ae6 and fs3 == 0 and fe3 == 0x6c and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db7da2c; op2val:0x1323ae6;
op3val:0x367fc000; valaddr_reg:x3; val_offset:15069*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15069*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5024:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x37da2c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x323ae6 and fs3 == 0 and fe3 == 0x6c and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db7da2c; op2val:0x1323ae6;
op3val:0x367fe000; valaddr_reg:x3; val_offset:15072*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15072*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5025:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x37da2c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x323ae6 and fs3 == 0 and fe3 == 0x6c and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db7da2c; op2val:0x1323ae6;
op3val:0x367ff000; valaddr_reg:x3; val_offset:15075*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15075*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5026:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x37da2c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x323ae6 and fs3 == 0 and fe3 == 0x6c and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db7da2c; op2val:0x1323ae6;
op3val:0x367ff800; valaddr_reg:x3; val_offset:15078*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15078*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5027:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x37da2c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x323ae6 and fs3 == 0 and fe3 == 0x6c and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db7da2c; op2val:0x1323ae6;
op3val:0x367ffc00; valaddr_reg:x3; val_offset:15081*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15081*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5028:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x37da2c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x323ae6 and fs3 == 0 and fe3 == 0x6c and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db7da2c; op2val:0x1323ae6;
op3val:0x367ffe00; valaddr_reg:x3; val_offset:15084*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15084*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5029:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x37da2c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x323ae6 and fs3 == 0 and fe3 == 0x6c and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db7da2c; op2val:0x1323ae6;
op3val:0x367fff00; valaddr_reg:x3; val_offset:15087*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15087*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5030:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x37da2c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x323ae6 and fs3 == 0 and fe3 == 0x6c and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db7da2c; op2val:0x1323ae6;
op3val:0x367fff80; valaddr_reg:x3; val_offset:15090*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15090*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5031:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x37da2c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x323ae6 and fs3 == 0 and fe3 == 0x6c and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db7da2c; op2val:0x1323ae6;
op3val:0x367fffc0; valaddr_reg:x3; val_offset:15093*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15093*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5032:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x37da2c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x323ae6 and fs3 == 0 and fe3 == 0x6c and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db7da2c; op2val:0x1323ae6;
op3val:0x367fffe0; valaddr_reg:x3; val_offset:15096*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15096*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5033:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x37da2c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x323ae6 and fs3 == 0 and fe3 == 0x6c and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db7da2c; op2val:0x1323ae6;
op3val:0x367ffff0; valaddr_reg:x3; val_offset:15099*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15099*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5034:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x37da2c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x323ae6 and fs3 == 0 and fe3 == 0x6c and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db7da2c; op2val:0x1323ae6;
op3val:0x367ffff8; valaddr_reg:x3; val_offset:15102*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15102*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5035:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x37da2c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x323ae6 and fs3 == 0 and fe3 == 0x6c and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db7da2c; op2val:0x1323ae6;
op3val:0x367ffffc; valaddr_reg:x3; val_offset:15105*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15105*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5036:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x37da2c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x323ae6 and fs3 == 0 and fe3 == 0x6c and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db7da2c; op2val:0x1323ae6;
op3val:0x367ffffe; valaddr_reg:x3; val_offset:15108*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15108*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5037:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x37da2c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x323ae6 and fs3 == 0 and fe3 == 0x6c and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db7da2c; op2val:0x1323ae6;
op3val:0x367fffff; valaddr_reg:x3; val_offset:15111*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15111*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5038:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x37da2c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x323ae6 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db7da2c; op2val:0x1323ae6;
op3val:0x3f800001; valaddr_reg:x3; val_offset:15114*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15114*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5039:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x37da2c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x323ae6 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db7da2c; op2val:0x1323ae6;
op3val:0x3f800003; valaddr_reg:x3; val_offset:15117*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15117*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5040:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x37da2c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x323ae6 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db7da2c; op2val:0x1323ae6;
op3val:0x3f800007; valaddr_reg:x3; val_offset:15120*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15120*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5041:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x37da2c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x323ae6 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db7da2c; op2val:0x1323ae6;
op3val:0x3f999999; valaddr_reg:x3; val_offset:15123*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15123*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5042:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x37da2c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x323ae6 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db7da2c; op2val:0x1323ae6;
op3val:0x3fa49249; valaddr_reg:x3; val_offset:15126*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15126*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5043:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x37da2c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x323ae6 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db7da2c; op2val:0x1323ae6;
op3val:0x3fb33333; valaddr_reg:x3; val_offset:15129*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15129*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5044:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x37da2c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x323ae6 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db7da2c; op2val:0x1323ae6;
op3val:0x3fb6db6d; valaddr_reg:x3; val_offset:15132*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15132*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5045:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x37da2c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x323ae6 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db7da2c; op2val:0x1323ae6;
op3val:0x3fbbbbbb; valaddr_reg:x3; val_offset:15135*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15135*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5046:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x37da2c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x323ae6 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db7da2c; op2val:0x1323ae6;
op3val:0x3fc44444; valaddr_reg:x3; val_offset:15138*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15138*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5047:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x37da2c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x323ae6 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db7da2c; op2val:0x1323ae6;
op3val:0x3fcccccc; valaddr_reg:x3; val_offset:15141*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15141*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5048:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x37da2c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x323ae6 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db7da2c; op2val:0x1323ae6;
op3val:0x3fdb6db6; valaddr_reg:x3; val_offset:15144*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15144*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5049:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x37da2c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x323ae6 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db7da2c; op2val:0x1323ae6;
op3val:0x3fe66666; valaddr_reg:x3; val_offset:15147*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15147*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5050:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x37da2c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x323ae6 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db7da2c; op2val:0x1323ae6;
op3val:0x3fedb6db; valaddr_reg:x3; val_offset:15150*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15150*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5051:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x37da2c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x323ae6 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db7da2c; op2val:0x1323ae6;
op3val:0x3ffffff8; valaddr_reg:x3; val_offset:15153*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15153*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5052:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x37da2c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x323ae6 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db7da2c; op2val:0x1323ae6;
op3val:0x3ffffffc; valaddr_reg:x3; val_offset:15156*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15156*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5053:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x37da2c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x323ae6 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db7da2c; op2val:0x1323ae6;
op3val:0x3ffffffe; valaddr_reg:x3; val_offset:15159*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15159*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5054:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3998eb and fs2 == 1 and fe2 == 0x82 and fm2 == 0x308de2 and fs3 == 1 and fe3 == 0xe5 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db998eb; op2val:0xc1308de2;
op3val:0xf2800000; valaddr_reg:x3; val_offset:15162*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15162*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5055:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3998eb and fs2 == 1 and fe2 == 0x82 and fm2 == 0x308de2 and fs3 == 1 and fe3 == 0xe5 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db998eb; op2val:0xc1308de2;
op3val:0xf2800001; valaddr_reg:x3; val_offset:15165*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15165*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5056:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3998eb and fs2 == 1 and fe2 == 0x82 and fm2 == 0x308de2 and fs3 == 1 and fe3 == 0xe5 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db998eb; op2val:0xc1308de2;
op3val:0xf2800003; valaddr_reg:x3; val_offset:15168*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15168*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5057:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3998eb and fs2 == 1 and fe2 == 0x82 and fm2 == 0x308de2 and fs3 == 1 and fe3 == 0xe5 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db998eb; op2val:0xc1308de2;
op3val:0xf2800007; valaddr_reg:x3; val_offset:15171*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15171*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5058:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3998eb and fs2 == 1 and fe2 == 0x82 and fm2 == 0x308de2 and fs3 == 1 and fe3 == 0xe5 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db998eb; op2val:0xc1308de2;
op3val:0xf280000f; valaddr_reg:x3; val_offset:15174*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15174*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5059:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3998eb and fs2 == 1 and fe2 == 0x82 and fm2 == 0x308de2 and fs3 == 1 and fe3 == 0xe5 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db998eb; op2val:0xc1308de2;
op3val:0xf280001f; valaddr_reg:x3; val_offset:15177*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15177*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5060:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3998eb and fs2 == 1 and fe2 == 0x82 and fm2 == 0x308de2 and fs3 == 1 and fe3 == 0xe5 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db998eb; op2val:0xc1308de2;
op3val:0xf280003f; valaddr_reg:x3; val_offset:15180*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15180*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5061:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3998eb and fs2 == 1 and fe2 == 0x82 and fm2 == 0x308de2 and fs3 == 1 and fe3 == 0xe5 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db998eb; op2val:0xc1308de2;
op3val:0xf280007f; valaddr_reg:x3; val_offset:15183*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15183*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5062:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3998eb and fs2 == 1 and fe2 == 0x82 and fm2 == 0x308de2 and fs3 == 1 and fe3 == 0xe5 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db998eb; op2val:0xc1308de2;
op3val:0xf28000ff; valaddr_reg:x3; val_offset:15186*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15186*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5063:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3998eb and fs2 == 1 and fe2 == 0x82 and fm2 == 0x308de2 and fs3 == 1 and fe3 == 0xe5 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db998eb; op2val:0xc1308de2;
op3val:0xf28001ff; valaddr_reg:x3; val_offset:15189*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15189*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5064:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3998eb and fs2 == 1 and fe2 == 0x82 and fm2 == 0x308de2 and fs3 == 1 and fe3 == 0xe5 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db998eb; op2val:0xc1308de2;
op3val:0xf28003ff; valaddr_reg:x3; val_offset:15192*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15192*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5065:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3998eb and fs2 == 1 and fe2 == 0x82 and fm2 == 0x308de2 and fs3 == 1 and fe3 == 0xe5 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db998eb; op2val:0xc1308de2;
op3val:0xf28007ff; valaddr_reg:x3; val_offset:15195*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15195*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5066:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3998eb and fs2 == 1 and fe2 == 0x82 and fm2 == 0x308de2 and fs3 == 1 and fe3 == 0xe5 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db998eb; op2val:0xc1308de2;
op3val:0xf2800fff; valaddr_reg:x3; val_offset:15198*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15198*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5067:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3998eb and fs2 == 1 and fe2 == 0x82 and fm2 == 0x308de2 and fs3 == 1 and fe3 == 0xe5 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db998eb; op2val:0xc1308de2;
op3val:0xf2801fff; valaddr_reg:x3; val_offset:15201*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15201*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5068:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3998eb and fs2 == 1 and fe2 == 0x82 and fm2 == 0x308de2 and fs3 == 1 and fe3 == 0xe5 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db998eb; op2val:0xc1308de2;
op3val:0xf2803fff; valaddr_reg:x3; val_offset:15204*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15204*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5069:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3998eb and fs2 == 1 and fe2 == 0x82 and fm2 == 0x308de2 and fs3 == 1 and fe3 == 0xe5 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db998eb; op2val:0xc1308de2;
op3val:0xf2807fff; valaddr_reg:x3; val_offset:15207*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15207*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5070:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3998eb and fs2 == 1 and fe2 == 0x82 and fm2 == 0x308de2 and fs3 == 1 and fe3 == 0xe5 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db998eb; op2val:0xc1308de2;
op3val:0xf280ffff; valaddr_reg:x3; val_offset:15210*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15210*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5071:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3998eb and fs2 == 1 and fe2 == 0x82 and fm2 == 0x308de2 and fs3 == 1 and fe3 == 0xe5 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db998eb; op2val:0xc1308de2;
op3val:0xf281ffff; valaddr_reg:x3; val_offset:15213*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15213*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5072:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3998eb and fs2 == 1 and fe2 == 0x82 and fm2 == 0x308de2 and fs3 == 1 and fe3 == 0xe5 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db998eb; op2val:0xc1308de2;
op3val:0xf283ffff; valaddr_reg:x3; val_offset:15216*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15216*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5073:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3998eb and fs2 == 1 and fe2 == 0x82 and fm2 == 0x308de2 and fs3 == 1 and fe3 == 0xe5 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db998eb; op2val:0xc1308de2;
op3val:0xf287ffff; valaddr_reg:x3; val_offset:15219*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15219*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5074:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3998eb and fs2 == 1 and fe2 == 0x82 and fm2 == 0x308de2 and fs3 == 1 and fe3 == 0xe5 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db998eb; op2val:0xc1308de2;
op3val:0xf28fffff; valaddr_reg:x3; val_offset:15222*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15222*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5075:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3998eb and fs2 == 1 and fe2 == 0x82 and fm2 == 0x308de2 and fs3 == 1 and fe3 == 0xe5 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db998eb; op2val:0xc1308de2;
op3val:0xf29fffff; valaddr_reg:x3; val_offset:15225*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15225*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5076:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3998eb and fs2 == 1 and fe2 == 0x82 and fm2 == 0x308de2 and fs3 == 1 and fe3 == 0xe5 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db998eb; op2val:0xc1308de2;
op3val:0xf2bfffff; valaddr_reg:x3; val_offset:15228*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15228*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5077:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3998eb and fs2 == 1 and fe2 == 0x82 and fm2 == 0x308de2 and fs3 == 1 and fe3 == 0xe5 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db998eb; op2val:0xc1308de2;
op3val:0xf2c00000; valaddr_reg:x3; val_offset:15231*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15231*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5078:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3998eb and fs2 == 1 and fe2 == 0x82 and fm2 == 0x308de2 and fs3 == 1 and fe3 == 0xe5 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db998eb; op2val:0xc1308de2;
op3val:0xf2e00000; valaddr_reg:x3; val_offset:15234*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15234*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5079:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3998eb and fs2 == 1 and fe2 == 0x82 and fm2 == 0x308de2 and fs3 == 1 and fe3 == 0xe5 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db998eb; op2val:0xc1308de2;
op3val:0xf2f00000; valaddr_reg:x3; val_offset:15237*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15237*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5080:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3998eb and fs2 == 1 and fe2 == 0x82 and fm2 == 0x308de2 and fs3 == 1 and fe3 == 0xe5 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db998eb; op2val:0xc1308de2;
op3val:0xf2f80000; valaddr_reg:x3; val_offset:15240*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15240*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5081:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3998eb and fs2 == 1 and fe2 == 0x82 and fm2 == 0x308de2 and fs3 == 1 and fe3 == 0xe5 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db998eb; op2val:0xc1308de2;
op3val:0xf2fc0000; valaddr_reg:x3; val_offset:15243*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15243*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5082:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3998eb and fs2 == 1 and fe2 == 0x82 and fm2 == 0x308de2 and fs3 == 1 and fe3 == 0xe5 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db998eb; op2val:0xc1308de2;
op3val:0xf2fe0000; valaddr_reg:x3; val_offset:15246*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15246*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5083:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3998eb and fs2 == 1 and fe2 == 0x82 and fm2 == 0x308de2 and fs3 == 1 and fe3 == 0xe5 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db998eb; op2val:0xc1308de2;
op3val:0xf2ff0000; valaddr_reg:x3; val_offset:15249*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15249*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5084:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3998eb and fs2 == 1 and fe2 == 0x82 and fm2 == 0x308de2 and fs3 == 1 and fe3 == 0xe5 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db998eb; op2val:0xc1308de2;
op3val:0xf2ff8000; valaddr_reg:x3; val_offset:15252*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15252*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5085:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3998eb and fs2 == 1 and fe2 == 0x82 and fm2 == 0x308de2 and fs3 == 1 and fe3 == 0xe5 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db998eb; op2val:0xc1308de2;
op3val:0xf2ffc000; valaddr_reg:x3; val_offset:15255*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15255*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5086:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3998eb and fs2 == 1 and fe2 == 0x82 and fm2 == 0x308de2 and fs3 == 1 and fe3 == 0xe5 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db998eb; op2val:0xc1308de2;
op3val:0xf2ffe000; valaddr_reg:x3; val_offset:15258*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15258*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5087:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3998eb and fs2 == 1 and fe2 == 0x82 and fm2 == 0x308de2 and fs3 == 1 and fe3 == 0xe5 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db998eb; op2val:0xc1308de2;
op3val:0xf2fff000; valaddr_reg:x3; val_offset:15261*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15261*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5088:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3998eb and fs2 == 1 and fe2 == 0x82 and fm2 == 0x308de2 and fs3 == 1 and fe3 == 0xe5 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db998eb; op2val:0xc1308de2;
op3val:0xf2fff800; valaddr_reg:x3; val_offset:15264*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15264*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5089:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3998eb and fs2 == 1 and fe2 == 0x82 and fm2 == 0x308de2 and fs3 == 1 and fe3 == 0xe5 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db998eb; op2val:0xc1308de2;
op3val:0xf2fffc00; valaddr_reg:x3; val_offset:15267*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15267*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5090:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3998eb and fs2 == 1 and fe2 == 0x82 and fm2 == 0x308de2 and fs3 == 1 and fe3 == 0xe5 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db998eb; op2val:0xc1308de2;
op3val:0xf2fffe00; valaddr_reg:x3; val_offset:15270*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15270*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5091:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3998eb and fs2 == 1 and fe2 == 0x82 and fm2 == 0x308de2 and fs3 == 1 and fe3 == 0xe5 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db998eb; op2val:0xc1308de2;
op3val:0xf2ffff00; valaddr_reg:x3; val_offset:15273*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15273*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5092:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3998eb and fs2 == 1 and fe2 == 0x82 and fm2 == 0x308de2 and fs3 == 1 and fe3 == 0xe5 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db998eb; op2val:0xc1308de2;
op3val:0xf2ffff80; valaddr_reg:x3; val_offset:15276*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15276*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5093:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3998eb and fs2 == 1 and fe2 == 0x82 and fm2 == 0x308de2 and fs3 == 1 and fe3 == 0xe5 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db998eb; op2val:0xc1308de2;
op3val:0xf2ffffc0; valaddr_reg:x3; val_offset:15279*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15279*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5094:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3998eb and fs2 == 1 and fe2 == 0x82 and fm2 == 0x308de2 and fs3 == 1 and fe3 == 0xe5 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db998eb; op2val:0xc1308de2;
op3val:0xf2ffffe0; valaddr_reg:x3; val_offset:15282*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15282*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5095:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3998eb and fs2 == 1 and fe2 == 0x82 and fm2 == 0x308de2 and fs3 == 1 and fe3 == 0xe5 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db998eb; op2val:0xc1308de2;
op3val:0xf2fffff0; valaddr_reg:x3; val_offset:15285*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15285*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5096:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3998eb and fs2 == 1 and fe2 == 0x82 and fm2 == 0x308de2 and fs3 == 1 and fe3 == 0xe5 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db998eb; op2val:0xc1308de2;
op3val:0xf2fffff8; valaddr_reg:x3; val_offset:15288*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15288*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5097:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3998eb and fs2 == 1 and fe2 == 0x82 and fm2 == 0x308de2 and fs3 == 1 and fe3 == 0xe5 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db998eb; op2val:0xc1308de2;
op3val:0xf2fffffc; valaddr_reg:x3; val_offset:15291*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15291*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5098:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3998eb and fs2 == 1 and fe2 == 0x82 and fm2 == 0x308de2 and fs3 == 1 and fe3 == 0xe5 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db998eb; op2val:0xc1308de2;
op3val:0xf2fffffe; valaddr_reg:x3; val_offset:15294*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15294*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5099:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3998eb and fs2 == 1 and fe2 == 0x82 and fm2 == 0x308de2 and fs3 == 1 and fe3 == 0xe5 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db998eb; op2val:0xc1308de2;
op3val:0xf2ffffff; valaddr_reg:x3; val_offset:15297*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15297*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5100:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3998eb and fs2 == 1 and fe2 == 0x82 and fm2 == 0x308de2 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db998eb; op2val:0xc1308de2;
op3val:0xff000001; valaddr_reg:x3; val_offset:15300*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15300*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5101:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3998eb and fs2 == 1 and fe2 == 0x82 and fm2 == 0x308de2 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db998eb; op2val:0xc1308de2;
op3val:0xff000003; valaddr_reg:x3; val_offset:15303*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15303*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5102:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3998eb and fs2 == 1 and fe2 == 0x82 and fm2 == 0x308de2 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db998eb; op2val:0xc1308de2;
op3val:0xff000007; valaddr_reg:x3; val_offset:15306*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15306*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5103:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3998eb and fs2 == 1 and fe2 == 0x82 and fm2 == 0x308de2 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db998eb; op2val:0xc1308de2;
op3val:0xff199999; valaddr_reg:x3; val_offset:15309*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15309*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5104:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3998eb and fs2 == 1 and fe2 == 0x82 and fm2 == 0x308de2 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db998eb; op2val:0xc1308de2;
op3val:0xff249249; valaddr_reg:x3; val_offset:15312*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15312*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5105:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3998eb and fs2 == 1 and fe2 == 0x82 and fm2 == 0x308de2 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db998eb; op2val:0xc1308de2;
op3val:0xff333333; valaddr_reg:x3; val_offset:15315*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15315*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5106:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3998eb and fs2 == 1 and fe2 == 0x82 and fm2 == 0x308de2 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db998eb; op2val:0xc1308de2;
op3val:0xff36db6d; valaddr_reg:x3; val_offset:15318*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15318*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5107:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3998eb and fs2 == 1 and fe2 == 0x82 and fm2 == 0x308de2 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db998eb; op2val:0xc1308de2;
op3val:0xff3bbbbb; valaddr_reg:x3; val_offset:15321*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15321*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5108:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3998eb and fs2 == 1 and fe2 == 0x82 and fm2 == 0x308de2 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db998eb; op2val:0xc1308de2;
op3val:0xff444444; valaddr_reg:x3; val_offset:15324*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15324*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5109:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3998eb and fs2 == 1 and fe2 == 0x82 and fm2 == 0x308de2 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db998eb; op2val:0xc1308de2;
op3val:0xff4ccccc; valaddr_reg:x3; val_offset:15327*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15327*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5110:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3998eb and fs2 == 1 and fe2 == 0x82 and fm2 == 0x308de2 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db998eb; op2val:0xc1308de2;
op3val:0xff5b6db6; valaddr_reg:x3; val_offset:15330*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15330*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5111:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3998eb and fs2 == 1 and fe2 == 0x82 and fm2 == 0x308de2 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db998eb; op2val:0xc1308de2;
op3val:0xff666666; valaddr_reg:x3; val_offset:15333*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15333*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5112:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3998eb and fs2 == 1 and fe2 == 0x82 and fm2 == 0x308de2 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db998eb; op2val:0xc1308de2;
op3val:0xff6db6db; valaddr_reg:x3; val_offset:15336*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15336*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5113:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3998eb and fs2 == 1 and fe2 == 0x82 and fm2 == 0x308de2 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db998eb; op2val:0xc1308de2;
op3val:0xff7ffff8; valaddr_reg:x3; val_offset:15339*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15339*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5114:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3998eb and fs2 == 1 and fe2 == 0x82 and fm2 == 0x308de2 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db998eb; op2val:0xc1308de2;
op3val:0xff7ffffc; valaddr_reg:x3; val_offset:15342*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15342*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5115:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3998eb and fs2 == 1 and fe2 == 0x82 and fm2 == 0x308de2 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db998eb; op2val:0xc1308de2;
op3val:0xff7ffffe; valaddr_reg:x3; val_offset:15345*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15345*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5116:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a6fc5 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x2fc26c and fs3 == 0 and fe3 == 0xc4 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba6fc5; op2val:0x412fc26c;
op3val:0x62000000; valaddr_reg:x3; val_offset:15348*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15348*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5117:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a6fc5 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x2fc26c and fs3 == 0 and fe3 == 0xc4 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba6fc5; op2val:0x412fc26c;
op3val:0x62000001; valaddr_reg:x3; val_offset:15351*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15351*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5118:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a6fc5 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x2fc26c and fs3 == 0 and fe3 == 0xc4 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba6fc5; op2val:0x412fc26c;
op3val:0x62000003; valaddr_reg:x3; val_offset:15354*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15354*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5119:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a6fc5 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x2fc26c and fs3 == 0 and fe3 == 0xc4 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba6fc5; op2val:0x412fc26c;
op3val:0x62000007; valaddr_reg:x3; val_offset:15357*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15357*0 + 3*39*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(2109200940,32,FLEN)
NAN_BOXED(20069094,32,FLEN)
NAN_BOXED(905969664,32,FLEN)
NAN_BOXED(2109200940,32,FLEN)
NAN_BOXED(20069094,32,FLEN)
NAN_BOXED(905969665,32,FLEN)
NAN_BOXED(2109200940,32,FLEN)
NAN_BOXED(20069094,32,FLEN)
NAN_BOXED(905969667,32,FLEN)
NAN_BOXED(2109200940,32,FLEN)
NAN_BOXED(20069094,32,FLEN)
NAN_BOXED(905969671,32,FLEN)
NAN_BOXED(2109200940,32,FLEN)
NAN_BOXED(20069094,32,FLEN)
NAN_BOXED(905969679,32,FLEN)
NAN_BOXED(2109200940,32,FLEN)
NAN_BOXED(20069094,32,FLEN)
NAN_BOXED(905969695,32,FLEN)
NAN_BOXED(2109200940,32,FLEN)
NAN_BOXED(20069094,32,FLEN)
NAN_BOXED(905969727,32,FLEN)
NAN_BOXED(2109200940,32,FLEN)
NAN_BOXED(20069094,32,FLEN)
NAN_BOXED(905969791,32,FLEN)
NAN_BOXED(2109200940,32,FLEN)
NAN_BOXED(20069094,32,FLEN)
NAN_BOXED(905969919,32,FLEN)
NAN_BOXED(2109200940,32,FLEN)
NAN_BOXED(20069094,32,FLEN)
NAN_BOXED(905970175,32,FLEN)
NAN_BOXED(2109200940,32,FLEN)
NAN_BOXED(20069094,32,FLEN)
NAN_BOXED(905970687,32,FLEN)
NAN_BOXED(2109200940,32,FLEN)
NAN_BOXED(20069094,32,FLEN)
NAN_BOXED(905971711,32,FLEN)
NAN_BOXED(2109200940,32,FLEN)
NAN_BOXED(20069094,32,FLEN)
NAN_BOXED(905973759,32,FLEN)
NAN_BOXED(2109200940,32,FLEN)
NAN_BOXED(20069094,32,FLEN)
NAN_BOXED(905977855,32,FLEN)
NAN_BOXED(2109200940,32,FLEN)
NAN_BOXED(20069094,32,FLEN)
NAN_BOXED(905986047,32,FLEN)
NAN_BOXED(2109200940,32,FLEN)
NAN_BOXED(20069094,32,FLEN)
NAN_BOXED(906002431,32,FLEN)
NAN_BOXED(2109200940,32,FLEN)
NAN_BOXED(20069094,32,FLEN)
NAN_BOXED(906035199,32,FLEN)
NAN_BOXED(2109200940,32,FLEN)
NAN_BOXED(20069094,32,FLEN)
NAN_BOXED(906100735,32,FLEN)
NAN_BOXED(2109200940,32,FLEN)
NAN_BOXED(20069094,32,FLEN)
NAN_BOXED(906231807,32,FLEN)
NAN_BOXED(2109200940,32,FLEN)
NAN_BOXED(20069094,32,FLEN)
NAN_BOXED(906493951,32,FLEN)
NAN_BOXED(2109200940,32,FLEN)
NAN_BOXED(20069094,32,FLEN)
NAN_BOXED(907018239,32,FLEN)
NAN_BOXED(2109200940,32,FLEN)
NAN_BOXED(20069094,32,FLEN)
NAN_BOXED(908066815,32,FLEN)
NAN_BOXED(2109200940,32,FLEN)
NAN_BOXED(20069094,32,FLEN)
NAN_BOXED(910163967,32,FLEN)
NAN_BOXED(2109200940,32,FLEN)
NAN_BOXED(20069094,32,FLEN)
NAN_BOXED(910163968,32,FLEN)
NAN_BOXED(2109200940,32,FLEN)
NAN_BOXED(20069094,32,FLEN)
NAN_BOXED(912261120,32,FLEN)
NAN_BOXED(2109200940,32,FLEN)
NAN_BOXED(20069094,32,FLEN)
NAN_BOXED(913309696,32,FLEN)
NAN_BOXED(2109200940,32,FLEN)
NAN_BOXED(20069094,32,FLEN)
NAN_BOXED(913833984,32,FLEN)
NAN_BOXED(2109200940,32,FLEN)
NAN_BOXED(20069094,32,FLEN)
NAN_BOXED(914096128,32,FLEN)
NAN_BOXED(2109200940,32,FLEN)
NAN_BOXED(20069094,32,FLEN)
NAN_BOXED(914227200,32,FLEN)
NAN_BOXED(2109200940,32,FLEN)
NAN_BOXED(20069094,32,FLEN)
NAN_BOXED(914292736,32,FLEN)
NAN_BOXED(2109200940,32,FLEN)
NAN_BOXED(20069094,32,FLEN)
NAN_BOXED(914325504,32,FLEN)
NAN_BOXED(2109200940,32,FLEN)
NAN_BOXED(20069094,32,FLEN)
NAN_BOXED(914341888,32,FLEN)
NAN_BOXED(2109200940,32,FLEN)
NAN_BOXED(20069094,32,FLEN)
NAN_BOXED(914350080,32,FLEN)
NAN_BOXED(2109200940,32,FLEN)
NAN_BOXED(20069094,32,FLEN)
NAN_BOXED(914354176,32,FLEN)
NAN_BOXED(2109200940,32,FLEN)
NAN_BOXED(20069094,32,FLEN)
NAN_BOXED(914356224,32,FLEN)
NAN_BOXED(2109200940,32,FLEN)
NAN_BOXED(20069094,32,FLEN)
NAN_BOXED(914357248,32,FLEN)
NAN_BOXED(2109200940,32,FLEN)
NAN_BOXED(20069094,32,FLEN)
NAN_BOXED(914357760,32,FLEN)
NAN_BOXED(2109200940,32,FLEN)
NAN_BOXED(20069094,32,FLEN)
NAN_BOXED(914358016,32,FLEN)
NAN_BOXED(2109200940,32,FLEN)
NAN_BOXED(20069094,32,FLEN)
NAN_BOXED(914358144,32,FLEN)
NAN_BOXED(2109200940,32,FLEN)
NAN_BOXED(20069094,32,FLEN)
NAN_BOXED(914358208,32,FLEN)
NAN_BOXED(2109200940,32,FLEN)
NAN_BOXED(20069094,32,FLEN)
NAN_BOXED(914358240,32,FLEN)
NAN_BOXED(2109200940,32,FLEN)
NAN_BOXED(20069094,32,FLEN)
NAN_BOXED(914358256,32,FLEN)
NAN_BOXED(2109200940,32,FLEN)
NAN_BOXED(20069094,32,FLEN)
NAN_BOXED(914358264,32,FLEN)
NAN_BOXED(2109200940,32,FLEN)
NAN_BOXED(20069094,32,FLEN)
NAN_BOXED(914358268,32,FLEN)
NAN_BOXED(2109200940,32,FLEN)
NAN_BOXED(20069094,32,FLEN)
NAN_BOXED(914358270,32,FLEN)
NAN_BOXED(2109200940,32,FLEN)
NAN_BOXED(20069094,32,FLEN)
NAN_BOXED(914358271,32,FLEN)
NAN_BOXED(2109200940,32,FLEN)
NAN_BOXED(20069094,32,FLEN)
NAN_BOXED(1065353217,32,FLEN)
NAN_BOXED(2109200940,32,FLEN)
NAN_BOXED(20069094,32,FLEN)
NAN_BOXED(1065353219,32,FLEN)
NAN_BOXED(2109200940,32,FLEN)
NAN_BOXED(20069094,32,FLEN)
NAN_BOXED(1065353223,32,FLEN)
NAN_BOXED(2109200940,32,FLEN)
NAN_BOXED(20069094,32,FLEN)
NAN_BOXED(1067030937,32,FLEN)
NAN_BOXED(2109200940,32,FLEN)
NAN_BOXED(20069094,32,FLEN)
NAN_BOXED(1067749961,32,FLEN)
NAN_BOXED(2109200940,32,FLEN)
NAN_BOXED(20069094,32,FLEN)
NAN_BOXED(1068708659,32,FLEN)
NAN_BOXED(2109200940,32,FLEN)
NAN_BOXED(20069094,32,FLEN)
NAN_BOXED(1068948333,32,FLEN)
NAN_BOXED(2109200940,32,FLEN)
NAN_BOXED(20069094,32,FLEN)
NAN_BOXED(1069267899,32,FLEN)
NAN_BOXED(2109200940,32,FLEN)
NAN_BOXED(20069094,32,FLEN)
NAN_BOXED(1069827140,32,FLEN)
NAN_BOXED(2109200940,32,FLEN)
NAN_BOXED(20069094,32,FLEN)
NAN_BOXED(1070386380,32,FLEN)
NAN_BOXED(2109200940,32,FLEN)
NAN_BOXED(20069094,32,FLEN)
NAN_BOXED(1071345078,32,FLEN)
NAN_BOXED(2109200940,32,FLEN)
NAN_BOXED(20069094,32,FLEN)
NAN_BOXED(1072064102,32,FLEN)
NAN_BOXED(2109200940,32,FLEN)
NAN_BOXED(20069094,32,FLEN)
NAN_BOXED(1072543451,32,FLEN)
NAN_BOXED(2109200940,32,FLEN)
NAN_BOXED(20069094,32,FLEN)
NAN_BOXED(1073741816,32,FLEN)
NAN_BOXED(2109200940,32,FLEN)
NAN_BOXED(20069094,32,FLEN)
NAN_BOXED(1073741820,32,FLEN)
NAN_BOXED(2109200940,32,FLEN)
NAN_BOXED(20069094,32,FLEN)
NAN_BOXED(1073741822,32,FLEN)
NAN_BOXED(2109315307,32,FLEN)
NAN_BOXED(3241184738,32,FLEN)
NAN_BOXED(4068474880,32,FLEN)
NAN_BOXED(2109315307,32,FLEN)
NAN_BOXED(3241184738,32,FLEN)
NAN_BOXED(4068474881,32,FLEN)
NAN_BOXED(2109315307,32,FLEN)
NAN_BOXED(3241184738,32,FLEN)
NAN_BOXED(4068474883,32,FLEN)
NAN_BOXED(2109315307,32,FLEN)
NAN_BOXED(3241184738,32,FLEN)
NAN_BOXED(4068474887,32,FLEN)
NAN_BOXED(2109315307,32,FLEN)
NAN_BOXED(3241184738,32,FLEN)
NAN_BOXED(4068474895,32,FLEN)
NAN_BOXED(2109315307,32,FLEN)
NAN_BOXED(3241184738,32,FLEN)
NAN_BOXED(4068474911,32,FLEN)
NAN_BOXED(2109315307,32,FLEN)
NAN_BOXED(3241184738,32,FLEN)
NAN_BOXED(4068474943,32,FLEN)
NAN_BOXED(2109315307,32,FLEN)
NAN_BOXED(3241184738,32,FLEN)
NAN_BOXED(4068475007,32,FLEN)
NAN_BOXED(2109315307,32,FLEN)
NAN_BOXED(3241184738,32,FLEN)
NAN_BOXED(4068475135,32,FLEN)
NAN_BOXED(2109315307,32,FLEN)
NAN_BOXED(3241184738,32,FLEN)
NAN_BOXED(4068475391,32,FLEN)
NAN_BOXED(2109315307,32,FLEN)
NAN_BOXED(3241184738,32,FLEN)
NAN_BOXED(4068475903,32,FLEN)
NAN_BOXED(2109315307,32,FLEN)
NAN_BOXED(3241184738,32,FLEN)
NAN_BOXED(4068476927,32,FLEN)
NAN_BOXED(2109315307,32,FLEN)
NAN_BOXED(3241184738,32,FLEN)
NAN_BOXED(4068478975,32,FLEN)
NAN_BOXED(2109315307,32,FLEN)
NAN_BOXED(3241184738,32,FLEN)
NAN_BOXED(4068483071,32,FLEN)
NAN_BOXED(2109315307,32,FLEN)
NAN_BOXED(3241184738,32,FLEN)
NAN_BOXED(4068491263,32,FLEN)
NAN_BOXED(2109315307,32,FLEN)
NAN_BOXED(3241184738,32,FLEN)
NAN_BOXED(4068507647,32,FLEN)
NAN_BOXED(2109315307,32,FLEN)
NAN_BOXED(3241184738,32,FLEN)
NAN_BOXED(4068540415,32,FLEN)
NAN_BOXED(2109315307,32,FLEN)
NAN_BOXED(3241184738,32,FLEN)
NAN_BOXED(4068605951,32,FLEN)
NAN_BOXED(2109315307,32,FLEN)
NAN_BOXED(3241184738,32,FLEN)
NAN_BOXED(4068737023,32,FLEN)
NAN_BOXED(2109315307,32,FLEN)
NAN_BOXED(3241184738,32,FLEN)
NAN_BOXED(4068999167,32,FLEN)
NAN_BOXED(2109315307,32,FLEN)
NAN_BOXED(3241184738,32,FLEN)
NAN_BOXED(4069523455,32,FLEN)
NAN_BOXED(2109315307,32,FLEN)
NAN_BOXED(3241184738,32,FLEN)
NAN_BOXED(4070572031,32,FLEN)
NAN_BOXED(2109315307,32,FLEN)
NAN_BOXED(3241184738,32,FLEN)
NAN_BOXED(4072669183,32,FLEN)
NAN_BOXED(2109315307,32,FLEN)
NAN_BOXED(3241184738,32,FLEN)
NAN_BOXED(4072669184,32,FLEN)
NAN_BOXED(2109315307,32,FLEN)
NAN_BOXED(3241184738,32,FLEN)
NAN_BOXED(4074766336,32,FLEN)
NAN_BOXED(2109315307,32,FLEN)
NAN_BOXED(3241184738,32,FLEN)
NAN_BOXED(4075814912,32,FLEN)
NAN_BOXED(2109315307,32,FLEN)
NAN_BOXED(3241184738,32,FLEN)
NAN_BOXED(4076339200,32,FLEN)
NAN_BOXED(2109315307,32,FLEN)
NAN_BOXED(3241184738,32,FLEN)
NAN_BOXED(4076601344,32,FLEN)
NAN_BOXED(2109315307,32,FLEN)
NAN_BOXED(3241184738,32,FLEN)
NAN_BOXED(4076732416,32,FLEN)
NAN_BOXED(2109315307,32,FLEN)
NAN_BOXED(3241184738,32,FLEN)
NAN_BOXED(4076797952,32,FLEN)
NAN_BOXED(2109315307,32,FLEN)
NAN_BOXED(3241184738,32,FLEN)
NAN_BOXED(4076830720,32,FLEN)
NAN_BOXED(2109315307,32,FLEN)
NAN_BOXED(3241184738,32,FLEN)
NAN_BOXED(4076847104,32,FLEN)
NAN_BOXED(2109315307,32,FLEN)
NAN_BOXED(3241184738,32,FLEN)
NAN_BOXED(4076855296,32,FLEN)
NAN_BOXED(2109315307,32,FLEN)
NAN_BOXED(3241184738,32,FLEN)
NAN_BOXED(4076859392,32,FLEN)
NAN_BOXED(2109315307,32,FLEN)
NAN_BOXED(3241184738,32,FLEN)
NAN_BOXED(4076861440,32,FLEN)
NAN_BOXED(2109315307,32,FLEN)
NAN_BOXED(3241184738,32,FLEN)
NAN_BOXED(4076862464,32,FLEN)
NAN_BOXED(2109315307,32,FLEN)
NAN_BOXED(3241184738,32,FLEN)
NAN_BOXED(4076862976,32,FLEN)
NAN_BOXED(2109315307,32,FLEN)
NAN_BOXED(3241184738,32,FLEN)
NAN_BOXED(4076863232,32,FLEN)
NAN_BOXED(2109315307,32,FLEN)
NAN_BOXED(3241184738,32,FLEN)
NAN_BOXED(4076863360,32,FLEN)
NAN_BOXED(2109315307,32,FLEN)
NAN_BOXED(3241184738,32,FLEN)
NAN_BOXED(4076863424,32,FLEN)
NAN_BOXED(2109315307,32,FLEN)
NAN_BOXED(3241184738,32,FLEN)
NAN_BOXED(4076863456,32,FLEN)
NAN_BOXED(2109315307,32,FLEN)
NAN_BOXED(3241184738,32,FLEN)
NAN_BOXED(4076863472,32,FLEN)
NAN_BOXED(2109315307,32,FLEN)
NAN_BOXED(3241184738,32,FLEN)
NAN_BOXED(4076863480,32,FLEN)
NAN_BOXED(2109315307,32,FLEN)
NAN_BOXED(3241184738,32,FLEN)
NAN_BOXED(4076863484,32,FLEN)
NAN_BOXED(2109315307,32,FLEN)
NAN_BOXED(3241184738,32,FLEN)
NAN_BOXED(4076863486,32,FLEN)
NAN_BOXED(2109315307,32,FLEN)
NAN_BOXED(3241184738,32,FLEN)
NAN_BOXED(4076863487,32,FLEN)
NAN_BOXED(2109315307,32,FLEN)
NAN_BOXED(3241184738,32,FLEN)
NAN_BOXED(4278190081,32,FLEN)
NAN_BOXED(2109315307,32,FLEN)
NAN_BOXED(3241184738,32,FLEN)
NAN_BOXED(4278190083,32,FLEN)
NAN_BOXED(2109315307,32,FLEN)
NAN_BOXED(3241184738,32,FLEN)
NAN_BOXED(4278190087,32,FLEN)
NAN_BOXED(2109315307,32,FLEN)
NAN_BOXED(3241184738,32,FLEN)
NAN_BOXED(4279867801,32,FLEN)
NAN_BOXED(2109315307,32,FLEN)
NAN_BOXED(3241184738,32,FLEN)
NAN_BOXED(4280586825,32,FLEN)
NAN_BOXED(2109315307,32,FLEN)
NAN_BOXED(3241184738,32,FLEN)
NAN_BOXED(4281545523,32,FLEN)
NAN_BOXED(2109315307,32,FLEN)
NAN_BOXED(3241184738,32,FLEN)
NAN_BOXED(4281785197,32,FLEN)
NAN_BOXED(2109315307,32,FLEN)
NAN_BOXED(3241184738,32,FLEN)
NAN_BOXED(4282104763,32,FLEN)
NAN_BOXED(2109315307,32,FLEN)
NAN_BOXED(3241184738,32,FLEN)
NAN_BOXED(4282664004,32,FLEN)
NAN_BOXED(2109315307,32,FLEN)
NAN_BOXED(3241184738,32,FLEN)
NAN_BOXED(4283223244,32,FLEN)
NAN_BOXED(2109315307,32,FLEN)
NAN_BOXED(3241184738,32,FLEN)
NAN_BOXED(4284181942,32,FLEN)
NAN_BOXED(2109315307,32,FLEN)
NAN_BOXED(3241184738,32,FLEN)
NAN_BOXED(4284900966,32,FLEN)
NAN_BOXED(2109315307,32,FLEN)
NAN_BOXED(3241184738,32,FLEN)
NAN_BOXED(4285380315,32,FLEN)
NAN_BOXED(2109315307,32,FLEN)
NAN_BOXED(3241184738,32,FLEN)
NAN_BOXED(4286578680,32,FLEN)
NAN_BOXED(2109315307,32,FLEN)
NAN_BOXED(3241184738,32,FLEN)
NAN_BOXED(4286578684,32,FLEN)
NAN_BOXED(2109315307,32,FLEN)
NAN_BOXED(3241184738,32,FLEN)
NAN_BOXED(4286578686,32,FLEN)
NAN_BOXED(2109370309,32,FLEN)
NAN_BOXED(1093649004,32,FLEN)
NAN_BOXED(1644167168,32,FLEN)
NAN_BOXED(2109370309,32,FLEN)
NAN_BOXED(1093649004,32,FLEN)
NAN_BOXED(1644167169,32,FLEN)
NAN_BOXED(2109370309,32,FLEN)
NAN_BOXED(1093649004,32,FLEN)
NAN_BOXED(1644167171,32,FLEN)
NAN_BOXED(2109370309,32,FLEN)
NAN_BOXED(1093649004,32,FLEN)
NAN_BOXED(1644167175,32,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
