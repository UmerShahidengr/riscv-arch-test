
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 14:18:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32F/fmsub.s.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.s instruction of the RISC-V RV32F_Zicsr,RV32FD_Zicsr,RV64F_Zicsr,RV64FD_Zicsr extension for the fmsub_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF_Zicsr,RV32IFD_Zicsr,RV64IF_Zicsr,RV64IFD_Zicsr,RV32EF_Zicsr,RV32EFD_Zicsr,RV64EF_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fmsub_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*F.*);def TEST_CASE_1=True;",fmsub_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_512:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x418378 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x2954f0 and fs3 == 1 and fe3 == 0xfb and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c418378; op2val:0xc2a954f0;
op3val:0xfd80ffff; valaddr_reg:x3; val_offset:1536*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1536*0 + 3*4*FLEN/8, x4, x1, x2)

inst_513:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x418378 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x2954f0 and fs3 == 1 and fe3 == 0xfb and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c418378; op2val:0xc2a954f0;
op3val:0xfd81ffff; valaddr_reg:x3; val_offset:1539*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1539*0 + 3*4*FLEN/8, x4, x1, x2)

inst_514:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x418378 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x2954f0 and fs3 == 1 and fe3 == 0xfb and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c418378; op2val:0xc2a954f0;
op3val:0xfd83ffff; valaddr_reg:x3; val_offset:1542*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1542*0 + 3*4*FLEN/8, x4, x1, x2)

inst_515:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x418378 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x2954f0 and fs3 == 1 and fe3 == 0xfb and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c418378; op2val:0xc2a954f0;
op3val:0xfd87ffff; valaddr_reg:x3; val_offset:1545*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1545*0 + 3*4*FLEN/8, x4, x1, x2)

inst_516:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x418378 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x2954f0 and fs3 == 1 and fe3 == 0xfb and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c418378; op2val:0xc2a954f0;
op3val:0xfd8fffff; valaddr_reg:x3; val_offset:1548*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1548*0 + 3*4*FLEN/8, x4, x1, x2)

inst_517:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x418378 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x2954f0 and fs3 == 1 and fe3 == 0xfb and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c418378; op2val:0xc2a954f0;
op3val:0xfd9fffff; valaddr_reg:x3; val_offset:1551*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1551*0 + 3*4*FLEN/8, x4, x1, x2)

inst_518:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x418378 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x2954f0 and fs3 == 1 and fe3 == 0xfb and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c418378; op2val:0xc2a954f0;
op3val:0xfdbfffff; valaddr_reg:x3; val_offset:1554*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1554*0 + 3*4*FLEN/8, x4, x1, x2)

inst_519:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x418378 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x2954f0 and fs3 == 1 and fe3 == 0xfb and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c418378; op2val:0xc2a954f0;
op3val:0xfdc00000; valaddr_reg:x3; val_offset:1557*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1557*0 + 3*4*FLEN/8, x4, x1, x2)

inst_520:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x418378 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x2954f0 and fs3 == 1 and fe3 == 0xfb and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c418378; op2val:0xc2a954f0;
op3val:0xfde00000; valaddr_reg:x3; val_offset:1560*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1560*0 + 3*4*FLEN/8, x4, x1, x2)

inst_521:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x418378 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x2954f0 and fs3 == 1 and fe3 == 0xfb and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c418378; op2val:0xc2a954f0;
op3val:0xfdf00000; valaddr_reg:x3; val_offset:1563*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1563*0 + 3*4*FLEN/8, x4, x1, x2)

inst_522:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x418378 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x2954f0 and fs3 == 1 and fe3 == 0xfb and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c418378; op2val:0xc2a954f0;
op3val:0xfdf80000; valaddr_reg:x3; val_offset:1566*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1566*0 + 3*4*FLEN/8, x4, x1, x2)

inst_523:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x418378 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x2954f0 and fs3 == 1 and fe3 == 0xfb and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c418378; op2val:0xc2a954f0;
op3val:0xfdfc0000; valaddr_reg:x3; val_offset:1569*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1569*0 + 3*4*FLEN/8, x4, x1, x2)

inst_524:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x418378 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x2954f0 and fs3 == 1 and fe3 == 0xfb and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c418378; op2val:0xc2a954f0;
op3val:0xfdfe0000; valaddr_reg:x3; val_offset:1572*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1572*0 + 3*4*FLEN/8, x4, x1, x2)

inst_525:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x418378 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x2954f0 and fs3 == 1 and fe3 == 0xfb and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c418378; op2val:0xc2a954f0;
op3val:0xfdff0000; valaddr_reg:x3; val_offset:1575*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1575*0 + 3*4*FLEN/8, x4, x1, x2)

inst_526:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x418378 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x2954f0 and fs3 == 1 and fe3 == 0xfb and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c418378; op2val:0xc2a954f0;
op3val:0xfdff8000; valaddr_reg:x3; val_offset:1578*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1578*0 + 3*4*FLEN/8, x4, x1, x2)

inst_527:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x418378 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x2954f0 and fs3 == 1 and fe3 == 0xfb and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c418378; op2val:0xc2a954f0;
op3val:0xfdffc000; valaddr_reg:x3; val_offset:1581*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1581*0 + 3*4*FLEN/8, x4, x1, x2)

inst_528:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x418378 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x2954f0 and fs3 == 1 and fe3 == 0xfb and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c418378; op2val:0xc2a954f0;
op3val:0xfdffe000; valaddr_reg:x3; val_offset:1584*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1584*0 + 3*4*FLEN/8, x4, x1, x2)

inst_529:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x418378 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x2954f0 and fs3 == 1 and fe3 == 0xfb and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c418378; op2val:0xc2a954f0;
op3val:0xfdfff000; valaddr_reg:x3; val_offset:1587*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1587*0 + 3*4*FLEN/8, x4, x1, x2)

inst_530:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x418378 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x2954f0 and fs3 == 1 and fe3 == 0xfb and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c418378; op2val:0xc2a954f0;
op3val:0xfdfff800; valaddr_reg:x3; val_offset:1590*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1590*0 + 3*4*FLEN/8, x4, x1, x2)

inst_531:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x418378 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x2954f0 and fs3 == 1 and fe3 == 0xfb and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c418378; op2val:0xc2a954f0;
op3val:0xfdfffc00; valaddr_reg:x3; val_offset:1593*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1593*0 + 3*4*FLEN/8, x4, x1, x2)

inst_532:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x418378 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x2954f0 and fs3 == 1 and fe3 == 0xfb and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c418378; op2val:0xc2a954f0;
op3val:0xfdfffe00; valaddr_reg:x3; val_offset:1596*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1596*0 + 3*4*FLEN/8, x4, x1, x2)

inst_533:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x418378 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x2954f0 and fs3 == 1 and fe3 == 0xfb and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c418378; op2val:0xc2a954f0;
op3val:0xfdffff00; valaddr_reg:x3; val_offset:1599*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1599*0 + 3*4*FLEN/8, x4, x1, x2)

inst_534:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x418378 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x2954f0 and fs3 == 1 and fe3 == 0xfb and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c418378; op2val:0xc2a954f0;
op3val:0xfdffff80; valaddr_reg:x3; val_offset:1602*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1602*0 + 3*4*FLEN/8, x4, x1, x2)

inst_535:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x418378 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x2954f0 and fs3 == 1 and fe3 == 0xfb and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c418378; op2val:0xc2a954f0;
op3val:0xfdffffc0; valaddr_reg:x3; val_offset:1605*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1605*0 + 3*4*FLEN/8, x4, x1, x2)

inst_536:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x418378 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x2954f0 and fs3 == 1 and fe3 == 0xfb and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c418378; op2val:0xc2a954f0;
op3val:0xfdffffe0; valaddr_reg:x3; val_offset:1608*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1608*0 + 3*4*FLEN/8, x4, x1, x2)

inst_537:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x418378 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x2954f0 and fs3 == 1 and fe3 == 0xfb and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c418378; op2val:0xc2a954f0;
op3val:0xfdfffff0; valaddr_reg:x3; val_offset:1611*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1611*0 + 3*4*FLEN/8, x4, x1, x2)

inst_538:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x418378 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x2954f0 and fs3 == 1 and fe3 == 0xfb and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c418378; op2val:0xc2a954f0;
op3val:0xfdfffff8; valaddr_reg:x3; val_offset:1614*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1614*0 + 3*4*FLEN/8, x4, x1, x2)

inst_539:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x418378 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x2954f0 and fs3 == 1 and fe3 == 0xfb and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c418378; op2val:0xc2a954f0;
op3val:0xfdfffffc; valaddr_reg:x3; val_offset:1617*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1617*0 + 3*4*FLEN/8, x4, x1, x2)

inst_540:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x418378 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x2954f0 and fs3 == 1 and fe3 == 0xfb and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c418378; op2val:0xc2a954f0;
op3val:0xfdfffffe; valaddr_reg:x3; val_offset:1620*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1620*0 + 3*4*FLEN/8, x4, x1, x2)

inst_541:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x418378 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x2954f0 and fs3 == 1 and fe3 == 0xfb and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c418378; op2val:0xc2a954f0;
op3val:0xfdffffff; valaddr_reg:x3; val_offset:1623*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1623*0 + 3*4*FLEN/8, x4, x1, x2)

inst_542:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x418378 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x2954f0 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c418378; op2val:0xc2a954f0;
op3val:0xff000001; valaddr_reg:x3; val_offset:1626*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1626*0 + 3*4*FLEN/8, x4, x1, x2)

inst_543:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x418378 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x2954f0 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c418378; op2val:0xc2a954f0;
op3val:0xff000003; valaddr_reg:x3; val_offset:1629*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1629*0 + 3*4*FLEN/8, x4, x1, x2)

inst_544:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x418378 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x2954f0 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c418378; op2val:0xc2a954f0;
op3val:0xff000007; valaddr_reg:x3; val_offset:1632*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1632*0 + 3*4*FLEN/8, x4, x1, x2)

inst_545:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x418378 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x2954f0 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c418378; op2val:0xc2a954f0;
op3val:0xff199999; valaddr_reg:x3; val_offset:1635*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1635*0 + 3*4*FLEN/8, x4, x1, x2)

inst_546:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x418378 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x2954f0 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c418378; op2val:0xc2a954f0;
op3val:0xff249249; valaddr_reg:x3; val_offset:1638*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1638*0 + 3*4*FLEN/8, x4, x1, x2)

inst_547:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x418378 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x2954f0 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c418378; op2val:0xc2a954f0;
op3val:0xff333333; valaddr_reg:x3; val_offset:1641*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1641*0 + 3*4*FLEN/8, x4, x1, x2)

inst_548:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x418378 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x2954f0 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c418378; op2val:0xc2a954f0;
op3val:0xff36db6d; valaddr_reg:x3; val_offset:1644*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1644*0 + 3*4*FLEN/8, x4, x1, x2)

inst_549:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x418378 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x2954f0 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c418378; op2val:0xc2a954f0;
op3val:0xff3bbbbb; valaddr_reg:x3; val_offset:1647*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1647*0 + 3*4*FLEN/8, x4, x1, x2)

inst_550:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x418378 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x2954f0 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c418378; op2val:0xc2a954f0;
op3val:0xff444444; valaddr_reg:x3; val_offset:1650*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1650*0 + 3*4*FLEN/8, x4, x1, x2)

inst_551:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x418378 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x2954f0 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c418378; op2val:0xc2a954f0;
op3val:0xff4ccccc; valaddr_reg:x3; val_offset:1653*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1653*0 + 3*4*FLEN/8, x4, x1, x2)

inst_552:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x418378 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x2954f0 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c418378; op2val:0xc2a954f0;
op3val:0xff5b6db6; valaddr_reg:x3; val_offset:1656*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1656*0 + 3*4*FLEN/8, x4, x1, x2)

inst_553:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x418378 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x2954f0 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c418378; op2val:0xc2a954f0;
op3val:0xff666666; valaddr_reg:x3; val_offset:1659*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1659*0 + 3*4*FLEN/8, x4, x1, x2)

inst_554:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x418378 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x2954f0 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c418378; op2val:0xc2a954f0;
op3val:0xff6db6db; valaddr_reg:x3; val_offset:1662*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1662*0 + 3*4*FLEN/8, x4, x1, x2)

inst_555:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x418378 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x2954f0 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c418378; op2val:0xc2a954f0;
op3val:0xff7ffff8; valaddr_reg:x3; val_offset:1665*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1665*0 + 3*4*FLEN/8, x4, x1, x2)

inst_556:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x418378 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x2954f0 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c418378; op2val:0xc2a954f0;
op3val:0xff7ffffc; valaddr_reg:x3; val_offset:1668*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1668*0 + 3*4*FLEN/8, x4, x1, x2)

inst_557:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x418378 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x2954f0 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c418378; op2val:0xc2a954f0;
op3val:0xff7ffffe; valaddr_reg:x3; val_offset:1671*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1671*0 + 3*4*FLEN/8, x4, x1, x2)

inst_558:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x54 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xaa000000; valaddr_reg:x3; val_offset:1674*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1674*0 + 3*4*FLEN/8, x4, x1, x2)

inst_559:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x54 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xaa000001; valaddr_reg:x3; val_offset:1677*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1677*0 + 3*4*FLEN/8, x4, x1, x2)

inst_560:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x54 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xaa000003; valaddr_reg:x3; val_offset:1680*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1680*0 + 3*4*FLEN/8, x4, x1, x2)

inst_561:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x54 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xaa000007; valaddr_reg:x3; val_offset:1683*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1683*0 + 3*4*FLEN/8, x4, x1, x2)

inst_562:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x54 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xaa00000f; valaddr_reg:x3; val_offset:1686*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1686*0 + 3*4*FLEN/8, x4, x1, x2)

inst_563:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x54 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xaa00001f; valaddr_reg:x3; val_offset:1689*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1689*0 + 3*4*FLEN/8, x4, x1, x2)

inst_564:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x54 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xaa00003f; valaddr_reg:x3; val_offset:1692*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1692*0 + 3*4*FLEN/8, x4, x1, x2)

inst_565:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x54 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xaa00007f; valaddr_reg:x3; val_offset:1695*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1695*0 + 3*4*FLEN/8, x4, x1, x2)

inst_566:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x54 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xaa0000ff; valaddr_reg:x3; val_offset:1698*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1698*0 + 3*4*FLEN/8, x4, x1, x2)

inst_567:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x54 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xaa0001ff; valaddr_reg:x3; val_offset:1701*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1701*0 + 3*4*FLEN/8, x4, x1, x2)

inst_568:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x54 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xaa0003ff; valaddr_reg:x3; val_offset:1704*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1704*0 + 3*4*FLEN/8, x4, x1, x2)

inst_569:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x54 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xaa0007ff; valaddr_reg:x3; val_offset:1707*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1707*0 + 3*4*FLEN/8, x4, x1, x2)

inst_570:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x54 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xaa000fff; valaddr_reg:x3; val_offset:1710*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1710*0 + 3*4*FLEN/8, x4, x1, x2)

inst_571:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x54 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xaa001fff; valaddr_reg:x3; val_offset:1713*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1713*0 + 3*4*FLEN/8, x4, x1, x2)

inst_572:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x54 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xaa003fff; valaddr_reg:x3; val_offset:1716*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1716*0 + 3*4*FLEN/8, x4, x1, x2)

inst_573:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x54 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xaa007fff; valaddr_reg:x3; val_offset:1719*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1719*0 + 3*4*FLEN/8, x4, x1, x2)

inst_574:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x54 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xaa00ffff; valaddr_reg:x3; val_offset:1722*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1722*0 + 3*4*FLEN/8, x4, x1, x2)

inst_575:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x54 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xaa01ffff; valaddr_reg:x3; val_offset:1725*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1725*0 + 3*4*FLEN/8, x4, x1, x2)

inst_576:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x54 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xaa03ffff; valaddr_reg:x3; val_offset:1728*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1728*0 + 3*4*FLEN/8, x4, x1, x2)

inst_577:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x54 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xaa07ffff; valaddr_reg:x3; val_offset:1731*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1731*0 + 3*4*FLEN/8, x4, x1, x2)

inst_578:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x54 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xaa0fffff; valaddr_reg:x3; val_offset:1734*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1734*0 + 3*4*FLEN/8, x4, x1, x2)

inst_579:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x54 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xaa1fffff; valaddr_reg:x3; val_offset:1737*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1737*0 + 3*4*FLEN/8, x4, x1, x2)

inst_580:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x54 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xaa3fffff; valaddr_reg:x3; val_offset:1740*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1740*0 + 3*4*FLEN/8, x4, x1, x2)

inst_581:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x54 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xaa400000; valaddr_reg:x3; val_offset:1743*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1743*0 + 3*4*FLEN/8, x4, x1, x2)

inst_582:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x54 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xaa600000; valaddr_reg:x3; val_offset:1746*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1746*0 + 3*4*FLEN/8, x4, x1, x2)

inst_583:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x54 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xaa700000; valaddr_reg:x3; val_offset:1749*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1749*0 + 3*4*FLEN/8, x4, x1, x2)

inst_584:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x54 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xaa780000; valaddr_reg:x3; val_offset:1752*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1752*0 + 3*4*FLEN/8, x4, x1, x2)

inst_585:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x54 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xaa7c0000; valaddr_reg:x3; val_offset:1755*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1755*0 + 3*4*FLEN/8, x4, x1, x2)

inst_586:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x54 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xaa7e0000; valaddr_reg:x3; val_offset:1758*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1758*0 + 3*4*FLEN/8, x4, x1, x2)

inst_587:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x54 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xaa7f0000; valaddr_reg:x3; val_offset:1761*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1761*0 + 3*4*FLEN/8, x4, x1, x2)

inst_588:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x54 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xaa7f8000; valaddr_reg:x3; val_offset:1764*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1764*0 + 3*4*FLEN/8, x4, x1, x2)

inst_589:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x54 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xaa7fc000; valaddr_reg:x3; val_offset:1767*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1767*0 + 3*4*FLEN/8, x4, x1, x2)

inst_590:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x54 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xaa7fe000; valaddr_reg:x3; val_offset:1770*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1770*0 + 3*4*FLEN/8, x4, x1, x2)

inst_591:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x54 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xaa7ff000; valaddr_reg:x3; val_offset:1773*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1773*0 + 3*4*FLEN/8, x4, x1, x2)

inst_592:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x54 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xaa7ff800; valaddr_reg:x3; val_offset:1776*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1776*0 + 3*4*FLEN/8, x4, x1, x2)

inst_593:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x54 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xaa7ffc00; valaddr_reg:x3; val_offset:1779*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1779*0 + 3*4*FLEN/8, x4, x1, x2)

inst_594:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x54 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xaa7ffe00; valaddr_reg:x3; val_offset:1782*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1782*0 + 3*4*FLEN/8, x4, x1, x2)

inst_595:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x54 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xaa7fff00; valaddr_reg:x3; val_offset:1785*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1785*0 + 3*4*FLEN/8, x4, x1, x2)

inst_596:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x54 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xaa7fff80; valaddr_reg:x3; val_offset:1788*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1788*0 + 3*4*FLEN/8, x4, x1, x2)

inst_597:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x54 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xaa7fffc0; valaddr_reg:x3; val_offset:1791*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1791*0 + 3*4*FLEN/8, x4, x1, x2)

inst_598:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x54 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xaa7fffe0; valaddr_reg:x3; val_offset:1794*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1794*0 + 3*4*FLEN/8, x4, x1, x2)

inst_599:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x54 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xaa7ffff0; valaddr_reg:x3; val_offset:1797*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1797*0 + 3*4*FLEN/8, x4, x1, x2)

inst_600:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x54 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xaa7ffff8; valaddr_reg:x3; val_offset:1800*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1800*0 + 3*4*FLEN/8, x4, x1, x2)

inst_601:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x54 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xaa7ffffc; valaddr_reg:x3; val_offset:1803*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1803*0 + 3*4*FLEN/8, x4, x1, x2)

inst_602:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x54 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xaa7ffffe; valaddr_reg:x3; val_offset:1806*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1806*0 + 3*4*FLEN/8, x4, x1, x2)

inst_603:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x54 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xaa7fffff; valaddr_reg:x3; val_offset:1809*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1809*0 + 3*4*FLEN/8, x4, x1, x2)

inst_604:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xbf800001; valaddr_reg:x3; val_offset:1812*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1812*0 + 3*4*FLEN/8, x4, x1, x2)

inst_605:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xbf800003; valaddr_reg:x3; val_offset:1815*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1815*0 + 3*4*FLEN/8, x4, x1, x2)

inst_606:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xbf800007; valaddr_reg:x3; val_offset:1818*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1818*0 + 3*4*FLEN/8, x4, x1, x2)

inst_607:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xbf999999; valaddr_reg:x3; val_offset:1821*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1821*0 + 3*4*FLEN/8, x4, x1, x2)

inst_608:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xbfa49249; valaddr_reg:x3; val_offset:1824*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1824*0 + 3*4*FLEN/8, x4, x1, x2)

inst_609:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xbfb33333; valaddr_reg:x3; val_offset:1827*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1827*0 + 3*4*FLEN/8, x4, x1, x2)

inst_610:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xbfb6db6d; valaddr_reg:x3; val_offset:1830*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1830*0 + 3*4*FLEN/8, x4, x1, x2)

inst_611:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xbfbbbbbb; valaddr_reg:x3; val_offset:1833*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1833*0 + 3*4*FLEN/8, x4, x1, x2)

inst_612:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xbfc44444; valaddr_reg:x3; val_offset:1836*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1836*0 + 3*4*FLEN/8, x4, x1, x2)

inst_613:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xbfcccccc; valaddr_reg:x3; val_offset:1839*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1839*0 + 3*4*FLEN/8, x4, x1, x2)

inst_614:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xbfdb6db6; valaddr_reg:x3; val_offset:1842*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1842*0 + 3*4*FLEN/8, x4, x1, x2)

inst_615:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xbfe66666; valaddr_reg:x3; val_offset:1845*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1845*0 + 3*4*FLEN/8, x4, x1, x2)

inst_616:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xbfedb6db; valaddr_reg:x3; val_offset:1848*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1848*0 + 3*4*FLEN/8, x4, x1, x2)

inst_617:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xbffffff8; valaddr_reg:x3; val_offset:1851*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1851*0 + 3*4*FLEN/8, x4, x1, x2)

inst_618:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xbffffffc; valaddr_reg:x3; val_offset:1854*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1854*0 + 3*4*FLEN/8, x4, x1, x2)

inst_619:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xbffffffe; valaddr_reg:x3; val_offset:1857*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1857*0 + 3*4*FLEN/8, x4, x1, x2)

inst_620:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x73530a and fs2 == 1 and fe2 == 0x05 and fm2 == 0x06ab00 and fs3 == 1 and fe3 == 0x3f and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c73530a; op2val:0x8286ab00;
op3val:0x9f800000; valaddr_reg:x3; val_offset:1860*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1860*0 + 3*4*FLEN/8, x4, x1, x2)

inst_621:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x73530a and fs2 == 1 and fe2 == 0x05 and fm2 == 0x06ab00 and fs3 == 1 and fe3 == 0x3f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c73530a; op2val:0x8286ab00;
op3val:0x9f800001; valaddr_reg:x3; val_offset:1863*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1863*0 + 3*4*FLEN/8, x4, x1, x2)

inst_622:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x73530a and fs2 == 1 and fe2 == 0x05 and fm2 == 0x06ab00 and fs3 == 1 and fe3 == 0x3f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c73530a; op2val:0x8286ab00;
op3val:0x9f800003; valaddr_reg:x3; val_offset:1866*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1866*0 + 3*4*FLEN/8, x4, x1, x2)

inst_623:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x73530a and fs2 == 1 and fe2 == 0x05 and fm2 == 0x06ab00 and fs3 == 1 and fe3 == 0x3f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c73530a; op2val:0x8286ab00;
op3val:0x9f800007; valaddr_reg:x3; val_offset:1869*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1869*0 + 3*4*FLEN/8, x4, x1, x2)

inst_624:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x73530a and fs2 == 1 and fe2 == 0x05 and fm2 == 0x06ab00 and fs3 == 1 and fe3 == 0x3f and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c73530a; op2val:0x8286ab00;
op3val:0x9f80000f; valaddr_reg:x3; val_offset:1872*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1872*0 + 3*4*FLEN/8, x4, x1, x2)

inst_625:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x73530a and fs2 == 1 and fe2 == 0x05 and fm2 == 0x06ab00 and fs3 == 1 and fe3 == 0x3f and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c73530a; op2val:0x8286ab00;
op3val:0x9f80001f; valaddr_reg:x3; val_offset:1875*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1875*0 + 3*4*FLEN/8, x4, x1, x2)

inst_626:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x73530a and fs2 == 1 and fe2 == 0x05 and fm2 == 0x06ab00 and fs3 == 1 and fe3 == 0x3f and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c73530a; op2val:0x8286ab00;
op3val:0x9f80003f; valaddr_reg:x3; val_offset:1878*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1878*0 + 3*4*FLEN/8, x4, x1, x2)

inst_627:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x73530a and fs2 == 1 and fe2 == 0x05 and fm2 == 0x06ab00 and fs3 == 1 and fe3 == 0x3f and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c73530a; op2val:0x8286ab00;
op3val:0x9f80007f; valaddr_reg:x3; val_offset:1881*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1881*0 + 3*4*FLEN/8, x4, x1, x2)

inst_628:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x73530a and fs2 == 1 and fe2 == 0x05 and fm2 == 0x06ab00 and fs3 == 1 and fe3 == 0x3f and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c73530a; op2val:0x8286ab00;
op3val:0x9f8000ff; valaddr_reg:x3; val_offset:1884*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1884*0 + 3*4*FLEN/8, x4, x1, x2)

inst_629:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x73530a and fs2 == 1 and fe2 == 0x05 and fm2 == 0x06ab00 and fs3 == 1 and fe3 == 0x3f and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c73530a; op2val:0x8286ab00;
op3val:0x9f8001ff; valaddr_reg:x3; val_offset:1887*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1887*0 + 3*4*FLEN/8, x4, x1, x2)

inst_630:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x73530a and fs2 == 1 and fe2 == 0x05 and fm2 == 0x06ab00 and fs3 == 1 and fe3 == 0x3f and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c73530a; op2val:0x8286ab00;
op3val:0x9f8003ff; valaddr_reg:x3; val_offset:1890*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1890*0 + 3*4*FLEN/8, x4, x1, x2)

inst_631:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x73530a and fs2 == 1 and fe2 == 0x05 and fm2 == 0x06ab00 and fs3 == 1 and fe3 == 0x3f and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c73530a; op2val:0x8286ab00;
op3val:0x9f8007ff; valaddr_reg:x3; val_offset:1893*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1893*0 + 3*4*FLEN/8, x4, x1, x2)

inst_632:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x73530a and fs2 == 1 and fe2 == 0x05 and fm2 == 0x06ab00 and fs3 == 1 and fe3 == 0x3f and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c73530a; op2val:0x8286ab00;
op3val:0x9f800fff; valaddr_reg:x3; val_offset:1896*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1896*0 + 3*4*FLEN/8, x4, x1, x2)

inst_633:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x73530a and fs2 == 1 and fe2 == 0x05 and fm2 == 0x06ab00 and fs3 == 1 and fe3 == 0x3f and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c73530a; op2val:0x8286ab00;
op3val:0x9f801fff; valaddr_reg:x3; val_offset:1899*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1899*0 + 3*4*FLEN/8, x4, x1, x2)

inst_634:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x73530a and fs2 == 1 and fe2 == 0x05 and fm2 == 0x06ab00 and fs3 == 1 and fe3 == 0x3f and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c73530a; op2val:0x8286ab00;
op3val:0x9f803fff; valaddr_reg:x3; val_offset:1902*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1902*0 + 3*4*FLEN/8, x4, x1, x2)

inst_635:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x73530a and fs2 == 1 and fe2 == 0x05 and fm2 == 0x06ab00 and fs3 == 1 and fe3 == 0x3f and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c73530a; op2val:0x8286ab00;
op3val:0x9f807fff; valaddr_reg:x3; val_offset:1905*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1905*0 + 3*4*FLEN/8, x4, x1, x2)

inst_636:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x73530a and fs2 == 1 and fe2 == 0x05 and fm2 == 0x06ab00 and fs3 == 1 and fe3 == 0x3f and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c73530a; op2val:0x8286ab00;
op3val:0x9f80ffff; valaddr_reg:x3; val_offset:1908*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1908*0 + 3*4*FLEN/8, x4, x1, x2)

inst_637:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x73530a and fs2 == 1 and fe2 == 0x05 and fm2 == 0x06ab00 and fs3 == 1 and fe3 == 0x3f and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c73530a; op2val:0x8286ab00;
op3val:0x9f81ffff; valaddr_reg:x3; val_offset:1911*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1911*0 + 3*4*FLEN/8, x4, x1, x2)

inst_638:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x73530a and fs2 == 1 and fe2 == 0x05 and fm2 == 0x06ab00 and fs3 == 1 and fe3 == 0x3f and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c73530a; op2val:0x8286ab00;
op3val:0x9f83ffff; valaddr_reg:x3; val_offset:1914*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1914*0 + 3*4*FLEN/8, x4, x1, x2)

inst_639:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x73530a and fs2 == 1 and fe2 == 0x05 and fm2 == 0x06ab00 and fs3 == 1 and fe3 == 0x3f and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c73530a; op2val:0x8286ab00;
op3val:0x9f87ffff; valaddr_reg:x3; val_offset:1917*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1917*0 + 3*4*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(2084668280,32,FLEN)
NAN_BOXED(3265877232,32,FLEN)
NAN_BOXED(4253089791,32,FLEN)
NAN_BOXED(2084668280,32,FLEN)
NAN_BOXED(3265877232,32,FLEN)
NAN_BOXED(4253155327,32,FLEN)
NAN_BOXED(2084668280,32,FLEN)
NAN_BOXED(3265877232,32,FLEN)
NAN_BOXED(4253286399,32,FLEN)
NAN_BOXED(2084668280,32,FLEN)
NAN_BOXED(3265877232,32,FLEN)
NAN_BOXED(4253548543,32,FLEN)
NAN_BOXED(2084668280,32,FLEN)
NAN_BOXED(3265877232,32,FLEN)
NAN_BOXED(4254072831,32,FLEN)
NAN_BOXED(2084668280,32,FLEN)
NAN_BOXED(3265877232,32,FLEN)
NAN_BOXED(4255121407,32,FLEN)
NAN_BOXED(2084668280,32,FLEN)
NAN_BOXED(3265877232,32,FLEN)
NAN_BOXED(4257218559,32,FLEN)
NAN_BOXED(2084668280,32,FLEN)
NAN_BOXED(3265877232,32,FLEN)
NAN_BOXED(4257218560,32,FLEN)
NAN_BOXED(2084668280,32,FLEN)
NAN_BOXED(3265877232,32,FLEN)
NAN_BOXED(4259315712,32,FLEN)
NAN_BOXED(2084668280,32,FLEN)
NAN_BOXED(3265877232,32,FLEN)
NAN_BOXED(4260364288,32,FLEN)
NAN_BOXED(2084668280,32,FLEN)
NAN_BOXED(3265877232,32,FLEN)
NAN_BOXED(4260888576,32,FLEN)
NAN_BOXED(2084668280,32,FLEN)
NAN_BOXED(3265877232,32,FLEN)
NAN_BOXED(4261150720,32,FLEN)
NAN_BOXED(2084668280,32,FLEN)
NAN_BOXED(3265877232,32,FLEN)
NAN_BOXED(4261281792,32,FLEN)
NAN_BOXED(2084668280,32,FLEN)
NAN_BOXED(3265877232,32,FLEN)
NAN_BOXED(4261347328,32,FLEN)
NAN_BOXED(2084668280,32,FLEN)
NAN_BOXED(3265877232,32,FLEN)
NAN_BOXED(4261380096,32,FLEN)
NAN_BOXED(2084668280,32,FLEN)
NAN_BOXED(3265877232,32,FLEN)
NAN_BOXED(4261396480,32,FLEN)
NAN_BOXED(2084668280,32,FLEN)
NAN_BOXED(3265877232,32,FLEN)
NAN_BOXED(4261404672,32,FLEN)
NAN_BOXED(2084668280,32,FLEN)
NAN_BOXED(3265877232,32,FLEN)
NAN_BOXED(4261408768,32,FLEN)
NAN_BOXED(2084668280,32,FLEN)
NAN_BOXED(3265877232,32,FLEN)
NAN_BOXED(4261410816,32,FLEN)
NAN_BOXED(2084668280,32,FLEN)
NAN_BOXED(3265877232,32,FLEN)
NAN_BOXED(4261411840,32,FLEN)
NAN_BOXED(2084668280,32,FLEN)
NAN_BOXED(3265877232,32,FLEN)
NAN_BOXED(4261412352,32,FLEN)
NAN_BOXED(2084668280,32,FLEN)
NAN_BOXED(3265877232,32,FLEN)
NAN_BOXED(4261412608,32,FLEN)
NAN_BOXED(2084668280,32,FLEN)
NAN_BOXED(3265877232,32,FLEN)
NAN_BOXED(4261412736,32,FLEN)
NAN_BOXED(2084668280,32,FLEN)
NAN_BOXED(3265877232,32,FLEN)
NAN_BOXED(4261412800,32,FLEN)
NAN_BOXED(2084668280,32,FLEN)
NAN_BOXED(3265877232,32,FLEN)
NAN_BOXED(4261412832,32,FLEN)
NAN_BOXED(2084668280,32,FLEN)
NAN_BOXED(3265877232,32,FLEN)
NAN_BOXED(4261412848,32,FLEN)
NAN_BOXED(2084668280,32,FLEN)
NAN_BOXED(3265877232,32,FLEN)
NAN_BOXED(4261412856,32,FLEN)
NAN_BOXED(2084668280,32,FLEN)
NAN_BOXED(3265877232,32,FLEN)
NAN_BOXED(4261412860,32,FLEN)
NAN_BOXED(2084668280,32,FLEN)
NAN_BOXED(3265877232,32,FLEN)
NAN_BOXED(4261412862,32,FLEN)
NAN_BOXED(2084668280,32,FLEN)
NAN_BOXED(3265877232,32,FLEN)
NAN_BOXED(4261412863,32,FLEN)
NAN_BOXED(2084668280,32,FLEN)
NAN_BOXED(3265877232,32,FLEN)
NAN_BOXED(4278190081,32,FLEN)
NAN_BOXED(2084668280,32,FLEN)
NAN_BOXED(3265877232,32,FLEN)
NAN_BOXED(4278190083,32,FLEN)
NAN_BOXED(2084668280,32,FLEN)
NAN_BOXED(3265877232,32,FLEN)
NAN_BOXED(4278190087,32,FLEN)
NAN_BOXED(2084668280,32,FLEN)
NAN_BOXED(3265877232,32,FLEN)
NAN_BOXED(4279867801,32,FLEN)
NAN_BOXED(2084668280,32,FLEN)
NAN_BOXED(3265877232,32,FLEN)
NAN_BOXED(4280586825,32,FLEN)
NAN_BOXED(2084668280,32,FLEN)
NAN_BOXED(3265877232,32,FLEN)
NAN_BOXED(4281545523,32,FLEN)
NAN_BOXED(2084668280,32,FLEN)
NAN_BOXED(3265877232,32,FLEN)
NAN_BOXED(4281785197,32,FLEN)
NAN_BOXED(2084668280,32,FLEN)
NAN_BOXED(3265877232,32,FLEN)
NAN_BOXED(4282104763,32,FLEN)
NAN_BOXED(2084668280,32,FLEN)
NAN_BOXED(3265877232,32,FLEN)
NAN_BOXED(4282664004,32,FLEN)
NAN_BOXED(2084668280,32,FLEN)
NAN_BOXED(3265877232,32,FLEN)
NAN_BOXED(4283223244,32,FLEN)
NAN_BOXED(2084668280,32,FLEN)
NAN_BOXED(3265877232,32,FLEN)
NAN_BOXED(4284181942,32,FLEN)
NAN_BOXED(2084668280,32,FLEN)
NAN_BOXED(3265877232,32,FLEN)
NAN_BOXED(4284900966,32,FLEN)
NAN_BOXED(2084668280,32,FLEN)
NAN_BOXED(3265877232,32,FLEN)
NAN_BOXED(4285380315,32,FLEN)
NAN_BOXED(2084668280,32,FLEN)
NAN_BOXED(3265877232,32,FLEN)
NAN_BOXED(4286578680,32,FLEN)
NAN_BOXED(2084668280,32,FLEN)
NAN_BOXED(3265877232,32,FLEN)
NAN_BOXED(4286578684,32,FLEN)
NAN_BOXED(2084668280,32,FLEN)
NAN_BOXED(3265877232,32,FLEN)
NAN_BOXED(4286578686,32,FLEN)
NAN_BOXED(2087675866,32,FLEN)
NAN_BOXED(2190008141,32,FLEN)
NAN_BOXED(2852126720,32,FLEN)
NAN_BOXED(2087675866,32,FLEN)
NAN_BOXED(2190008141,32,FLEN)
NAN_BOXED(2852126721,32,FLEN)
NAN_BOXED(2087675866,32,FLEN)
NAN_BOXED(2190008141,32,FLEN)
NAN_BOXED(2852126723,32,FLEN)
NAN_BOXED(2087675866,32,FLEN)
NAN_BOXED(2190008141,32,FLEN)
NAN_BOXED(2852126727,32,FLEN)
NAN_BOXED(2087675866,32,FLEN)
NAN_BOXED(2190008141,32,FLEN)
NAN_BOXED(2852126735,32,FLEN)
NAN_BOXED(2087675866,32,FLEN)
NAN_BOXED(2190008141,32,FLEN)
NAN_BOXED(2852126751,32,FLEN)
NAN_BOXED(2087675866,32,FLEN)
NAN_BOXED(2190008141,32,FLEN)
NAN_BOXED(2852126783,32,FLEN)
NAN_BOXED(2087675866,32,FLEN)
NAN_BOXED(2190008141,32,FLEN)
NAN_BOXED(2852126847,32,FLEN)
NAN_BOXED(2087675866,32,FLEN)
NAN_BOXED(2190008141,32,FLEN)
NAN_BOXED(2852126975,32,FLEN)
NAN_BOXED(2087675866,32,FLEN)
NAN_BOXED(2190008141,32,FLEN)
NAN_BOXED(2852127231,32,FLEN)
NAN_BOXED(2087675866,32,FLEN)
NAN_BOXED(2190008141,32,FLEN)
NAN_BOXED(2852127743,32,FLEN)
NAN_BOXED(2087675866,32,FLEN)
NAN_BOXED(2190008141,32,FLEN)
NAN_BOXED(2852128767,32,FLEN)
NAN_BOXED(2087675866,32,FLEN)
NAN_BOXED(2190008141,32,FLEN)
NAN_BOXED(2852130815,32,FLEN)
NAN_BOXED(2087675866,32,FLEN)
NAN_BOXED(2190008141,32,FLEN)
NAN_BOXED(2852134911,32,FLEN)
NAN_BOXED(2087675866,32,FLEN)
NAN_BOXED(2190008141,32,FLEN)
NAN_BOXED(2852143103,32,FLEN)
NAN_BOXED(2087675866,32,FLEN)
NAN_BOXED(2190008141,32,FLEN)
NAN_BOXED(2852159487,32,FLEN)
NAN_BOXED(2087675866,32,FLEN)
NAN_BOXED(2190008141,32,FLEN)
NAN_BOXED(2852192255,32,FLEN)
NAN_BOXED(2087675866,32,FLEN)
NAN_BOXED(2190008141,32,FLEN)
NAN_BOXED(2852257791,32,FLEN)
NAN_BOXED(2087675866,32,FLEN)
NAN_BOXED(2190008141,32,FLEN)
NAN_BOXED(2852388863,32,FLEN)
NAN_BOXED(2087675866,32,FLEN)
NAN_BOXED(2190008141,32,FLEN)
NAN_BOXED(2852651007,32,FLEN)
NAN_BOXED(2087675866,32,FLEN)
NAN_BOXED(2190008141,32,FLEN)
NAN_BOXED(2853175295,32,FLEN)
NAN_BOXED(2087675866,32,FLEN)
NAN_BOXED(2190008141,32,FLEN)
NAN_BOXED(2854223871,32,FLEN)
NAN_BOXED(2087675866,32,FLEN)
NAN_BOXED(2190008141,32,FLEN)
NAN_BOXED(2856321023,32,FLEN)
NAN_BOXED(2087675866,32,FLEN)
NAN_BOXED(2190008141,32,FLEN)
NAN_BOXED(2856321024,32,FLEN)
NAN_BOXED(2087675866,32,FLEN)
NAN_BOXED(2190008141,32,FLEN)
NAN_BOXED(2858418176,32,FLEN)
NAN_BOXED(2087675866,32,FLEN)
NAN_BOXED(2190008141,32,FLEN)
NAN_BOXED(2859466752,32,FLEN)
NAN_BOXED(2087675866,32,FLEN)
NAN_BOXED(2190008141,32,FLEN)
NAN_BOXED(2859991040,32,FLEN)
NAN_BOXED(2087675866,32,FLEN)
NAN_BOXED(2190008141,32,FLEN)
NAN_BOXED(2860253184,32,FLEN)
NAN_BOXED(2087675866,32,FLEN)
NAN_BOXED(2190008141,32,FLEN)
NAN_BOXED(2860384256,32,FLEN)
NAN_BOXED(2087675866,32,FLEN)
NAN_BOXED(2190008141,32,FLEN)
NAN_BOXED(2860449792,32,FLEN)
NAN_BOXED(2087675866,32,FLEN)
NAN_BOXED(2190008141,32,FLEN)
NAN_BOXED(2860482560,32,FLEN)
NAN_BOXED(2087675866,32,FLEN)
NAN_BOXED(2190008141,32,FLEN)
NAN_BOXED(2860498944,32,FLEN)
NAN_BOXED(2087675866,32,FLEN)
NAN_BOXED(2190008141,32,FLEN)
NAN_BOXED(2860507136,32,FLEN)
NAN_BOXED(2087675866,32,FLEN)
NAN_BOXED(2190008141,32,FLEN)
NAN_BOXED(2860511232,32,FLEN)
NAN_BOXED(2087675866,32,FLEN)
NAN_BOXED(2190008141,32,FLEN)
NAN_BOXED(2860513280,32,FLEN)
NAN_BOXED(2087675866,32,FLEN)
NAN_BOXED(2190008141,32,FLEN)
NAN_BOXED(2860514304,32,FLEN)
NAN_BOXED(2087675866,32,FLEN)
NAN_BOXED(2190008141,32,FLEN)
NAN_BOXED(2860514816,32,FLEN)
NAN_BOXED(2087675866,32,FLEN)
NAN_BOXED(2190008141,32,FLEN)
NAN_BOXED(2860515072,32,FLEN)
NAN_BOXED(2087675866,32,FLEN)
NAN_BOXED(2190008141,32,FLEN)
NAN_BOXED(2860515200,32,FLEN)
NAN_BOXED(2087675866,32,FLEN)
NAN_BOXED(2190008141,32,FLEN)
NAN_BOXED(2860515264,32,FLEN)
NAN_BOXED(2087675866,32,FLEN)
NAN_BOXED(2190008141,32,FLEN)
NAN_BOXED(2860515296,32,FLEN)
NAN_BOXED(2087675866,32,FLEN)
NAN_BOXED(2190008141,32,FLEN)
NAN_BOXED(2860515312,32,FLEN)
NAN_BOXED(2087675866,32,FLEN)
NAN_BOXED(2190008141,32,FLEN)
NAN_BOXED(2860515320,32,FLEN)
NAN_BOXED(2087675866,32,FLEN)
NAN_BOXED(2190008141,32,FLEN)
NAN_BOXED(2860515324,32,FLEN)
NAN_BOXED(2087675866,32,FLEN)
NAN_BOXED(2190008141,32,FLEN)
NAN_BOXED(2860515326,32,FLEN)
NAN_BOXED(2087675866,32,FLEN)
NAN_BOXED(2190008141,32,FLEN)
NAN_BOXED(2860515327,32,FLEN)
NAN_BOXED(2087675866,32,FLEN)
NAN_BOXED(2190008141,32,FLEN)
NAN_BOXED(3212836865,32,FLEN)
NAN_BOXED(2087675866,32,FLEN)
NAN_BOXED(2190008141,32,FLEN)
NAN_BOXED(3212836867,32,FLEN)
NAN_BOXED(2087675866,32,FLEN)
NAN_BOXED(2190008141,32,FLEN)
NAN_BOXED(3212836871,32,FLEN)
NAN_BOXED(2087675866,32,FLEN)
NAN_BOXED(2190008141,32,FLEN)
NAN_BOXED(3214514585,32,FLEN)
NAN_BOXED(2087675866,32,FLEN)
NAN_BOXED(2190008141,32,FLEN)
NAN_BOXED(3215233609,32,FLEN)
NAN_BOXED(2087675866,32,FLEN)
NAN_BOXED(2190008141,32,FLEN)
NAN_BOXED(3216192307,32,FLEN)
NAN_BOXED(2087675866,32,FLEN)
NAN_BOXED(2190008141,32,FLEN)
NAN_BOXED(3216431981,32,FLEN)
NAN_BOXED(2087675866,32,FLEN)
NAN_BOXED(2190008141,32,FLEN)
NAN_BOXED(3216751547,32,FLEN)
NAN_BOXED(2087675866,32,FLEN)
NAN_BOXED(2190008141,32,FLEN)
NAN_BOXED(3217310788,32,FLEN)
NAN_BOXED(2087675866,32,FLEN)
NAN_BOXED(2190008141,32,FLEN)
NAN_BOXED(3217870028,32,FLEN)
NAN_BOXED(2087675866,32,FLEN)
NAN_BOXED(2190008141,32,FLEN)
NAN_BOXED(3218828726,32,FLEN)
NAN_BOXED(2087675866,32,FLEN)
NAN_BOXED(2190008141,32,FLEN)
NAN_BOXED(3219547750,32,FLEN)
NAN_BOXED(2087675866,32,FLEN)
NAN_BOXED(2190008141,32,FLEN)
NAN_BOXED(3220027099,32,FLEN)
NAN_BOXED(2087675866,32,FLEN)
NAN_BOXED(2190008141,32,FLEN)
NAN_BOXED(3221225464,32,FLEN)
NAN_BOXED(2087675866,32,FLEN)
NAN_BOXED(2190008141,32,FLEN)
NAN_BOXED(3221225468,32,FLEN)
NAN_BOXED(2087675866,32,FLEN)
NAN_BOXED(2190008141,32,FLEN)
NAN_BOXED(3221225470,32,FLEN)
NAN_BOXED(2087932682,32,FLEN)
NAN_BOXED(2189863680,32,FLEN)
NAN_BOXED(2675965952,32,FLEN)
NAN_BOXED(2087932682,32,FLEN)
NAN_BOXED(2189863680,32,FLEN)
NAN_BOXED(2675965953,32,FLEN)
NAN_BOXED(2087932682,32,FLEN)
NAN_BOXED(2189863680,32,FLEN)
NAN_BOXED(2675965955,32,FLEN)
NAN_BOXED(2087932682,32,FLEN)
NAN_BOXED(2189863680,32,FLEN)
NAN_BOXED(2675965959,32,FLEN)
NAN_BOXED(2087932682,32,FLEN)
NAN_BOXED(2189863680,32,FLEN)
NAN_BOXED(2675965967,32,FLEN)
NAN_BOXED(2087932682,32,FLEN)
NAN_BOXED(2189863680,32,FLEN)
NAN_BOXED(2675965983,32,FLEN)
NAN_BOXED(2087932682,32,FLEN)
NAN_BOXED(2189863680,32,FLEN)
NAN_BOXED(2675966015,32,FLEN)
NAN_BOXED(2087932682,32,FLEN)
NAN_BOXED(2189863680,32,FLEN)
NAN_BOXED(2675966079,32,FLEN)
NAN_BOXED(2087932682,32,FLEN)
NAN_BOXED(2189863680,32,FLEN)
NAN_BOXED(2675966207,32,FLEN)
NAN_BOXED(2087932682,32,FLEN)
NAN_BOXED(2189863680,32,FLEN)
NAN_BOXED(2675966463,32,FLEN)
NAN_BOXED(2087932682,32,FLEN)
NAN_BOXED(2189863680,32,FLEN)
NAN_BOXED(2675966975,32,FLEN)
NAN_BOXED(2087932682,32,FLEN)
NAN_BOXED(2189863680,32,FLEN)
NAN_BOXED(2675967999,32,FLEN)
NAN_BOXED(2087932682,32,FLEN)
NAN_BOXED(2189863680,32,FLEN)
NAN_BOXED(2675970047,32,FLEN)
NAN_BOXED(2087932682,32,FLEN)
NAN_BOXED(2189863680,32,FLEN)
NAN_BOXED(2675974143,32,FLEN)
NAN_BOXED(2087932682,32,FLEN)
NAN_BOXED(2189863680,32,FLEN)
NAN_BOXED(2675982335,32,FLEN)
NAN_BOXED(2087932682,32,FLEN)
NAN_BOXED(2189863680,32,FLEN)
NAN_BOXED(2675998719,32,FLEN)
NAN_BOXED(2087932682,32,FLEN)
NAN_BOXED(2189863680,32,FLEN)
NAN_BOXED(2676031487,32,FLEN)
NAN_BOXED(2087932682,32,FLEN)
NAN_BOXED(2189863680,32,FLEN)
NAN_BOXED(2676097023,32,FLEN)
NAN_BOXED(2087932682,32,FLEN)
NAN_BOXED(2189863680,32,FLEN)
NAN_BOXED(2676228095,32,FLEN)
NAN_BOXED(2087932682,32,FLEN)
NAN_BOXED(2189863680,32,FLEN)
NAN_BOXED(2676490239,32,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
