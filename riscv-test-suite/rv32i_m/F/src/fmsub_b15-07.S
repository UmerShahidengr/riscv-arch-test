
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 14:18:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32F/fmsub.s.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.s instruction of the RISC-V RV32F_Zicsr,RV32FD_Zicsr,RV64F_Zicsr,RV64FD_Zicsr extension for the fmsub_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF_Zicsr,RV32IFD_Zicsr,RV64IF_Zicsr,RV64IFD_Zicsr,RV32EF_Zicsr,RV32EFD_Zicsr,RV64EF_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fmsub_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*F.*);def TEST_CASE_1=True;",fmsub_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_768:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x100827 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x638156 and fs3 == 0 and fe3 == 0x5b and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c900827; op2val:0x2638156;
op3val:0x2de00000; valaddr_reg:x3; val_offset:2304*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2304*0 + 3*6*FLEN/8, x4, x1, x2)

inst_769:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x100827 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x638156 and fs3 == 0 and fe3 == 0x5b and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c900827; op2val:0x2638156;
op3val:0x2df00000; valaddr_reg:x3; val_offset:2307*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2307*0 + 3*6*FLEN/8, x4, x1, x2)

inst_770:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x100827 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x638156 and fs3 == 0 and fe3 == 0x5b and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c900827; op2val:0x2638156;
op3val:0x2df80000; valaddr_reg:x3; val_offset:2310*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2310*0 + 3*6*FLEN/8, x4, x1, x2)

inst_771:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x100827 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x638156 and fs3 == 0 and fe3 == 0x5b and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c900827; op2val:0x2638156;
op3val:0x2dfc0000; valaddr_reg:x3; val_offset:2313*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2313*0 + 3*6*FLEN/8, x4, x1, x2)

inst_772:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x100827 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x638156 and fs3 == 0 and fe3 == 0x5b and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c900827; op2val:0x2638156;
op3val:0x2dfe0000; valaddr_reg:x3; val_offset:2316*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2316*0 + 3*6*FLEN/8, x4, x1, x2)

inst_773:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x100827 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x638156 and fs3 == 0 and fe3 == 0x5b and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c900827; op2val:0x2638156;
op3val:0x2dff0000; valaddr_reg:x3; val_offset:2319*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2319*0 + 3*6*FLEN/8, x4, x1, x2)

inst_774:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x100827 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x638156 and fs3 == 0 and fe3 == 0x5b and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c900827; op2val:0x2638156;
op3val:0x2dff8000; valaddr_reg:x3; val_offset:2322*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2322*0 + 3*6*FLEN/8, x4, x1, x2)

inst_775:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x100827 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x638156 and fs3 == 0 and fe3 == 0x5b and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c900827; op2val:0x2638156;
op3val:0x2dffc000; valaddr_reg:x3; val_offset:2325*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2325*0 + 3*6*FLEN/8, x4, x1, x2)

inst_776:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x100827 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x638156 and fs3 == 0 and fe3 == 0x5b and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c900827; op2val:0x2638156;
op3val:0x2dffe000; valaddr_reg:x3; val_offset:2328*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2328*0 + 3*6*FLEN/8, x4, x1, x2)

inst_777:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x100827 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x638156 and fs3 == 0 and fe3 == 0x5b and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c900827; op2val:0x2638156;
op3val:0x2dfff000; valaddr_reg:x3; val_offset:2331*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2331*0 + 3*6*FLEN/8, x4, x1, x2)

inst_778:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x100827 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x638156 and fs3 == 0 and fe3 == 0x5b and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c900827; op2val:0x2638156;
op3val:0x2dfff800; valaddr_reg:x3; val_offset:2334*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2334*0 + 3*6*FLEN/8, x4, x1, x2)

inst_779:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x100827 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x638156 and fs3 == 0 and fe3 == 0x5b and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c900827; op2val:0x2638156;
op3val:0x2dfffc00; valaddr_reg:x3; val_offset:2337*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2337*0 + 3*6*FLEN/8, x4, x1, x2)

inst_780:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x100827 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x638156 and fs3 == 0 and fe3 == 0x5b and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c900827; op2val:0x2638156;
op3val:0x2dfffe00; valaddr_reg:x3; val_offset:2340*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2340*0 + 3*6*FLEN/8, x4, x1, x2)

inst_781:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x100827 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x638156 and fs3 == 0 and fe3 == 0x5b and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c900827; op2val:0x2638156;
op3val:0x2dffff00; valaddr_reg:x3; val_offset:2343*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2343*0 + 3*6*FLEN/8, x4, x1, x2)

inst_782:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x100827 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x638156 and fs3 == 0 and fe3 == 0x5b and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c900827; op2val:0x2638156;
op3val:0x2dffff80; valaddr_reg:x3; val_offset:2346*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2346*0 + 3*6*FLEN/8, x4, x1, x2)

inst_783:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x100827 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x638156 and fs3 == 0 and fe3 == 0x5b and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c900827; op2val:0x2638156;
op3val:0x2dffffc0; valaddr_reg:x3; val_offset:2349*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2349*0 + 3*6*FLEN/8, x4, x1, x2)

inst_784:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x100827 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x638156 and fs3 == 0 and fe3 == 0x5b and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c900827; op2val:0x2638156;
op3val:0x2dffffe0; valaddr_reg:x3; val_offset:2352*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2352*0 + 3*6*FLEN/8, x4, x1, x2)

inst_785:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x100827 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x638156 and fs3 == 0 and fe3 == 0x5b and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c900827; op2val:0x2638156;
op3val:0x2dfffff0; valaddr_reg:x3; val_offset:2355*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2355*0 + 3*6*FLEN/8, x4, x1, x2)

inst_786:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x100827 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x638156 and fs3 == 0 and fe3 == 0x5b and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c900827; op2val:0x2638156;
op3val:0x2dfffff8; valaddr_reg:x3; val_offset:2358*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2358*0 + 3*6*FLEN/8, x4, x1, x2)

inst_787:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x100827 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x638156 and fs3 == 0 and fe3 == 0x5b and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c900827; op2val:0x2638156;
op3val:0x2dfffffc; valaddr_reg:x3; val_offset:2361*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2361*0 + 3*6*FLEN/8, x4, x1, x2)

inst_788:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x100827 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x638156 and fs3 == 0 and fe3 == 0x5b and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c900827; op2val:0x2638156;
op3val:0x2dfffffe; valaddr_reg:x3; val_offset:2364*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2364*0 + 3*6*FLEN/8, x4, x1, x2)

inst_789:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x100827 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x638156 and fs3 == 0 and fe3 == 0x5b and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c900827; op2val:0x2638156;
op3val:0x2dffffff; valaddr_reg:x3; val_offset:2367*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2367*0 + 3*6*FLEN/8, x4, x1, x2)

inst_790:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x100827 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x638156 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c900827; op2val:0x2638156;
op3val:0x3f800001; valaddr_reg:x3; val_offset:2370*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2370*0 + 3*6*FLEN/8, x4, x1, x2)

inst_791:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x100827 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x638156 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c900827; op2val:0x2638156;
op3val:0x3f800003; valaddr_reg:x3; val_offset:2373*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2373*0 + 3*6*FLEN/8, x4, x1, x2)

inst_792:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x100827 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x638156 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c900827; op2val:0x2638156;
op3val:0x3f800007; valaddr_reg:x3; val_offset:2376*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2376*0 + 3*6*FLEN/8, x4, x1, x2)

inst_793:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x100827 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x638156 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c900827; op2val:0x2638156;
op3val:0x3f999999; valaddr_reg:x3; val_offset:2379*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2379*0 + 3*6*FLEN/8, x4, x1, x2)

inst_794:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x100827 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x638156 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c900827; op2val:0x2638156;
op3val:0x3fa49249; valaddr_reg:x3; val_offset:2382*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2382*0 + 3*6*FLEN/8, x4, x1, x2)

inst_795:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x100827 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x638156 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c900827; op2val:0x2638156;
op3val:0x3fb33333; valaddr_reg:x3; val_offset:2385*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2385*0 + 3*6*FLEN/8, x4, x1, x2)

inst_796:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x100827 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x638156 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c900827; op2val:0x2638156;
op3val:0x3fb6db6d; valaddr_reg:x3; val_offset:2388*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2388*0 + 3*6*FLEN/8, x4, x1, x2)

inst_797:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x100827 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x638156 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c900827; op2val:0x2638156;
op3val:0x3fbbbbbb; valaddr_reg:x3; val_offset:2391*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2391*0 + 3*6*FLEN/8, x4, x1, x2)

inst_798:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x100827 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x638156 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c900827; op2val:0x2638156;
op3val:0x3fc44444; valaddr_reg:x3; val_offset:2394*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2394*0 + 3*6*FLEN/8, x4, x1, x2)

inst_799:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x100827 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x638156 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c900827; op2val:0x2638156;
op3val:0x3fcccccc; valaddr_reg:x3; val_offset:2397*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2397*0 + 3*6*FLEN/8, x4, x1, x2)

inst_800:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x100827 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x638156 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c900827; op2val:0x2638156;
op3val:0x3fdb6db6; valaddr_reg:x3; val_offset:2400*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2400*0 + 3*6*FLEN/8, x4, x1, x2)

inst_801:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x100827 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x638156 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c900827; op2val:0x2638156;
op3val:0x3fe66666; valaddr_reg:x3; val_offset:2403*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2403*0 + 3*6*FLEN/8, x4, x1, x2)

inst_802:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x100827 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x638156 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c900827; op2val:0x2638156;
op3val:0x3fedb6db; valaddr_reg:x3; val_offset:2406*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2406*0 + 3*6*FLEN/8, x4, x1, x2)

inst_803:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x100827 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x638156 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c900827; op2val:0x2638156;
op3val:0x3ffffff8; valaddr_reg:x3; val_offset:2409*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2409*0 + 3*6*FLEN/8, x4, x1, x2)

inst_804:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x100827 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x638156 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c900827; op2val:0x2638156;
op3val:0x3ffffffc; valaddr_reg:x3; val_offset:2412*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2412*0 + 3*6*FLEN/8, x4, x1, x2)

inst_805:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x100827 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x638156 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c900827; op2val:0x2638156;
op3val:0x3ffffffe; valaddr_reg:x3; val_offset:2415*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2415*0 + 3*6*FLEN/8, x4, x1, x2)

inst_806:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1077e0 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x62d165 and fs3 == 1 and fe3 == 0xd9 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9077e0; op2val:0xc262d165;
op3val:0xec800000; valaddr_reg:x3; val_offset:2418*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2418*0 + 3*6*FLEN/8, x4, x1, x2)

inst_807:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1077e0 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x62d165 and fs3 == 1 and fe3 == 0xd9 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9077e0; op2val:0xc262d165;
op3val:0xec800001; valaddr_reg:x3; val_offset:2421*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2421*0 + 3*6*FLEN/8, x4, x1, x2)

inst_808:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1077e0 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x62d165 and fs3 == 1 and fe3 == 0xd9 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9077e0; op2val:0xc262d165;
op3val:0xec800003; valaddr_reg:x3; val_offset:2424*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2424*0 + 3*6*FLEN/8, x4, x1, x2)

inst_809:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1077e0 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x62d165 and fs3 == 1 and fe3 == 0xd9 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9077e0; op2val:0xc262d165;
op3val:0xec800007; valaddr_reg:x3; val_offset:2427*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2427*0 + 3*6*FLEN/8, x4, x1, x2)

inst_810:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1077e0 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x62d165 and fs3 == 1 and fe3 == 0xd9 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9077e0; op2val:0xc262d165;
op3val:0xec80000f; valaddr_reg:x3; val_offset:2430*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2430*0 + 3*6*FLEN/8, x4, x1, x2)

inst_811:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1077e0 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x62d165 and fs3 == 1 and fe3 == 0xd9 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9077e0; op2val:0xc262d165;
op3val:0xec80001f; valaddr_reg:x3; val_offset:2433*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2433*0 + 3*6*FLEN/8, x4, x1, x2)

inst_812:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1077e0 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x62d165 and fs3 == 1 and fe3 == 0xd9 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9077e0; op2val:0xc262d165;
op3val:0xec80003f; valaddr_reg:x3; val_offset:2436*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2436*0 + 3*6*FLEN/8, x4, x1, x2)

inst_813:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1077e0 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x62d165 and fs3 == 1 and fe3 == 0xd9 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9077e0; op2val:0xc262d165;
op3val:0xec80007f; valaddr_reg:x3; val_offset:2439*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2439*0 + 3*6*FLEN/8, x4, x1, x2)

inst_814:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1077e0 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x62d165 and fs3 == 1 and fe3 == 0xd9 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9077e0; op2val:0xc262d165;
op3val:0xec8000ff; valaddr_reg:x3; val_offset:2442*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2442*0 + 3*6*FLEN/8, x4, x1, x2)

inst_815:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1077e0 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x62d165 and fs3 == 1 and fe3 == 0xd9 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9077e0; op2val:0xc262d165;
op3val:0xec8001ff; valaddr_reg:x3; val_offset:2445*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2445*0 + 3*6*FLEN/8, x4, x1, x2)

inst_816:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1077e0 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x62d165 and fs3 == 1 and fe3 == 0xd9 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9077e0; op2val:0xc262d165;
op3val:0xec8003ff; valaddr_reg:x3; val_offset:2448*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2448*0 + 3*6*FLEN/8, x4, x1, x2)

inst_817:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1077e0 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x62d165 and fs3 == 1 and fe3 == 0xd9 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9077e0; op2val:0xc262d165;
op3val:0xec8007ff; valaddr_reg:x3; val_offset:2451*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2451*0 + 3*6*FLEN/8, x4, x1, x2)

inst_818:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1077e0 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x62d165 and fs3 == 1 and fe3 == 0xd9 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9077e0; op2val:0xc262d165;
op3val:0xec800fff; valaddr_reg:x3; val_offset:2454*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2454*0 + 3*6*FLEN/8, x4, x1, x2)

inst_819:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1077e0 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x62d165 and fs3 == 1 and fe3 == 0xd9 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9077e0; op2val:0xc262d165;
op3val:0xec801fff; valaddr_reg:x3; val_offset:2457*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2457*0 + 3*6*FLEN/8, x4, x1, x2)

inst_820:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1077e0 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x62d165 and fs3 == 1 and fe3 == 0xd9 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9077e0; op2val:0xc262d165;
op3val:0xec803fff; valaddr_reg:x3; val_offset:2460*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2460*0 + 3*6*FLEN/8, x4, x1, x2)

inst_821:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1077e0 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x62d165 and fs3 == 1 and fe3 == 0xd9 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9077e0; op2val:0xc262d165;
op3val:0xec807fff; valaddr_reg:x3; val_offset:2463*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2463*0 + 3*6*FLEN/8, x4, x1, x2)

inst_822:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1077e0 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x62d165 and fs3 == 1 and fe3 == 0xd9 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9077e0; op2val:0xc262d165;
op3val:0xec80ffff; valaddr_reg:x3; val_offset:2466*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2466*0 + 3*6*FLEN/8, x4, x1, x2)

inst_823:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1077e0 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x62d165 and fs3 == 1 and fe3 == 0xd9 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9077e0; op2val:0xc262d165;
op3val:0xec81ffff; valaddr_reg:x3; val_offset:2469*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2469*0 + 3*6*FLEN/8, x4, x1, x2)

inst_824:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1077e0 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x62d165 and fs3 == 1 and fe3 == 0xd9 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9077e0; op2val:0xc262d165;
op3val:0xec83ffff; valaddr_reg:x3; val_offset:2472*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2472*0 + 3*6*FLEN/8, x4, x1, x2)

inst_825:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1077e0 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x62d165 and fs3 == 1 and fe3 == 0xd9 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9077e0; op2val:0xc262d165;
op3val:0xec87ffff; valaddr_reg:x3; val_offset:2475*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2475*0 + 3*6*FLEN/8, x4, x1, x2)

inst_826:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1077e0 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x62d165 and fs3 == 1 and fe3 == 0xd9 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9077e0; op2val:0xc262d165;
op3val:0xec8fffff; valaddr_reg:x3; val_offset:2478*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2478*0 + 3*6*FLEN/8, x4, x1, x2)

inst_827:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1077e0 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x62d165 and fs3 == 1 and fe3 == 0xd9 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9077e0; op2val:0xc262d165;
op3val:0xec9fffff; valaddr_reg:x3; val_offset:2481*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2481*0 + 3*6*FLEN/8, x4, x1, x2)

inst_828:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1077e0 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x62d165 and fs3 == 1 and fe3 == 0xd9 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9077e0; op2val:0xc262d165;
op3val:0xecbfffff; valaddr_reg:x3; val_offset:2484*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2484*0 + 3*6*FLEN/8, x4, x1, x2)

inst_829:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1077e0 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x62d165 and fs3 == 1 and fe3 == 0xd9 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9077e0; op2val:0xc262d165;
op3val:0xecc00000; valaddr_reg:x3; val_offset:2487*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2487*0 + 3*6*FLEN/8, x4, x1, x2)

inst_830:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1077e0 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x62d165 and fs3 == 1 and fe3 == 0xd9 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9077e0; op2val:0xc262d165;
op3val:0xece00000; valaddr_reg:x3; val_offset:2490*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2490*0 + 3*6*FLEN/8, x4, x1, x2)

inst_831:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1077e0 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x62d165 and fs3 == 1 and fe3 == 0xd9 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9077e0; op2val:0xc262d165;
op3val:0xecf00000; valaddr_reg:x3; val_offset:2493*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2493*0 + 3*6*FLEN/8, x4, x1, x2)

inst_832:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1077e0 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x62d165 and fs3 == 1 and fe3 == 0xd9 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9077e0; op2val:0xc262d165;
op3val:0xecf80000; valaddr_reg:x3; val_offset:2496*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2496*0 + 3*6*FLEN/8, x4, x1, x2)

inst_833:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1077e0 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x62d165 and fs3 == 1 and fe3 == 0xd9 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9077e0; op2val:0xc262d165;
op3val:0xecfc0000; valaddr_reg:x3; val_offset:2499*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2499*0 + 3*6*FLEN/8, x4, x1, x2)

inst_834:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1077e0 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x62d165 and fs3 == 1 and fe3 == 0xd9 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9077e0; op2val:0xc262d165;
op3val:0xecfe0000; valaddr_reg:x3; val_offset:2502*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2502*0 + 3*6*FLEN/8, x4, x1, x2)

inst_835:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1077e0 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x62d165 and fs3 == 1 and fe3 == 0xd9 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9077e0; op2val:0xc262d165;
op3val:0xecff0000; valaddr_reg:x3; val_offset:2505*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2505*0 + 3*6*FLEN/8, x4, x1, x2)

inst_836:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1077e0 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x62d165 and fs3 == 1 and fe3 == 0xd9 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9077e0; op2val:0xc262d165;
op3val:0xecff8000; valaddr_reg:x3; val_offset:2508*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2508*0 + 3*6*FLEN/8, x4, x1, x2)

inst_837:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1077e0 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x62d165 and fs3 == 1 and fe3 == 0xd9 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9077e0; op2val:0xc262d165;
op3val:0xecffc000; valaddr_reg:x3; val_offset:2511*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2511*0 + 3*6*FLEN/8, x4, x1, x2)

inst_838:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1077e0 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x62d165 and fs3 == 1 and fe3 == 0xd9 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9077e0; op2val:0xc262d165;
op3val:0xecffe000; valaddr_reg:x3; val_offset:2514*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2514*0 + 3*6*FLEN/8, x4, x1, x2)

inst_839:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1077e0 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x62d165 and fs3 == 1 and fe3 == 0xd9 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9077e0; op2val:0xc262d165;
op3val:0xecfff000; valaddr_reg:x3; val_offset:2517*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2517*0 + 3*6*FLEN/8, x4, x1, x2)

inst_840:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1077e0 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x62d165 and fs3 == 1 and fe3 == 0xd9 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9077e0; op2val:0xc262d165;
op3val:0xecfff800; valaddr_reg:x3; val_offset:2520*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2520*0 + 3*6*FLEN/8, x4, x1, x2)

inst_841:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1077e0 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x62d165 and fs3 == 1 and fe3 == 0xd9 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9077e0; op2val:0xc262d165;
op3val:0xecfffc00; valaddr_reg:x3; val_offset:2523*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2523*0 + 3*6*FLEN/8, x4, x1, x2)

inst_842:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1077e0 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x62d165 and fs3 == 1 and fe3 == 0xd9 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9077e0; op2val:0xc262d165;
op3val:0xecfffe00; valaddr_reg:x3; val_offset:2526*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2526*0 + 3*6*FLEN/8, x4, x1, x2)

inst_843:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1077e0 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x62d165 and fs3 == 1 and fe3 == 0xd9 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9077e0; op2val:0xc262d165;
op3val:0xecffff00; valaddr_reg:x3; val_offset:2529*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2529*0 + 3*6*FLEN/8, x4, x1, x2)

inst_844:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1077e0 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x62d165 and fs3 == 1 and fe3 == 0xd9 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9077e0; op2val:0xc262d165;
op3val:0xecffff80; valaddr_reg:x3; val_offset:2532*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2532*0 + 3*6*FLEN/8, x4, x1, x2)

inst_845:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1077e0 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x62d165 and fs3 == 1 and fe3 == 0xd9 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9077e0; op2val:0xc262d165;
op3val:0xecffffc0; valaddr_reg:x3; val_offset:2535*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2535*0 + 3*6*FLEN/8, x4, x1, x2)

inst_846:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1077e0 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x62d165 and fs3 == 1 and fe3 == 0xd9 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9077e0; op2val:0xc262d165;
op3val:0xecffffe0; valaddr_reg:x3; val_offset:2538*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2538*0 + 3*6*FLEN/8, x4, x1, x2)

inst_847:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1077e0 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x62d165 and fs3 == 1 and fe3 == 0xd9 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9077e0; op2val:0xc262d165;
op3val:0xecfffff0; valaddr_reg:x3; val_offset:2541*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2541*0 + 3*6*FLEN/8, x4, x1, x2)

inst_848:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1077e0 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x62d165 and fs3 == 1 and fe3 == 0xd9 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9077e0; op2val:0xc262d165;
op3val:0xecfffff8; valaddr_reg:x3; val_offset:2544*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2544*0 + 3*6*FLEN/8, x4, x1, x2)

inst_849:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1077e0 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x62d165 and fs3 == 1 and fe3 == 0xd9 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9077e0; op2val:0xc262d165;
op3val:0xecfffffc; valaddr_reg:x3; val_offset:2547*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2547*0 + 3*6*FLEN/8, x4, x1, x2)

inst_850:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1077e0 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x62d165 and fs3 == 1 and fe3 == 0xd9 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9077e0; op2val:0xc262d165;
op3val:0xecfffffe; valaddr_reg:x3; val_offset:2550*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2550*0 + 3*6*FLEN/8, x4, x1, x2)

inst_851:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1077e0 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x62d165 and fs3 == 1 and fe3 == 0xd9 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9077e0; op2val:0xc262d165;
op3val:0xecffffff; valaddr_reg:x3; val_offset:2553*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2553*0 + 3*6*FLEN/8, x4, x1, x2)

inst_852:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1077e0 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x62d165 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9077e0; op2val:0xc262d165;
op3val:0xff000001; valaddr_reg:x3; val_offset:2556*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2556*0 + 3*6*FLEN/8, x4, x1, x2)

inst_853:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1077e0 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x62d165 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9077e0; op2val:0xc262d165;
op3val:0xff000003; valaddr_reg:x3; val_offset:2559*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2559*0 + 3*6*FLEN/8, x4, x1, x2)

inst_854:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1077e0 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x62d165 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9077e0; op2val:0xc262d165;
op3val:0xff000007; valaddr_reg:x3; val_offset:2562*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2562*0 + 3*6*FLEN/8, x4, x1, x2)

inst_855:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1077e0 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x62d165 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9077e0; op2val:0xc262d165;
op3val:0xff199999; valaddr_reg:x3; val_offset:2565*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2565*0 + 3*6*FLEN/8, x4, x1, x2)

inst_856:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1077e0 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x62d165 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9077e0; op2val:0xc262d165;
op3val:0xff249249; valaddr_reg:x3; val_offset:2568*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2568*0 + 3*6*FLEN/8, x4, x1, x2)

inst_857:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1077e0 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x62d165 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9077e0; op2val:0xc262d165;
op3val:0xff333333; valaddr_reg:x3; val_offset:2571*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2571*0 + 3*6*FLEN/8, x4, x1, x2)

inst_858:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1077e0 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x62d165 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9077e0; op2val:0xc262d165;
op3val:0xff36db6d; valaddr_reg:x3; val_offset:2574*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2574*0 + 3*6*FLEN/8, x4, x1, x2)

inst_859:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1077e0 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x62d165 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9077e0; op2val:0xc262d165;
op3val:0xff3bbbbb; valaddr_reg:x3; val_offset:2577*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2577*0 + 3*6*FLEN/8, x4, x1, x2)

inst_860:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1077e0 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x62d165 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9077e0; op2val:0xc262d165;
op3val:0xff444444; valaddr_reg:x3; val_offset:2580*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2580*0 + 3*6*FLEN/8, x4, x1, x2)

inst_861:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1077e0 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x62d165 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9077e0; op2val:0xc262d165;
op3val:0xff4ccccc; valaddr_reg:x3; val_offset:2583*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2583*0 + 3*6*FLEN/8, x4, x1, x2)

inst_862:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1077e0 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x62d165 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9077e0; op2val:0xc262d165;
op3val:0xff5b6db6; valaddr_reg:x3; val_offset:2586*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2586*0 + 3*6*FLEN/8, x4, x1, x2)

inst_863:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1077e0 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x62d165 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9077e0; op2val:0xc262d165;
op3val:0xff666666; valaddr_reg:x3; val_offset:2589*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2589*0 + 3*6*FLEN/8, x4, x1, x2)

inst_864:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1077e0 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x62d165 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9077e0; op2val:0xc262d165;
op3val:0xff6db6db; valaddr_reg:x3; val_offset:2592*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2592*0 + 3*6*FLEN/8, x4, x1, x2)

inst_865:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1077e0 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x62d165 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9077e0; op2val:0xc262d165;
op3val:0xff7ffff8; valaddr_reg:x3; val_offset:2595*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2595*0 + 3*6*FLEN/8, x4, x1, x2)

inst_866:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1077e0 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x62d165 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9077e0; op2val:0xc262d165;
op3val:0xff7ffffc; valaddr_reg:x3; val_offset:2598*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2598*0 + 3*6*FLEN/8, x4, x1, x2)

inst_867:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1077e0 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x62d165 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9077e0; op2val:0xc262d165;
op3val:0xff7ffffe; valaddr_reg:x3; val_offset:2601*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2601*0 + 3*6*FLEN/8, x4, x1, x2)

inst_868:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x129583 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c929583; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:2604*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2604*0 + 3*6*FLEN/8, x4, x1, x2)

inst_869:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x129583 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c929583; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:2607*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2607*0 + 3*6*FLEN/8, x4, x1, x2)

inst_870:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x129583 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c929583; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:2610*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2610*0 + 3*6*FLEN/8, x4, x1, x2)

inst_871:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x129583 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c929583; op2val:0x0;
op3val:0x199999; valaddr_reg:x3; val_offset:2613*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2613*0 + 3*6*FLEN/8, x4, x1, x2)

inst_872:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x129583 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c929583; op2val:0x0;
op3val:0x249249; valaddr_reg:x3; val_offset:2616*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2616*0 + 3*6*FLEN/8, x4, x1, x2)

inst_873:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x129583 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c929583; op2val:0x0;
op3val:0x333333; valaddr_reg:x3; val_offset:2619*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2619*0 + 3*6*FLEN/8, x4, x1, x2)

inst_874:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x129583 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c929583; op2val:0x0;
op3val:0x36db6d; valaddr_reg:x3; val_offset:2622*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2622*0 + 3*6*FLEN/8, x4, x1, x2)

inst_875:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x129583 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c929583; op2val:0x0;
op3val:0x3bbbbb; valaddr_reg:x3; val_offset:2625*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2625*0 + 3*6*FLEN/8, x4, x1, x2)

inst_876:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x129583 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c929583; op2val:0x0;
op3val:0x444444; valaddr_reg:x3; val_offset:2628*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2628*0 + 3*6*FLEN/8, x4, x1, x2)

inst_877:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x129583 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c929583; op2val:0x0;
op3val:0x4ccccc; valaddr_reg:x3; val_offset:2631*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2631*0 + 3*6*FLEN/8, x4, x1, x2)

inst_878:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x129583 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c929583; op2val:0x0;
op3val:0x5b6db6; valaddr_reg:x3; val_offset:2634*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2634*0 + 3*6*FLEN/8, x4, x1, x2)

inst_879:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x129583 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c929583; op2val:0x0;
op3val:0x666666; valaddr_reg:x3; val_offset:2637*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2637*0 + 3*6*FLEN/8, x4, x1, x2)

inst_880:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x129583 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c929583; op2val:0x0;
op3val:0x6db6db; valaddr_reg:x3; val_offset:2640*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2640*0 + 3*6*FLEN/8, x4, x1, x2)

inst_881:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x129583 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c929583; op2val:0x0;
op3val:0x7ffff8; valaddr_reg:x3; val_offset:2643*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2643*0 + 3*6*FLEN/8, x4, x1, x2)

inst_882:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x129583 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c929583; op2val:0x0;
op3val:0x7ffffc; valaddr_reg:x3; val_offset:2646*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2646*0 + 3*6*FLEN/8, x4, x1, x2)

inst_883:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x129583 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c929583; op2val:0x0;
op3val:0x7ffffe; valaddr_reg:x3; val_offset:2649*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2649*0 + 3*6*FLEN/8, x4, x1, x2)

inst_884:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x129583 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1a and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c929583; op2val:0x0;
op3val:0xd000000; valaddr_reg:x3; val_offset:2652*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2652*0 + 3*6*FLEN/8, x4, x1, x2)

inst_885:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x129583 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1a and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c929583; op2val:0x0;
op3val:0xd000001; valaddr_reg:x3; val_offset:2655*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2655*0 + 3*6*FLEN/8, x4, x1, x2)

inst_886:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x129583 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1a and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c929583; op2val:0x0;
op3val:0xd000003; valaddr_reg:x3; val_offset:2658*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2658*0 + 3*6*FLEN/8, x4, x1, x2)

inst_887:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x129583 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1a and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c929583; op2val:0x0;
op3val:0xd000007; valaddr_reg:x3; val_offset:2661*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2661*0 + 3*6*FLEN/8, x4, x1, x2)

inst_888:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x129583 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1a and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c929583; op2val:0x0;
op3val:0xd00000f; valaddr_reg:x3; val_offset:2664*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2664*0 + 3*6*FLEN/8, x4, x1, x2)

inst_889:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x129583 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1a and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c929583; op2val:0x0;
op3val:0xd00001f; valaddr_reg:x3; val_offset:2667*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2667*0 + 3*6*FLEN/8, x4, x1, x2)

inst_890:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x129583 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1a and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c929583; op2val:0x0;
op3val:0xd00003f; valaddr_reg:x3; val_offset:2670*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2670*0 + 3*6*FLEN/8, x4, x1, x2)

inst_891:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x129583 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1a and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c929583; op2val:0x0;
op3val:0xd00007f; valaddr_reg:x3; val_offset:2673*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2673*0 + 3*6*FLEN/8, x4, x1, x2)

inst_892:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x129583 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1a and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c929583; op2val:0x0;
op3val:0xd0000ff; valaddr_reg:x3; val_offset:2676*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2676*0 + 3*6*FLEN/8, x4, x1, x2)

inst_893:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x129583 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1a and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c929583; op2val:0x0;
op3val:0xd0001ff; valaddr_reg:x3; val_offset:2679*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2679*0 + 3*6*FLEN/8, x4, x1, x2)

inst_894:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x129583 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1a and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c929583; op2val:0x0;
op3val:0xd0003ff; valaddr_reg:x3; val_offset:2682*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2682*0 + 3*6*FLEN/8, x4, x1, x2)

inst_895:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x129583 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1a and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c929583; op2val:0x0;
op3val:0xd0007ff; valaddr_reg:x3; val_offset:2685*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2685*0 + 3*6*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(2089814055,32,FLEN)
NAN_BOXED(40075606,32,FLEN)
NAN_BOXED(769654784,32,FLEN)
NAN_BOXED(2089814055,32,FLEN)
NAN_BOXED(40075606,32,FLEN)
NAN_BOXED(770703360,32,FLEN)
NAN_BOXED(2089814055,32,FLEN)
NAN_BOXED(40075606,32,FLEN)
NAN_BOXED(771227648,32,FLEN)
NAN_BOXED(2089814055,32,FLEN)
NAN_BOXED(40075606,32,FLEN)
NAN_BOXED(771489792,32,FLEN)
NAN_BOXED(2089814055,32,FLEN)
NAN_BOXED(40075606,32,FLEN)
NAN_BOXED(771620864,32,FLEN)
NAN_BOXED(2089814055,32,FLEN)
NAN_BOXED(40075606,32,FLEN)
NAN_BOXED(771686400,32,FLEN)
NAN_BOXED(2089814055,32,FLEN)
NAN_BOXED(40075606,32,FLEN)
NAN_BOXED(771719168,32,FLEN)
NAN_BOXED(2089814055,32,FLEN)
NAN_BOXED(40075606,32,FLEN)
NAN_BOXED(771735552,32,FLEN)
NAN_BOXED(2089814055,32,FLEN)
NAN_BOXED(40075606,32,FLEN)
NAN_BOXED(771743744,32,FLEN)
NAN_BOXED(2089814055,32,FLEN)
NAN_BOXED(40075606,32,FLEN)
NAN_BOXED(771747840,32,FLEN)
NAN_BOXED(2089814055,32,FLEN)
NAN_BOXED(40075606,32,FLEN)
NAN_BOXED(771749888,32,FLEN)
NAN_BOXED(2089814055,32,FLEN)
NAN_BOXED(40075606,32,FLEN)
NAN_BOXED(771750912,32,FLEN)
NAN_BOXED(2089814055,32,FLEN)
NAN_BOXED(40075606,32,FLEN)
NAN_BOXED(771751424,32,FLEN)
NAN_BOXED(2089814055,32,FLEN)
NAN_BOXED(40075606,32,FLEN)
NAN_BOXED(771751680,32,FLEN)
NAN_BOXED(2089814055,32,FLEN)
NAN_BOXED(40075606,32,FLEN)
NAN_BOXED(771751808,32,FLEN)
NAN_BOXED(2089814055,32,FLEN)
NAN_BOXED(40075606,32,FLEN)
NAN_BOXED(771751872,32,FLEN)
NAN_BOXED(2089814055,32,FLEN)
NAN_BOXED(40075606,32,FLEN)
NAN_BOXED(771751904,32,FLEN)
NAN_BOXED(2089814055,32,FLEN)
NAN_BOXED(40075606,32,FLEN)
NAN_BOXED(771751920,32,FLEN)
NAN_BOXED(2089814055,32,FLEN)
NAN_BOXED(40075606,32,FLEN)
NAN_BOXED(771751928,32,FLEN)
NAN_BOXED(2089814055,32,FLEN)
NAN_BOXED(40075606,32,FLEN)
NAN_BOXED(771751932,32,FLEN)
NAN_BOXED(2089814055,32,FLEN)
NAN_BOXED(40075606,32,FLEN)
NAN_BOXED(771751934,32,FLEN)
NAN_BOXED(2089814055,32,FLEN)
NAN_BOXED(40075606,32,FLEN)
NAN_BOXED(771751935,32,FLEN)
NAN_BOXED(2089814055,32,FLEN)
NAN_BOXED(40075606,32,FLEN)
NAN_BOXED(1065353217,32,FLEN)
NAN_BOXED(2089814055,32,FLEN)
NAN_BOXED(40075606,32,FLEN)
NAN_BOXED(1065353219,32,FLEN)
NAN_BOXED(2089814055,32,FLEN)
NAN_BOXED(40075606,32,FLEN)
NAN_BOXED(1065353223,32,FLEN)
NAN_BOXED(2089814055,32,FLEN)
NAN_BOXED(40075606,32,FLEN)
NAN_BOXED(1067030937,32,FLEN)
NAN_BOXED(2089814055,32,FLEN)
NAN_BOXED(40075606,32,FLEN)
NAN_BOXED(1067749961,32,FLEN)
NAN_BOXED(2089814055,32,FLEN)
NAN_BOXED(40075606,32,FLEN)
NAN_BOXED(1068708659,32,FLEN)
NAN_BOXED(2089814055,32,FLEN)
NAN_BOXED(40075606,32,FLEN)
NAN_BOXED(1068948333,32,FLEN)
NAN_BOXED(2089814055,32,FLEN)
NAN_BOXED(40075606,32,FLEN)
NAN_BOXED(1069267899,32,FLEN)
NAN_BOXED(2089814055,32,FLEN)
NAN_BOXED(40075606,32,FLEN)
NAN_BOXED(1069827140,32,FLEN)
NAN_BOXED(2089814055,32,FLEN)
NAN_BOXED(40075606,32,FLEN)
NAN_BOXED(1070386380,32,FLEN)
NAN_BOXED(2089814055,32,FLEN)
NAN_BOXED(40075606,32,FLEN)
NAN_BOXED(1071345078,32,FLEN)
NAN_BOXED(2089814055,32,FLEN)
NAN_BOXED(40075606,32,FLEN)
NAN_BOXED(1072064102,32,FLEN)
NAN_BOXED(2089814055,32,FLEN)
NAN_BOXED(40075606,32,FLEN)
NAN_BOXED(1072543451,32,FLEN)
NAN_BOXED(2089814055,32,FLEN)
NAN_BOXED(40075606,32,FLEN)
NAN_BOXED(1073741816,32,FLEN)
NAN_BOXED(2089814055,32,FLEN)
NAN_BOXED(40075606,32,FLEN)
NAN_BOXED(1073741820,32,FLEN)
NAN_BOXED(2089814055,32,FLEN)
NAN_BOXED(40075606,32,FLEN)
NAN_BOXED(1073741822,32,FLEN)
NAN_BOXED(2089842656,32,FLEN)
NAN_BOXED(3261256037,32,FLEN)
NAN_BOXED(3967811584,32,FLEN)
NAN_BOXED(2089842656,32,FLEN)
NAN_BOXED(3261256037,32,FLEN)
NAN_BOXED(3967811585,32,FLEN)
NAN_BOXED(2089842656,32,FLEN)
NAN_BOXED(3261256037,32,FLEN)
NAN_BOXED(3967811587,32,FLEN)
NAN_BOXED(2089842656,32,FLEN)
NAN_BOXED(3261256037,32,FLEN)
NAN_BOXED(3967811591,32,FLEN)
NAN_BOXED(2089842656,32,FLEN)
NAN_BOXED(3261256037,32,FLEN)
NAN_BOXED(3967811599,32,FLEN)
NAN_BOXED(2089842656,32,FLEN)
NAN_BOXED(3261256037,32,FLEN)
NAN_BOXED(3967811615,32,FLEN)
NAN_BOXED(2089842656,32,FLEN)
NAN_BOXED(3261256037,32,FLEN)
NAN_BOXED(3967811647,32,FLEN)
NAN_BOXED(2089842656,32,FLEN)
NAN_BOXED(3261256037,32,FLEN)
NAN_BOXED(3967811711,32,FLEN)
NAN_BOXED(2089842656,32,FLEN)
NAN_BOXED(3261256037,32,FLEN)
NAN_BOXED(3967811839,32,FLEN)
NAN_BOXED(2089842656,32,FLEN)
NAN_BOXED(3261256037,32,FLEN)
NAN_BOXED(3967812095,32,FLEN)
NAN_BOXED(2089842656,32,FLEN)
NAN_BOXED(3261256037,32,FLEN)
NAN_BOXED(3967812607,32,FLEN)
NAN_BOXED(2089842656,32,FLEN)
NAN_BOXED(3261256037,32,FLEN)
NAN_BOXED(3967813631,32,FLEN)
NAN_BOXED(2089842656,32,FLEN)
NAN_BOXED(3261256037,32,FLEN)
NAN_BOXED(3967815679,32,FLEN)
NAN_BOXED(2089842656,32,FLEN)
NAN_BOXED(3261256037,32,FLEN)
NAN_BOXED(3967819775,32,FLEN)
NAN_BOXED(2089842656,32,FLEN)
NAN_BOXED(3261256037,32,FLEN)
NAN_BOXED(3967827967,32,FLEN)
NAN_BOXED(2089842656,32,FLEN)
NAN_BOXED(3261256037,32,FLEN)
NAN_BOXED(3967844351,32,FLEN)
NAN_BOXED(2089842656,32,FLEN)
NAN_BOXED(3261256037,32,FLEN)
NAN_BOXED(3967877119,32,FLEN)
NAN_BOXED(2089842656,32,FLEN)
NAN_BOXED(3261256037,32,FLEN)
NAN_BOXED(3967942655,32,FLEN)
NAN_BOXED(2089842656,32,FLEN)
NAN_BOXED(3261256037,32,FLEN)
NAN_BOXED(3968073727,32,FLEN)
NAN_BOXED(2089842656,32,FLEN)
NAN_BOXED(3261256037,32,FLEN)
NAN_BOXED(3968335871,32,FLEN)
NAN_BOXED(2089842656,32,FLEN)
NAN_BOXED(3261256037,32,FLEN)
NAN_BOXED(3968860159,32,FLEN)
NAN_BOXED(2089842656,32,FLEN)
NAN_BOXED(3261256037,32,FLEN)
NAN_BOXED(3969908735,32,FLEN)
NAN_BOXED(2089842656,32,FLEN)
NAN_BOXED(3261256037,32,FLEN)
NAN_BOXED(3972005887,32,FLEN)
NAN_BOXED(2089842656,32,FLEN)
NAN_BOXED(3261256037,32,FLEN)
NAN_BOXED(3972005888,32,FLEN)
NAN_BOXED(2089842656,32,FLEN)
NAN_BOXED(3261256037,32,FLEN)
NAN_BOXED(3974103040,32,FLEN)
NAN_BOXED(2089842656,32,FLEN)
NAN_BOXED(3261256037,32,FLEN)
NAN_BOXED(3975151616,32,FLEN)
NAN_BOXED(2089842656,32,FLEN)
NAN_BOXED(3261256037,32,FLEN)
NAN_BOXED(3975675904,32,FLEN)
NAN_BOXED(2089842656,32,FLEN)
NAN_BOXED(3261256037,32,FLEN)
NAN_BOXED(3975938048,32,FLEN)
NAN_BOXED(2089842656,32,FLEN)
NAN_BOXED(3261256037,32,FLEN)
NAN_BOXED(3976069120,32,FLEN)
NAN_BOXED(2089842656,32,FLEN)
NAN_BOXED(3261256037,32,FLEN)
NAN_BOXED(3976134656,32,FLEN)
NAN_BOXED(2089842656,32,FLEN)
NAN_BOXED(3261256037,32,FLEN)
NAN_BOXED(3976167424,32,FLEN)
NAN_BOXED(2089842656,32,FLEN)
NAN_BOXED(3261256037,32,FLEN)
NAN_BOXED(3976183808,32,FLEN)
NAN_BOXED(2089842656,32,FLEN)
NAN_BOXED(3261256037,32,FLEN)
NAN_BOXED(3976192000,32,FLEN)
NAN_BOXED(2089842656,32,FLEN)
NAN_BOXED(3261256037,32,FLEN)
NAN_BOXED(3976196096,32,FLEN)
NAN_BOXED(2089842656,32,FLEN)
NAN_BOXED(3261256037,32,FLEN)
NAN_BOXED(3976198144,32,FLEN)
NAN_BOXED(2089842656,32,FLEN)
NAN_BOXED(3261256037,32,FLEN)
NAN_BOXED(3976199168,32,FLEN)
NAN_BOXED(2089842656,32,FLEN)
NAN_BOXED(3261256037,32,FLEN)
NAN_BOXED(3976199680,32,FLEN)
NAN_BOXED(2089842656,32,FLEN)
NAN_BOXED(3261256037,32,FLEN)
NAN_BOXED(3976199936,32,FLEN)
NAN_BOXED(2089842656,32,FLEN)
NAN_BOXED(3261256037,32,FLEN)
NAN_BOXED(3976200064,32,FLEN)
NAN_BOXED(2089842656,32,FLEN)
NAN_BOXED(3261256037,32,FLEN)
NAN_BOXED(3976200128,32,FLEN)
NAN_BOXED(2089842656,32,FLEN)
NAN_BOXED(3261256037,32,FLEN)
NAN_BOXED(3976200160,32,FLEN)
NAN_BOXED(2089842656,32,FLEN)
NAN_BOXED(3261256037,32,FLEN)
NAN_BOXED(3976200176,32,FLEN)
NAN_BOXED(2089842656,32,FLEN)
NAN_BOXED(3261256037,32,FLEN)
NAN_BOXED(3976200184,32,FLEN)
NAN_BOXED(2089842656,32,FLEN)
NAN_BOXED(3261256037,32,FLEN)
NAN_BOXED(3976200188,32,FLEN)
NAN_BOXED(2089842656,32,FLEN)
NAN_BOXED(3261256037,32,FLEN)
NAN_BOXED(3976200190,32,FLEN)
NAN_BOXED(2089842656,32,FLEN)
NAN_BOXED(3261256037,32,FLEN)
NAN_BOXED(3976200191,32,FLEN)
NAN_BOXED(2089842656,32,FLEN)
NAN_BOXED(3261256037,32,FLEN)
NAN_BOXED(4278190081,32,FLEN)
NAN_BOXED(2089842656,32,FLEN)
NAN_BOXED(3261256037,32,FLEN)
NAN_BOXED(4278190083,32,FLEN)
NAN_BOXED(2089842656,32,FLEN)
NAN_BOXED(3261256037,32,FLEN)
NAN_BOXED(4278190087,32,FLEN)
NAN_BOXED(2089842656,32,FLEN)
NAN_BOXED(3261256037,32,FLEN)
NAN_BOXED(4279867801,32,FLEN)
NAN_BOXED(2089842656,32,FLEN)
NAN_BOXED(3261256037,32,FLEN)
NAN_BOXED(4280586825,32,FLEN)
NAN_BOXED(2089842656,32,FLEN)
NAN_BOXED(3261256037,32,FLEN)
NAN_BOXED(4281545523,32,FLEN)
NAN_BOXED(2089842656,32,FLEN)
NAN_BOXED(3261256037,32,FLEN)
NAN_BOXED(4281785197,32,FLEN)
NAN_BOXED(2089842656,32,FLEN)
NAN_BOXED(3261256037,32,FLEN)
NAN_BOXED(4282104763,32,FLEN)
NAN_BOXED(2089842656,32,FLEN)
NAN_BOXED(3261256037,32,FLEN)
NAN_BOXED(4282664004,32,FLEN)
NAN_BOXED(2089842656,32,FLEN)
NAN_BOXED(3261256037,32,FLEN)
NAN_BOXED(4283223244,32,FLEN)
NAN_BOXED(2089842656,32,FLEN)
NAN_BOXED(3261256037,32,FLEN)
NAN_BOXED(4284181942,32,FLEN)
NAN_BOXED(2089842656,32,FLEN)
NAN_BOXED(3261256037,32,FLEN)
NAN_BOXED(4284900966,32,FLEN)
NAN_BOXED(2089842656,32,FLEN)
NAN_BOXED(3261256037,32,FLEN)
NAN_BOXED(4285380315,32,FLEN)
NAN_BOXED(2089842656,32,FLEN)
NAN_BOXED(3261256037,32,FLEN)
NAN_BOXED(4286578680,32,FLEN)
NAN_BOXED(2089842656,32,FLEN)
NAN_BOXED(3261256037,32,FLEN)
NAN_BOXED(4286578684,32,FLEN)
NAN_BOXED(2089842656,32,FLEN)
NAN_BOXED(3261256037,32,FLEN)
NAN_BOXED(4286578686,32,FLEN)
NAN_BOXED(2089981315,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(2089981315,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3,32,FLEN)
NAN_BOXED(2089981315,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7,32,FLEN)
NAN_BOXED(2089981315,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1677721,32,FLEN)
NAN_BOXED(2089981315,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2396745,32,FLEN)
NAN_BOXED(2089981315,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3355443,32,FLEN)
NAN_BOXED(2089981315,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3595117,32,FLEN)
NAN_BOXED(2089981315,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3914683,32,FLEN)
NAN_BOXED(2089981315,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(4473924,32,FLEN)
NAN_BOXED(2089981315,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5033164,32,FLEN)
NAN_BOXED(2089981315,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5991862,32,FLEN)
NAN_BOXED(2089981315,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(6710886,32,FLEN)
NAN_BOXED(2089981315,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7190235,32,FLEN)
NAN_BOXED(2089981315,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388600,32,FLEN)
NAN_BOXED(2089981315,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388604,32,FLEN)
NAN_BOXED(2089981315,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388606,32,FLEN)
NAN_BOXED(2089981315,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(218103808,32,FLEN)
NAN_BOXED(2089981315,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(218103809,32,FLEN)
NAN_BOXED(2089981315,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(218103811,32,FLEN)
NAN_BOXED(2089981315,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(218103815,32,FLEN)
NAN_BOXED(2089981315,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(218103823,32,FLEN)
NAN_BOXED(2089981315,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(218103839,32,FLEN)
NAN_BOXED(2089981315,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(218103871,32,FLEN)
NAN_BOXED(2089981315,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(218103935,32,FLEN)
NAN_BOXED(2089981315,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(218104063,32,FLEN)
NAN_BOXED(2089981315,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(218104319,32,FLEN)
NAN_BOXED(2089981315,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(218104831,32,FLEN)
NAN_BOXED(2089981315,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(218105855,32,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
