
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 14:18:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32F/fmsub.s.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.s instruction of the RISC-V RV32F_Zicsr,RV32FD_Zicsr,RV64F_Zicsr,RV64FD_Zicsr extension for the fmsub_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF_Zicsr,RV32IFD_Zicsr,RV64IF_Zicsr,RV64IFD_Zicsr,RV32EF_Zicsr,RV32EFD_Zicsr,RV64EF_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fmsub_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*F.*);def TEST_CASE_1=True;",fmsub_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_12672:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x02ce1a and fs2 == 1 and fe2 == 0x80 and fm2 == 0x7a8296 and fs3 == 1 and fe3 == 0xc4 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e82ce1a; op2val:0xc07a8296;
op3val:0xe27ffffc; valaddr_reg:x3; val_offset:38016*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38016*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12673:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x02ce1a and fs2 == 1 and fe2 == 0x80 and fm2 == 0x7a8296 and fs3 == 1 and fe3 == 0xc4 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e82ce1a; op2val:0xc07a8296;
op3val:0xe27ffffe; valaddr_reg:x3; val_offset:38019*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38019*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12674:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x02ce1a and fs2 == 1 and fe2 == 0x80 and fm2 == 0x7a8296 and fs3 == 1 and fe3 == 0xc4 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e82ce1a; op2val:0xc07a8296;
op3val:0xe27fffff; valaddr_reg:x3; val_offset:38022*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38022*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12675:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x02ce1a and fs2 == 1 and fe2 == 0x80 and fm2 == 0x7a8296 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e82ce1a; op2val:0xc07a8296;
op3val:0xff000001; valaddr_reg:x3; val_offset:38025*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38025*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12676:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x02ce1a and fs2 == 1 and fe2 == 0x80 and fm2 == 0x7a8296 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e82ce1a; op2val:0xc07a8296;
op3val:0xff000003; valaddr_reg:x3; val_offset:38028*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38028*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12677:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x02ce1a and fs2 == 1 and fe2 == 0x80 and fm2 == 0x7a8296 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e82ce1a; op2val:0xc07a8296;
op3val:0xff000007; valaddr_reg:x3; val_offset:38031*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38031*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12678:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x02ce1a and fs2 == 1 and fe2 == 0x80 and fm2 == 0x7a8296 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e82ce1a; op2val:0xc07a8296;
op3val:0xff199999; valaddr_reg:x3; val_offset:38034*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38034*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12679:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x02ce1a and fs2 == 1 and fe2 == 0x80 and fm2 == 0x7a8296 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e82ce1a; op2val:0xc07a8296;
op3val:0xff249249; valaddr_reg:x3; val_offset:38037*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38037*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12680:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x02ce1a and fs2 == 1 and fe2 == 0x80 and fm2 == 0x7a8296 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e82ce1a; op2val:0xc07a8296;
op3val:0xff333333; valaddr_reg:x3; val_offset:38040*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38040*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12681:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x02ce1a and fs2 == 1 and fe2 == 0x80 and fm2 == 0x7a8296 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e82ce1a; op2val:0xc07a8296;
op3val:0xff36db6d; valaddr_reg:x3; val_offset:38043*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38043*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12682:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x02ce1a and fs2 == 1 and fe2 == 0x80 and fm2 == 0x7a8296 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e82ce1a; op2val:0xc07a8296;
op3val:0xff3bbbbb; valaddr_reg:x3; val_offset:38046*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38046*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12683:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x02ce1a and fs2 == 1 and fe2 == 0x80 and fm2 == 0x7a8296 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e82ce1a; op2val:0xc07a8296;
op3val:0xff444444; valaddr_reg:x3; val_offset:38049*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38049*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12684:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x02ce1a and fs2 == 1 and fe2 == 0x80 and fm2 == 0x7a8296 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e82ce1a; op2val:0xc07a8296;
op3val:0xff4ccccc; valaddr_reg:x3; val_offset:38052*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38052*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12685:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x02ce1a and fs2 == 1 and fe2 == 0x80 and fm2 == 0x7a8296 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e82ce1a; op2val:0xc07a8296;
op3val:0xff5b6db6; valaddr_reg:x3; val_offset:38055*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38055*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12686:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x02ce1a and fs2 == 1 and fe2 == 0x80 and fm2 == 0x7a8296 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e82ce1a; op2val:0xc07a8296;
op3val:0xff666666; valaddr_reg:x3; val_offset:38058*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38058*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12687:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x02ce1a and fs2 == 1 and fe2 == 0x80 and fm2 == 0x7a8296 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e82ce1a; op2val:0xc07a8296;
op3val:0xff6db6db; valaddr_reg:x3; val_offset:38061*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38061*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12688:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x02ce1a and fs2 == 1 and fe2 == 0x80 and fm2 == 0x7a8296 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e82ce1a; op2val:0xc07a8296;
op3val:0xff7ffff8; valaddr_reg:x3; val_offset:38064*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38064*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12689:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x02ce1a and fs2 == 1 and fe2 == 0x80 and fm2 == 0x7a8296 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e82ce1a; op2val:0xc07a8296;
op3val:0xff7ffffc; valaddr_reg:x3; val_offset:38067*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38067*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12690:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x02ce1a and fs2 == 1 and fe2 == 0x80 and fm2 == 0x7a8296 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e82ce1a; op2val:0xc07a8296;
op3val:0xff7ffffe; valaddr_reg:x3; val_offset:38070*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38070*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12691:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x02f6ae and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7d1a7d and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e82f6ae; op2val:0x7d1a7d;
op3val:0x3f800001; valaddr_reg:x3; val_offset:38073*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38073*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12692:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x02f6ae and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7d1a7d and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e82f6ae; op2val:0x7d1a7d;
op3val:0x3f800003; valaddr_reg:x3; val_offset:38076*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38076*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12693:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x02f6ae and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7d1a7d and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e82f6ae; op2val:0x7d1a7d;
op3val:0x3f800007; valaddr_reg:x3; val_offset:38079*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38079*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12694:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x02f6ae and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7d1a7d and fs3 == 0 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e82f6ae; op2val:0x7d1a7d;
op3val:0x3f999999; valaddr_reg:x3; val_offset:38082*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38082*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12695:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x02f6ae and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7d1a7d and fs3 == 0 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e82f6ae; op2val:0x7d1a7d;
op3val:0x3fa49249; valaddr_reg:x3; val_offset:38085*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38085*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12696:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x02f6ae and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7d1a7d and fs3 == 0 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e82f6ae; op2val:0x7d1a7d;
op3val:0x3fb33333; valaddr_reg:x3; val_offset:38088*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38088*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12697:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x02f6ae and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7d1a7d and fs3 == 0 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e82f6ae; op2val:0x7d1a7d;
op3val:0x3fb6db6d; valaddr_reg:x3; val_offset:38091*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38091*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12698:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x02f6ae and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7d1a7d and fs3 == 0 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e82f6ae; op2val:0x7d1a7d;
op3val:0x3fbbbbbb; valaddr_reg:x3; val_offset:38094*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38094*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12699:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x02f6ae and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7d1a7d and fs3 == 0 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e82f6ae; op2val:0x7d1a7d;
op3val:0x3fc44444; valaddr_reg:x3; val_offset:38097*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38097*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12700:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x02f6ae and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7d1a7d and fs3 == 0 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e82f6ae; op2val:0x7d1a7d;
op3val:0x3fcccccc; valaddr_reg:x3; val_offset:38100*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38100*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12701:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x02f6ae and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7d1a7d and fs3 == 0 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e82f6ae; op2val:0x7d1a7d;
op3val:0x3fdb6db6; valaddr_reg:x3; val_offset:38103*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38103*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12702:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x02f6ae and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7d1a7d and fs3 == 0 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e82f6ae; op2val:0x7d1a7d;
op3val:0x3fe66666; valaddr_reg:x3; val_offset:38106*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38106*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12703:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x02f6ae and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7d1a7d and fs3 == 0 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e82f6ae; op2val:0x7d1a7d;
op3val:0x3fedb6db; valaddr_reg:x3; val_offset:38109*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38109*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12704:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x02f6ae and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7d1a7d and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e82f6ae; op2val:0x7d1a7d;
op3val:0x3ffffff8; valaddr_reg:x3; val_offset:38112*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38112*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12705:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x02f6ae and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7d1a7d and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e82f6ae; op2val:0x7d1a7d;
op3val:0x3ffffffc; valaddr_reg:x3; val_offset:38115*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38115*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12706:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x02f6ae and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7d1a7d and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e82f6ae; op2val:0x7d1a7d;
op3val:0x3ffffffe; valaddr_reg:x3; val_offset:38118*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38118*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12707:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x02f6ae and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7d1a7d and fs3 == 0 and fe3 == 0x84 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e82f6ae; op2val:0x7d1a7d;
op3val:0x42000000; valaddr_reg:x3; val_offset:38121*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38121*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12708:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x02f6ae and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7d1a7d and fs3 == 0 and fe3 == 0x84 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e82f6ae; op2val:0x7d1a7d;
op3val:0x42000001; valaddr_reg:x3; val_offset:38124*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38124*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12709:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x02f6ae and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7d1a7d and fs3 == 0 and fe3 == 0x84 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e82f6ae; op2val:0x7d1a7d;
op3val:0x42000003; valaddr_reg:x3; val_offset:38127*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38127*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12710:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x02f6ae and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7d1a7d and fs3 == 0 and fe3 == 0x84 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e82f6ae; op2val:0x7d1a7d;
op3val:0x42000007; valaddr_reg:x3; val_offset:38130*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38130*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12711:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x02f6ae and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7d1a7d and fs3 == 0 and fe3 == 0x84 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e82f6ae; op2val:0x7d1a7d;
op3val:0x4200000f; valaddr_reg:x3; val_offset:38133*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38133*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12712:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x02f6ae and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7d1a7d and fs3 == 0 and fe3 == 0x84 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e82f6ae; op2val:0x7d1a7d;
op3val:0x4200001f; valaddr_reg:x3; val_offset:38136*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38136*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12713:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x02f6ae and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7d1a7d and fs3 == 0 and fe3 == 0x84 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e82f6ae; op2val:0x7d1a7d;
op3val:0x4200003f; valaddr_reg:x3; val_offset:38139*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38139*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12714:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x02f6ae and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7d1a7d and fs3 == 0 and fe3 == 0x84 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e82f6ae; op2val:0x7d1a7d;
op3val:0x4200007f; valaddr_reg:x3; val_offset:38142*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38142*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12715:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x02f6ae and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7d1a7d and fs3 == 0 and fe3 == 0x84 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e82f6ae; op2val:0x7d1a7d;
op3val:0x420000ff; valaddr_reg:x3; val_offset:38145*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38145*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12716:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x02f6ae and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7d1a7d and fs3 == 0 and fe3 == 0x84 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e82f6ae; op2val:0x7d1a7d;
op3val:0x420001ff; valaddr_reg:x3; val_offset:38148*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38148*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12717:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x02f6ae and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7d1a7d and fs3 == 0 and fe3 == 0x84 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e82f6ae; op2val:0x7d1a7d;
op3val:0x420003ff; valaddr_reg:x3; val_offset:38151*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38151*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12718:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x02f6ae and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7d1a7d and fs3 == 0 and fe3 == 0x84 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e82f6ae; op2val:0x7d1a7d;
op3val:0x420007ff; valaddr_reg:x3; val_offset:38154*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38154*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12719:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x02f6ae and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7d1a7d and fs3 == 0 and fe3 == 0x84 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e82f6ae; op2val:0x7d1a7d;
op3val:0x42000fff; valaddr_reg:x3; val_offset:38157*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38157*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12720:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x02f6ae and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7d1a7d and fs3 == 0 and fe3 == 0x84 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e82f6ae; op2val:0x7d1a7d;
op3val:0x42001fff; valaddr_reg:x3; val_offset:38160*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38160*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12721:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x02f6ae and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7d1a7d and fs3 == 0 and fe3 == 0x84 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e82f6ae; op2val:0x7d1a7d;
op3val:0x42003fff; valaddr_reg:x3; val_offset:38163*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38163*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12722:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x02f6ae and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7d1a7d and fs3 == 0 and fe3 == 0x84 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e82f6ae; op2val:0x7d1a7d;
op3val:0x42007fff; valaddr_reg:x3; val_offset:38166*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38166*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12723:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x02f6ae and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7d1a7d and fs3 == 0 and fe3 == 0x84 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e82f6ae; op2val:0x7d1a7d;
op3val:0x4200ffff; valaddr_reg:x3; val_offset:38169*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38169*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12724:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x02f6ae and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7d1a7d and fs3 == 0 and fe3 == 0x84 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e82f6ae; op2val:0x7d1a7d;
op3val:0x4201ffff; valaddr_reg:x3; val_offset:38172*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38172*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12725:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x02f6ae and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7d1a7d and fs3 == 0 and fe3 == 0x84 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e82f6ae; op2val:0x7d1a7d;
op3val:0x4203ffff; valaddr_reg:x3; val_offset:38175*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38175*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12726:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x02f6ae and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7d1a7d and fs3 == 0 and fe3 == 0x84 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e82f6ae; op2val:0x7d1a7d;
op3val:0x4207ffff; valaddr_reg:x3; val_offset:38178*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38178*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12727:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x02f6ae and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7d1a7d and fs3 == 0 and fe3 == 0x84 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e82f6ae; op2val:0x7d1a7d;
op3val:0x420fffff; valaddr_reg:x3; val_offset:38181*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38181*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12728:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x02f6ae and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7d1a7d and fs3 == 0 and fe3 == 0x84 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e82f6ae; op2val:0x7d1a7d;
op3val:0x421fffff; valaddr_reg:x3; val_offset:38184*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38184*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12729:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x02f6ae and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7d1a7d and fs3 == 0 and fe3 == 0x84 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e82f6ae; op2val:0x7d1a7d;
op3val:0x423fffff; valaddr_reg:x3; val_offset:38187*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38187*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12730:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x02f6ae and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7d1a7d and fs3 == 0 and fe3 == 0x84 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e82f6ae; op2val:0x7d1a7d;
op3val:0x42400000; valaddr_reg:x3; val_offset:38190*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38190*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12731:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x02f6ae and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7d1a7d and fs3 == 0 and fe3 == 0x84 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e82f6ae; op2val:0x7d1a7d;
op3val:0x42600000; valaddr_reg:x3; val_offset:38193*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38193*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12732:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x02f6ae and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7d1a7d and fs3 == 0 and fe3 == 0x84 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e82f6ae; op2val:0x7d1a7d;
op3val:0x42700000; valaddr_reg:x3; val_offset:38196*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38196*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12733:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x02f6ae and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7d1a7d and fs3 == 0 and fe3 == 0x84 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e82f6ae; op2val:0x7d1a7d;
op3val:0x42780000; valaddr_reg:x3; val_offset:38199*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38199*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12734:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x02f6ae and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7d1a7d and fs3 == 0 and fe3 == 0x84 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e82f6ae; op2val:0x7d1a7d;
op3val:0x427c0000; valaddr_reg:x3; val_offset:38202*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38202*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12735:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x02f6ae and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7d1a7d and fs3 == 0 and fe3 == 0x84 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e82f6ae; op2val:0x7d1a7d;
op3val:0x427e0000; valaddr_reg:x3; val_offset:38205*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38205*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12736:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x02f6ae and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7d1a7d and fs3 == 0 and fe3 == 0x84 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e82f6ae; op2val:0x7d1a7d;
op3val:0x427f0000; valaddr_reg:x3; val_offset:38208*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38208*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12737:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x02f6ae and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7d1a7d and fs3 == 0 and fe3 == 0x84 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e82f6ae; op2val:0x7d1a7d;
op3val:0x427f8000; valaddr_reg:x3; val_offset:38211*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38211*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12738:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x02f6ae and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7d1a7d and fs3 == 0 and fe3 == 0x84 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e82f6ae; op2val:0x7d1a7d;
op3val:0x427fc000; valaddr_reg:x3; val_offset:38214*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38214*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12739:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x02f6ae and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7d1a7d and fs3 == 0 and fe3 == 0x84 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e82f6ae; op2val:0x7d1a7d;
op3val:0x427fe000; valaddr_reg:x3; val_offset:38217*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38217*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12740:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x02f6ae and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7d1a7d and fs3 == 0 and fe3 == 0x84 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e82f6ae; op2val:0x7d1a7d;
op3val:0x427ff000; valaddr_reg:x3; val_offset:38220*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38220*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12741:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x02f6ae and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7d1a7d and fs3 == 0 and fe3 == 0x84 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e82f6ae; op2val:0x7d1a7d;
op3val:0x427ff800; valaddr_reg:x3; val_offset:38223*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38223*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12742:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x02f6ae and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7d1a7d and fs3 == 0 and fe3 == 0x84 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e82f6ae; op2val:0x7d1a7d;
op3val:0x427ffc00; valaddr_reg:x3; val_offset:38226*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38226*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12743:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x02f6ae and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7d1a7d and fs3 == 0 and fe3 == 0x84 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e82f6ae; op2val:0x7d1a7d;
op3val:0x427ffe00; valaddr_reg:x3; val_offset:38229*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38229*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12744:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x02f6ae and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7d1a7d and fs3 == 0 and fe3 == 0x84 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e82f6ae; op2val:0x7d1a7d;
op3val:0x427fff00; valaddr_reg:x3; val_offset:38232*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38232*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12745:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x02f6ae and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7d1a7d and fs3 == 0 and fe3 == 0x84 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e82f6ae; op2val:0x7d1a7d;
op3val:0x427fff80; valaddr_reg:x3; val_offset:38235*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38235*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12746:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x02f6ae and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7d1a7d and fs3 == 0 and fe3 == 0x84 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e82f6ae; op2val:0x7d1a7d;
op3val:0x427fffc0; valaddr_reg:x3; val_offset:38238*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38238*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12747:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x02f6ae and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7d1a7d and fs3 == 0 and fe3 == 0x84 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e82f6ae; op2val:0x7d1a7d;
op3val:0x427fffe0; valaddr_reg:x3; val_offset:38241*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38241*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12748:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x02f6ae and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7d1a7d and fs3 == 0 and fe3 == 0x84 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e82f6ae; op2val:0x7d1a7d;
op3val:0x427ffff0; valaddr_reg:x3; val_offset:38244*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38244*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12749:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x02f6ae and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7d1a7d and fs3 == 0 and fe3 == 0x84 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e82f6ae; op2val:0x7d1a7d;
op3val:0x427ffff8; valaddr_reg:x3; val_offset:38247*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38247*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12750:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x02f6ae and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7d1a7d and fs3 == 0 and fe3 == 0x84 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e82f6ae; op2val:0x7d1a7d;
op3val:0x427ffffc; valaddr_reg:x3; val_offset:38250*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38250*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12751:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x02f6ae and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7d1a7d and fs3 == 0 and fe3 == 0x84 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e82f6ae; op2val:0x7d1a7d;
op3val:0x427ffffe; valaddr_reg:x3; val_offset:38253*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38253*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12752:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x02f6ae and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7d1a7d and fs3 == 0 and fe3 == 0x84 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e82f6ae; op2val:0x7d1a7d;
op3val:0x427fffff; valaddr_reg:x3; val_offset:38256*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38256*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12753:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x031ec6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7cf43b and fs3 == 0 and fe3 == 0x46 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e831ec6; op2val:0x7cf43b;
op3val:0x23000000; valaddr_reg:x3; val_offset:38259*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38259*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12754:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x031ec6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7cf43b and fs3 == 0 and fe3 == 0x46 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e831ec6; op2val:0x7cf43b;
op3val:0x23000001; valaddr_reg:x3; val_offset:38262*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38262*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12755:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x031ec6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7cf43b and fs3 == 0 and fe3 == 0x46 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e831ec6; op2val:0x7cf43b;
op3val:0x23000003; valaddr_reg:x3; val_offset:38265*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38265*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12756:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x031ec6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7cf43b and fs3 == 0 and fe3 == 0x46 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e831ec6; op2val:0x7cf43b;
op3val:0x23000007; valaddr_reg:x3; val_offset:38268*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38268*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12757:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x031ec6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7cf43b and fs3 == 0 and fe3 == 0x46 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e831ec6; op2val:0x7cf43b;
op3val:0x2300000f; valaddr_reg:x3; val_offset:38271*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38271*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12758:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x031ec6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7cf43b and fs3 == 0 and fe3 == 0x46 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e831ec6; op2val:0x7cf43b;
op3val:0x2300001f; valaddr_reg:x3; val_offset:38274*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38274*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12759:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x031ec6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7cf43b and fs3 == 0 and fe3 == 0x46 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e831ec6; op2val:0x7cf43b;
op3val:0x2300003f; valaddr_reg:x3; val_offset:38277*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38277*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12760:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x031ec6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7cf43b and fs3 == 0 and fe3 == 0x46 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e831ec6; op2val:0x7cf43b;
op3val:0x2300007f; valaddr_reg:x3; val_offset:38280*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38280*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12761:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x031ec6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7cf43b and fs3 == 0 and fe3 == 0x46 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e831ec6; op2val:0x7cf43b;
op3val:0x230000ff; valaddr_reg:x3; val_offset:38283*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38283*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12762:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x031ec6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7cf43b and fs3 == 0 and fe3 == 0x46 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e831ec6; op2val:0x7cf43b;
op3val:0x230001ff; valaddr_reg:x3; val_offset:38286*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38286*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12763:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x031ec6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7cf43b and fs3 == 0 and fe3 == 0x46 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e831ec6; op2val:0x7cf43b;
op3val:0x230003ff; valaddr_reg:x3; val_offset:38289*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38289*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12764:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x031ec6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7cf43b and fs3 == 0 and fe3 == 0x46 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e831ec6; op2val:0x7cf43b;
op3val:0x230007ff; valaddr_reg:x3; val_offset:38292*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38292*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12765:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x031ec6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7cf43b and fs3 == 0 and fe3 == 0x46 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e831ec6; op2val:0x7cf43b;
op3val:0x23000fff; valaddr_reg:x3; val_offset:38295*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38295*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12766:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x031ec6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7cf43b and fs3 == 0 and fe3 == 0x46 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e831ec6; op2val:0x7cf43b;
op3val:0x23001fff; valaddr_reg:x3; val_offset:38298*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38298*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12767:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x031ec6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7cf43b and fs3 == 0 and fe3 == 0x46 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e831ec6; op2val:0x7cf43b;
op3val:0x23003fff; valaddr_reg:x3; val_offset:38301*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38301*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12768:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x031ec6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7cf43b and fs3 == 0 and fe3 == 0x46 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e831ec6; op2val:0x7cf43b;
op3val:0x23007fff; valaddr_reg:x3; val_offset:38304*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38304*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12769:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x031ec6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7cf43b and fs3 == 0 and fe3 == 0x46 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e831ec6; op2val:0x7cf43b;
op3val:0x2300ffff; valaddr_reg:x3; val_offset:38307*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38307*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12770:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x031ec6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7cf43b and fs3 == 0 and fe3 == 0x46 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e831ec6; op2val:0x7cf43b;
op3val:0x2301ffff; valaddr_reg:x3; val_offset:38310*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38310*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12771:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x031ec6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7cf43b and fs3 == 0 and fe3 == 0x46 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e831ec6; op2val:0x7cf43b;
op3val:0x2303ffff; valaddr_reg:x3; val_offset:38313*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38313*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12772:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x031ec6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7cf43b and fs3 == 0 and fe3 == 0x46 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e831ec6; op2val:0x7cf43b;
op3val:0x2307ffff; valaddr_reg:x3; val_offset:38316*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38316*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12773:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x031ec6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7cf43b and fs3 == 0 and fe3 == 0x46 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e831ec6; op2val:0x7cf43b;
op3val:0x230fffff; valaddr_reg:x3; val_offset:38319*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38319*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12774:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x031ec6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7cf43b and fs3 == 0 and fe3 == 0x46 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e831ec6; op2val:0x7cf43b;
op3val:0x231fffff; valaddr_reg:x3; val_offset:38322*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38322*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12775:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x031ec6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7cf43b and fs3 == 0 and fe3 == 0x46 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e831ec6; op2val:0x7cf43b;
op3val:0x233fffff; valaddr_reg:x3; val_offset:38325*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38325*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12776:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x031ec6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7cf43b and fs3 == 0 and fe3 == 0x46 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e831ec6; op2val:0x7cf43b;
op3val:0x23400000; valaddr_reg:x3; val_offset:38328*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38328*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12777:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x031ec6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7cf43b and fs3 == 0 and fe3 == 0x46 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e831ec6; op2val:0x7cf43b;
op3val:0x23600000; valaddr_reg:x3; val_offset:38331*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38331*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12778:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x031ec6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7cf43b and fs3 == 0 and fe3 == 0x46 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e831ec6; op2val:0x7cf43b;
op3val:0x23700000; valaddr_reg:x3; val_offset:38334*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38334*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12779:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x031ec6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7cf43b and fs3 == 0 and fe3 == 0x46 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e831ec6; op2val:0x7cf43b;
op3val:0x23780000; valaddr_reg:x3; val_offset:38337*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38337*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12780:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x031ec6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7cf43b and fs3 == 0 and fe3 == 0x46 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e831ec6; op2val:0x7cf43b;
op3val:0x237c0000; valaddr_reg:x3; val_offset:38340*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38340*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12781:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x031ec6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7cf43b and fs3 == 0 and fe3 == 0x46 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e831ec6; op2val:0x7cf43b;
op3val:0x237e0000; valaddr_reg:x3; val_offset:38343*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38343*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12782:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x031ec6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7cf43b and fs3 == 0 and fe3 == 0x46 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e831ec6; op2val:0x7cf43b;
op3val:0x237f0000; valaddr_reg:x3; val_offset:38346*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38346*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12783:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x031ec6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7cf43b and fs3 == 0 and fe3 == 0x46 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e831ec6; op2val:0x7cf43b;
op3val:0x237f8000; valaddr_reg:x3; val_offset:38349*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38349*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12784:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x031ec6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7cf43b and fs3 == 0 and fe3 == 0x46 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e831ec6; op2val:0x7cf43b;
op3val:0x237fc000; valaddr_reg:x3; val_offset:38352*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38352*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12785:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x031ec6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7cf43b and fs3 == 0 and fe3 == 0x46 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e831ec6; op2val:0x7cf43b;
op3val:0x237fe000; valaddr_reg:x3; val_offset:38355*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38355*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12786:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x031ec6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7cf43b and fs3 == 0 and fe3 == 0x46 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e831ec6; op2val:0x7cf43b;
op3val:0x237ff000; valaddr_reg:x3; val_offset:38358*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38358*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12787:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x031ec6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7cf43b and fs3 == 0 and fe3 == 0x46 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e831ec6; op2val:0x7cf43b;
op3val:0x237ff800; valaddr_reg:x3; val_offset:38361*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38361*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12788:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x031ec6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7cf43b and fs3 == 0 and fe3 == 0x46 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e831ec6; op2val:0x7cf43b;
op3val:0x237ffc00; valaddr_reg:x3; val_offset:38364*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38364*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12789:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x031ec6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7cf43b and fs3 == 0 and fe3 == 0x46 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e831ec6; op2val:0x7cf43b;
op3val:0x237ffe00; valaddr_reg:x3; val_offset:38367*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38367*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12790:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x031ec6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7cf43b and fs3 == 0 and fe3 == 0x46 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e831ec6; op2val:0x7cf43b;
op3val:0x237fff00; valaddr_reg:x3; val_offset:38370*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38370*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12791:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x031ec6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7cf43b and fs3 == 0 and fe3 == 0x46 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e831ec6; op2val:0x7cf43b;
op3val:0x237fff80; valaddr_reg:x3; val_offset:38373*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38373*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12792:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x031ec6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7cf43b and fs3 == 0 and fe3 == 0x46 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e831ec6; op2val:0x7cf43b;
op3val:0x237fffc0; valaddr_reg:x3; val_offset:38376*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38376*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12793:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x031ec6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7cf43b and fs3 == 0 and fe3 == 0x46 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e831ec6; op2val:0x7cf43b;
op3val:0x237fffe0; valaddr_reg:x3; val_offset:38379*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38379*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12794:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x031ec6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7cf43b and fs3 == 0 and fe3 == 0x46 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e831ec6; op2val:0x7cf43b;
op3val:0x237ffff0; valaddr_reg:x3; val_offset:38382*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38382*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12795:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x031ec6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7cf43b and fs3 == 0 and fe3 == 0x46 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e831ec6; op2val:0x7cf43b;
op3val:0x237ffff8; valaddr_reg:x3; val_offset:38385*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38385*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12796:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x031ec6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7cf43b and fs3 == 0 and fe3 == 0x46 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e831ec6; op2val:0x7cf43b;
op3val:0x237ffffc; valaddr_reg:x3; val_offset:38388*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38388*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12797:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x031ec6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7cf43b and fs3 == 0 and fe3 == 0x46 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e831ec6; op2val:0x7cf43b;
op3val:0x237ffffe; valaddr_reg:x3; val_offset:38391*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38391*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12798:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x031ec6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7cf43b and fs3 == 0 and fe3 == 0x46 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e831ec6; op2val:0x7cf43b;
op3val:0x237fffff; valaddr_reg:x3; val_offset:38394*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38394*0 + 3*99*FLEN/8, x4, x1, x2)

inst_12799:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x031ec6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7cf43b and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e831ec6; op2val:0x7cf43b;
op3val:0x3f800001; valaddr_reg:x3; val_offset:38397*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 38397*0 + 3*99*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(2122501658,32,FLEN)
NAN_BOXED(3229254294,32,FLEN)
NAN_BOXED(3800039420,32,FLEN)
NAN_BOXED(2122501658,32,FLEN)
NAN_BOXED(3229254294,32,FLEN)
NAN_BOXED(3800039422,32,FLEN)
NAN_BOXED(2122501658,32,FLEN)
NAN_BOXED(3229254294,32,FLEN)
NAN_BOXED(3800039423,32,FLEN)
NAN_BOXED(2122501658,32,FLEN)
NAN_BOXED(3229254294,32,FLEN)
NAN_BOXED(4278190081,32,FLEN)
NAN_BOXED(2122501658,32,FLEN)
NAN_BOXED(3229254294,32,FLEN)
NAN_BOXED(4278190083,32,FLEN)
NAN_BOXED(2122501658,32,FLEN)
NAN_BOXED(3229254294,32,FLEN)
NAN_BOXED(4278190087,32,FLEN)
NAN_BOXED(2122501658,32,FLEN)
NAN_BOXED(3229254294,32,FLEN)
NAN_BOXED(4279867801,32,FLEN)
NAN_BOXED(2122501658,32,FLEN)
NAN_BOXED(3229254294,32,FLEN)
NAN_BOXED(4280586825,32,FLEN)
NAN_BOXED(2122501658,32,FLEN)
NAN_BOXED(3229254294,32,FLEN)
NAN_BOXED(4281545523,32,FLEN)
NAN_BOXED(2122501658,32,FLEN)
NAN_BOXED(3229254294,32,FLEN)
NAN_BOXED(4281785197,32,FLEN)
NAN_BOXED(2122501658,32,FLEN)
NAN_BOXED(3229254294,32,FLEN)
NAN_BOXED(4282104763,32,FLEN)
NAN_BOXED(2122501658,32,FLEN)
NAN_BOXED(3229254294,32,FLEN)
NAN_BOXED(4282664004,32,FLEN)
NAN_BOXED(2122501658,32,FLEN)
NAN_BOXED(3229254294,32,FLEN)
NAN_BOXED(4283223244,32,FLEN)
NAN_BOXED(2122501658,32,FLEN)
NAN_BOXED(3229254294,32,FLEN)
NAN_BOXED(4284181942,32,FLEN)
NAN_BOXED(2122501658,32,FLEN)
NAN_BOXED(3229254294,32,FLEN)
NAN_BOXED(4284900966,32,FLEN)
NAN_BOXED(2122501658,32,FLEN)
NAN_BOXED(3229254294,32,FLEN)
NAN_BOXED(4285380315,32,FLEN)
NAN_BOXED(2122501658,32,FLEN)
NAN_BOXED(3229254294,32,FLEN)
NAN_BOXED(4286578680,32,FLEN)
NAN_BOXED(2122501658,32,FLEN)
NAN_BOXED(3229254294,32,FLEN)
NAN_BOXED(4286578684,32,FLEN)
NAN_BOXED(2122501658,32,FLEN)
NAN_BOXED(3229254294,32,FLEN)
NAN_BOXED(4286578686,32,FLEN)
NAN_BOXED(2122512046,32,FLEN)
NAN_BOXED(8198781,32,FLEN)
NAN_BOXED(1065353217,32,FLEN)
NAN_BOXED(2122512046,32,FLEN)
NAN_BOXED(8198781,32,FLEN)
NAN_BOXED(1065353219,32,FLEN)
NAN_BOXED(2122512046,32,FLEN)
NAN_BOXED(8198781,32,FLEN)
NAN_BOXED(1065353223,32,FLEN)
NAN_BOXED(2122512046,32,FLEN)
NAN_BOXED(8198781,32,FLEN)
NAN_BOXED(1067030937,32,FLEN)
NAN_BOXED(2122512046,32,FLEN)
NAN_BOXED(8198781,32,FLEN)
NAN_BOXED(1067749961,32,FLEN)
NAN_BOXED(2122512046,32,FLEN)
NAN_BOXED(8198781,32,FLEN)
NAN_BOXED(1068708659,32,FLEN)
NAN_BOXED(2122512046,32,FLEN)
NAN_BOXED(8198781,32,FLEN)
NAN_BOXED(1068948333,32,FLEN)
NAN_BOXED(2122512046,32,FLEN)
NAN_BOXED(8198781,32,FLEN)
NAN_BOXED(1069267899,32,FLEN)
NAN_BOXED(2122512046,32,FLEN)
NAN_BOXED(8198781,32,FLEN)
NAN_BOXED(1069827140,32,FLEN)
NAN_BOXED(2122512046,32,FLEN)
NAN_BOXED(8198781,32,FLEN)
NAN_BOXED(1070386380,32,FLEN)
NAN_BOXED(2122512046,32,FLEN)
NAN_BOXED(8198781,32,FLEN)
NAN_BOXED(1071345078,32,FLEN)
NAN_BOXED(2122512046,32,FLEN)
NAN_BOXED(8198781,32,FLEN)
NAN_BOXED(1072064102,32,FLEN)
NAN_BOXED(2122512046,32,FLEN)
NAN_BOXED(8198781,32,FLEN)
NAN_BOXED(1072543451,32,FLEN)
NAN_BOXED(2122512046,32,FLEN)
NAN_BOXED(8198781,32,FLEN)
NAN_BOXED(1073741816,32,FLEN)
NAN_BOXED(2122512046,32,FLEN)
NAN_BOXED(8198781,32,FLEN)
NAN_BOXED(1073741820,32,FLEN)
NAN_BOXED(2122512046,32,FLEN)
NAN_BOXED(8198781,32,FLEN)
NAN_BOXED(1073741822,32,FLEN)
NAN_BOXED(2122512046,32,FLEN)
NAN_BOXED(8198781,32,FLEN)
NAN_BOXED(1107296256,32,FLEN)
NAN_BOXED(2122512046,32,FLEN)
NAN_BOXED(8198781,32,FLEN)
NAN_BOXED(1107296257,32,FLEN)
NAN_BOXED(2122512046,32,FLEN)
NAN_BOXED(8198781,32,FLEN)
NAN_BOXED(1107296259,32,FLEN)
NAN_BOXED(2122512046,32,FLEN)
NAN_BOXED(8198781,32,FLEN)
NAN_BOXED(1107296263,32,FLEN)
NAN_BOXED(2122512046,32,FLEN)
NAN_BOXED(8198781,32,FLEN)
NAN_BOXED(1107296271,32,FLEN)
NAN_BOXED(2122512046,32,FLEN)
NAN_BOXED(8198781,32,FLEN)
NAN_BOXED(1107296287,32,FLEN)
NAN_BOXED(2122512046,32,FLEN)
NAN_BOXED(8198781,32,FLEN)
NAN_BOXED(1107296319,32,FLEN)
NAN_BOXED(2122512046,32,FLEN)
NAN_BOXED(8198781,32,FLEN)
NAN_BOXED(1107296383,32,FLEN)
NAN_BOXED(2122512046,32,FLEN)
NAN_BOXED(8198781,32,FLEN)
NAN_BOXED(1107296511,32,FLEN)
NAN_BOXED(2122512046,32,FLEN)
NAN_BOXED(8198781,32,FLEN)
NAN_BOXED(1107296767,32,FLEN)
NAN_BOXED(2122512046,32,FLEN)
NAN_BOXED(8198781,32,FLEN)
NAN_BOXED(1107297279,32,FLEN)
NAN_BOXED(2122512046,32,FLEN)
NAN_BOXED(8198781,32,FLEN)
NAN_BOXED(1107298303,32,FLEN)
NAN_BOXED(2122512046,32,FLEN)
NAN_BOXED(8198781,32,FLEN)
NAN_BOXED(1107300351,32,FLEN)
NAN_BOXED(2122512046,32,FLEN)
NAN_BOXED(8198781,32,FLEN)
NAN_BOXED(1107304447,32,FLEN)
NAN_BOXED(2122512046,32,FLEN)
NAN_BOXED(8198781,32,FLEN)
NAN_BOXED(1107312639,32,FLEN)
NAN_BOXED(2122512046,32,FLEN)
NAN_BOXED(8198781,32,FLEN)
NAN_BOXED(1107329023,32,FLEN)
NAN_BOXED(2122512046,32,FLEN)
NAN_BOXED(8198781,32,FLEN)
NAN_BOXED(1107361791,32,FLEN)
NAN_BOXED(2122512046,32,FLEN)
NAN_BOXED(8198781,32,FLEN)
NAN_BOXED(1107427327,32,FLEN)
NAN_BOXED(2122512046,32,FLEN)
NAN_BOXED(8198781,32,FLEN)
NAN_BOXED(1107558399,32,FLEN)
NAN_BOXED(2122512046,32,FLEN)
NAN_BOXED(8198781,32,FLEN)
NAN_BOXED(1107820543,32,FLEN)
NAN_BOXED(2122512046,32,FLEN)
NAN_BOXED(8198781,32,FLEN)
NAN_BOXED(1108344831,32,FLEN)
NAN_BOXED(2122512046,32,FLEN)
NAN_BOXED(8198781,32,FLEN)
NAN_BOXED(1109393407,32,FLEN)
NAN_BOXED(2122512046,32,FLEN)
NAN_BOXED(8198781,32,FLEN)
NAN_BOXED(1111490559,32,FLEN)
NAN_BOXED(2122512046,32,FLEN)
NAN_BOXED(8198781,32,FLEN)
NAN_BOXED(1111490560,32,FLEN)
NAN_BOXED(2122512046,32,FLEN)
NAN_BOXED(8198781,32,FLEN)
NAN_BOXED(1113587712,32,FLEN)
NAN_BOXED(2122512046,32,FLEN)
NAN_BOXED(8198781,32,FLEN)
NAN_BOXED(1114636288,32,FLEN)
NAN_BOXED(2122512046,32,FLEN)
NAN_BOXED(8198781,32,FLEN)
NAN_BOXED(1115160576,32,FLEN)
NAN_BOXED(2122512046,32,FLEN)
NAN_BOXED(8198781,32,FLEN)
NAN_BOXED(1115422720,32,FLEN)
NAN_BOXED(2122512046,32,FLEN)
NAN_BOXED(8198781,32,FLEN)
NAN_BOXED(1115553792,32,FLEN)
NAN_BOXED(2122512046,32,FLEN)
NAN_BOXED(8198781,32,FLEN)
NAN_BOXED(1115619328,32,FLEN)
NAN_BOXED(2122512046,32,FLEN)
NAN_BOXED(8198781,32,FLEN)
NAN_BOXED(1115652096,32,FLEN)
NAN_BOXED(2122512046,32,FLEN)
NAN_BOXED(8198781,32,FLEN)
NAN_BOXED(1115668480,32,FLEN)
NAN_BOXED(2122512046,32,FLEN)
NAN_BOXED(8198781,32,FLEN)
NAN_BOXED(1115676672,32,FLEN)
NAN_BOXED(2122512046,32,FLEN)
NAN_BOXED(8198781,32,FLEN)
NAN_BOXED(1115680768,32,FLEN)
NAN_BOXED(2122512046,32,FLEN)
NAN_BOXED(8198781,32,FLEN)
NAN_BOXED(1115682816,32,FLEN)
NAN_BOXED(2122512046,32,FLEN)
NAN_BOXED(8198781,32,FLEN)
NAN_BOXED(1115683840,32,FLEN)
NAN_BOXED(2122512046,32,FLEN)
NAN_BOXED(8198781,32,FLEN)
NAN_BOXED(1115684352,32,FLEN)
NAN_BOXED(2122512046,32,FLEN)
NAN_BOXED(8198781,32,FLEN)
NAN_BOXED(1115684608,32,FLEN)
NAN_BOXED(2122512046,32,FLEN)
NAN_BOXED(8198781,32,FLEN)
NAN_BOXED(1115684736,32,FLEN)
NAN_BOXED(2122512046,32,FLEN)
NAN_BOXED(8198781,32,FLEN)
NAN_BOXED(1115684800,32,FLEN)
NAN_BOXED(2122512046,32,FLEN)
NAN_BOXED(8198781,32,FLEN)
NAN_BOXED(1115684832,32,FLEN)
NAN_BOXED(2122512046,32,FLEN)
NAN_BOXED(8198781,32,FLEN)
NAN_BOXED(1115684848,32,FLEN)
NAN_BOXED(2122512046,32,FLEN)
NAN_BOXED(8198781,32,FLEN)
NAN_BOXED(1115684856,32,FLEN)
NAN_BOXED(2122512046,32,FLEN)
NAN_BOXED(8198781,32,FLEN)
NAN_BOXED(1115684860,32,FLEN)
NAN_BOXED(2122512046,32,FLEN)
NAN_BOXED(8198781,32,FLEN)
NAN_BOXED(1115684862,32,FLEN)
NAN_BOXED(2122512046,32,FLEN)
NAN_BOXED(8198781,32,FLEN)
NAN_BOXED(1115684863,32,FLEN)
NAN_BOXED(2122522310,32,FLEN)
NAN_BOXED(8188987,32,FLEN)
NAN_BOXED(587202560,32,FLEN)
NAN_BOXED(2122522310,32,FLEN)
NAN_BOXED(8188987,32,FLEN)
NAN_BOXED(587202561,32,FLEN)
NAN_BOXED(2122522310,32,FLEN)
NAN_BOXED(8188987,32,FLEN)
NAN_BOXED(587202563,32,FLEN)
NAN_BOXED(2122522310,32,FLEN)
NAN_BOXED(8188987,32,FLEN)
NAN_BOXED(587202567,32,FLEN)
NAN_BOXED(2122522310,32,FLEN)
NAN_BOXED(8188987,32,FLEN)
NAN_BOXED(587202575,32,FLEN)
NAN_BOXED(2122522310,32,FLEN)
NAN_BOXED(8188987,32,FLEN)
NAN_BOXED(587202591,32,FLEN)
NAN_BOXED(2122522310,32,FLEN)
NAN_BOXED(8188987,32,FLEN)
NAN_BOXED(587202623,32,FLEN)
NAN_BOXED(2122522310,32,FLEN)
NAN_BOXED(8188987,32,FLEN)
NAN_BOXED(587202687,32,FLEN)
NAN_BOXED(2122522310,32,FLEN)
NAN_BOXED(8188987,32,FLEN)
NAN_BOXED(587202815,32,FLEN)
NAN_BOXED(2122522310,32,FLEN)
NAN_BOXED(8188987,32,FLEN)
NAN_BOXED(587203071,32,FLEN)
NAN_BOXED(2122522310,32,FLEN)
NAN_BOXED(8188987,32,FLEN)
NAN_BOXED(587203583,32,FLEN)
NAN_BOXED(2122522310,32,FLEN)
NAN_BOXED(8188987,32,FLEN)
NAN_BOXED(587204607,32,FLEN)
NAN_BOXED(2122522310,32,FLEN)
NAN_BOXED(8188987,32,FLEN)
NAN_BOXED(587206655,32,FLEN)
NAN_BOXED(2122522310,32,FLEN)
NAN_BOXED(8188987,32,FLEN)
NAN_BOXED(587210751,32,FLEN)
NAN_BOXED(2122522310,32,FLEN)
NAN_BOXED(8188987,32,FLEN)
NAN_BOXED(587218943,32,FLEN)
NAN_BOXED(2122522310,32,FLEN)
NAN_BOXED(8188987,32,FLEN)
NAN_BOXED(587235327,32,FLEN)
NAN_BOXED(2122522310,32,FLEN)
NAN_BOXED(8188987,32,FLEN)
NAN_BOXED(587268095,32,FLEN)
NAN_BOXED(2122522310,32,FLEN)
NAN_BOXED(8188987,32,FLEN)
NAN_BOXED(587333631,32,FLEN)
NAN_BOXED(2122522310,32,FLEN)
NAN_BOXED(8188987,32,FLEN)
NAN_BOXED(587464703,32,FLEN)
NAN_BOXED(2122522310,32,FLEN)
NAN_BOXED(8188987,32,FLEN)
NAN_BOXED(587726847,32,FLEN)
NAN_BOXED(2122522310,32,FLEN)
NAN_BOXED(8188987,32,FLEN)
NAN_BOXED(588251135,32,FLEN)
NAN_BOXED(2122522310,32,FLEN)
NAN_BOXED(8188987,32,FLEN)
NAN_BOXED(589299711,32,FLEN)
NAN_BOXED(2122522310,32,FLEN)
NAN_BOXED(8188987,32,FLEN)
NAN_BOXED(591396863,32,FLEN)
NAN_BOXED(2122522310,32,FLEN)
NAN_BOXED(8188987,32,FLEN)
NAN_BOXED(591396864,32,FLEN)
NAN_BOXED(2122522310,32,FLEN)
NAN_BOXED(8188987,32,FLEN)
NAN_BOXED(593494016,32,FLEN)
NAN_BOXED(2122522310,32,FLEN)
NAN_BOXED(8188987,32,FLEN)
NAN_BOXED(594542592,32,FLEN)
NAN_BOXED(2122522310,32,FLEN)
NAN_BOXED(8188987,32,FLEN)
NAN_BOXED(595066880,32,FLEN)
NAN_BOXED(2122522310,32,FLEN)
NAN_BOXED(8188987,32,FLEN)
NAN_BOXED(595329024,32,FLEN)
NAN_BOXED(2122522310,32,FLEN)
NAN_BOXED(8188987,32,FLEN)
NAN_BOXED(595460096,32,FLEN)
NAN_BOXED(2122522310,32,FLEN)
NAN_BOXED(8188987,32,FLEN)
NAN_BOXED(595525632,32,FLEN)
NAN_BOXED(2122522310,32,FLEN)
NAN_BOXED(8188987,32,FLEN)
NAN_BOXED(595558400,32,FLEN)
NAN_BOXED(2122522310,32,FLEN)
NAN_BOXED(8188987,32,FLEN)
NAN_BOXED(595574784,32,FLEN)
NAN_BOXED(2122522310,32,FLEN)
NAN_BOXED(8188987,32,FLEN)
NAN_BOXED(595582976,32,FLEN)
NAN_BOXED(2122522310,32,FLEN)
NAN_BOXED(8188987,32,FLEN)
NAN_BOXED(595587072,32,FLEN)
NAN_BOXED(2122522310,32,FLEN)
NAN_BOXED(8188987,32,FLEN)
NAN_BOXED(595589120,32,FLEN)
NAN_BOXED(2122522310,32,FLEN)
NAN_BOXED(8188987,32,FLEN)
NAN_BOXED(595590144,32,FLEN)
NAN_BOXED(2122522310,32,FLEN)
NAN_BOXED(8188987,32,FLEN)
NAN_BOXED(595590656,32,FLEN)
NAN_BOXED(2122522310,32,FLEN)
NAN_BOXED(8188987,32,FLEN)
NAN_BOXED(595590912,32,FLEN)
NAN_BOXED(2122522310,32,FLEN)
NAN_BOXED(8188987,32,FLEN)
NAN_BOXED(595591040,32,FLEN)
NAN_BOXED(2122522310,32,FLEN)
NAN_BOXED(8188987,32,FLEN)
NAN_BOXED(595591104,32,FLEN)
NAN_BOXED(2122522310,32,FLEN)
NAN_BOXED(8188987,32,FLEN)
NAN_BOXED(595591136,32,FLEN)
NAN_BOXED(2122522310,32,FLEN)
NAN_BOXED(8188987,32,FLEN)
NAN_BOXED(595591152,32,FLEN)
NAN_BOXED(2122522310,32,FLEN)
NAN_BOXED(8188987,32,FLEN)
NAN_BOXED(595591160,32,FLEN)
NAN_BOXED(2122522310,32,FLEN)
NAN_BOXED(8188987,32,FLEN)
NAN_BOXED(595591164,32,FLEN)
NAN_BOXED(2122522310,32,FLEN)
NAN_BOXED(8188987,32,FLEN)
NAN_BOXED(595591166,32,FLEN)
NAN_BOXED(2122522310,32,FLEN)
NAN_BOXED(8188987,32,FLEN)
NAN_BOXED(595591167,32,FLEN)
NAN_BOXED(2122522310,32,FLEN)
NAN_BOXED(8188987,32,FLEN)
NAN_BOXED(1065353217,32,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
