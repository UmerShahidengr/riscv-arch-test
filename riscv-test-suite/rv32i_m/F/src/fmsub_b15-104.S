
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 14:18:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32F/fmsub.s.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.s instruction of the RISC-V RV32F_Zicsr,RV32FD_Zicsr,RV64F_Zicsr,RV64FD_Zicsr extension for the fmsub_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF_Zicsr,RV32IFD_Zicsr,RV64IF_Zicsr,RV64IFD_Zicsr,RV32EF_Zicsr,RV32EFD_Zicsr,RV64EF_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fmsub_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*F.*);def TEST_CASE_1=True;",fmsub_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_13184:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a2ca1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x769328 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a2ca1; op2val:0x769328;
op3val:0x3f999999; valaddr_reg:x3; val_offset:39552*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39552*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13185:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a2ca1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x769328 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a2ca1; op2val:0x769328;
op3val:0x3fa49249; valaddr_reg:x3; val_offset:39555*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39555*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13186:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a2ca1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x769328 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a2ca1; op2val:0x769328;
op3val:0x3fb33333; valaddr_reg:x3; val_offset:39558*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39558*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13187:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a2ca1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x769328 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a2ca1; op2val:0x769328;
op3val:0x3fb6db6d; valaddr_reg:x3; val_offset:39561*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39561*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13188:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a2ca1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x769328 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a2ca1; op2val:0x769328;
op3val:0x3fbbbbbb; valaddr_reg:x3; val_offset:39564*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39564*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13189:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a2ca1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x769328 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a2ca1; op2val:0x769328;
op3val:0x3fc44444; valaddr_reg:x3; val_offset:39567*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39567*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13190:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a2ca1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x769328 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a2ca1; op2val:0x769328;
op3val:0x3fcccccc; valaddr_reg:x3; val_offset:39570*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39570*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13191:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a2ca1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x769328 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a2ca1; op2val:0x769328;
op3val:0x3fdb6db6; valaddr_reg:x3; val_offset:39573*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39573*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13192:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a2ca1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x769328 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a2ca1; op2val:0x769328;
op3val:0x3fe66666; valaddr_reg:x3; val_offset:39576*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39576*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13193:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a2ca1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x769328 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a2ca1; op2val:0x769328;
op3val:0x3fedb6db; valaddr_reg:x3; val_offset:39579*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39579*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13194:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a2ca1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x769328 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a2ca1; op2val:0x769328;
op3val:0x3ffffff8; valaddr_reg:x3; val_offset:39582*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39582*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13195:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a2ca1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x769328 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a2ca1; op2val:0x769328;
op3val:0x3ffffffc; valaddr_reg:x3; val_offset:39585*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39585*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13196:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a2ca1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x769328 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a2ca1; op2val:0x769328;
op3val:0x3ffffffe; valaddr_reg:x3; val_offset:39588*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39588*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13197:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a2ca1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x769328 and fs3 == 0 and fe3 == 0x9a and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a2ca1; op2val:0x769328;
op3val:0x4d000000; valaddr_reg:x3; val_offset:39591*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39591*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13198:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a2ca1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x769328 and fs3 == 0 and fe3 == 0x9a and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a2ca1; op2val:0x769328;
op3val:0x4d000001; valaddr_reg:x3; val_offset:39594*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39594*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13199:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a2ca1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x769328 and fs3 == 0 and fe3 == 0x9a and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a2ca1; op2val:0x769328;
op3val:0x4d000003; valaddr_reg:x3; val_offset:39597*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39597*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13200:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a2ca1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x769328 and fs3 == 0 and fe3 == 0x9a and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a2ca1; op2val:0x769328;
op3val:0x4d000007; valaddr_reg:x3; val_offset:39600*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39600*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13201:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a2ca1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x769328 and fs3 == 0 and fe3 == 0x9a and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a2ca1; op2val:0x769328;
op3val:0x4d00000f; valaddr_reg:x3; val_offset:39603*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39603*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13202:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a2ca1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x769328 and fs3 == 0 and fe3 == 0x9a and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a2ca1; op2val:0x769328;
op3val:0x4d00001f; valaddr_reg:x3; val_offset:39606*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39606*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13203:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a2ca1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x769328 and fs3 == 0 and fe3 == 0x9a and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a2ca1; op2val:0x769328;
op3val:0x4d00003f; valaddr_reg:x3; val_offset:39609*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39609*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13204:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a2ca1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x769328 and fs3 == 0 and fe3 == 0x9a and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a2ca1; op2val:0x769328;
op3val:0x4d00007f; valaddr_reg:x3; val_offset:39612*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39612*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13205:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a2ca1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x769328 and fs3 == 0 and fe3 == 0x9a and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a2ca1; op2val:0x769328;
op3val:0x4d0000ff; valaddr_reg:x3; val_offset:39615*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39615*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13206:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a2ca1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x769328 and fs3 == 0 and fe3 == 0x9a and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a2ca1; op2val:0x769328;
op3val:0x4d0001ff; valaddr_reg:x3; val_offset:39618*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39618*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13207:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a2ca1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x769328 and fs3 == 0 and fe3 == 0x9a and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a2ca1; op2val:0x769328;
op3val:0x4d0003ff; valaddr_reg:x3; val_offset:39621*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39621*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13208:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a2ca1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x769328 and fs3 == 0 and fe3 == 0x9a and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a2ca1; op2val:0x769328;
op3val:0x4d0007ff; valaddr_reg:x3; val_offset:39624*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39624*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13209:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a2ca1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x769328 and fs3 == 0 and fe3 == 0x9a and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a2ca1; op2val:0x769328;
op3val:0x4d000fff; valaddr_reg:x3; val_offset:39627*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39627*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13210:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a2ca1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x769328 and fs3 == 0 and fe3 == 0x9a and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a2ca1; op2val:0x769328;
op3val:0x4d001fff; valaddr_reg:x3; val_offset:39630*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39630*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13211:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a2ca1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x769328 and fs3 == 0 and fe3 == 0x9a and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a2ca1; op2val:0x769328;
op3val:0x4d003fff; valaddr_reg:x3; val_offset:39633*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39633*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13212:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a2ca1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x769328 and fs3 == 0 and fe3 == 0x9a and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a2ca1; op2val:0x769328;
op3val:0x4d007fff; valaddr_reg:x3; val_offset:39636*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39636*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13213:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a2ca1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x769328 and fs3 == 0 and fe3 == 0x9a and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a2ca1; op2val:0x769328;
op3val:0x4d00ffff; valaddr_reg:x3; val_offset:39639*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39639*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13214:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a2ca1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x769328 and fs3 == 0 and fe3 == 0x9a and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a2ca1; op2val:0x769328;
op3val:0x4d01ffff; valaddr_reg:x3; val_offset:39642*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39642*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13215:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a2ca1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x769328 and fs3 == 0 and fe3 == 0x9a and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a2ca1; op2val:0x769328;
op3val:0x4d03ffff; valaddr_reg:x3; val_offset:39645*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39645*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13216:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a2ca1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x769328 and fs3 == 0 and fe3 == 0x9a and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a2ca1; op2val:0x769328;
op3val:0x4d07ffff; valaddr_reg:x3; val_offset:39648*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39648*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13217:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a2ca1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x769328 and fs3 == 0 and fe3 == 0x9a and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a2ca1; op2val:0x769328;
op3val:0x4d0fffff; valaddr_reg:x3; val_offset:39651*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39651*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13218:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a2ca1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x769328 and fs3 == 0 and fe3 == 0x9a and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a2ca1; op2val:0x769328;
op3val:0x4d1fffff; valaddr_reg:x3; val_offset:39654*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39654*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13219:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a2ca1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x769328 and fs3 == 0 and fe3 == 0x9a and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a2ca1; op2val:0x769328;
op3val:0x4d3fffff; valaddr_reg:x3; val_offset:39657*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39657*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13220:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a2ca1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x769328 and fs3 == 0 and fe3 == 0x9a and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a2ca1; op2val:0x769328;
op3val:0x4d400000; valaddr_reg:x3; val_offset:39660*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39660*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13221:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a2ca1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x769328 and fs3 == 0 and fe3 == 0x9a and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a2ca1; op2val:0x769328;
op3val:0x4d600000; valaddr_reg:x3; val_offset:39663*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39663*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13222:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a2ca1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x769328 and fs3 == 0 and fe3 == 0x9a and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a2ca1; op2val:0x769328;
op3val:0x4d700000; valaddr_reg:x3; val_offset:39666*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39666*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13223:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a2ca1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x769328 and fs3 == 0 and fe3 == 0x9a and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a2ca1; op2val:0x769328;
op3val:0x4d780000; valaddr_reg:x3; val_offset:39669*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39669*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13224:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a2ca1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x769328 and fs3 == 0 and fe3 == 0x9a and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a2ca1; op2val:0x769328;
op3val:0x4d7c0000; valaddr_reg:x3; val_offset:39672*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39672*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13225:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a2ca1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x769328 and fs3 == 0 and fe3 == 0x9a and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a2ca1; op2val:0x769328;
op3val:0x4d7e0000; valaddr_reg:x3; val_offset:39675*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39675*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13226:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a2ca1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x769328 and fs3 == 0 and fe3 == 0x9a and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a2ca1; op2val:0x769328;
op3val:0x4d7f0000; valaddr_reg:x3; val_offset:39678*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39678*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13227:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a2ca1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x769328 and fs3 == 0 and fe3 == 0x9a and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a2ca1; op2val:0x769328;
op3val:0x4d7f8000; valaddr_reg:x3; val_offset:39681*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39681*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13228:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a2ca1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x769328 and fs3 == 0 and fe3 == 0x9a and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a2ca1; op2val:0x769328;
op3val:0x4d7fc000; valaddr_reg:x3; val_offset:39684*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39684*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13229:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a2ca1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x769328 and fs3 == 0 and fe3 == 0x9a and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a2ca1; op2val:0x769328;
op3val:0x4d7fe000; valaddr_reg:x3; val_offset:39687*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39687*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13230:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a2ca1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x769328 and fs3 == 0 and fe3 == 0x9a and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a2ca1; op2val:0x769328;
op3val:0x4d7ff000; valaddr_reg:x3; val_offset:39690*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39690*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13231:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a2ca1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x769328 and fs3 == 0 and fe3 == 0x9a and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a2ca1; op2val:0x769328;
op3val:0x4d7ff800; valaddr_reg:x3; val_offset:39693*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39693*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13232:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a2ca1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x769328 and fs3 == 0 and fe3 == 0x9a and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a2ca1; op2val:0x769328;
op3val:0x4d7ffc00; valaddr_reg:x3; val_offset:39696*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39696*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13233:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a2ca1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x769328 and fs3 == 0 and fe3 == 0x9a and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a2ca1; op2val:0x769328;
op3val:0x4d7ffe00; valaddr_reg:x3; val_offset:39699*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39699*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13234:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a2ca1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x769328 and fs3 == 0 and fe3 == 0x9a and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a2ca1; op2val:0x769328;
op3val:0x4d7fff00; valaddr_reg:x3; val_offset:39702*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39702*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13235:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a2ca1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x769328 and fs3 == 0 and fe3 == 0x9a and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a2ca1; op2val:0x769328;
op3val:0x4d7fff80; valaddr_reg:x3; val_offset:39705*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39705*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13236:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a2ca1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x769328 and fs3 == 0 and fe3 == 0x9a and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a2ca1; op2val:0x769328;
op3val:0x4d7fffc0; valaddr_reg:x3; val_offset:39708*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39708*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13237:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a2ca1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x769328 and fs3 == 0 and fe3 == 0x9a and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a2ca1; op2val:0x769328;
op3val:0x4d7fffe0; valaddr_reg:x3; val_offset:39711*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39711*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13238:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a2ca1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x769328 and fs3 == 0 and fe3 == 0x9a and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a2ca1; op2val:0x769328;
op3val:0x4d7ffff0; valaddr_reg:x3; val_offset:39714*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39714*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13239:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a2ca1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x769328 and fs3 == 0 and fe3 == 0x9a and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a2ca1; op2val:0x769328;
op3val:0x4d7ffff8; valaddr_reg:x3; val_offset:39717*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39717*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13240:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a2ca1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x769328 and fs3 == 0 and fe3 == 0x9a and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a2ca1; op2val:0x769328;
op3val:0x4d7ffffc; valaddr_reg:x3; val_offset:39720*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39720*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13241:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a2ca1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x769328 and fs3 == 0 and fe3 == 0x9a and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a2ca1; op2val:0x769328;
op3val:0x4d7ffffe; valaddr_reg:x3; val_offset:39723*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39723*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13242:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a2ca1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x769328 and fs3 == 0 and fe3 == 0x9a and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a2ca1; op2val:0x769328;
op3val:0x4d7fffff; valaddr_reg:x3; val_offset:39726*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39726*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13243:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a52ea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x767256 and fs3 == 0 and fe3 == 0x59 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a52ea; op2val:0x767256;
op3val:0x2c800000; valaddr_reg:x3; val_offset:39729*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39729*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13244:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a52ea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x767256 and fs3 == 0 and fe3 == 0x59 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a52ea; op2val:0x767256;
op3val:0x2c800001; valaddr_reg:x3; val_offset:39732*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39732*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13245:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a52ea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x767256 and fs3 == 0 and fe3 == 0x59 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a52ea; op2val:0x767256;
op3val:0x2c800003; valaddr_reg:x3; val_offset:39735*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39735*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13246:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a52ea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x767256 and fs3 == 0 and fe3 == 0x59 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a52ea; op2val:0x767256;
op3val:0x2c800007; valaddr_reg:x3; val_offset:39738*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39738*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13247:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a52ea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x767256 and fs3 == 0 and fe3 == 0x59 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a52ea; op2val:0x767256;
op3val:0x2c80000f; valaddr_reg:x3; val_offset:39741*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39741*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13248:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a52ea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x767256 and fs3 == 0 and fe3 == 0x59 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a52ea; op2val:0x767256;
op3val:0x2c80001f; valaddr_reg:x3; val_offset:39744*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39744*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13249:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a52ea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x767256 and fs3 == 0 and fe3 == 0x59 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a52ea; op2val:0x767256;
op3val:0x2c80003f; valaddr_reg:x3; val_offset:39747*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39747*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13250:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a52ea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x767256 and fs3 == 0 and fe3 == 0x59 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a52ea; op2val:0x767256;
op3val:0x2c80007f; valaddr_reg:x3; val_offset:39750*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39750*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13251:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a52ea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x767256 and fs3 == 0 and fe3 == 0x59 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a52ea; op2val:0x767256;
op3val:0x2c8000ff; valaddr_reg:x3; val_offset:39753*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39753*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13252:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a52ea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x767256 and fs3 == 0 and fe3 == 0x59 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a52ea; op2val:0x767256;
op3val:0x2c8001ff; valaddr_reg:x3; val_offset:39756*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39756*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13253:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a52ea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x767256 and fs3 == 0 and fe3 == 0x59 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a52ea; op2val:0x767256;
op3val:0x2c8003ff; valaddr_reg:x3; val_offset:39759*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39759*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13254:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a52ea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x767256 and fs3 == 0 and fe3 == 0x59 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a52ea; op2val:0x767256;
op3val:0x2c8007ff; valaddr_reg:x3; val_offset:39762*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39762*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13255:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a52ea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x767256 and fs3 == 0 and fe3 == 0x59 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a52ea; op2val:0x767256;
op3val:0x2c800fff; valaddr_reg:x3; val_offset:39765*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39765*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13256:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a52ea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x767256 and fs3 == 0 and fe3 == 0x59 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a52ea; op2val:0x767256;
op3val:0x2c801fff; valaddr_reg:x3; val_offset:39768*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39768*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13257:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a52ea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x767256 and fs3 == 0 and fe3 == 0x59 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a52ea; op2val:0x767256;
op3val:0x2c803fff; valaddr_reg:x3; val_offset:39771*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39771*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13258:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a52ea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x767256 and fs3 == 0 and fe3 == 0x59 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a52ea; op2val:0x767256;
op3val:0x2c807fff; valaddr_reg:x3; val_offset:39774*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39774*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13259:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a52ea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x767256 and fs3 == 0 and fe3 == 0x59 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a52ea; op2val:0x767256;
op3val:0x2c80ffff; valaddr_reg:x3; val_offset:39777*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39777*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13260:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a52ea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x767256 and fs3 == 0 and fe3 == 0x59 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a52ea; op2val:0x767256;
op3val:0x2c81ffff; valaddr_reg:x3; val_offset:39780*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39780*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13261:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a52ea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x767256 and fs3 == 0 and fe3 == 0x59 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a52ea; op2val:0x767256;
op3val:0x2c83ffff; valaddr_reg:x3; val_offset:39783*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39783*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13262:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a52ea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x767256 and fs3 == 0 and fe3 == 0x59 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a52ea; op2val:0x767256;
op3val:0x2c87ffff; valaddr_reg:x3; val_offset:39786*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39786*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13263:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a52ea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x767256 and fs3 == 0 and fe3 == 0x59 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a52ea; op2val:0x767256;
op3val:0x2c8fffff; valaddr_reg:x3; val_offset:39789*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39789*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13264:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a52ea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x767256 and fs3 == 0 and fe3 == 0x59 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a52ea; op2val:0x767256;
op3val:0x2c9fffff; valaddr_reg:x3; val_offset:39792*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39792*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13265:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a52ea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x767256 and fs3 == 0 and fe3 == 0x59 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a52ea; op2val:0x767256;
op3val:0x2cbfffff; valaddr_reg:x3; val_offset:39795*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39795*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13266:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a52ea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x767256 and fs3 == 0 and fe3 == 0x59 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a52ea; op2val:0x767256;
op3val:0x2cc00000; valaddr_reg:x3; val_offset:39798*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39798*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13267:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a52ea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x767256 and fs3 == 0 and fe3 == 0x59 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a52ea; op2val:0x767256;
op3val:0x2ce00000; valaddr_reg:x3; val_offset:39801*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39801*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13268:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a52ea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x767256 and fs3 == 0 and fe3 == 0x59 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a52ea; op2val:0x767256;
op3val:0x2cf00000; valaddr_reg:x3; val_offset:39804*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39804*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13269:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a52ea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x767256 and fs3 == 0 and fe3 == 0x59 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a52ea; op2val:0x767256;
op3val:0x2cf80000; valaddr_reg:x3; val_offset:39807*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39807*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13270:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a52ea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x767256 and fs3 == 0 and fe3 == 0x59 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a52ea; op2val:0x767256;
op3val:0x2cfc0000; valaddr_reg:x3; val_offset:39810*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39810*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13271:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a52ea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x767256 and fs3 == 0 and fe3 == 0x59 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a52ea; op2val:0x767256;
op3val:0x2cfe0000; valaddr_reg:x3; val_offset:39813*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39813*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13272:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a52ea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x767256 and fs3 == 0 and fe3 == 0x59 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a52ea; op2val:0x767256;
op3val:0x2cff0000; valaddr_reg:x3; val_offset:39816*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39816*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13273:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a52ea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x767256 and fs3 == 0 and fe3 == 0x59 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a52ea; op2val:0x767256;
op3val:0x2cff8000; valaddr_reg:x3; val_offset:39819*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39819*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13274:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a52ea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x767256 and fs3 == 0 and fe3 == 0x59 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a52ea; op2val:0x767256;
op3val:0x2cffc000; valaddr_reg:x3; val_offset:39822*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39822*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13275:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a52ea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x767256 and fs3 == 0 and fe3 == 0x59 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a52ea; op2val:0x767256;
op3val:0x2cffe000; valaddr_reg:x3; val_offset:39825*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39825*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13276:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a52ea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x767256 and fs3 == 0 and fe3 == 0x59 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a52ea; op2val:0x767256;
op3val:0x2cfff000; valaddr_reg:x3; val_offset:39828*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39828*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13277:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a52ea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x767256 and fs3 == 0 and fe3 == 0x59 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a52ea; op2val:0x767256;
op3val:0x2cfff800; valaddr_reg:x3; val_offset:39831*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39831*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13278:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a52ea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x767256 and fs3 == 0 and fe3 == 0x59 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a52ea; op2val:0x767256;
op3val:0x2cfffc00; valaddr_reg:x3; val_offset:39834*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39834*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13279:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a52ea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x767256 and fs3 == 0 and fe3 == 0x59 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a52ea; op2val:0x767256;
op3val:0x2cfffe00; valaddr_reg:x3; val_offset:39837*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39837*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13280:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a52ea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x767256 and fs3 == 0 and fe3 == 0x59 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a52ea; op2val:0x767256;
op3val:0x2cffff00; valaddr_reg:x3; val_offset:39840*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39840*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13281:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a52ea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x767256 and fs3 == 0 and fe3 == 0x59 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a52ea; op2val:0x767256;
op3val:0x2cffff80; valaddr_reg:x3; val_offset:39843*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39843*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13282:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a52ea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x767256 and fs3 == 0 and fe3 == 0x59 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a52ea; op2val:0x767256;
op3val:0x2cffffc0; valaddr_reg:x3; val_offset:39846*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39846*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13283:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a52ea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x767256 and fs3 == 0 and fe3 == 0x59 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a52ea; op2val:0x767256;
op3val:0x2cffffe0; valaddr_reg:x3; val_offset:39849*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39849*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13284:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a52ea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x767256 and fs3 == 0 and fe3 == 0x59 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a52ea; op2val:0x767256;
op3val:0x2cfffff0; valaddr_reg:x3; val_offset:39852*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39852*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13285:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a52ea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x767256 and fs3 == 0 and fe3 == 0x59 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a52ea; op2val:0x767256;
op3val:0x2cfffff8; valaddr_reg:x3; val_offset:39855*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39855*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13286:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a52ea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x767256 and fs3 == 0 and fe3 == 0x59 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a52ea; op2val:0x767256;
op3val:0x2cfffffc; valaddr_reg:x3; val_offset:39858*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39858*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13287:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a52ea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x767256 and fs3 == 0 and fe3 == 0x59 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a52ea; op2val:0x767256;
op3val:0x2cfffffe; valaddr_reg:x3; val_offset:39861*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39861*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13288:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a52ea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x767256 and fs3 == 0 and fe3 == 0x59 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a52ea; op2val:0x767256;
op3val:0x2cffffff; valaddr_reg:x3; val_offset:39864*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39864*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13289:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a52ea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x767256 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a52ea; op2val:0x767256;
op3val:0x3f800001; valaddr_reg:x3; val_offset:39867*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39867*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13290:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a52ea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x767256 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a52ea; op2val:0x767256;
op3val:0x3f800003; valaddr_reg:x3; val_offset:39870*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39870*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13291:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a52ea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x767256 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a52ea; op2val:0x767256;
op3val:0x3f800007; valaddr_reg:x3; val_offset:39873*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39873*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13292:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a52ea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x767256 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a52ea; op2val:0x767256;
op3val:0x3f999999; valaddr_reg:x3; val_offset:39876*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39876*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13293:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a52ea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x767256 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a52ea; op2val:0x767256;
op3val:0x3fa49249; valaddr_reg:x3; val_offset:39879*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39879*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13294:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a52ea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x767256 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a52ea; op2val:0x767256;
op3val:0x3fb33333; valaddr_reg:x3; val_offset:39882*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39882*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13295:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a52ea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x767256 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a52ea; op2val:0x767256;
op3val:0x3fb6db6d; valaddr_reg:x3; val_offset:39885*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39885*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13296:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a52ea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x767256 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a52ea; op2val:0x767256;
op3val:0x3fbbbbbb; valaddr_reg:x3; val_offset:39888*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39888*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13297:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a52ea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x767256 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a52ea; op2val:0x767256;
op3val:0x3fc44444; valaddr_reg:x3; val_offset:39891*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39891*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13298:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a52ea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x767256 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a52ea; op2val:0x767256;
op3val:0x3fcccccc; valaddr_reg:x3; val_offset:39894*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39894*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13299:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a52ea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x767256 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a52ea; op2val:0x767256;
op3val:0x3fdb6db6; valaddr_reg:x3; val_offset:39897*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39897*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13300:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a52ea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x767256 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a52ea; op2val:0x767256;
op3val:0x3fe66666; valaddr_reg:x3; val_offset:39900*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39900*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13301:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a52ea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x767256 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a52ea; op2val:0x767256;
op3val:0x3fedb6db; valaddr_reg:x3; val_offset:39903*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39903*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13302:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a52ea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x767256 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a52ea; op2val:0x767256;
op3val:0x3ffffff8; valaddr_reg:x3; val_offset:39906*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39906*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13303:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a52ea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x767256 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a52ea; op2val:0x767256;
op3val:0x3ffffffc; valaddr_reg:x3; val_offset:39909*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39909*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13304:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a52ea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x767256 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a52ea; op2val:0x767256;
op3val:0x3ffffffe; valaddr_reg:x3; val_offset:39912*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39912*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13305:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a65f0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a65f0; op2val:0x80000000;
op3val:0x80800001; valaddr_reg:x3; val_offset:39915*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39915*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13306:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a65f0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a65f0; op2val:0x80000000;
op3val:0x80800003; valaddr_reg:x3; val_offset:39918*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39918*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13307:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a65f0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a65f0; op2val:0x80000000;
op3val:0x80800007; valaddr_reg:x3; val_offset:39921*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39921*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13308:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a65f0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a65f0; op2val:0x80000000;
op3val:0x80999999; valaddr_reg:x3; val_offset:39924*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39924*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13309:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a65f0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a65f0; op2val:0x80000000;
op3val:0x80a49249; valaddr_reg:x3; val_offset:39927*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39927*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13310:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a65f0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a65f0; op2val:0x80000000;
op3val:0x80b33333; valaddr_reg:x3; val_offset:39930*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39930*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13311:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a65f0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8a65f0; op2val:0x80000000;
op3val:0x80b6db6d; valaddr_reg:x3; val_offset:39933*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 39933*0 + 3*103*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(2122984609,32,FLEN)
NAN_BOXED(7770920,32,FLEN)
NAN_BOXED(1067030937,32,FLEN)
NAN_BOXED(2122984609,32,FLEN)
NAN_BOXED(7770920,32,FLEN)
NAN_BOXED(1067749961,32,FLEN)
NAN_BOXED(2122984609,32,FLEN)
NAN_BOXED(7770920,32,FLEN)
NAN_BOXED(1068708659,32,FLEN)
NAN_BOXED(2122984609,32,FLEN)
NAN_BOXED(7770920,32,FLEN)
NAN_BOXED(1068948333,32,FLEN)
NAN_BOXED(2122984609,32,FLEN)
NAN_BOXED(7770920,32,FLEN)
NAN_BOXED(1069267899,32,FLEN)
NAN_BOXED(2122984609,32,FLEN)
NAN_BOXED(7770920,32,FLEN)
NAN_BOXED(1069827140,32,FLEN)
NAN_BOXED(2122984609,32,FLEN)
NAN_BOXED(7770920,32,FLEN)
NAN_BOXED(1070386380,32,FLEN)
NAN_BOXED(2122984609,32,FLEN)
NAN_BOXED(7770920,32,FLEN)
NAN_BOXED(1071345078,32,FLEN)
NAN_BOXED(2122984609,32,FLEN)
NAN_BOXED(7770920,32,FLEN)
NAN_BOXED(1072064102,32,FLEN)
NAN_BOXED(2122984609,32,FLEN)
NAN_BOXED(7770920,32,FLEN)
NAN_BOXED(1072543451,32,FLEN)
NAN_BOXED(2122984609,32,FLEN)
NAN_BOXED(7770920,32,FLEN)
NAN_BOXED(1073741816,32,FLEN)
NAN_BOXED(2122984609,32,FLEN)
NAN_BOXED(7770920,32,FLEN)
NAN_BOXED(1073741820,32,FLEN)
NAN_BOXED(2122984609,32,FLEN)
NAN_BOXED(7770920,32,FLEN)
NAN_BOXED(1073741822,32,FLEN)
NAN_BOXED(2122984609,32,FLEN)
NAN_BOXED(7770920,32,FLEN)
NAN_BOXED(1291845632,32,FLEN)
NAN_BOXED(2122984609,32,FLEN)
NAN_BOXED(7770920,32,FLEN)
NAN_BOXED(1291845633,32,FLEN)
NAN_BOXED(2122984609,32,FLEN)
NAN_BOXED(7770920,32,FLEN)
NAN_BOXED(1291845635,32,FLEN)
NAN_BOXED(2122984609,32,FLEN)
NAN_BOXED(7770920,32,FLEN)
NAN_BOXED(1291845639,32,FLEN)
NAN_BOXED(2122984609,32,FLEN)
NAN_BOXED(7770920,32,FLEN)
NAN_BOXED(1291845647,32,FLEN)
NAN_BOXED(2122984609,32,FLEN)
NAN_BOXED(7770920,32,FLEN)
NAN_BOXED(1291845663,32,FLEN)
NAN_BOXED(2122984609,32,FLEN)
NAN_BOXED(7770920,32,FLEN)
NAN_BOXED(1291845695,32,FLEN)
NAN_BOXED(2122984609,32,FLEN)
NAN_BOXED(7770920,32,FLEN)
NAN_BOXED(1291845759,32,FLEN)
NAN_BOXED(2122984609,32,FLEN)
NAN_BOXED(7770920,32,FLEN)
NAN_BOXED(1291845887,32,FLEN)
NAN_BOXED(2122984609,32,FLEN)
NAN_BOXED(7770920,32,FLEN)
NAN_BOXED(1291846143,32,FLEN)
NAN_BOXED(2122984609,32,FLEN)
NAN_BOXED(7770920,32,FLEN)
NAN_BOXED(1291846655,32,FLEN)
NAN_BOXED(2122984609,32,FLEN)
NAN_BOXED(7770920,32,FLEN)
NAN_BOXED(1291847679,32,FLEN)
NAN_BOXED(2122984609,32,FLEN)
NAN_BOXED(7770920,32,FLEN)
NAN_BOXED(1291849727,32,FLEN)
NAN_BOXED(2122984609,32,FLEN)
NAN_BOXED(7770920,32,FLEN)
NAN_BOXED(1291853823,32,FLEN)
NAN_BOXED(2122984609,32,FLEN)
NAN_BOXED(7770920,32,FLEN)
NAN_BOXED(1291862015,32,FLEN)
NAN_BOXED(2122984609,32,FLEN)
NAN_BOXED(7770920,32,FLEN)
NAN_BOXED(1291878399,32,FLEN)
NAN_BOXED(2122984609,32,FLEN)
NAN_BOXED(7770920,32,FLEN)
NAN_BOXED(1291911167,32,FLEN)
NAN_BOXED(2122984609,32,FLEN)
NAN_BOXED(7770920,32,FLEN)
NAN_BOXED(1291976703,32,FLEN)
NAN_BOXED(2122984609,32,FLEN)
NAN_BOXED(7770920,32,FLEN)
NAN_BOXED(1292107775,32,FLEN)
NAN_BOXED(2122984609,32,FLEN)
NAN_BOXED(7770920,32,FLEN)
NAN_BOXED(1292369919,32,FLEN)
NAN_BOXED(2122984609,32,FLEN)
NAN_BOXED(7770920,32,FLEN)
NAN_BOXED(1292894207,32,FLEN)
NAN_BOXED(2122984609,32,FLEN)
NAN_BOXED(7770920,32,FLEN)
NAN_BOXED(1293942783,32,FLEN)
NAN_BOXED(2122984609,32,FLEN)
NAN_BOXED(7770920,32,FLEN)
NAN_BOXED(1296039935,32,FLEN)
NAN_BOXED(2122984609,32,FLEN)
NAN_BOXED(7770920,32,FLEN)
NAN_BOXED(1296039936,32,FLEN)
NAN_BOXED(2122984609,32,FLEN)
NAN_BOXED(7770920,32,FLEN)
NAN_BOXED(1298137088,32,FLEN)
NAN_BOXED(2122984609,32,FLEN)
NAN_BOXED(7770920,32,FLEN)
NAN_BOXED(1299185664,32,FLEN)
NAN_BOXED(2122984609,32,FLEN)
NAN_BOXED(7770920,32,FLEN)
NAN_BOXED(1299709952,32,FLEN)
NAN_BOXED(2122984609,32,FLEN)
NAN_BOXED(7770920,32,FLEN)
NAN_BOXED(1299972096,32,FLEN)
NAN_BOXED(2122984609,32,FLEN)
NAN_BOXED(7770920,32,FLEN)
NAN_BOXED(1300103168,32,FLEN)
NAN_BOXED(2122984609,32,FLEN)
NAN_BOXED(7770920,32,FLEN)
NAN_BOXED(1300168704,32,FLEN)
NAN_BOXED(2122984609,32,FLEN)
NAN_BOXED(7770920,32,FLEN)
NAN_BOXED(1300201472,32,FLEN)
NAN_BOXED(2122984609,32,FLEN)
NAN_BOXED(7770920,32,FLEN)
NAN_BOXED(1300217856,32,FLEN)
NAN_BOXED(2122984609,32,FLEN)
NAN_BOXED(7770920,32,FLEN)
NAN_BOXED(1300226048,32,FLEN)
NAN_BOXED(2122984609,32,FLEN)
NAN_BOXED(7770920,32,FLEN)
NAN_BOXED(1300230144,32,FLEN)
NAN_BOXED(2122984609,32,FLEN)
NAN_BOXED(7770920,32,FLEN)
NAN_BOXED(1300232192,32,FLEN)
NAN_BOXED(2122984609,32,FLEN)
NAN_BOXED(7770920,32,FLEN)
NAN_BOXED(1300233216,32,FLEN)
NAN_BOXED(2122984609,32,FLEN)
NAN_BOXED(7770920,32,FLEN)
NAN_BOXED(1300233728,32,FLEN)
NAN_BOXED(2122984609,32,FLEN)
NAN_BOXED(7770920,32,FLEN)
NAN_BOXED(1300233984,32,FLEN)
NAN_BOXED(2122984609,32,FLEN)
NAN_BOXED(7770920,32,FLEN)
NAN_BOXED(1300234112,32,FLEN)
NAN_BOXED(2122984609,32,FLEN)
NAN_BOXED(7770920,32,FLEN)
NAN_BOXED(1300234176,32,FLEN)
NAN_BOXED(2122984609,32,FLEN)
NAN_BOXED(7770920,32,FLEN)
NAN_BOXED(1300234208,32,FLEN)
NAN_BOXED(2122984609,32,FLEN)
NAN_BOXED(7770920,32,FLEN)
NAN_BOXED(1300234224,32,FLEN)
NAN_BOXED(2122984609,32,FLEN)
NAN_BOXED(7770920,32,FLEN)
NAN_BOXED(1300234232,32,FLEN)
NAN_BOXED(2122984609,32,FLEN)
NAN_BOXED(7770920,32,FLEN)
NAN_BOXED(1300234236,32,FLEN)
NAN_BOXED(2122984609,32,FLEN)
NAN_BOXED(7770920,32,FLEN)
NAN_BOXED(1300234238,32,FLEN)
NAN_BOXED(2122984609,32,FLEN)
NAN_BOXED(7770920,32,FLEN)
NAN_BOXED(1300234239,32,FLEN)
NAN_BOXED(2122994410,32,FLEN)
NAN_BOXED(7762518,32,FLEN)
NAN_BOXED(746586112,32,FLEN)
NAN_BOXED(2122994410,32,FLEN)
NAN_BOXED(7762518,32,FLEN)
NAN_BOXED(746586113,32,FLEN)
NAN_BOXED(2122994410,32,FLEN)
NAN_BOXED(7762518,32,FLEN)
NAN_BOXED(746586115,32,FLEN)
NAN_BOXED(2122994410,32,FLEN)
NAN_BOXED(7762518,32,FLEN)
NAN_BOXED(746586119,32,FLEN)
NAN_BOXED(2122994410,32,FLEN)
NAN_BOXED(7762518,32,FLEN)
NAN_BOXED(746586127,32,FLEN)
NAN_BOXED(2122994410,32,FLEN)
NAN_BOXED(7762518,32,FLEN)
NAN_BOXED(746586143,32,FLEN)
NAN_BOXED(2122994410,32,FLEN)
NAN_BOXED(7762518,32,FLEN)
NAN_BOXED(746586175,32,FLEN)
NAN_BOXED(2122994410,32,FLEN)
NAN_BOXED(7762518,32,FLEN)
NAN_BOXED(746586239,32,FLEN)
NAN_BOXED(2122994410,32,FLEN)
NAN_BOXED(7762518,32,FLEN)
NAN_BOXED(746586367,32,FLEN)
NAN_BOXED(2122994410,32,FLEN)
NAN_BOXED(7762518,32,FLEN)
NAN_BOXED(746586623,32,FLEN)
NAN_BOXED(2122994410,32,FLEN)
NAN_BOXED(7762518,32,FLEN)
NAN_BOXED(746587135,32,FLEN)
NAN_BOXED(2122994410,32,FLEN)
NAN_BOXED(7762518,32,FLEN)
NAN_BOXED(746588159,32,FLEN)
NAN_BOXED(2122994410,32,FLEN)
NAN_BOXED(7762518,32,FLEN)
NAN_BOXED(746590207,32,FLEN)
NAN_BOXED(2122994410,32,FLEN)
NAN_BOXED(7762518,32,FLEN)
NAN_BOXED(746594303,32,FLEN)
NAN_BOXED(2122994410,32,FLEN)
NAN_BOXED(7762518,32,FLEN)
NAN_BOXED(746602495,32,FLEN)
NAN_BOXED(2122994410,32,FLEN)
NAN_BOXED(7762518,32,FLEN)
NAN_BOXED(746618879,32,FLEN)
NAN_BOXED(2122994410,32,FLEN)
NAN_BOXED(7762518,32,FLEN)
NAN_BOXED(746651647,32,FLEN)
NAN_BOXED(2122994410,32,FLEN)
NAN_BOXED(7762518,32,FLEN)
NAN_BOXED(746717183,32,FLEN)
NAN_BOXED(2122994410,32,FLEN)
NAN_BOXED(7762518,32,FLEN)
NAN_BOXED(746848255,32,FLEN)
NAN_BOXED(2122994410,32,FLEN)
NAN_BOXED(7762518,32,FLEN)
NAN_BOXED(747110399,32,FLEN)
NAN_BOXED(2122994410,32,FLEN)
NAN_BOXED(7762518,32,FLEN)
NAN_BOXED(747634687,32,FLEN)
NAN_BOXED(2122994410,32,FLEN)
NAN_BOXED(7762518,32,FLEN)
NAN_BOXED(748683263,32,FLEN)
NAN_BOXED(2122994410,32,FLEN)
NAN_BOXED(7762518,32,FLEN)
NAN_BOXED(750780415,32,FLEN)
NAN_BOXED(2122994410,32,FLEN)
NAN_BOXED(7762518,32,FLEN)
NAN_BOXED(750780416,32,FLEN)
NAN_BOXED(2122994410,32,FLEN)
NAN_BOXED(7762518,32,FLEN)
NAN_BOXED(752877568,32,FLEN)
NAN_BOXED(2122994410,32,FLEN)
NAN_BOXED(7762518,32,FLEN)
NAN_BOXED(753926144,32,FLEN)
NAN_BOXED(2122994410,32,FLEN)
NAN_BOXED(7762518,32,FLEN)
NAN_BOXED(754450432,32,FLEN)
NAN_BOXED(2122994410,32,FLEN)
NAN_BOXED(7762518,32,FLEN)
NAN_BOXED(754712576,32,FLEN)
NAN_BOXED(2122994410,32,FLEN)
NAN_BOXED(7762518,32,FLEN)
NAN_BOXED(754843648,32,FLEN)
NAN_BOXED(2122994410,32,FLEN)
NAN_BOXED(7762518,32,FLEN)
NAN_BOXED(754909184,32,FLEN)
NAN_BOXED(2122994410,32,FLEN)
NAN_BOXED(7762518,32,FLEN)
NAN_BOXED(754941952,32,FLEN)
NAN_BOXED(2122994410,32,FLEN)
NAN_BOXED(7762518,32,FLEN)
NAN_BOXED(754958336,32,FLEN)
NAN_BOXED(2122994410,32,FLEN)
NAN_BOXED(7762518,32,FLEN)
NAN_BOXED(754966528,32,FLEN)
NAN_BOXED(2122994410,32,FLEN)
NAN_BOXED(7762518,32,FLEN)
NAN_BOXED(754970624,32,FLEN)
NAN_BOXED(2122994410,32,FLEN)
NAN_BOXED(7762518,32,FLEN)
NAN_BOXED(754972672,32,FLEN)
NAN_BOXED(2122994410,32,FLEN)
NAN_BOXED(7762518,32,FLEN)
NAN_BOXED(754973696,32,FLEN)
NAN_BOXED(2122994410,32,FLEN)
NAN_BOXED(7762518,32,FLEN)
NAN_BOXED(754974208,32,FLEN)
NAN_BOXED(2122994410,32,FLEN)
NAN_BOXED(7762518,32,FLEN)
NAN_BOXED(754974464,32,FLEN)
NAN_BOXED(2122994410,32,FLEN)
NAN_BOXED(7762518,32,FLEN)
NAN_BOXED(754974592,32,FLEN)
NAN_BOXED(2122994410,32,FLEN)
NAN_BOXED(7762518,32,FLEN)
NAN_BOXED(754974656,32,FLEN)
NAN_BOXED(2122994410,32,FLEN)
NAN_BOXED(7762518,32,FLEN)
NAN_BOXED(754974688,32,FLEN)
NAN_BOXED(2122994410,32,FLEN)
NAN_BOXED(7762518,32,FLEN)
NAN_BOXED(754974704,32,FLEN)
NAN_BOXED(2122994410,32,FLEN)
NAN_BOXED(7762518,32,FLEN)
NAN_BOXED(754974712,32,FLEN)
NAN_BOXED(2122994410,32,FLEN)
NAN_BOXED(7762518,32,FLEN)
NAN_BOXED(754974716,32,FLEN)
NAN_BOXED(2122994410,32,FLEN)
NAN_BOXED(7762518,32,FLEN)
NAN_BOXED(754974718,32,FLEN)
NAN_BOXED(2122994410,32,FLEN)
NAN_BOXED(7762518,32,FLEN)
NAN_BOXED(754974719,32,FLEN)
NAN_BOXED(2122994410,32,FLEN)
NAN_BOXED(7762518,32,FLEN)
NAN_BOXED(1065353217,32,FLEN)
NAN_BOXED(2122994410,32,FLEN)
NAN_BOXED(7762518,32,FLEN)
NAN_BOXED(1065353219,32,FLEN)
NAN_BOXED(2122994410,32,FLEN)
NAN_BOXED(7762518,32,FLEN)
NAN_BOXED(1065353223,32,FLEN)
NAN_BOXED(2122994410,32,FLEN)
NAN_BOXED(7762518,32,FLEN)
NAN_BOXED(1067030937,32,FLEN)
NAN_BOXED(2122994410,32,FLEN)
NAN_BOXED(7762518,32,FLEN)
NAN_BOXED(1067749961,32,FLEN)
NAN_BOXED(2122994410,32,FLEN)
NAN_BOXED(7762518,32,FLEN)
NAN_BOXED(1068708659,32,FLEN)
NAN_BOXED(2122994410,32,FLEN)
NAN_BOXED(7762518,32,FLEN)
NAN_BOXED(1068948333,32,FLEN)
NAN_BOXED(2122994410,32,FLEN)
NAN_BOXED(7762518,32,FLEN)
NAN_BOXED(1069267899,32,FLEN)
NAN_BOXED(2122994410,32,FLEN)
NAN_BOXED(7762518,32,FLEN)
NAN_BOXED(1069827140,32,FLEN)
NAN_BOXED(2122994410,32,FLEN)
NAN_BOXED(7762518,32,FLEN)
NAN_BOXED(1070386380,32,FLEN)
NAN_BOXED(2122994410,32,FLEN)
NAN_BOXED(7762518,32,FLEN)
NAN_BOXED(1071345078,32,FLEN)
NAN_BOXED(2122994410,32,FLEN)
NAN_BOXED(7762518,32,FLEN)
NAN_BOXED(1072064102,32,FLEN)
NAN_BOXED(2122994410,32,FLEN)
NAN_BOXED(7762518,32,FLEN)
NAN_BOXED(1072543451,32,FLEN)
NAN_BOXED(2122994410,32,FLEN)
NAN_BOXED(7762518,32,FLEN)
NAN_BOXED(1073741816,32,FLEN)
NAN_BOXED(2122994410,32,FLEN)
NAN_BOXED(7762518,32,FLEN)
NAN_BOXED(1073741820,32,FLEN)
NAN_BOXED(2122994410,32,FLEN)
NAN_BOXED(7762518,32,FLEN)
NAN_BOXED(1073741822,32,FLEN)
NAN_BOXED(2122999280,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872257,32,FLEN)
NAN_BOXED(2122999280,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872259,32,FLEN)
NAN_BOXED(2122999280,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872263,32,FLEN)
NAN_BOXED(2122999280,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2157549977,32,FLEN)
NAN_BOXED(2122999280,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2158269001,32,FLEN)
NAN_BOXED(2122999280,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2159227699,32,FLEN)
NAN_BOXED(2122999280,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2159467373,32,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
