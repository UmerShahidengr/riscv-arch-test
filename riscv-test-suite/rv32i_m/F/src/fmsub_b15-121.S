
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 14:18:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32F/fmsub.s.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.s instruction of the RISC-V RV32F_Zicsr,RV32FD_Zicsr,RV64F_Zicsr,RV64FD_Zicsr extension for the fmsub_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF_Zicsr,RV32IFD_Zicsr,RV64IF_Zicsr,RV64IFD_Zicsr,RV32EF_Zicsr,RV32EFD_Zicsr,RV64EF_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fmsub_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*F.*);def TEST_CASE_1=True;",fmsub_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_15360:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b7cbb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b7cbb; op2val:0x0;
op3val:0x4ccccc; valaddr_reg:x3; val_offset:46080*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46080*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15361:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b7cbb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b7cbb; op2val:0x0;
op3val:0x5b6db6; valaddr_reg:x3; val_offset:46083*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46083*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15362:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b7cbb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b7cbb; op2val:0x0;
op3val:0x666666; valaddr_reg:x3; val_offset:46086*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46086*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15363:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b7cbb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b7cbb; op2val:0x0;
op3val:0x6db6db; valaddr_reg:x3; val_offset:46089*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46089*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15364:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b7cbb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b7cbb; op2val:0x0;
op3val:0x7ffff8; valaddr_reg:x3; val_offset:46092*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46092*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15365:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b7cbb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b7cbb; op2val:0x0;
op3val:0x7ffffc; valaddr_reg:x3; val_offset:46095*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46095*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15366:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b7cbb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b7cbb; op2val:0x0;
op3val:0x7ffffe; valaddr_reg:x3; val_offset:46098*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46098*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15367:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b7cbb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b7cbb; op2val:0x0;
op3val:0xb800000; valaddr_reg:x3; val_offset:46101*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46101*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15368:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b7cbb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b7cbb; op2val:0x0;
op3val:0xb800001; valaddr_reg:x3; val_offset:46104*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46104*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15369:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b7cbb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b7cbb; op2val:0x0;
op3val:0xb800003; valaddr_reg:x3; val_offset:46107*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46107*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15370:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b7cbb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b7cbb; op2val:0x0;
op3val:0xb800007; valaddr_reg:x3; val_offset:46110*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46110*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15371:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b7cbb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b7cbb; op2val:0x0;
op3val:0xb80000f; valaddr_reg:x3; val_offset:46113*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46113*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15372:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b7cbb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b7cbb; op2val:0x0;
op3val:0xb80001f; valaddr_reg:x3; val_offset:46116*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46116*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15373:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b7cbb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b7cbb; op2val:0x0;
op3val:0xb80003f; valaddr_reg:x3; val_offset:46119*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46119*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15374:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b7cbb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b7cbb; op2val:0x0;
op3val:0xb80007f; valaddr_reg:x3; val_offset:46122*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46122*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15375:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b7cbb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b7cbb; op2val:0x0;
op3val:0xb8000ff; valaddr_reg:x3; val_offset:46125*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46125*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15376:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b7cbb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b7cbb; op2val:0x0;
op3val:0xb8001ff; valaddr_reg:x3; val_offset:46128*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46128*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15377:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b7cbb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b7cbb; op2val:0x0;
op3val:0xb8003ff; valaddr_reg:x3; val_offset:46131*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46131*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15378:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b7cbb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b7cbb; op2val:0x0;
op3val:0xb8007ff; valaddr_reg:x3; val_offset:46134*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46134*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15379:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b7cbb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b7cbb; op2val:0x0;
op3val:0xb800fff; valaddr_reg:x3; val_offset:46137*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46137*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15380:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b7cbb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b7cbb; op2val:0x0;
op3val:0xb801fff; valaddr_reg:x3; val_offset:46140*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46140*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15381:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b7cbb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b7cbb; op2val:0x0;
op3val:0xb803fff; valaddr_reg:x3; val_offset:46143*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46143*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15382:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b7cbb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b7cbb; op2val:0x0;
op3val:0xb807fff; valaddr_reg:x3; val_offset:46146*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46146*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15383:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b7cbb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b7cbb; op2val:0x0;
op3val:0xb80ffff; valaddr_reg:x3; val_offset:46149*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46149*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15384:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b7cbb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b7cbb; op2val:0x0;
op3val:0xb81ffff; valaddr_reg:x3; val_offset:46152*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46152*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15385:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b7cbb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b7cbb; op2val:0x0;
op3val:0xb83ffff; valaddr_reg:x3; val_offset:46155*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46155*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15386:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b7cbb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b7cbb; op2val:0x0;
op3val:0xb87ffff; valaddr_reg:x3; val_offset:46158*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46158*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15387:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b7cbb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b7cbb; op2val:0x0;
op3val:0xb8fffff; valaddr_reg:x3; val_offset:46161*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46161*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15388:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b7cbb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b7cbb; op2val:0x0;
op3val:0xb9fffff; valaddr_reg:x3; val_offset:46164*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46164*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15389:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b7cbb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b7cbb; op2val:0x0;
op3val:0xbbfffff; valaddr_reg:x3; val_offset:46167*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46167*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15390:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b7cbb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b7cbb; op2val:0x0;
op3val:0xbc00000; valaddr_reg:x3; val_offset:46170*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46170*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15391:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b7cbb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b7cbb; op2val:0x0;
op3val:0xbe00000; valaddr_reg:x3; val_offset:46173*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46173*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15392:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b7cbb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b7cbb; op2val:0x0;
op3val:0xbf00000; valaddr_reg:x3; val_offset:46176*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46176*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15393:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b7cbb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b7cbb; op2val:0x0;
op3val:0xbf80000; valaddr_reg:x3; val_offset:46179*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46179*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15394:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b7cbb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b7cbb; op2val:0x0;
op3val:0xbfc0000; valaddr_reg:x3; val_offset:46182*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46182*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15395:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b7cbb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b7cbb; op2val:0x0;
op3val:0xbfe0000; valaddr_reg:x3; val_offset:46185*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46185*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15396:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b7cbb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b7cbb; op2val:0x0;
op3val:0xbff0000; valaddr_reg:x3; val_offset:46188*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46188*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15397:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b7cbb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b7cbb; op2val:0x0;
op3val:0xbff8000; valaddr_reg:x3; val_offset:46191*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46191*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15398:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b7cbb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b7cbb; op2val:0x0;
op3val:0xbffc000; valaddr_reg:x3; val_offset:46194*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46194*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15399:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b7cbb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b7cbb; op2val:0x0;
op3val:0xbffe000; valaddr_reg:x3; val_offset:46197*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46197*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15400:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b7cbb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b7cbb; op2val:0x0;
op3val:0xbfff000; valaddr_reg:x3; val_offset:46200*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46200*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15401:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b7cbb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b7cbb; op2val:0x0;
op3val:0xbfff800; valaddr_reg:x3; val_offset:46203*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46203*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15402:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b7cbb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b7cbb; op2val:0x0;
op3val:0xbfffc00; valaddr_reg:x3; val_offset:46206*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46206*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15403:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b7cbb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b7cbb; op2val:0x0;
op3val:0xbfffe00; valaddr_reg:x3; val_offset:46209*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46209*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15404:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b7cbb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b7cbb; op2val:0x0;
op3val:0xbffff00; valaddr_reg:x3; val_offset:46212*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46212*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15405:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b7cbb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b7cbb; op2val:0x0;
op3val:0xbffff80; valaddr_reg:x3; val_offset:46215*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46215*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15406:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b7cbb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b7cbb; op2val:0x0;
op3val:0xbffffc0; valaddr_reg:x3; val_offset:46218*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46218*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15407:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b7cbb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b7cbb; op2val:0x0;
op3val:0xbffffe0; valaddr_reg:x3; val_offset:46221*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46221*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15408:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b7cbb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b7cbb; op2val:0x0;
op3val:0xbfffff0; valaddr_reg:x3; val_offset:46224*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46224*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15409:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b7cbb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b7cbb; op2val:0x0;
op3val:0xbfffff8; valaddr_reg:x3; val_offset:46227*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46227*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15410:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b7cbb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b7cbb; op2val:0x0;
op3val:0xbfffffc; valaddr_reg:x3; val_offset:46230*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46230*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15411:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b7cbb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b7cbb; op2val:0x0;
op3val:0xbfffffe; valaddr_reg:x3; val_offset:46233*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46233*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15412:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b7cbb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b7cbb; op2val:0x0;
op3val:0xbffffff; valaddr_reg:x3; val_offset:46236*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46236*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15413:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c2956 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68eac3 and fs3 == 0 and fe3 == 0x3f and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c2956; op2val:0x68eac3;
op3val:0x1f800000; valaddr_reg:x3; val_offset:46239*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46239*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15414:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c2956 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68eac3 and fs3 == 0 and fe3 == 0x3f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c2956; op2val:0x68eac3;
op3val:0x1f800001; valaddr_reg:x3; val_offset:46242*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46242*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15415:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c2956 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68eac3 and fs3 == 0 and fe3 == 0x3f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c2956; op2val:0x68eac3;
op3val:0x1f800003; valaddr_reg:x3; val_offset:46245*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46245*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15416:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c2956 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68eac3 and fs3 == 0 and fe3 == 0x3f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c2956; op2val:0x68eac3;
op3val:0x1f800007; valaddr_reg:x3; val_offset:46248*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46248*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15417:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c2956 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68eac3 and fs3 == 0 and fe3 == 0x3f and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c2956; op2val:0x68eac3;
op3val:0x1f80000f; valaddr_reg:x3; val_offset:46251*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46251*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15418:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c2956 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68eac3 and fs3 == 0 and fe3 == 0x3f and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c2956; op2val:0x68eac3;
op3val:0x1f80001f; valaddr_reg:x3; val_offset:46254*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46254*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15419:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c2956 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68eac3 and fs3 == 0 and fe3 == 0x3f and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c2956; op2val:0x68eac3;
op3val:0x1f80003f; valaddr_reg:x3; val_offset:46257*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46257*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15420:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c2956 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68eac3 and fs3 == 0 and fe3 == 0x3f and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c2956; op2val:0x68eac3;
op3val:0x1f80007f; valaddr_reg:x3; val_offset:46260*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46260*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15421:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c2956 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68eac3 and fs3 == 0 and fe3 == 0x3f and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c2956; op2val:0x68eac3;
op3val:0x1f8000ff; valaddr_reg:x3; val_offset:46263*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46263*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15422:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c2956 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68eac3 and fs3 == 0 and fe3 == 0x3f and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c2956; op2val:0x68eac3;
op3val:0x1f8001ff; valaddr_reg:x3; val_offset:46266*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46266*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15423:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c2956 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68eac3 and fs3 == 0 and fe3 == 0x3f and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c2956; op2val:0x68eac3;
op3val:0x1f8003ff; valaddr_reg:x3; val_offset:46269*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46269*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15424:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c2956 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68eac3 and fs3 == 0 and fe3 == 0x3f and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c2956; op2val:0x68eac3;
op3val:0x1f8007ff; valaddr_reg:x3; val_offset:46272*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46272*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15425:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c2956 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68eac3 and fs3 == 0 and fe3 == 0x3f and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c2956; op2val:0x68eac3;
op3val:0x1f800fff; valaddr_reg:x3; val_offset:46275*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46275*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15426:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c2956 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68eac3 and fs3 == 0 and fe3 == 0x3f and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c2956; op2val:0x68eac3;
op3val:0x1f801fff; valaddr_reg:x3; val_offset:46278*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46278*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15427:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c2956 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68eac3 and fs3 == 0 and fe3 == 0x3f and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c2956; op2val:0x68eac3;
op3val:0x1f803fff; valaddr_reg:x3; val_offset:46281*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46281*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15428:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c2956 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68eac3 and fs3 == 0 and fe3 == 0x3f and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c2956; op2val:0x68eac3;
op3val:0x1f807fff; valaddr_reg:x3; val_offset:46284*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46284*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15429:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c2956 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68eac3 and fs3 == 0 and fe3 == 0x3f and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c2956; op2val:0x68eac3;
op3val:0x1f80ffff; valaddr_reg:x3; val_offset:46287*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46287*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15430:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c2956 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68eac3 and fs3 == 0 and fe3 == 0x3f and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c2956; op2val:0x68eac3;
op3val:0x1f81ffff; valaddr_reg:x3; val_offset:46290*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46290*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15431:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c2956 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68eac3 and fs3 == 0 and fe3 == 0x3f and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c2956; op2val:0x68eac3;
op3val:0x1f83ffff; valaddr_reg:x3; val_offset:46293*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46293*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15432:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c2956 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68eac3 and fs3 == 0 and fe3 == 0x3f and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c2956; op2val:0x68eac3;
op3val:0x1f87ffff; valaddr_reg:x3; val_offset:46296*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46296*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15433:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c2956 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68eac3 and fs3 == 0 and fe3 == 0x3f and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c2956; op2val:0x68eac3;
op3val:0x1f8fffff; valaddr_reg:x3; val_offset:46299*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46299*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15434:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c2956 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68eac3 and fs3 == 0 and fe3 == 0x3f and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c2956; op2val:0x68eac3;
op3val:0x1f9fffff; valaddr_reg:x3; val_offset:46302*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46302*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15435:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c2956 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68eac3 and fs3 == 0 and fe3 == 0x3f and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c2956; op2val:0x68eac3;
op3val:0x1fbfffff; valaddr_reg:x3; val_offset:46305*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46305*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15436:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c2956 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68eac3 and fs3 == 0 and fe3 == 0x3f and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c2956; op2val:0x68eac3;
op3val:0x1fc00000; valaddr_reg:x3; val_offset:46308*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46308*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15437:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c2956 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68eac3 and fs3 == 0 and fe3 == 0x3f and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c2956; op2val:0x68eac3;
op3val:0x1fe00000; valaddr_reg:x3; val_offset:46311*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46311*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15438:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c2956 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68eac3 and fs3 == 0 and fe3 == 0x3f and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c2956; op2val:0x68eac3;
op3val:0x1ff00000; valaddr_reg:x3; val_offset:46314*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46314*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15439:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c2956 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68eac3 and fs3 == 0 and fe3 == 0x3f and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c2956; op2val:0x68eac3;
op3val:0x1ff80000; valaddr_reg:x3; val_offset:46317*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46317*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15440:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c2956 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68eac3 and fs3 == 0 and fe3 == 0x3f and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c2956; op2val:0x68eac3;
op3val:0x1ffc0000; valaddr_reg:x3; val_offset:46320*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46320*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15441:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c2956 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68eac3 and fs3 == 0 and fe3 == 0x3f and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c2956; op2val:0x68eac3;
op3val:0x1ffe0000; valaddr_reg:x3; val_offset:46323*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46323*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15442:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c2956 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68eac3 and fs3 == 0 and fe3 == 0x3f and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c2956; op2val:0x68eac3;
op3val:0x1fff0000; valaddr_reg:x3; val_offset:46326*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46326*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15443:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c2956 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68eac3 and fs3 == 0 and fe3 == 0x3f and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c2956; op2val:0x68eac3;
op3val:0x1fff8000; valaddr_reg:x3; val_offset:46329*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46329*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15444:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c2956 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68eac3 and fs3 == 0 and fe3 == 0x3f and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c2956; op2val:0x68eac3;
op3val:0x1fffc000; valaddr_reg:x3; val_offset:46332*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46332*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15445:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c2956 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68eac3 and fs3 == 0 and fe3 == 0x3f and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c2956; op2val:0x68eac3;
op3val:0x1fffe000; valaddr_reg:x3; val_offset:46335*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46335*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15446:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c2956 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68eac3 and fs3 == 0 and fe3 == 0x3f and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c2956; op2val:0x68eac3;
op3val:0x1ffff000; valaddr_reg:x3; val_offset:46338*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46338*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15447:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c2956 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68eac3 and fs3 == 0 and fe3 == 0x3f and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c2956; op2val:0x68eac3;
op3val:0x1ffff800; valaddr_reg:x3; val_offset:46341*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46341*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15448:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c2956 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68eac3 and fs3 == 0 and fe3 == 0x3f and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c2956; op2val:0x68eac3;
op3val:0x1ffffc00; valaddr_reg:x3; val_offset:46344*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46344*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15449:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c2956 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68eac3 and fs3 == 0 and fe3 == 0x3f and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c2956; op2val:0x68eac3;
op3val:0x1ffffe00; valaddr_reg:x3; val_offset:46347*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46347*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15450:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c2956 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68eac3 and fs3 == 0 and fe3 == 0x3f and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c2956; op2val:0x68eac3;
op3val:0x1fffff00; valaddr_reg:x3; val_offset:46350*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46350*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15451:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c2956 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68eac3 and fs3 == 0 and fe3 == 0x3f and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c2956; op2val:0x68eac3;
op3val:0x1fffff80; valaddr_reg:x3; val_offset:46353*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46353*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15452:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c2956 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68eac3 and fs3 == 0 and fe3 == 0x3f and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c2956; op2val:0x68eac3;
op3val:0x1fffffc0; valaddr_reg:x3; val_offset:46356*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46356*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15453:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c2956 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68eac3 and fs3 == 0 and fe3 == 0x3f and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c2956; op2val:0x68eac3;
op3val:0x1fffffe0; valaddr_reg:x3; val_offset:46359*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46359*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15454:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c2956 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68eac3 and fs3 == 0 and fe3 == 0x3f and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c2956; op2val:0x68eac3;
op3val:0x1ffffff0; valaddr_reg:x3; val_offset:46362*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46362*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15455:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c2956 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68eac3 and fs3 == 0 and fe3 == 0x3f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c2956; op2val:0x68eac3;
op3val:0x1ffffff8; valaddr_reg:x3; val_offset:46365*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46365*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15456:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c2956 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68eac3 and fs3 == 0 and fe3 == 0x3f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c2956; op2val:0x68eac3;
op3val:0x1ffffffc; valaddr_reg:x3; val_offset:46368*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46368*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15457:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c2956 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68eac3 and fs3 == 0 and fe3 == 0x3f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c2956; op2val:0x68eac3;
op3val:0x1ffffffe; valaddr_reg:x3; val_offset:46371*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46371*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15458:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c2956 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68eac3 and fs3 == 0 and fe3 == 0x3f and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c2956; op2val:0x68eac3;
op3val:0x1fffffff; valaddr_reg:x3; val_offset:46374*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46374*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15459:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c2956 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68eac3 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c2956; op2val:0x68eac3;
op3val:0x3f800001; valaddr_reg:x3; val_offset:46377*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46377*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15460:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c2956 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68eac3 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c2956; op2val:0x68eac3;
op3val:0x3f800003; valaddr_reg:x3; val_offset:46380*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46380*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15461:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c2956 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68eac3 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c2956; op2val:0x68eac3;
op3val:0x3f800007; valaddr_reg:x3; val_offset:46383*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46383*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15462:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c2956 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68eac3 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c2956; op2val:0x68eac3;
op3val:0x3f999999; valaddr_reg:x3; val_offset:46386*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46386*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15463:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c2956 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68eac3 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c2956; op2val:0x68eac3;
op3val:0x3fa49249; valaddr_reg:x3; val_offset:46389*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46389*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15464:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c2956 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68eac3 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c2956; op2val:0x68eac3;
op3val:0x3fb33333; valaddr_reg:x3; val_offset:46392*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46392*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15465:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c2956 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68eac3 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c2956; op2val:0x68eac3;
op3val:0x3fb6db6d; valaddr_reg:x3; val_offset:46395*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46395*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15466:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c2956 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68eac3 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c2956; op2val:0x68eac3;
op3val:0x3fbbbbbb; valaddr_reg:x3; val_offset:46398*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46398*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15467:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c2956 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68eac3 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c2956; op2val:0x68eac3;
op3val:0x3fc44444; valaddr_reg:x3; val_offset:46401*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46401*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15468:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c2956 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68eac3 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c2956; op2val:0x68eac3;
op3val:0x3fcccccc; valaddr_reg:x3; val_offset:46404*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46404*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15469:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c2956 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68eac3 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c2956; op2val:0x68eac3;
op3val:0x3fdb6db6; valaddr_reg:x3; val_offset:46407*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46407*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15470:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c2956 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68eac3 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c2956; op2val:0x68eac3;
op3val:0x3fe66666; valaddr_reg:x3; val_offset:46410*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46410*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15471:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c2956 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68eac3 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c2956; op2val:0x68eac3;
op3val:0x3fedb6db; valaddr_reg:x3; val_offset:46413*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46413*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15472:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c2956 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68eac3 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c2956; op2val:0x68eac3;
op3val:0x3ffffff8; valaddr_reg:x3; val_offset:46416*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46416*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15473:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c2956 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68eac3 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c2956; op2val:0x68eac3;
op3val:0x3ffffffc; valaddr_reg:x3; val_offset:46419*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46419*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15474:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c2956 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68eac3 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c2956; op2val:0x68eac3;
op3val:0x3ffffffe; valaddr_reg:x3; val_offset:46422*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46422*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15475:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1e2094 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x4f39b8 and fs3 == 0 and fe3 == 0xd0 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9e2094; op2val:0x404f39b8;
op3val:0x68000000; valaddr_reg:x3; val_offset:46425*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46425*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15476:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1e2094 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x4f39b8 and fs3 == 0 and fe3 == 0xd0 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9e2094; op2val:0x404f39b8;
op3val:0x68000001; valaddr_reg:x3; val_offset:46428*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46428*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15477:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1e2094 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x4f39b8 and fs3 == 0 and fe3 == 0xd0 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9e2094; op2val:0x404f39b8;
op3val:0x68000003; valaddr_reg:x3; val_offset:46431*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46431*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15478:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1e2094 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x4f39b8 and fs3 == 0 and fe3 == 0xd0 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9e2094; op2val:0x404f39b8;
op3val:0x68000007; valaddr_reg:x3; val_offset:46434*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46434*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15479:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1e2094 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x4f39b8 and fs3 == 0 and fe3 == 0xd0 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9e2094; op2val:0x404f39b8;
op3val:0x6800000f; valaddr_reg:x3; val_offset:46437*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46437*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15480:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1e2094 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x4f39b8 and fs3 == 0 and fe3 == 0xd0 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9e2094; op2val:0x404f39b8;
op3val:0x6800001f; valaddr_reg:x3; val_offset:46440*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46440*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15481:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1e2094 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x4f39b8 and fs3 == 0 and fe3 == 0xd0 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9e2094; op2val:0x404f39b8;
op3val:0x6800003f; valaddr_reg:x3; val_offset:46443*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46443*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15482:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1e2094 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x4f39b8 and fs3 == 0 and fe3 == 0xd0 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9e2094; op2val:0x404f39b8;
op3val:0x6800007f; valaddr_reg:x3; val_offset:46446*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46446*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15483:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1e2094 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x4f39b8 and fs3 == 0 and fe3 == 0xd0 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9e2094; op2val:0x404f39b8;
op3val:0x680000ff; valaddr_reg:x3; val_offset:46449*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46449*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15484:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1e2094 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x4f39b8 and fs3 == 0 and fe3 == 0xd0 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9e2094; op2val:0x404f39b8;
op3val:0x680001ff; valaddr_reg:x3; val_offset:46452*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46452*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15485:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1e2094 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x4f39b8 and fs3 == 0 and fe3 == 0xd0 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9e2094; op2val:0x404f39b8;
op3val:0x680003ff; valaddr_reg:x3; val_offset:46455*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46455*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15486:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1e2094 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x4f39b8 and fs3 == 0 and fe3 == 0xd0 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9e2094; op2val:0x404f39b8;
op3val:0x680007ff; valaddr_reg:x3; val_offset:46458*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46458*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15487:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1e2094 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x4f39b8 and fs3 == 0 and fe3 == 0xd0 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9e2094; op2val:0x404f39b8;
op3val:0x68000fff; valaddr_reg:x3; val_offset:46461*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46461*0 + 3*120*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(2124119227,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5033164,32,FLEN)
NAN_BOXED(2124119227,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5991862,32,FLEN)
NAN_BOXED(2124119227,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(6710886,32,FLEN)
NAN_BOXED(2124119227,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7190235,32,FLEN)
NAN_BOXED(2124119227,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388600,32,FLEN)
NAN_BOXED(2124119227,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388604,32,FLEN)
NAN_BOXED(2124119227,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388606,32,FLEN)
NAN_BOXED(2124119227,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(192937984,32,FLEN)
NAN_BOXED(2124119227,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(192937985,32,FLEN)
NAN_BOXED(2124119227,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(192937987,32,FLEN)
NAN_BOXED(2124119227,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(192937991,32,FLEN)
NAN_BOXED(2124119227,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(192937999,32,FLEN)
NAN_BOXED(2124119227,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(192938015,32,FLEN)
NAN_BOXED(2124119227,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(192938047,32,FLEN)
NAN_BOXED(2124119227,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(192938111,32,FLEN)
NAN_BOXED(2124119227,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(192938239,32,FLEN)
NAN_BOXED(2124119227,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(192938495,32,FLEN)
NAN_BOXED(2124119227,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(192939007,32,FLEN)
NAN_BOXED(2124119227,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(192940031,32,FLEN)
NAN_BOXED(2124119227,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(192942079,32,FLEN)
NAN_BOXED(2124119227,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(192946175,32,FLEN)
NAN_BOXED(2124119227,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(192954367,32,FLEN)
NAN_BOXED(2124119227,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(192970751,32,FLEN)
NAN_BOXED(2124119227,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(193003519,32,FLEN)
NAN_BOXED(2124119227,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(193069055,32,FLEN)
NAN_BOXED(2124119227,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(193200127,32,FLEN)
NAN_BOXED(2124119227,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(193462271,32,FLEN)
NAN_BOXED(2124119227,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(193986559,32,FLEN)
NAN_BOXED(2124119227,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(195035135,32,FLEN)
NAN_BOXED(2124119227,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(197132287,32,FLEN)
NAN_BOXED(2124119227,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(197132288,32,FLEN)
NAN_BOXED(2124119227,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(199229440,32,FLEN)
NAN_BOXED(2124119227,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(200278016,32,FLEN)
NAN_BOXED(2124119227,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(200802304,32,FLEN)
NAN_BOXED(2124119227,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(201064448,32,FLEN)
NAN_BOXED(2124119227,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(201195520,32,FLEN)
NAN_BOXED(2124119227,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(201261056,32,FLEN)
NAN_BOXED(2124119227,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(201293824,32,FLEN)
NAN_BOXED(2124119227,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(201310208,32,FLEN)
NAN_BOXED(2124119227,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(201318400,32,FLEN)
NAN_BOXED(2124119227,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(201322496,32,FLEN)
NAN_BOXED(2124119227,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(201324544,32,FLEN)
NAN_BOXED(2124119227,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(201325568,32,FLEN)
NAN_BOXED(2124119227,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(201326080,32,FLEN)
NAN_BOXED(2124119227,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(201326336,32,FLEN)
NAN_BOXED(2124119227,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(201326464,32,FLEN)
NAN_BOXED(2124119227,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(201326528,32,FLEN)
NAN_BOXED(2124119227,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(201326560,32,FLEN)
NAN_BOXED(2124119227,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(201326576,32,FLEN)
NAN_BOXED(2124119227,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(201326584,32,FLEN)
NAN_BOXED(2124119227,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(201326588,32,FLEN)
NAN_BOXED(2124119227,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(201326590,32,FLEN)
NAN_BOXED(2124119227,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(201326591,32,FLEN)
NAN_BOXED(2124163414,32,FLEN)
NAN_BOXED(6875843,32,FLEN)
NAN_BOXED(528482304,32,FLEN)
NAN_BOXED(2124163414,32,FLEN)
NAN_BOXED(6875843,32,FLEN)
NAN_BOXED(528482305,32,FLEN)
NAN_BOXED(2124163414,32,FLEN)
NAN_BOXED(6875843,32,FLEN)
NAN_BOXED(528482307,32,FLEN)
NAN_BOXED(2124163414,32,FLEN)
NAN_BOXED(6875843,32,FLEN)
NAN_BOXED(528482311,32,FLEN)
NAN_BOXED(2124163414,32,FLEN)
NAN_BOXED(6875843,32,FLEN)
NAN_BOXED(528482319,32,FLEN)
NAN_BOXED(2124163414,32,FLEN)
NAN_BOXED(6875843,32,FLEN)
NAN_BOXED(528482335,32,FLEN)
NAN_BOXED(2124163414,32,FLEN)
NAN_BOXED(6875843,32,FLEN)
NAN_BOXED(528482367,32,FLEN)
NAN_BOXED(2124163414,32,FLEN)
NAN_BOXED(6875843,32,FLEN)
NAN_BOXED(528482431,32,FLEN)
NAN_BOXED(2124163414,32,FLEN)
NAN_BOXED(6875843,32,FLEN)
NAN_BOXED(528482559,32,FLEN)
NAN_BOXED(2124163414,32,FLEN)
NAN_BOXED(6875843,32,FLEN)
NAN_BOXED(528482815,32,FLEN)
NAN_BOXED(2124163414,32,FLEN)
NAN_BOXED(6875843,32,FLEN)
NAN_BOXED(528483327,32,FLEN)
NAN_BOXED(2124163414,32,FLEN)
NAN_BOXED(6875843,32,FLEN)
NAN_BOXED(528484351,32,FLEN)
NAN_BOXED(2124163414,32,FLEN)
NAN_BOXED(6875843,32,FLEN)
NAN_BOXED(528486399,32,FLEN)
NAN_BOXED(2124163414,32,FLEN)
NAN_BOXED(6875843,32,FLEN)
NAN_BOXED(528490495,32,FLEN)
NAN_BOXED(2124163414,32,FLEN)
NAN_BOXED(6875843,32,FLEN)
NAN_BOXED(528498687,32,FLEN)
NAN_BOXED(2124163414,32,FLEN)
NAN_BOXED(6875843,32,FLEN)
NAN_BOXED(528515071,32,FLEN)
NAN_BOXED(2124163414,32,FLEN)
NAN_BOXED(6875843,32,FLEN)
NAN_BOXED(528547839,32,FLEN)
NAN_BOXED(2124163414,32,FLEN)
NAN_BOXED(6875843,32,FLEN)
NAN_BOXED(528613375,32,FLEN)
NAN_BOXED(2124163414,32,FLEN)
NAN_BOXED(6875843,32,FLEN)
NAN_BOXED(528744447,32,FLEN)
NAN_BOXED(2124163414,32,FLEN)
NAN_BOXED(6875843,32,FLEN)
NAN_BOXED(529006591,32,FLEN)
NAN_BOXED(2124163414,32,FLEN)
NAN_BOXED(6875843,32,FLEN)
NAN_BOXED(529530879,32,FLEN)
NAN_BOXED(2124163414,32,FLEN)
NAN_BOXED(6875843,32,FLEN)
NAN_BOXED(530579455,32,FLEN)
NAN_BOXED(2124163414,32,FLEN)
NAN_BOXED(6875843,32,FLEN)
NAN_BOXED(532676607,32,FLEN)
NAN_BOXED(2124163414,32,FLEN)
NAN_BOXED(6875843,32,FLEN)
NAN_BOXED(532676608,32,FLEN)
NAN_BOXED(2124163414,32,FLEN)
NAN_BOXED(6875843,32,FLEN)
NAN_BOXED(534773760,32,FLEN)
NAN_BOXED(2124163414,32,FLEN)
NAN_BOXED(6875843,32,FLEN)
NAN_BOXED(535822336,32,FLEN)
NAN_BOXED(2124163414,32,FLEN)
NAN_BOXED(6875843,32,FLEN)
NAN_BOXED(536346624,32,FLEN)
NAN_BOXED(2124163414,32,FLEN)
NAN_BOXED(6875843,32,FLEN)
NAN_BOXED(536608768,32,FLEN)
NAN_BOXED(2124163414,32,FLEN)
NAN_BOXED(6875843,32,FLEN)
NAN_BOXED(536739840,32,FLEN)
NAN_BOXED(2124163414,32,FLEN)
NAN_BOXED(6875843,32,FLEN)
NAN_BOXED(536805376,32,FLEN)
NAN_BOXED(2124163414,32,FLEN)
NAN_BOXED(6875843,32,FLEN)
NAN_BOXED(536838144,32,FLEN)
NAN_BOXED(2124163414,32,FLEN)
NAN_BOXED(6875843,32,FLEN)
NAN_BOXED(536854528,32,FLEN)
NAN_BOXED(2124163414,32,FLEN)
NAN_BOXED(6875843,32,FLEN)
NAN_BOXED(536862720,32,FLEN)
NAN_BOXED(2124163414,32,FLEN)
NAN_BOXED(6875843,32,FLEN)
NAN_BOXED(536866816,32,FLEN)
NAN_BOXED(2124163414,32,FLEN)
NAN_BOXED(6875843,32,FLEN)
NAN_BOXED(536868864,32,FLEN)
NAN_BOXED(2124163414,32,FLEN)
NAN_BOXED(6875843,32,FLEN)
NAN_BOXED(536869888,32,FLEN)
NAN_BOXED(2124163414,32,FLEN)
NAN_BOXED(6875843,32,FLEN)
NAN_BOXED(536870400,32,FLEN)
NAN_BOXED(2124163414,32,FLEN)
NAN_BOXED(6875843,32,FLEN)
NAN_BOXED(536870656,32,FLEN)
NAN_BOXED(2124163414,32,FLEN)
NAN_BOXED(6875843,32,FLEN)
NAN_BOXED(536870784,32,FLEN)
NAN_BOXED(2124163414,32,FLEN)
NAN_BOXED(6875843,32,FLEN)
NAN_BOXED(536870848,32,FLEN)
NAN_BOXED(2124163414,32,FLEN)
NAN_BOXED(6875843,32,FLEN)
NAN_BOXED(536870880,32,FLEN)
NAN_BOXED(2124163414,32,FLEN)
NAN_BOXED(6875843,32,FLEN)
NAN_BOXED(536870896,32,FLEN)
NAN_BOXED(2124163414,32,FLEN)
NAN_BOXED(6875843,32,FLEN)
NAN_BOXED(536870904,32,FLEN)
NAN_BOXED(2124163414,32,FLEN)
NAN_BOXED(6875843,32,FLEN)
NAN_BOXED(536870908,32,FLEN)
NAN_BOXED(2124163414,32,FLEN)
NAN_BOXED(6875843,32,FLEN)
NAN_BOXED(536870910,32,FLEN)
NAN_BOXED(2124163414,32,FLEN)
NAN_BOXED(6875843,32,FLEN)
NAN_BOXED(536870911,32,FLEN)
NAN_BOXED(2124163414,32,FLEN)
NAN_BOXED(6875843,32,FLEN)
NAN_BOXED(1065353217,32,FLEN)
NAN_BOXED(2124163414,32,FLEN)
NAN_BOXED(6875843,32,FLEN)
NAN_BOXED(1065353219,32,FLEN)
NAN_BOXED(2124163414,32,FLEN)
NAN_BOXED(6875843,32,FLEN)
NAN_BOXED(1065353223,32,FLEN)
NAN_BOXED(2124163414,32,FLEN)
NAN_BOXED(6875843,32,FLEN)
NAN_BOXED(1067030937,32,FLEN)
NAN_BOXED(2124163414,32,FLEN)
NAN_BOXED(6875843,32,FLEN)
NAN_BOXED(1067749961,32,FLEN)
NAN_BOXED(2124163414,32,FLEN)
NAN_BOXED(6875843,32,FLEN)
NAN_BOXED(1068708659,32,FLEN)
NAN_BOXED(2124163414,32,FLEN)
NAN_BOXED(6875843,32,FLEN)
NAN_BOXED(1068948333,32,FLEN)
NAN_BOXED(2124163414,32,FLEN)
NAN_BOXED(6875843,32,FLEN)
NAN_BOXED(1069267899,32,FLEN)
NAN_BOXED(2124163414,32,FLEN)
NAN_BOXED(6875843,32,FLEN)
NAN_BOXED(1069827140,32,FLEN)
NAN_BOXED(2124163414,32,FLEN)
NAN_BOXED(6875843,32,FLEN)
NAN_BOXED(1070386380,32,FLEN)
NAN_BOXED(2124163414,32,FLEN)
NAN_BOXED(6875843,32,FLEN)
NAN_BOXED(1071345078,32,FLEN)
NAN_BOXED(2124163414,32,FLEN)
NAN_BOXED(6875843,32,FLEN)
NAN_BOXED(1072064102,32,FLEN)
NAN_BOXED(2124163414,32,FLEN)
NAN_BOXED(6875843,32,FLEN)
NAN_BOXED(1072543451,32,FLEN)
NAN_BOXED(2124163414,32,FLEN)
NAN_BOXED(6875843,32,FLEN)
NAN_BOXED(1073741816,32,FLEN)
NAN_BOXED(2124163414,32,FLEN)
NAN_BOXED(6875843,32,FLEN)
NAN_BOXED(1073741820,32,FLEN)
NAN_BOXED(2124163414,32,FLEN)
NAN_BOXED(6875843,32,FLEN)
NAN_BOXED(1073741822,32,FLEN)
NAN_BOXED(2124292244,32,FLEN)
NAN_BOXED(1078933944,32,FLEN)
NAN_BOXED(1744830464,32,FLEN)
NAN_BOXED(2124292244,32,FLEN)
NAN_BOXED(1078933944,32,FLEN)
NAN_BOXED(1744830465,32,FLEN)
NAN_BOXED(2124292244,32,FLEN)
NAN_BOXED(1078933944,32,FLEN)
NAN_BOXED(1744830467,32,FLEN)
NAN_BOXED(2124292244,32,FLEN)
NAN_BOXED(1078933944,32,FLEN)
NAN_BOXED(1744830471,32,FLEN)
NAN_BOXED(2124292244,32,FLEN)
NAN_BOXED(1078933944,32,FLEN)
NAN_BOXED(1744830479,32,FLEN)
NAN_BOXED(2124292244,32,FLEN)
NAN_BOXED(1078933944,32,FLEN)
NAN_BOXED(1744830495,32,FLEN)
NAN_BOXED(2124292244,32,FLEN)
NAN_BOXED(1078933944,32,FLEN)
NAN_BOXED(1744830527,32,FLEN)
NAN_BOXED(2124292244,32,FLEN)
NAN_BOXED(1078933944,32,FLEN)
NAN_BOXED(1744830591,32,FLEN)
NAN_BOXED(2124292244,32,FLEN)
NAN_BOXED(1078933944,32,FLEN)
NAN_BOXED(1744830719,32,FLEN)
NAN_BOXED(2124292244,32,FLEN)
NAN_BOXED(1078933944,32,FLEN)
NAN_BOXED(1744830975,32,FLEN)
NAN_BOXED(2124292244,32,FLEN)
NAN_BOXED(1078933944,32,FLEN)
NAN_BOXED(1744831487,32,FLEN)
NAN_BOXED(2124292244,32,FLEN)
NAN_BOXED(1078933944,32,FLEN)
NAN_BOXED(1744832511,32,FLEN)
NAN_BOXED(2124292244,32,FLEN)
NAN_BOXED(1078933944,32,FLEN)
NAN_BOXED(1744834559,32,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
