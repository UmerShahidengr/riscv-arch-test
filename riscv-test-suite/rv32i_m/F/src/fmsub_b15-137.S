
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 14:18:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32F/fmsub.s.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.s instruction of the RISC-V RV32F_Zicsr,RV32FD_Zicsr,RV64F_Zicsr,RV64FD_Zicsr extension for the fmsub_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF_Zicsr,RV32IFD_Zicsr,RV64IF_Zicsr,RV64IFD_Zicsr,RV32EF_Zicsr,RV32EFD_Zicsr,RV64EF_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fmsub_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*F.*);def TEST_CASE_1=True;",fmsub_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_17408:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35708e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb5708e; op2val:0x0;
op3val:0x666666; valaddr_reg:x3; val_offset:52224*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52224*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17409:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35708e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb5708e; op2val:0x0;
op3val:0x6db6db; valaddr_reg:x3; val_offset:52227*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52227*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17410:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35708e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb5708e; op2val:0x0;
op3val:0x7ffff8; valaddr_reg:x3; val_offset:52230*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52230*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17411:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35708e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb5708e; op2val:0x0;
op3val:0x7ffffc; valaddr_reg:x3; val_offset:52233*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52233*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17412:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35708e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb5708e; op2val:0x0;
op3val:0x7ffffe; valaddr_reg:x3; val_offset:52236*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52236*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17413:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35708e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb5708e; op2val:0x0;
op3val:0xd800000; valaddr_reg:x3; val_offset:52239*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52239*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17414:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35708e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb5708e; op2val:0x0;
op3val:0xd800001; valaddr_reg:x3; val_offset:52242*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52242*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17415:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35708e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb5708e; op2val:0x0;
op3val:0xd800003; valaddr_reg:x3; val_offset:52245*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52245*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17416:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35708e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb5708e; op2val:0x0;
op3val:0xd800007; valaddr_reg:x3; val_offset:52248*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52248*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17417:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35708e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb5708e; op2val:0x0;
op3val:0xd80000f; valaddr_reg:x3; val_offset:52251*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52251*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17418:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35708e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb5708e; op2val:0x0;
op3val:0xd80001f; valaddr_reg:x3; val_offset:52254*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52254*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17419:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35708e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb5708e; op2val:0x0;
op3val:0xd80003f; valaddr_reg:x3; val_offset:52257*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52257*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17420:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35708e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb5708e; op2val:0x0;
op3val:0xd80007f; valaddr_reg:x3; val_offset:52260*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52260*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17421:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35708e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb5708e; op2val:0x0;
op3val:0xd8000ff; valaddr_reg:x3; val_offset:52263*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52263*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17422:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35708e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb5708e; op2val:0x0;
op3val:0xd8001ff; valaddr_reg:x3; val_offset:52266*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52266*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17423:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35708e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb5708e; op2val:0x0;
op3val:0xd8003ff; valaddr_reg:x3; val_offset:52269*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52269*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17424:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35708e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb5708e; op2val:0x0;
op3val:0xd8007ff; valaddr_reg:x3; val_offset:52272*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52272*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17425:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35708e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb5708e; op2val:0x0;
op3val:0xd800fff; valaddr_reg:x3; val_offset:52275*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52275*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17426:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35708e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb5708e; op2val:0x0;
op3val:0xd801fff; valaddr_reg:x3; val_offset:52278*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52278*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17427:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35708e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb5708e; op2val:0x0;
op3val:0xd803fff; valaddr_reg:x3; val_offset:52281*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52281*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17428:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35708e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb5708e; op2val:0x0;
op3val:0xd807fff; valaddr_reg:x3; val_offset:52284*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52284*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17429:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35708e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb5708e; op2val:0x0;
op3val:0xd80ffff; valaddr_reg:x3; val_offset:52287*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52287*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17430:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35708e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb5708e; op2val:0x0;
op3val:0xd81ffff; valaddr_reg:x3; val_offset:52290*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52290*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17431:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35708e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb5708e; op2val:0x0;
op3val:0xd83ffff; valaddr_reg:x3; val_offset:52293*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52293*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17432:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35708e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb5708e; op2val:0x0;
op3val:0xd87ffff; valaddr_reg:x3; val_offset:52296*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52296*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17433:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35708e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb5708e; op2val:0x0;
op3val:0xd8fffff; valaddr_reg:x3; val_offset:52299*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52299*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17434:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35708e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb5708e; op2val:0x0;
op3val:0xd9fffff; valaddr_reg:x3; val_offset:52302*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52302*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17435:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35708e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb5708e; op2val:0x0;
op3val:0xdbfffff; valaddr_reg:x3; val_offset:52305*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52305*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17436:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35708e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb5708e; op2val:0x0;
op3val:0xdc00000; valaddr_reg:x3; val_offset:52308*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52308*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17437:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35708e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb5708e; op2val:0x0;
op3val:0xde00000; valaddr_reg:x3; val_offset:52311*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52311*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17438:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35708e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb5708e; op2val:0x0;
op3val:0xdf00000; valaddr_reg:x3; val_offset:52314*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52314*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17439:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35708e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb5708e; op2val:0x0;
op3val:0xdf80000; valaddr_reg:x3; val_offset:52317*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52317*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17440:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35708e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb5708e; op2val:0x0;
op3val:0xdfc0000; valaddr_reg:x3; val_offset:52320*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52320*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17441:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35708e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb5708e; op2val:0x0;
op3val:0xdfe0000; valaddr_reg:x3; val_offset:52323*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52323*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17442:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35708e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb5708e; op2val:0x0;
op3val:0xdff0000; valaddr_reg:x3; val_offset:52326*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52326*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17443:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35708e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb5708e; op2val:0x0;
op3val:0xdff8000; valaddr_reg:x3; val_offset:52329*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52329*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17444:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35708e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb5708e; op2val:0x0;
op3val:0xdffc000; valaddr_reg:x3; val_offset:52332*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52332*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17445:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35708e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb5708e; op2val:0x0;
op3val:0xdffe000; valaddr_reg:x3; val_offset:52335*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52335*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17446:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35708e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb5708e; op2val:0x0;
op3val:0xdfff000; valaddr_reg:x3; val_offset:52338*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52338*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17447:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35708e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb5708e; op2val:0x0;
op3val:0xdfff800; valaddr_reg:x3; val_offset:52341*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52341*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17448:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35708e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb5708e; op2val:0x0;
op3val:0xdfffc00; valaddr_reg:x3; val_offset:52344*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52344*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17449:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35708e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb5708e; op2val:0x0;
op3val:0xdfffe00; valaddr_reg:x3; val_offset:52347*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52347*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17450:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35708e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb5708e; op2val:0x0;
op3val:0xdffff00; valaddr_reg:x3; val_offset:52350*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52350*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17451:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35708e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb5708e; op2val:0x0;
op3val:0xdffff80; valaddr_reg:x3; val_offset:52353*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52353*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17452:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35708e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb5708e; op2val:0x0;
op3val:0xdffffc0; valaddr_reg:x3; val_offset:52356*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52356*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17453:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35708e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb5708e; op2val:0x0;
op3val:0xdffffe0; valaddr_reg:x3; val_offset:52359*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52359*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17454:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35708e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb5708e; op2val:0x0;
op3val:0xdfffff0; valaddr_reg:x3; val_offset:52362*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52362*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17455:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35708e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb5708e; op2val:0x0;
op3val:0xdfffff8; valaddr_reg:x3; val_offset:52365*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52365*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17456:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35708e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb5708e; op2val:0x0;
op3val:0xdfffffc; valaddr_reg:x3; val_offset:52368*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52368*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17457:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35708e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb5708e; op2val:0x0;
op3val:0xdfffffe; valaddr_reg:x3; val_offset:52371*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52371*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17458:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35708e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb5708e; op2val:0x0;
op3val:0xdffffff; valaddr_reg:x3; val_offset:52374*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52374*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17459:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35efc8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x341b4c and fs3 == 0 and fe3 == 0xc5 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb5efc8; op2val:0x40341b4c;
op3val:0x62800000; valaddr_reg:x3; val_offset:52377*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52377*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17460:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35efc8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x341b4c and fs3 == 0 and fe3 == 0xc5 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb5efc8; op2val:0x40341b4c;
op3val:0x62800001; valaddr_reg:x3; val_offset:52380*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52380*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17461:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35efc8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x341b4c and fs3 == 0 and fe3 == 0xc5 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb5efc8; op2val:0x40341b4c;
op3val:0x62800003; valaddr_reg:x3; val_offset:52383*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52383*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17462:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35efc8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x341b4c and fs3 == 0 and fe3 == 0xc5 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb5efc8; op2val:0x40341b4c;
op3val:0x62800007; valaddr_reg:x3; val_offset:52386*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52386*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17463:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35efc8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x341b4c and fs3 == 0 and fe3 == 0xc5 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb5efc8; op2val:0x40341b4c;
op3val:0x6280000f; valaddr_reg:x3; val_offset:52389*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52389*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17464:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35efc8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x341b4c and fs3 == 0 and fe3 == 0xc5 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb5efc8; op2val:0x40341b4c;
op3val:0x6280001f; valaddr_reg:x3; val_offset:52392*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52392*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17465:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35efc8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x341b4c and fs3 == 0 and fe3 == 0xc5 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb5efc8; op2val:0x40341b4c;
op3val:0x6280003f; valaddr_reg:x3; val_offset:52395*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52395*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17466:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35efc8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x341b4c and fs3 == 0 and fe3 == 0xc5 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb5efc8; op2val:0x40341b4c;
op3val:0x6280007f; valaddr_reg:x3; val_offset:52398*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52398*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17467:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35efc8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x341b4c and fs3 == 0 and fe3 == 0xc5 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb5efc8; op2val:0x40341b4c;
op3val:0x628000ff; valaddr_reg:x3; val_offset:52401*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52401*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17468:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35efc8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x341b4c and fs3 == 0 and fe3 == 0xc5 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb5efc8; op2val:0x40341b4c;
op3val:0x628001ff; valaddr_reg:x3; val_offset:52404*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52404*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17469:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35efc8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x341b4c and fs3 == 0 and fe3 == 0xc5 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb5efc8; op2val:0x40341b4c;
op3val:0x628003ff; valaddr_reg:x3; val_offset:52407*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52407*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17470:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35efc8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x341b4c and fs3 == 0 and fe3 == 0xc5 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb5efc8; op2val:0x40341b4c;
op3val:0x628007ff; valaddr_reg:x3; val_offset:52410*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52410*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17471:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35efc8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x341b4c and fs3 == 0 and fe3 == 0xc5 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb5efc8; op2val:0x40341b4c;
op3val:0x62800fff; valaddr_reg:x3; val_offset:52413*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52413*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17472:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35efc8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x341b4c and fs3 == 0 and fe3 == 0xc5 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb5efc8; op2val:0x40341b4c;
op3val:0x62801fff; valaddr_reg:x3; val_offset:52416*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52416*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17473:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35efc8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x341b4c and fs3 == 0 and fe3 == 0xc5 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb5efc8; op2val:0x40341b4c;
op3val:0x62803fff; valaddr_reg:x3; val_offset:52419*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52419*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17474:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35efc8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x341b4c and fs3 == 0 and fe3 == 0xc5 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb5efc8; op2val:0x40341b4c;
op3val:0x62807fff; valaddr_reg:x3; val_offset:52422*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52422*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17475:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35efc8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x341b4c and fs3 == 0 and fe3 == 0xc5 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb5efc8; op2val:0x40341b4c;
op3val:0x6280ffff; valaddr_reg:x3; val_offset:52425*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52425*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17476:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35efc8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x341b4c and fs3 == 0 and fe3 == 0xc5 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb5efc8; op2val:0x40341b4c;
op3val:0x6281ffff; valaddr_reg:x3; val_offset:52428*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52428*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17477:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35efc8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x341b4c and fs3 == 0 and fe3 == 0xc5 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb5efc8; op2val:0x40341b4c;
op3val:0x6283ffff; valaddr_reg:x3; val_offset:52431*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52431*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17478:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35efc8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x341b4c and fs3 == 0 and fe3 == 0xc5 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb5efc8; op2val:0x40341b4c;
op3val:0x6287ffff; valaddr_reg:x3; val_offset:52434*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52434*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17479:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35efc8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x341b4c and fs3 == 0 and fe3 == 0xc5 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb5efc8; op2val:0x40341b4c;
op3val:0x628fffff; valaddr_reg:x3; val_offset:52437*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52437*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17480:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35efc8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x341b4c and fs3 == 0 and fe3 == 0xc5 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb5efc8; op2val:0x40341b4c;
op3val:0x629fffff; valaddr_reg:x3; val_offset:52440*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52440*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17481:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35efc8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x341b4c and fs3 == 0 and fe3 == 0xc5 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb5efc8; op2val:0x40341b4c;
op3val:0x62bfffff; valaddr_reg:x3; val_offset:52443*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52443*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17482:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35efc8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x341b4c and fs3 == 0 and fe3 == 0xc5 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb5efc8; op2val:0x40341b4c;
op3val:0x62c00000; valaddr_reg:x3; val_offset:52446*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52446*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17483:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35efc8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x341b4c and fs3 == 0 and fe3 == 0xc5 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb5efc8; op2val:0x40341b4c;
op3val:0x62e00000; valaddr_reg:x3; val_offset:52449*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52449*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17484:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35efc8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x341b4c and fs3 == 0 and fe3 == 0xc5 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb5efc8; op2val:0x40341b4c;
op3val:0x62f00000; valaddr_reg:x3; val_offset:52452*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52452*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17485:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35efc8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x341b4c and fs3 == 0 and fe3 == 0xc5 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb5efc8; op2val:0x40341b4c;
op3val:0x62f80000; valaddr_reg:x3; val_offset:52455*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52455*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17486:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35efc8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x341b4c and fs3 == 0 and fe3 == 0xc5 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb5efc8; op2val:0x40341b4c;
op3val:0x62fc0000; valaddr_reg:x3; val_offset:52458*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52458*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17487:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35efc8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x341b4c and fs3 == 0 and fe3 == 0xc5 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb5efc8; op2val:0x40341b4c;
op3val:0x62fe0000; valaddr_reg:x3; val_offset:52461*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52461*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17488:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35efc8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x341b4c and fs3 == 0 and fe3 == 0xc5 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb5efc8; op2val:0x40341b4c;
op3val:0x62ff0000; valaddr_reg:x3; val_offset:52464*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52464*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17489:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35efc8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x341b4c and fs3 == 0 and fe3 == 0xc5 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb5efc8; op2val:0x40341b4c;
op3val:0x62ff8000; valaddr_reg:x3; val_offset:52467*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52467*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17490:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35efc8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x341b4c and fs3 == 0 and fe3 == 0xc5 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb5efc8; op2val:0x40341b4c;
op3val:0x62ffc000; valaddr_reg:x3; val_offset:52470*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52470*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17491:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35efc8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x341b4c and fs3 == 0 and fe3 == 0xc5 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb5efc8; op2val:0x40341b4c;
op3val:0x62ffe000; valaddr_reg:x3; val_offset:52473*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52473*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17492:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35efc8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x341b4c and fs3 == 0 and fe3 == 0xc5 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb5efc8; op2val:0x40341b4c;
op3val:0x62fff000; valaddr_reg:x3; val_offset:52476*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52476*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17493:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35efc8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x341b4c and fs3 == 0 and fe3 == 0xc5 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb5efc8; op2val:0x40341b4c;
op3val:0x62fff800; valaddr_reg:x3; val_offset:52479*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52479*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17494:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35efc8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x341b4c and fs3 == 0 and fe3 == 0xc5 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb5efc8; op2val:0x40341b4c;
op3val:0x62fffc00; valaddr_reg:x3; val_offset:52482*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52482*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17495:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35efc8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x341b4c and fs3 == 0 and fe3 == 0xc5 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb5efc8; op2val:0x40341b4c;
op3val:0x62fffe00; valaddr_reg:x3; val_offset:52485*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52485*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17496:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35efc8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x341b4c and fs3 == 0 and fe3 == 0xc5 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb5efc8; op2val:0x40341b4c;
op3val:0x62ffff00; valaddr_reg:x3; val_offset:52488*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52488*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17497:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35efc8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x341b4c and fs3 == 0 and fe3 == 0xc5 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb5efc8; op2val:0x40341b4c;
op3val:0x62ffff80; valaddr_reg:x3; val_offset:52491*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52491*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17498:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35efc8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x341b4c and fs3 == 0 and fe3 == 0xc5 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb5efc8; op2val:0x40341b4c;
op3val:0x62ffffc0; valaddr_reg:x3; val_offset:52494*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52494*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17499:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35efc8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x341b4c and fs3 == 0 and fe3 == 0xc5 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb5efc8; op2val:0x40341b4c;
op3val:0x62ffffe0; valaddr_reg:x3; val_offset:52497*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52497*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17500:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35efc8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x341b4c and fs3 == 0 and fe3 == 0xc5 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb5efc8; op2val:0x40341b4c;
op3val:0x62fffff0; valaddr_reg:x3; val_offset:52500*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52500*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17501:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35efc8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x341b4c and fs3 == 0 and fe3 == 0xc5 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb5efc8; op2val:0x40341b4c;
op3val:0x62fffff8; valaddr_reg:x3; val_offset:52503*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52503*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17502:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35efc8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x341b4c and fs3 == 0 and fe3 == 0xc5 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb5efc8; op2val:0x40341b4c;
op3val:0x62fffffc; valaddr_reg:x3; val_offset:52506*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52506*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17503:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35efc8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x341b4c and fs3 == 0 and fe3 == 0xc5 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb5efc8; op2val:0x40341b4c;
op3val:0x62fffffe; valaddr_reg:x3; val_offset:52509*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52509*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17504:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35efc8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x341b4c and fs3 == 0 and fe3 == 0xc5 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb5efc8; op2val:0x40341b4c;
op3val:0x62ffffff; valaddr_reg:x3; val_offset:52512*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52512*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17505:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35efc8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x341b4c and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb5efc8; op2val:0x40341b4c;
op3val:0x7f000001; valaddr_reg:x3; val_offset:52515*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52515*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17506:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35efc8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x341b4c and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb5efc8; op2val:0x40341b4c;
op3val:0x7f000003; valaddr_reg:x3; val_offset:52518*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52518*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17507:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35efc8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x341b4c and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb5efc8; op2val:0x40341b4c;
op3val:0x7f000007; valaddr_reg:x3; val_offset:52521*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52521*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17508:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35efc8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x341b4c and fs3 == 0 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb5efc8; op2val:0x40341b4c;
op3val:0x7f199999; valaddr_reg:x3; val_offset:52524*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52524*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17509:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35efc8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x341b4c and fs3 == 0 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb5efc8; op2val:0x40341b4c;
op3val:0x7f249249; valaddr_reg:x3; val_offset:52527*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52527*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17510:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35efc8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x341b4c and fs3 == 0 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb5efc8; op2val:0x40341b4c;
op3val:0x7f333333; valaddr_reg:x3; val_offset:52530*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52530*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17511:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35efc8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x341b4c and fs3 == 0 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb5efc8; op2val:0x40341b4c;
op3val:0x7f36db6d; valaddr_reg:x3; val_offset:52533*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52533*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17512:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35efc8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x341b4c and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb5efc8; op2val:0x40341b4c;
op3val:0x7f3bbbbb; valaddr_reg:x3; val_offset:52536*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52536*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17513:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35efc8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x341b4c and fs3 == 0 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb5efc8; op2val:0x40341b4c;
op3val:0x7f444444; valaddr_reg:x3; val_offset:52539*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52539*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17514:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35efc8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x341b4c and fs3 == 0 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb5efc8; op2val:0x40341b4c;
op3val:0x7f4ccccc; valaddr_reg:x3; val_offset:52542*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52542*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17515:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35efc8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x341b4c and fs3 == 0 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb5efc8; op2val:0x40341b4c;
op3val:0x7f5b6db6; valaddr_reg:x3; val_offset:52545*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52545*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17516:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35efc8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x341b4c and fs3 == 0 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb5efc8; op2val:0x40341b4c;
op3val:0x7f666666; valaddr_reg:x3; val_offset:52548*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52548*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17517:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35efc8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x341b4c and fs3 == 0 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb5efc8; op2val:0x40341b4c;
op3val:0x7f6db6db; valaddr_reg:x3; val_offset:52551*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52551*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17518:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35efc8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x341b4c and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb5efc8; op2val:0x40341b4c;
op3val:0x7f7ffff8; valaddr_reg:x3; val_offset:52554*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52554*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17519:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35efc8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x341b4c and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb5efc8; op2val:0x40341b4c;
op3val:0x7f7ffffc; valaddr_reg:x3; val_offset:52557*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52557*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17520:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35efc8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x341b4c and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb5efc8; op2val:0x40341b4c;
op3val:0x7f7ffffe; valaddr_reg:x3; val_offset:52560*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52560*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17521:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383aed and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83aed; op2val:0x80000000;
op3val:0x80000001; valaddr_reg:x3; val_offset:52563*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52563*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17522:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383aed and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83aed; op2val:0x80000000;
op3val:0x80000003; valaddr_reg:x3; val_offset:52566*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52566*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17523:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383aed and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83aed; op2val:0x80000000;
op3val:0x80000007; valaddr_reg:x3; val_offset:52569*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52569*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17524:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383aed and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83aed; op2val:0x80000000;
op3val:0x80199999; valaddr_reg:x3; val_offset:52572*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52572*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17525:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383aed and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83aed; op2val:0x80000000;
op3val:0x80249249; valaddr_reg:x3; val_offset:52575*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52575*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17526:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383aed and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83aed; op2val:0x80000000;
op3val:0x80333333; valaddr_reg:x3; val_offset:52578*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52578*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17527:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383aed and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83aed; op2val:0x80000000;
op3val:0x8036db6d; valaddr_reg:x3; val_offset:52581*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52581*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17528:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383aed and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83aed; op2val:0x80000000;
op3val:0x803bbbbb; valaddr_reg:x3; val_offset:52584*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52584*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17529:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383aed and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83aed; op2val:0x80000000;
op3val:0x80444444; valaddr_reg:x3; val_offset:52587*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52587*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17530:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383aed and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83aed; op2val:0x80000000;
op3val:0x804ccccc; valaddr_reg:x3; val_offset:52590*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52590*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17531:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383aed and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83aed; op2val:0x80000000;
op3val:0x805b6db6; valaddr_reg:x3; val_offset:52593*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52593*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17532:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383aed and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83aed; op2val:0x80000000;
op3val:0x80666666; valaddr_reg:x3; val_offset:52596*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52596*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17533:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383aed and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83aed; op2val:0x80000000;
op3val:0x806db6db; valaddr_reg:x3; val_offset:52599*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52599*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17534:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383aed and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83aed; op2val:0x80000000;
op3val:0x807ffff8; valaddr_reg:x3; val_offset:52602*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52602*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17535:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383aed and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83aed; op2val:0x80000000;
op3val:0x807ffffc; valaddr_reg:x3; val_offset:52605*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52605*0 + 3*136*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(2125820046,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(6710886,32,FLEN)
NAN_BOXED(2125820046,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7190235,32,FLEN)
NAN_BOXED(2125820046,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388600,32,FLEN)
NAN_BOXED(2125820046,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388604,32,FLEN)
NAN_BOXED(2125820046,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388606,32,FLEN)
NAN_BOXED(2125820046,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(226492416,32,FLEN)
NAN_BOXED(2125820046,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(226492417,32,FLEN)
NAN_BOXED(2125820046,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(226492419,32,FLEN)
NAN_BOXED(2125820046,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(226492423,32,FLEN)
NAN_BOXED(2125820046,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(226492431,32,FLEN)
NAN_BOXED(2125820046,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(226492447,32,FLEN)
NAN_BOXED(2125820046,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(226492479,32,FLEN)
NAN_BOXED(2125820046,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(226492543,32,FLEN)
NAN_BOXED(2125820046,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(226492671,32,FLEN)
NAN_BOXED(2125820046,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(226492927,32,FLEN)
NAN_BOXED(2125820046,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(226493439,32,FLEN)
NAN_BOXED(2125820046,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(226494463,32,FLEN)
NAN_BOXED(2125820046,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(226496511,32,FLEN)
NAN_BOXED(2125820046,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(226500607,32,FLEN)
NAN_BOXED(2125820046,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(226508799,32,FLEN)
NAN_BOXED(2125820046,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(226525183,32,FLEN)
NAN_BOXED(2125820046,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(226557951,32,FLEN)
NAN_BOXED(2125820046,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(226623487,32,FLEN)
NAN_BOXED(2125820046,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(226754559,32,FLEN)
NAN_BOXED(2125820046,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(227016703,32,FLEN)
NAN_BOXED(2125820046,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(227540991,32,FLEN)
NAN_BOXED(2125820046,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(228589567,32,FLEN)
NAN_BOXED(2125820046,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(230686719,32,FLEN)
NAN_BOXED(2125820046,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(230686720,32,FLEN)
NAN_BOXED(2125820046,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(232783872,32,FLEN)
NAN_BOXED(2125820046,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(233832448,32,FLEN)
NAN_BOXED(2125820046,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(234356736,32,FLEN)
NAN_BOXED(2125820046,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(234618880,32,FLEN)
NAN_BOXED(2125820046,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(234749952,32,FLEN)
NAN_BOXED(2125820046,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(234815488,32,FLEN)
NAN_BOXED(2125820046,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(234848256,32,FLEN)
NAN_BOXED(2125820046,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(234864640,32,FLEN)
NAN_BOXED(2125820046,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(234872832,32,FLEN)
NAN_BOXED(2125820046,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(234876928,32,FLEN)
NAN_BOXED(2125820046,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(234878976,32,FLEN)
NAN_BOXED(2125820046,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(234880000,32,FLEN)
NAN_BOXED(2125820046,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(234880512,32,FLEN)
NAN_BOXED(2125820046,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(234880768,32,FLEN)
NAN_BOXED(2125820046,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(234880896,32,FLEN)
NAN_BOXED(2125820046,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(234880960,32,FLEN)
NAN_BOXED(2125820046,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(234880992,32,FLEN)
NAN_BOXED(2125820046,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(234881008,32,FLEN)
NAN_BOXED(2125820046,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(234881016,32,FLEN)
NAN_BOXED(2125820046,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(234881020,32,FLEN)
NAN_BOXED(2125820046,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(234881022,32,FLEN)
NAN_BOXED(2125820046,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(234881023,32,FLEN)
NAN_BOXED(2125852616,32,FLEN)
NAN_BOXED(1077156684,32,FLEN)
NAN_BOXED(1652555776,32,FLEN)
NAN_BOXED(2125852616,32,FLEN)
NAN_BOXED(1077156684,32,FLEN)
NAN_BOXED(1652555777,32,FLEN)
NAN_BOXED(2125852616,32,FLEN)
NAN_BOXED(1077156684,32,FLEN)
NAN_BOXED(1652555779,32,FLEN)
NAN_BOXED(2125852616,32,FLEN)
NAN_BOXED(1077156684,32,FLEN)
NAN_BOXED(1652555783,32,FLEN)
NAN_BOXED(2125852616,32,FLEN)
NAN_BOXED(1077156684,32,FLEN)
NAN_BOXED(1652555791,32,FLEN)
NAN_BOXED(2125852616,32,FLEN)
NAN_BOXED(1077156684,32,FLEN)
NAN_BOXED(1652555807,32,FLEN)
NAN_BOXED(2125852616,32,FLEN)
NAN_BOXED(1077156684,32,FLEN)
NAN_BOXED(1652555839,32,FLEN)
NAN_BOXED(2125852616,32,FLEN)
NAN_BOXED(1077156684,32,FLEN)
NAN_BOXED(1652555903,32,FLEN)
NAN_BOXED(2125852616,32,FLEN)
NAN_BOXED(1077156684,32,FLEN)
NAN_BOXED(1652556031,32,FLEN)
NAN_BOXED(2125852616,32,FLEN)
NAN_BOXED(1077156684,32,FLEN)
NAN_BOXED(1652556287,32,FLEN)
NAN_BOXED(2125852616,32,FLEN)
NAN_BOXED(1077156684,32,FLEN)
NAN_BOXED(1652556799,32,FLEN)
NAN_BOXED(2125852616,32,FLEN)
NAN_BOXED(1077156684,32,FLEN)
NAN_BOXED(1652557823,32,FLEN)
NAN_BOXED(2125852616,32,FLEN)
NAN_BOXED(1077156684,32,FLEN)
NAN_BOXED(1652559871,32,FLEN)
NAN_BOXED(2125852616,32,FLEN)
NAN_BOXED(1077156684,32,FLEN)
NAN_BOXED(1652563967,32,FLEN)
NAN_BOXED(2125852616,32,FLEN)
NAN_BOXED(1077156684,32,FLEN)
NAN_BOXED(1652572159,32,FLEN)
NAN_BOXED(2125852616,32,FLEN)
NAN_BOXED(1077156684,32,FLEN)
NAN_BOXED(1652588543,32,FLEN)
NAN_BOXED(2125852616,32,FLEN)
NAN_BOXED(1077156684,32,FLEN)
NAN_BOXED(1652621311,32,FLEN)
NAN_BOXED(2125852616,32,FLEN)
NAN_BOXED(1077156684,32,FLEN)
NAN_BOXED(1652686847,32,FLEN)
NAN_BOXED(2125852616,32,FLEN)
NAN_BOXED(1077156684,32,FLEN)
NAN_BOXED(1652817919,32,FLEN)
NAN_BOXED(2125852616,32,FLEN)
NAN_BOXED(1077156684,32,FLEN)
NAN_BOXED(1653080063,32,FLEN)
NAN_BOXED(2125852616,32,FLEN)
NAN_BOXED(1077156684,32,FLEN)
NAN_BOXED(1653604351,32,FLEN)
NAN_BOXED(2125852616,32,FLEN)
NAN_BOXED(1077156684,32,FLEN)
NAN_BOXED(1654652927,32,FLEN)
NAN_BOXED(2125852616,32,FLEN)
NAN_BOXED(1077156684,32,FLEN)
NAN_BOXED(1656750079,32,FLEN)
NAN_BOXED(2125852616,32,FLEN)
NAN_BOXED(1077156684,32,FLEN)
NAN_BOXED(1656750080,32,FLEN)
NAN_BOXED(2125852616,32,FLEN)
NAN_BOXED(1077156684,32,FLEN)
NAN_BOXED(1658847232,32,FLEN)
NAN_BOXED(2125852616,32,FLEN)
NAN_BOXED(1077156684,32,FLEN)
NAN_BOXED(1659895808,32,FLEN)
NAN_BOXED(2125852616,32,FLEN)
NAN_BOXED(1077156684,32,FLEN)
NAN_BOXED(1660420096,32,FLEN)
NAN_BOXED(2125852616,32,FLEN)
NAN_BOXED(1077156684,32,FLEN)
NAN_BOXED(1660682240,32,FLEN)
NAN_BOXED(2125852616,32,FLEN)
NAN_BOXED(1077156684,32,FLEN)
NAN_BOXED(1660813312,32,FLEN)
NAN_BOXED(2125852616,32,FLEN)
NAN_BOXED(1077156684,32,FLEN)
NAN_BOXED(1660878848,32,FLEN)
NAN_BOXED(2125852616,32,FLEN)
NAN_BOXED(1077156684,32,FLEN)
NAN_BOXED(1660911616,32,FLEN)
NAN_BOXED(2125852616,32,FLEN)
NAN_BOXED(1077156684,32,FLEN)
NAN_BOXED(1660928000,32,FLEN)
NAN_BOXED(2125852616,32,FLEN)
NAN_BOXED(1077156684,32,FLEN)
NAN_BOXED(1660936192,32,FLEN)
NAN_BOXED(2125852616,32,FLEN)
NAN_BOXED(1077156684,32,FLEN)
NAN_BOXED(1660940288,32,FLEN)
NAN_BOXED(2125852616,32,FLEN)
NAN_BOXED(1077156684,32,FLEN)
NAN_BOXED(1660942336,32,FLEN)
NAN_BOXED(2125852616,32,FLEN)
NAN_BOXED(1077156684,32,FLEN)
NAN_BOXED(1660943360,32,FLEN)
NAN_BOXED(2125852616,32,FLEN)
NAN_BOXED(1077156684,32,FLEN)
NAN_BOXED(1660943872,32,FLEN)
NAN_BOXED(2125852616,32,FLEN)
NAN_BOXED(1077156684,32,FLEN)
NAN_BOXED(1660944128,32,FLEN)
NAN_BOXED(2125852616,32,FLEN)
NAN_BOXED(1077156684,32,FLEN)
NAN_BOXED(1660944256,32,FLEN)
NAN_BOXED(2125852616,32,FLEN)
NAN_BOXED(1077156684,32,FLEN)
NAN_BOXED(1660944320,32,FLEN)
NAN_BOXED(2125852616,32,FLEN)
NAN_BOXED(1077156684,32,FLEN)
NAN_BOXED(1660944352,32,FLEN)
NAN_BOXED(2125852616,32,FLEN)
NAN_BOXED(1077156684,32,FLEN)
NAN_BOXED(1660944368,32,FLEN)
NAN_BOXED(2125852616,32,FLEN)
NAN_BOXED(1077156684,32,FLEN)
NAN_BOXED(1660944376,32,FLEN)
NAN_BOXED(2125852616,32,FLEN)
NAN_BOXED(1077156684,32,FLEN)
NAN_BOXED(1660944380,32,FLEN)
NAN_BOXED(2125852616,32,FLEN)
NAN_BOXED(1077156684,32,FLEN)
NAN_BOXED(1660944382,32,FLEN)
NAN_BOXED(2125852616,32,FLEN)
NAN_BOXED(1077156684,32,FLEN)
NAN_BOXED(1660944383,32,FLEN)
NAN_BOXED(2125852616,32,FLEN)
NAN_BOXED(1077156684,32,FLEN)
NAN_BOXED(2130706433,32,FLEN)
NAN_BOXED(2125852616,32,FLEN)
NAN_BOXED(1077156684,32,FLEN)
NAN_BOXED(2130706435,32,FLEN)
NAN_BOXED(2125852616,32,FLEN)
NAN_BOXED(1077156684,32,FLEN)
NAN_BOXED(2130706439,32,FLEN)
NAN_BOXED(2125852616,32,FLEN)
NAN_BOXED(1077156684,32,FLEN)
NAN_BOXED(2132384153,32,FLEN)
NAN_BOXED(2125852616,32,FLEN)
NAN_BOXED(1077156684,32,FLEN)
NAN_BOXED(2133103177,32,FLEN)
NAN_BOXED(2125852616,32,FLEN)
NAN_BOXED(1077156684,32,FLEN)
NAN_BOXED(2134061875,32,FLEN)
NAN_BOXED(2125852616,32,FLEN)
NAN_BOXED(1077156684,32,FLEN)
NAN_BOXED(2134301549,32,FLEN)
NAN_BOXED(2125852616,32,FLEN)
NAN_BOXED(1077156684,32,FLEN)
NAN_BOXED(2134621115,32,FLEN)
NAN_BOXED(2125852616,32,FLEN)
NAN_BOXED(1077156684,32,FLEN)
NAN_BOXED(2135180356,32,FLEN)
NAN_BOXED(2125852616,32,FLEN)
NAN_BOXED(1077156684,32,FLEN)
NAN_BOXED(2135739596,32,FLEN)
NAN_BOXED(2125852616,32,FLEN)
NAN_BOXED(1077156684,32,FLEN)
NAN_BOXED(2136698294,32,FLEN)
NAN_BOXED(2125852616,32,FLEN)
NAN_BOXED(1077156684,32,FLEN)
NAN_BOXED(2137417318,32,FLEN)
NAN_BOXED(2125852616,32,FLEN)
NAN_BOXED(1077156684,32,FLEN)
NAN_BOXED(2137896667,32,FLEN)
NAN_BOXED(2125852616,32,FLEN)
NAN_BOXED(1077156684,32,FLEN)
NAN_BOXED(2139095032,32,FLEN)
NAN_BOXED(2125852616,32,FLEN)
NAN_BOXED(1077156684,32,FLEN)
NAN_BOXED(2139095036,32,FLEN)
NAN_BOXED(2125852616,32,FLEN)
NAN_BOXED(1077156684,32,FLEN)
NAN_BOXED(2139095038,32,FLEN)
NAN_BOXED(2126002925,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2126002925,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483651,32,FLEN)
NAN_BOXED(2126002925,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483655,32,FLEN)
NAN_BOXED(2126002925,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149161369,32,FLEN)
NAN_BOXED(2126002925,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149880393,32,FLEN)
NAN_BOXED(2126002925,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2150839091,32,FLEN)
NAN_BOXED(2126002925,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151078765,32,FLEN)
NAN_BOXED(2126002925,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151398331,32,FLEN)
NAN_BOXED(2126002925,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151957572,32,FLEN)
NAN_BOXED(2126002925,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2152516812,32,FLEN)
NAN_BOXED(2126002925,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2153475510,32,FLEN)
NAN_BOXED(2126002925,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154194534,32,FLEN)
NAN_BOXED(2126002925,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154673883,32,FLEN)
NAN_BOXED(2126002925,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872248,32,FLEN)
NAN_BOXED(2126002925,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872252,32,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
