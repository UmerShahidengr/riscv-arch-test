
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 14:18:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32F/fmsub.s.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.s instruction of the RISC-V RV32F_Zicsr,RV32FD_Zicsr,RV64F_Zicsr,RV64FD_Zicsr extension for the fmsub_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF_Zicsr,RV32IFD_Zicsr,RV64IF_Zicsr,RV64IFD_Zicsr,RV32EF_Zicsr,RV32EFD_Zicsr,RV64EF_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fmsub_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*F.*);def TEST_CASE_1=True;",fmsub_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_17536:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383aed and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83aed; op2val:0x80000000;
op3val:0x807ffffe; valaddr_reg:x3; val_offset:52608*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52608*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17537:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383aed and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83aed; op2val:0x80000000;
op3val:0x8f000000; valaddr_reg:x3; val_offset:52611*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52611*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17538:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383aed and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83aed; op2val:0x80000000;
op3val:0x8f000001; valaddr_reg:x3; val_offset:52614*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52614*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17539:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383aed and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83aed; op2val:0x80000000;
op3val:0x8f000003; valaddr_reg:x3; val_offset:52617*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52617*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17540:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383aed and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83aed; op2val:0x80000000;
op3val:0x8f000007; valaddr_reg:x3; val_offset:52620*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52620*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17541:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383aed and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83aed; op2val:0x80000000;
op3val:0x8f00000f; valaddr_reg:x3; val_offset:52623*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52623*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17542:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383aed and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83aed; op2val:0x80000000;
op3val:0x8f00001f; valaddr_reg:x3; val_offset:52626*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52626*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17543:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383aed and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83aed; op2val:0x80000000;
op3val:0x8f00003f; valaddr_reg:x3; val_offset:52629*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52629*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17544:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383aed and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83aed; op2val:0x80000000;
op3val:0x8f00007f; valaddr_reg:x3; val_offset:52632*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52632*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17545:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383aed and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83aed; op2val:0x80000000;
op3val:0x8f0000ff; valaddr_reg:x3; val_offset:52635*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52635*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17546:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383aed and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83aed; op2val:0x80000000;
op3val:0x8f0001ff; valaddr_reg:x3; val_offset:52638*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52638*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17547:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383aed and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83aed; op2val:0x80000000;
op3val:0x8f0003ff; valaddr_reg:x3; val_offset:52641*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52641*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17548:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383aed and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83aed; op2val:0x80000000;
op3val:0x8f0007ff; valaddr_reg:x3; val_offset:52644*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52644*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17549:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383aed and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83aed; op2val:0x80000000;
op3val:0x8f000fff; valaddr_reg:x3; val_offset:52647*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52647*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17550:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383aed and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83aed; op2val:0x80000000;
op3val:0x8f001fff; valaddr_reg:x3; val_offset:52650*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52650*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17551:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383aed and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83aed; op2val:0x80000000;
op3val:0x8f003fff; valaddr_reg:x3; val_offset:52653*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52653*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17552:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383aed and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83aed; op2val:0x80000000;
op3val:0x8f007fff; valaddr_reg:x3; val_offset:52656*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52656*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17553:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383aed and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83aed; op2val:0x80000000;
op3val:0x8f00ffff; valaddr_reg:x3; val_offset:52659*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52659*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17554:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383aed and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83aed; op2val:0x80000000;
op3val:0x8f01ffff; valaddr_reg:x3; val_offset:52662*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52662*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17555:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383aed and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83aed; op2val:0x80000000;
op3val:0x8f03ffff; valaddr_reg:x3; val_offset:52665*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52665*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17556:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383aed and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83aed; op2val:0x80000000;
op3val:0x8f07ffff; valaddr_reg:x3; val_offset:52668*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52668*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17557:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383aed and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83aed; op2val:0x80000000;
op3val:0x8f0fffff; valaddr_reg:x3; val_offset:52671*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52671*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17558:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383aed and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83aed; op2val:0x80000000;
op3val:0x8f1fffff; valaddr_reg:x3; val_offset:52674*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52674*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17559:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383aed and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83aed; op2val:0x80000000;
op3val:0x8f3fffff; valaddr_reg:x3; val_offset:52677*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52677*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17560:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383aed and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83aed; op2val:0x80000000;
op3val:0x8f400000; valaddr_reg:x3; val_offset:52680*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52680*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17561:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383aed and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83aed; op2val:0x80000000;
op3val:0x8f600000; valaddr_reg:x3; val_offset:52683*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52683*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17562:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383aed and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83aed; op2val:0x80000000;
op3val:0x8f700000; valaddr_reg:x3; val_offset:52686*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52686*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17563:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383aed and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83aed; op2val:0x80000000;
op3val:0x8f780000; valaddr_reg:x3; val_offset:52689*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52689*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17564:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383aed and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83aed; op2val:0x80000000;
op3val:0x8f7c0000; valaddr_reg:x3; val_offset:52692*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52692*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17565:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383aed and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83aed; op2val:0x80000000;
op3val:0x8f7e0000; valaddr_reg:x3; val_offset:52695*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52695*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17566:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383aed and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83aed; op2val:0x80000000;
op3val:0x8f7f0000; valaddr_reg:x3; val_offset:52698*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52698*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17567:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383aed and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83aed; op2val:0x80000000;
op3val:0x8f7f8000; valaddr_reg:x3; val_offset:52701*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52701*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17568:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383aed and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83aed; op2val:0x80000000;
op3val:0x8f7fc000; valaddr_reg:x3; val_offset:52704*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52704*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17569:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383aed and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83aed; op2val:0x80000000;
op3val:0x8f7fe000; valaddr_reg:x3; val_offset:52707*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52707*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17570:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383aed and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83aed; op2val:0x80000000;
op3val:0x8f7ff000; valaddr_reg:x3; val_offset:52710*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52710*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17571:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383aed and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83aed; op2val:0x80000000;
op3val:0x8f7ff800; valaddr_reg:x3; val_offset:52713*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52713*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17572:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383aed and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83aed; op2val:0x80000000;
op3val:0x8f7ffc00; valaddr_reg:x3; val_offset:52716*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52716*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17573:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383aed and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83aed; op2val:0x80000000;
op3val:0x8f7ffe00; valaddr_reg:x3; val_offset:52719*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52719*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17574:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383aed and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83aed; op2val:0x80000000;
op3val:0x8f7fff00; valaddr_reg:x3; val_offset:52722*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52722*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17575:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383aed and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83aed; op2val:0x80000000;
op3val:0x8f7fff80; valaddr_reg:x3; val_offset:52725*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52725*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17576:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383aed and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83aed; op2val:0x80000000;
op3val:0x8f7fffc0; valaddr_reg:x3; val_offset:52728*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52728*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17577:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383aed and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83aed; op2val:0x80000000;
op3val:0x8f7fffe0; valaddr_reg:x3; val_offset:52731*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52731*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17578:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383aed and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83aed; op2val:0x80000000;
op3val:0x8f7ffff0; valaddr_reg:x3; val_offset:52734*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52734*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17579:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383aed and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83aed; op2val:0x80000000;
op3val:0x8f7ffff8; valaddr_reg:x3; val_offset:52737*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52737*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17580:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383aed and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83aed; op2val:0x80000000;
op3val:0x8f7ffffc; valaddr_reg:x3; val_offset:52740*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52740*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17581:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383aed and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83aed; op2val:0x80000000;
op3val:0x8f7ffffe; valaddr_reg:x3; val_offset:52743*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52743*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17582:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383aed and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83aed; op2val:0x80000000;
op3val:0x8f7fffff; valaddr_reg:x3; val_offset:52746*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52746*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17583:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383e87 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x58ece9 and fs3 == 1 and fe3 == 0x53 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83e87; op2val:0x8058ece9;
op3val:0xa9800000; valaddr_reg:x3; val_offset:52749*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52749*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17584:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383e87 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x58ece9 and fs3 == 1 and fe3 == 0x53 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83e87; op2val:0x8058ece9;
op3val:0xa9800001; valaddr_reg:x3; val_offset:52752*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52752*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17585:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383e87 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x58ece9 and fs3 == 1 and fe3 == 0x53 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83e87; op2val:0x8058ece9;
op3val:0xa9800003; valaddr_reg:x3; val_offset:52755*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52755*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17586:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383e87 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x58ece9 and fs3 == 1 and fe3 == 0x53 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83e87; op2val:0x8058ece9;
op3val:0xa9800007; valaddr_reg:x3; val_offset:52758*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52758*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17587:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383e87 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x58ece9 and fs3 == 1 and fe3 == 0x53 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83e87; op2val:0x8058ece9;
op3val:0xa980000f; valaddr_reg:x3; val_offset:52761*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52761*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17588:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383e87 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x58ece9 and fs3 == 1 and fe3 == 0x53 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83e87; op2val:0x8058ece9;
op3val:0xa980001f; valaddr_reg:x3; val_offset:52764*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52764*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17589:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383e87 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x58ece9 and fs3 == 1 and fe3 == 0x53 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83e87; op2val:0x8058ece9;
op3val:0xa980003f; valaddr_reg:x3; val_offset:52767*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52767*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17590:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383e87 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x58ece9 and fs3 == 1 and fe3 == 0x53 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83e87; op2val:0x8058ece9;
op3val:0xa980007f; valaddr_reg:x3; val_offset:52770*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52770*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17591:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383e87 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x58ece9 and fs3 == 1 and fe3 == 0x53 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83e87; op2val:0x8058ece9;
op3val:0xa98000ff; valaddr_reg:x3; val_offset:52773*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52773*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17592:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383e87 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x58ece9 and fs3 == 1 and fe3 == 0x53 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83e87; op2val:0x8058ece9;
op3val:0xa98001ff; valaddr_reg:x3; val_offset:52776*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52776*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17593:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383e87 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x58ece9 and fs3 == 1 and fe3 == 0x53 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83e87; op2val:0x8058ece9;
op3val:0xa98003ff; valaddr_reg:x3; val_offset:52779*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52779*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17594:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383e87 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x58ece9 and fs3 == 1 and fe3 == 0x53 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83e87; op2val:0x8058ece9;
op3val:0xa98007ff; valaddr_reg:x3; val_offset:52782*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52782*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17595:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383e87 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x58ece9 and fs3 == 1 and fe3 == 0x53 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83e87; op2val:0x8058ece9;
op3val:0xa9800fff; valaddr_reg:x3; val_offset:52785*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52785*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17596:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383e87 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x58ece9 and fs3 == 1 and fe3 == 0x53 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83e87; op2val:0x8058ece9;
op3val:0xa9801fff; valaddr_reg:x3; val_offset:52788*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52788*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17597:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383e87 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x58ece9 and fs3 == 1 and fe3 == 0x53 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83e87; op2val:0x8058ece9;
op3val:0xa9803fff; valaddr_reg:x3; val_offset:52791*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52791*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17598:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383e87 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x58ece9 and fs3 == 1 and fe3 == 0x53 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83e87; op2val:0x8058ece9;
op3val:0xa9807fff; valaddr_reg:x3; val_offset:52794*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52794*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17599:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383e87 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x58ece9 and fs3 == 1 and fe3 == 0x53 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83e87; op2val:0x8058ece9;
op3val:0xa980ffff; valaddr_reg:x3; val_offset:52797*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52797*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17600:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383e87 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x58ece9 and fs3 == 1 and fe3 == 0x53 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83e87; op2val:0x8058ece9;
op3val:0xa981ffff; valaddr_reg:x3; val_offset:52800*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52800*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17601:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383e87 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x58ece9 and fs3 == 1 and fe3 == 0x53 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83e87; op2val:0x8058ece9;
op3val:0xa983ffff; valaddr_reg:x3; val_offset:52803*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52803*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17602:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383e87 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x58ece9 and fs3 == 1 and fe3 == 0x53 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83e87; op2val:0x8058ece9;
op3val:0xa987ffff; valaddr_reg:x3; val_offset:52806*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52806*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17603:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383e87 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x58ece9 and fs3 == 1 and fe3 == 0x53 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83e87; op2val:0x8058ece9;
op3val:0xa98fffff; valaddr_reg:x3; val_offset:52809*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52809*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17604:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383e87 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x58ece9 and fs3 == 1 and fe3 == 0x53 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83e87; op2val:0x8058ece9;
op3val:0xa99fffff; valaddr_reg:x3; val_offset:52812*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52812*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17605:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383e87 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x58ece9 and fs3 == 1 and fe3 == 0x53 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83e87; op2val:0x8058ece9;
op3val:0xa9bfffff; valaddr_reg:x3; val_offset:52815*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52815*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17606:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383e87 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x58ece9 and fs3 == 1 and fe3 == 0x53 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83e87; op2val:0x8058ece9;
op3val:0xa9c00000; valaddr_reg:x3; val_offset:52818*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52818*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17607:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383e87 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x58ece9 and fs3 == 1 and fe3 == 0x53 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83e87; op2val:0x8058ece9;
op3val:0xa9e00000; valaddr_reg:x3; val_offset:52821*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52821*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17608:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383e87 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x58ece9 and fs3 == 1 and fe3 == 0x53 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83e87; op2val:0x8058ece9;
op3val:0xa9f00000; valaddr_reg:x3; val_offset:52824*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52824*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17609:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383e87 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x58ece9 and fs3 == 1 and fe3 == 0x53 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83e87; op2val:0x8058ece9;
op3val:0xa9f80000; valaddr_reg:x3; val_offset:52827*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52827*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17610:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383e87 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x58ece9 and fs3 == 1 and fe3 == 0x53 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83e87; op2val:0x8058ece9;
op3val:0xa9fc0000; valaddr_reg:x3; val_offset:52830*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52830*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17611:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383e87 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x58ece9 and fs3 == 1 and fe3 == 0x53 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83e87; op2val:0x8058ece9;
op3val:0xa9fe0000; valaddr_reg:x3; val_offset:52833*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52833*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17612:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383e87 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x58ece9 and fs3 == 1 and fe3 == 0x53 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83e87; op2val:0x8058ece9;
op3val:0xa9ff0000; valaddr_reg:x3; val_offset:52836*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52836*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17613:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383e87 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x58ece9 and fs3 == 1 and fe3 == 0x53 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83e87; op2val:0x8058ece9;
op3val:0xa9ff8000; valaddr_reg:x3; val_offset:52839*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52839*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17614:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383e87 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x58ece9 and fs3 == 1 and fe3 == 0x53 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83e87; op2val:0x8058ece9;
op3val:0xa9ffc000; valaddr_reg:x3; val_offset:52842*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52842*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17615:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383e87 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x58ece9 and fs3 == 1 and fe3 == 0x53 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83e87; op2val:0x8058ece9;
op3val:0xa9ffe000; valaddr_reg:x3; val_offset:52845*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52845*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17616:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383e87 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x58ece9 and fs3 == 1 and fe3 == 0x53 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83e87; op2val:0x8058ece9;
op3val:0xa9fff000; valaddr_reg:x3; val_offset:52848*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52848*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17617:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383e87 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x58ece9 and fs3 == 1 and fe3 == 0x53 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83e87; op2val:0x8058ece9;
op3val:0xa9fff800; valaddr_reg:x3; val_offset:52851*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52851*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17618:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383e87 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x58ece9 and fs3 == 1 and fe3 == 0x53 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83e87; op2val:0x8058ece9;
op3val:0xa9fffc00; valaddr_reg:x3; val_offset:52854*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52854*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17619:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383e87 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x58ece9 and fs3 == 1 and fe3 == 0x53 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83e87; op2val:0x8058ece9;
op3val:0xa9fffe00; valaddr_reg:x3; val_offset:52857*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52857*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17620:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383e87 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x58ece9 and fs3 == 1 and fe3 == 0x53 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83e87; op2val:0x8058ece9;
op3val:0xa9ffff00; valaddr_reg:x3; val_offset:52860*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52860*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17621:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383e87 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x58ece9 and fs3 == 1 and fe3 == 0x53 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83e87; op2val:0x8058ece9;
op3val:0xa9ffff80; valaddr_reg:x3; val_offset:52863*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52863*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17622:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383e87 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x58ece9 and fs3 == 1 and fe3 == 0x53 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83e87; op2val:0x8058ece9;
op3val:0xa9ffffc0; valaddr_reg:x3; val_offset:52866*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52866*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17623:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383e87 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x58ece9 and fs3 == 1 and fe3 == 0x53 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83e87; op2val:0x8058ece9;
op3val:0xa9ffffe0; valaddr_reg:x3; val_offset:52869*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52869*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17624:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383e87 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x58ece9 and fs3 == 1 and fe3 == 0x53 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83e87; op2val:0x8058ece9;
op3val:0xa9fffff0; valaddr_reg:x3; val_offset:52872*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52872*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17625:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383e87 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x58ece9 and fs3 == 1 and fe3 == 0x53 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83e87; op2val:0x8058ece9;
op3val:0xa9fffff8; valaddr_reg:x3; val_offset:52875*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52875*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17626:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383e87 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x58ece9 and fs3 == 1 and fe3 == 0x53 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83e87; op2val:0x8058ece9;
op3val:0xa9fffffc; valaddr_reg:x3; val_offset:52878*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52878*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17627:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383e87 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x58ece9 and fs3 == 1 and fe3 == 0x53 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83e87; op2val:0x8058ece9;
op3val:0xa9fffffe; valaddr_reg:x3; val_offset:52881*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52881*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17628:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383e87 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x58ece9 and fs3 == 1 and fe3 == 0x53 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83e87; op2val:0x8058ece9;
op3val:0xa9ffffff; valaddr_reg:x3; val_offset:52884*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52884*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17629:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383e87 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x58ece9 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83e87; op2val:0x8058ece9;
op3val:0xbf800001; valaddr_reg:x3; val_offset:52887*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52887*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17630:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383e87 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x58ece9 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83e87; op2val:0x8058ece9;
op3val:0xbf800003; valaddr_reg:x3; val_offset:52890*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52890*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17631:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383e87 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x58ece9 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83e87; op2val:0x8058ece9;
op3val:0xbf800007; valaddr_reg:x3; val_offset:52893*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52893*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17632:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383e87 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x58ece9 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83e87; op2val:0x8058ece9;
op3val:0xbf999999; valaddr_reg:x3; val_offset:52896*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52896*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17633:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383e87 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x58ece9 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83e87; op2val:0x8058ece9;
op3val:0xbfa49249; valaddr_reg:x3; val_offset:52899*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52899*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17634:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383e87 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x58ece9 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83e87; op2val:0x8058ece9;
op3val:0xbfb33333; valaddr_reg:x3; val_offset:52902*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52902*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17635:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383e87 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x58ece9 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83e87; op2val:0x8058ece9;
op3val:0xbfb6db6d; valaddr_reg:x3; val_offset:52905*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52905*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17636:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383e87 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x58ece9 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83e87; op2val:0x8058ece9;
op3val:0xbfbbbbbb; valaddr_reg:x3; val_offset:52908*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52908*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17637:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383e87 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x58ece9 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83e87; op2val:0x8058ece9;
op3val:0xbfc44444; valaddr_reg:x3; val_offset:52911*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52911*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17638:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383e87 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x58ece9 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83e87; op2val:0x8058ece9;
op3val:0xbfcccccc; valaddr_reg:x3; val_offset:52914*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52914*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17639:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383e87 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x58ece9 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83e87; op2val:0x8058ece9;
op3val:0xbfdb6db6; valaddr_reg:x3; val_offset:52917*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52917*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17640:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383e87 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x58ece9 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83e87; op2val:0x8058ece9;
op3val:0xbfe66666; valaddr_reg:x3; val_offset:52920*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52920*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17641:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383e87 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x58ece9 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83e87; op2val:0x8058ece9;
op3val:0xbfedb6db; valaddr_reg:x3; val_offset:52923*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52923*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17642:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383e87 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x58ece9 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83e87; op2val:0x8058ece9;
op3val:0xbffffff8; valaddr_reg:x3; val_offset:52926*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52926*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17643:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383e87 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x58ece9 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83e87; op2val:0x8058ece9;
op3val:0xbffffffc; valaddr_reg:x3; val_offset:52929*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52929*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17644:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x383e87 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x58ece9 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb83e87; op2val:0x8058ece9;
op3val:0xbffffffe; valaddr_reg:x3; val_offset:52932*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52932*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17645:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x38e1d6 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x313cb8 and fs3 == 0 and fe3 == 0xe8 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb8e1d6; op2val:0x40313cb8;
op3val:0x74000000; valaddr_reg:x3; val_offset:52935*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52935*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17646:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x38e1d6 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x313cb8 and fs3 == 0 and fe3 == 0xe8 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb8e1d6; op2val:0x40313cb8;
op3val:0x74000001; valaddr_reg:x3; val_offset:52938*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52938*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17647:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x38e1d6 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x313cb8 and fs3 == 0 and fe3 == 0xe8 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb8e1d6; op2val:0x40313cb8;
op3val:0x74000003; valaddr_reg:x3; val_offset:52941*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52941*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17648:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x38e1d6 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x313cb8 and fs3 == 0 and fe3 == 0xe8 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb8e1d6; op2val:0x40313cb8;
op3val:0x74000007; valaddr_reg:x3; val_offset:52944*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52944*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17649:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x38e1d6 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x313cb8 and fs3 == 0 and fe3 == 0xe8 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb8e1d6; op2val:0x40313cb8;
op3val:0x7400000f; valaddr_reg:x3; val_offset:52947*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52947*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17650:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x38e1d6 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x313cb8 and fs3 == 0 and fe3 == 0xe8 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb8e1d6; op2val:0x40313cb8;
op3val:0x7400001f; valaddr_reg:x3; val_offset:52950*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52950*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17651:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x38e1d6 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x313cb8 and fs3 == 0 and fe3 == 0xe8 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb8e1d6; op2val:0x40313cb8;
op3val:0x7400003f; valaddr_reg:x3; val_offset:52953*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52953*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17652:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x38e1d6 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x313cb8 and fs3 == 0 and fe3 == 0xe8 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb8e1d6; op2val:0x40313cb8;
op3val:0x7400007f; valaddr_reg:x3; val_offset:52956*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52956*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17653:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x38e1d6 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x313cb8 and fs3 == 0 and fe3 == 0xe8 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb8e1d6; op2val:0x40313cb8;
op3val:0x740000ff; valaddr_reg:x3; val_offset:52959*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52959*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17654:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x38e1d6 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x313cb8 and fs3 == 0 and fe3 == 0xe8 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb8e1d6; op2val:0x40313cb8;
op3val:0x740001ff; valaddr_reg:x3; val_offset:52962*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52962*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17655:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x38e1d6 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x313cb8 and fs3 == 0 and fe3 == 0xe8 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb8e1d6; op2val:0x40313cb8;
op3val:0x740003ff; valaddr_reg:x3; val_offset:52965*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52965*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17656:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x38e1d6 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x313cb8 and fs3 == 0 and fe3 == 0xe8 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb8e1d6; op2val:0x40313cb8;
op3val:0x740007ff; valaddr_reg:x3; val_offset:52968*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52968*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17657:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x38e1d6 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x313cb8 and fs3 == 0 and fe3 == 0xe8 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb8e1d6; op2val:0x40313cb8;
op3val:0x74000fff; valaddr_reg:x3; val_offset:52971*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52971*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17658:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x38e1d6 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x313cb8 and fs3 == 0 and fe3 == 0xe8 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb8e1d6; op2val:0x40313cb8;
op3val:0x74001fff; valaddr_reg:x3; val_offset:52974*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52974*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17659:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x38e1d6 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x313cb8 and fs3 == 0 and fe3 == 0xe8 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb8e1d6; op2val:0x40313cb8;
op3val:0x74003fff; valaddr_reg:x3; val_offset:52977*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52977*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17660:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x38e1d6 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x313cb8 and fs3 == 0 and fe3 == 0xe8 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb8e1d6; op2val:0x40313cb8;
op3val:0x74007fff; valaddr_reg:x3; val_offset:52980*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52980*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17661:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x38e1d6 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x313cb8 and fs3 == 0 and fe3 == 0xe8 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb8e1d6; op2val:0x40313cb8;
op3val:0x7400ffff; valaddr_reg:x3; val_offset:52983*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52983*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17662:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x38e1d6 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x313cb8 and fs3 == 0 and fe3 == 0xe8 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb8e1d6; op2val:0x40313cb8;
op3val:0x7401ffff; valaddr_reg:x3; val_offset:52986*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52986*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17663:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x38e1d6 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x313cb8 and fs3 == 0 and fe3 == 0xe8 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb8e1d6; op2val:0x40313cb8;
op3val:0x7403ffff; valaddr_reg:x3; val_offset:52989*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52989*0 + 3*137*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(2126002925,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872254,32,FLEN)
NAN_BOXED(2126002925,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2399141888,32,FLEN)
NAN_BOXED(2126002925,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2399141889,32,FLEN)
NAN_BOXED(2126002925,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2399141891,32,FLEN)
NAN_BOXED(2126002925,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2399141895,32,FLEN)
NAN_BOXED(2126002925,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2399141903,32,FLEN)
NAN_BOXED(2126002925,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2399141919,32,FLEN)
NAN_BOXED(2126002925,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2399141951,32,FLEN)
NAN_BOXED(2126002925,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2399142015,32,FLEN)
NAN_BOXED(2126002925,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2399142143,32,FLEN)
NAN_BOXED(2126002925,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2399142399,32,FLEN)
NAN_BOXED(2126002925,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2399142911,32,FLEN)
NAN_BOXED(2126002925,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2399143935,32,FLEN)
NAN_BOXED(2126002925,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2399145983,32,FLEN)
NAN_BOXED(2126002925,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2399150079,32,FLEN)
NAN_BOXED(2126002925,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2399158271,32,FLEN)
NAN_BOXED(2126002925,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2399174655,32,FLEN)
NAN_BOXED(2126002925,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2399207423,32,FLEN)
NAN_BOXED(2126002925,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2399272959,32,FLEN)
NAN_BOXED(2126002925,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2399404031,32,FLEN)
NAN_BOXED(2126002925,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2399666175,32,FLEN)
NAN_BOXED(2126002925,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2400190463,32,FLEN)
NAN_BOXED(2126002925,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2401239039,32,FLEN)
NAN_BOXED(2126002925,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2403336191,32,FLEN)
NAN_BOXED(2126002925,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2403336192,32,FLEN)
NAN_BOXED(2126002925,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2405433344,32,FLEN)
NAN_BOXED(2126002925,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2406481920,32,FLEN)
NAN_BOXED(2126002925,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407006208,32,FLEN)
NAN_BOXED(2126002925,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407268352,32,FLEN)
NAN_BOXED(2126002925,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407399424,32,FLEN)
NAN_BOXED(2126002925,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407464960,32,FLEN)
NAN_BOXED(2126002925,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407497728,32,FLEN)
NAN_BOXED(2126002925,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407514112,32,FLEN)
NAN_BOXED(2126002925,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407522304,32,FLEN)
NAN_BOXED(2126002925,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407526400,32,FLEN)
NAN_BOXED(2126002925,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407528448,32,FLEN)
NAN_BOXED(2126002925,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407529472,32,FLEN)
NAN_BOXED(2126002925,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407529984,32,FLEN)
NAN_BOXED(2126002925,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407530240,32,FLEN)
NAN_BOXED(2126002925,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407530368,32,FLEN)
NAN_BOXED(2126002925,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407530432,32,FLEN)
NAN_BOXED(2126002925,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407530464,32,FLEN)
NAN_BOXED(2126002925,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407530480,32,FLEN)
NAN_BOXED(2126002925,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407530488,32,FLEN)
NAN_BOXED(2126002925,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407530492,32,FLEN)
NAN_BOXED(2126002925,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407530494,32,FLEN)
NAN_BOXED(2126002925,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407530495,32,FLEN)
NAN_BOXED(2126003847,32,FLEN)
NAN_BOXED(2153311465,32,FLEN)
NAN_BOXED(2843738112,32,FLEN)
NAN_BOXED(2126003847,32,FLEN)
NAN_BOXED(2153311465,32,FLEN)
NAN_BOXED(2843738113,32,FLEN)
NAN_BOXED(2126003847,32,FLEN)
NAN_BOXED(2153311465,32,FLEN)
NAN_BOXED(2843738115,32,FLEN)
NAN_BOXED(2126003847,32,FLEN)
NAN_BOXED(2153311465,32,FLEN)
NAN_BOXED(2843738119,32,FLEN)
NAN_BOXED(2126003847,32,FLEN)
NAN_BOXED(2153311465,32,FLEN)
NAN_BOXED(2843738127,32,FLEN)
NAN_BOXED(2126003847,32,FLEN)
NAN_BOXED(2153311465,32,FLEN)
NAN_BOXED(2843738143,32,FLEN)
NAN_BOXED(2126003847,32,FLEN)
NAN_BOXED(2153311465,32,FLEN)
NAN_BOXED(2843738175,32,FLEN)
NAN_BOXED(2126003847,32,FLEN)
NAN_BOXED(2153311465,32,FLEN)
NAN_BOXED(2843738239,32,FLEN)
NAN_BOXED(2126003847,32,FLEN)
NAN_BOXED(2153311465,32,FLEN)
NAN_BOXED(2843738367,32,FLEN)
NAN_BOXED(2126003847,32,FLEN)
NAN_BOXED(2153311465,32,FLEN)
NAN_BOXED(2843738623,32,FLEN)
NAN_BOXED(2126003847,32,FLEN)
NAN_BOXED(2153311465,32,FLEN)
NAN_BOXED(2843739135,32,FLEN)
NAN_BOXED(2126003847,32,FLEN)
NAN_BOXED(2153311465,32,FLEN)
NAN_BOXED(2843740159,32,FLEN)
NAN_BOXED(2126003847,32,FLEN)
NAN_BOXED(2153311465,32,FLEN)
NAN_BOXED(2843742207,32,FLEN)
NAN_BOXED(2126003847,32,FLEN)
NAN_BOXED(2153311465,32,FLEN)
NAN_BOXED(2843746303,32,FLEN)
NAN_BOXED(2126003847,32,FLEN)
NAN_BOXED(2153311465,32,FLEN)
NAN_BOXED(2843754495,32,FLEN)
NAN_BOXED(2126003847,32,FLEN)
NAN_BOXED(2153311465,32,FLEN)
NAN_BOXED(2843770879,32,FLEN)
NAN_BOXED(2126003847,32,FLEN)
NAN_BOXED(2153311465,32,FLEN)
NAN_BOXED(2843803647,32,FLEN)
NAN_BOXED(2126003847,32,FLEN)
NAN_BOXED(2153311465,32,FLEN)
NAN_BOXED(2843869183,32,FLEN)
NAN_BOXED(2126003847,32,FLEN)
NAN_BOXED(2153311465,32,FLEN)
NAN_BOXED(2844000255,32,FLEN)
NAN_BOXED(2126003847,32,FLEN)
NAN_BOXED(2153311465,32,FLEN)
NAN_BOXED(2844262399,32,FLEN)
NAN_BOXED(2126003847,32,FLEN)
NAN_BOXED(2153311465,32,FLEN)
NAN_BOXED(2844786687,32,FLEN)
NAN_BOXED(2126003847,32,FLEN)
NAN_BOXED(2153311465,32,FLEN)
NAN_BOXED(2845835263,32,FLEN)
NAN_BOXED(2126003847,32,FLEN)
NAN_BOXED(2153311465,32,FLEN)
NAN_BOXED(2847932415,32,FLEN)
NAN_BOXED(2126003847,32,FLEN)
NAN_BOXED(2153311465,32,FLEN)
NAN_BOXED(2847932416,32,FLEN)
NAN_BOXED(2126003847,32,FLEN)
NAN_BOXED(2153311465,32,FLEN)
NAN_BOXED(2850029568,32,FLEN)
NAN_BOXED(2126003847,32,FLEN)
NAN_BOXED(2153311465,32,FLEN)
NAN_BOXED(2851078144,32,FLEN)
NAN_BOXED(2126003847,32,FLEN)
NAN_BOXED(2153311465,32,FLEN)
NAN_BOXED(2851602432,32,FLEN)
NAN_BOXED(2126003847,32,FLEN)
NAN_BOXED(2153311465,32,FLEN)
NAN_BOXED(2851864576,32,FLEN)
NAN_BOXED(2126003847,32,FLEN)
NAN_BOXED(2153311465,32,FLEN)
NAN_BOXED(2851995648,32,FLEN)
NAN_BOXED(2126003847,32,FLEN)
NAN_BOXED(2153311465,32,FLEN)
NAN_BOXED(2852061184,32,FLEN)
NAN_BOXED(2126003847,32,FLEN)
NAN_BOXED(2153311465,32,FLEN)
NAN_BOXED(2852093952,32,FLEN)
NAN_BOXED(2126003847,32,FLEN)
NAN_BOXED(2153311465,32,FLEN)
NAN_BOXED(2852110336,32,FLEN)
NAN_BOXED(2126003847,32,FLEN)
NAN_BOXED(2153311465,32,FLEN)
NAN_BOXED(2852118528,32,FLEN)
NAN_BOXED(2126003847,32,FLEN)
NAN_BOXED(2153311465,32,FLEN)
NAN_BOXED(2852122624,32,FLEN)
NAN_BOXED(2126003847,32,FLEN)
NAN_BOXED(2153311465,32,FLEN)
NAN_BOXED(2852124672,32,FLEN)
NAN_BOXED(2126003847,32,FLEN)
NAN_BOXED(2153311465,32,FLEN)
NAN_BOXED(2852125696,32,FLEN)
NAN_BOXED(2126003847,32,FLEN)
NAN_BOXED(2153311465,32,FLEN)
NAN_BOXED(2852126208,32,FLEN)
NAN_BOXED(2126003847,32,FLEN)
NAN_BOXED(2153311465,32,FLEN)
NAN_BOXED(2852126464,32,FLEN)
NAN_BOXED(2126003847,32,FLEN)
NAN_BOXED(2153311465,32,FLEN)
NAN_BOXED(2852126592,32,FLEN)
NAN_BOXED(2126003847,32,FLEN)
NAN_BOXED(2153311465,32,FLEN)
NAN_BOXED(2852126656,32,FLEN)
NAN_BOXED(2126003847,32,FLEN)
NAN_BOXED(2153311465,32,FLEN)
NAN_BOXED(2852126688,32,FLEN)
NAN_BOXED(2126003847,32,FLEN)
NAN_BOXED(2153311465,32,FLEN)
NAN_BOXED(2852126704,32,FLEN)
NAN_BOXED(2126003847,32,FLEN)
NAN_BOXED(2153311465,32,FLEN)
NAN_BOXED(2852126712,32,FLEN)
NAN_BOXED(2126003847,32,FLEN)
NAN_BOXED(2153311465,32,FLEN)
NAN_BOXED(2852126716,32,FLEN)
NAN_BOXED(2126003847,32,FLEN)
NAN_BOXED(2153311465,32,FLEN)
NAN_BOXED(2852126718,32,FLEN)
NAN_BOXED(2126003847,32,FLEN)
NAN_BOXED(2153311465,32,FLEN)
NAN_BOXED(2852126719,32,FLEN)
NAN_BOXED(2126003847,32,FLEN)
NAN_BOXED(2153311465,32,FLEN)
NAN_BOXED(3212836865,32,FLEN)
NAN_BOXED(2126003847,32,FLEN)
NAN_BOXED(2153311465,32,FLEN)
NAN_BOXED(3212836867,32,FLEN)
NAN_BOXED(2126003847,32,FLEN)
NAN_BOXED(2153311465,32,FLEN)
NAN_BOXED(3212836871,32,FLEN)
NAN_BOXED(2126003847,32,FLEN)
NAN_BOXED(2153311465,32,FLEN)
NAN_BOXED(3214514585,32,FLEN)
NAN_BOXED(2126003847,32,FLEN)
NAN_BOXED(2153311465,32,FLEN)
NAN_BOXED(3215233609,32,FLEN)
NAN_BOXED(2126003847,32,FLEN)
NAN_BOXED(2153311465,32,FLEN)
NAN_BOXED(3216192307,32,FLEN)
NAN_BOXED(2126003847,32,FLEN)
NAN_BOXED(2153311465,32,FLEN)
NAN_BOXED(3216431981,32,FLEN)
NAN_BOXED(2126003847,32,FLEN)
NAN_BOXED(2153311465,32,FLEN)
NAN_BOXED(3216751547,32,FLEN)
NAN_BOXED(2126003847,32,FLEN)
NAN_BOXED(2153311465,32,FLEN)
NAN_BOXED(3217310788,32,FLEN)
NAN_BOXED(2126003847,32,FLEN)
NAN_BOXED(2153311465,32,FLEN)
NAN_BOXED(3217870028,32,FLEN)
NAN_BOXED(2126003847,32,FLEN)
NAN_BOXED(2153311465,32,FLEN)
NAN_BOXED(3218828726,32,FLEN)
NAN_BOXED(2126003847,32,FLEN)
NAN_BOXED(2153311465,32,FLEN)
NAN_BOXED(3219547750,32,FLEN)
NAN_BOXED(2126003847,32,FLEN)
NAN_BOXED(2153311465,32,FLEN)
NAN_BOXED(3220027099,32,FLEN)
NAN_BOXED(2126003847,32,FLEN)
NAN_BOXED(2153311465,32,FLEN)
NAN_BOXED(3221225464,32,FLEN)
NAN_BOXED(2126003847,32,FLEN)
NAN_BOXED(2153311465,32,FLEN)
NAN_BOXED(3221225468,32,FLEN)
NAN_BOXED(2126003847,32,FLEN)
NAN_BOXED(2153311465,32,FLEN)
NAN_BOXED(3221225470,32,FLEN)
NAN_BOXED(2126045654,32,FLEN)
NAN_BOXED(1076968632,32,FLEN)
NAN_BOXED(1946157056,32,FLEN)
NAN_BOXED(2126045654,32,FLEN)
NAN_BOXED(1076968632,32,FLEN)
NAN_BOXED(1946157057,32,FLEN)
NAN_BOXED(2126045654,32,FLEN)
NAN_BOXED(1076968632,32,FLEN)
NAN_BOXED(1946157059,32,FLEN)
NAN_BOXED(2126045654,32,FLEN)
NAN_BOXED(1076968632,32,FLEN)
NAN_BOXED(1946157063,32,FLEN)
NAN_BOXED(2126045654,32,FLEN)
NAN_BOXED(1076968632,32,FLEN)
NAN_BOXED(1946157071,32,FLEN)
NAN_BOXED(2126045654,32,FLEN)
NAN_BOXED(1076968632,32,FLEN)
NAN_BOXED(1946157087,32,FLEN)
NAN_BOXED(2126045654,32,FLEN)
NAN_BOXED(1076968632,32,FLEN)
NAN_BOXED(1946157119,32,FLEN)
NAN_BOXED(2126045654,32,FLEN)
NAN_BOXED(1076968632,32,FLEN)
NAN_BOXED(1946157183,32,FLEN)
NAN_BOXED(2126045654,32,FLEN)
NAN_BOXED(1076968632,32,FLEN)
NAN_BOXED(1946157311,32,FLEN)
NAN_BOXED(2126045654,32,FLEN)
NAN_BOXED(1076968632,32,FLEN)
NAN_BOXED(1946157567,32,FLEN)
NAN_BOXED(2126045654,32,FLEN)
NAN_BOXED(1076968632,32,FLEN)
NAN_BOXED(1946158079,32,FLEN)
NAN_BOXED(2126045654,32,FLEN)
NAN_BOXED(1076968632,32,FLEN)
NAN_BOXED(1946159103,32,FLEN)
NAN_BOXED(2126045654,32,FLEN)
NAN_BOXED(1076968632,32,FLEN)
NAN_BOXED(1946161151,32,FLEN)
NAN_BOXED(2126045654,32,FLEN)
NAN_BOXED(1076968632,32,FLEN)
NAN_BOXED(1946165247,32,FLEN)
NAN_BOXED(2126045654,32,FLEN)
NAN_BOXED(1076968632,32,FLEN)
NAN_BOXED(1946173439,32,FLEN)
NAN_BOXED(2126045654,32,FLEN)
NAN_BOXED(1076968632,32,FLEN)
NAN_BOXED(1946189823,32,FLEN)
NAN_BOXED(2126045654,32,FLEN)
NAN_BOXED(1076968632,32,FLEN)
NAN_BOXED(1946222591,32,FLEN)
NAN_BOXED(2126045654,32,FLEN)
NAN_BOXED(1076968632,32,FLEN)
NAN_BOXED(1946288127,32,FLEN)
NAN_BOXED(2126045654,32,FLEN)
NAN_BOXED(1076968632,32,FLEN)
NAN_BOXED(1946419199,32,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
