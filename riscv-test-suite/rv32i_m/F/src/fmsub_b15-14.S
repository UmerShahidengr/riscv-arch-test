
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 14:18:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32F/fmsub.s.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.s instruction of the RISC-V RV32F_Zicsr,RV32FD_Zicsr,RV64F_Zicsr,RV64FD_Zicsr extension for the fmsub_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF_Zicsr,RV32IFD_Zicsr,RV64IF_Zicsr,RV64IFD_Zicsr,RV32EF_Zicsr,RV32EFD_Zicsr,RV64EF_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fmsub_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*F.*);def TEST_CASE_1=True;",fmsub_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_1664:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x7b2225 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x027aff and fs3 == 0 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cfb2225; op2val:0x2027aff;
op3val:0x3fb6db6d; valaddr_reg:x3; val_offset:4992*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4992*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1665:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x7b2225 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x027aff and fs3 == 0 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cfb2225; op2val:0x2027aff;
op3val:0x3fbbbbbb; valaddr_reg:x3; val_offset:4995*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4995*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1666:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x7b2225 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x027aff and fs3 == 0 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cfb2225; op2val:0x2027aff;
op3val:0x3fc44444; valaddr_reg:x3; val_offset:4998*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4998*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1667:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x7b2225 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x027aff and fs3 == 0 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cfb2225; op2val:0x2027aff;
op3val:0x3fcccccc; valaddr_reg:x3; val_offset:5001*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5001*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1668:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x7b2225 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x027aff and fs3 == 0 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cfb2225; op2val:0x2027aff;
op3val:0x3fdb6db6; valaddr_reg:x3; val_offset:5004*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5004*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1669:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x7b2225 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x027aff and fs3 == 0 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cfb2225; op2val:0x2027aff;
op3val:0x3fe66666; valaddr_reg:x3; val_offset:5007*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5007*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1670:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x7b2225 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x027aff and fs3 == 0 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cfb2225; op2val:0x2027aff;
op3val:0x3fedb6db; valaddr_reg:x3; val_offset:5010*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5010*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1671:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x7b2225 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x027aff and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cfb2225; op2val:0x2027aff;
op3val:0x3ffffff8; valaddr_reg:x3; val_offset:5013*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5013*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1672:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x7b2225 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x027aff and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cfb2225; op2val:0x2027aff;
op3val:0x3ffffffc; valaddr_reg:x3; val_offset:5016*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5016*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1673:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x7b2225 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x027aff and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cfb2225; op2val:0x2027aff;
op3val:0x3ffffffe; valaddr_reg:x3; val_offset:5019*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5019*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1674:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7c and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbe000000; valaddr_reg:x3; val_offset:5022*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5022*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1675:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7c and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbe000001; valaddr_reg:x3; val_offset:5025*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5025*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1676:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7c and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbe000003; valaddr_reg:x3; val_offset:5028*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5028*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1677:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7c and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbe000007; valaddr_reg:x3; val_offset:5031*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5031*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1678:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7c and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbe00000f; valaddr_reg:x3; val_offset:5034*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5034*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1679:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7c and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbe00001f; valaddr_reg:x3; val_offset:5037*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5037*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1680:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7c and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbe00003f; valaddr_reg:x3; val_offset:5040*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5040*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1681:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7c and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbe00007f; valaddr_reg:x3; val_offset:5043*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5043*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1682:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7c and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbe0000ff; valaddr_reg:x3; val_offset:5046*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5046*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1683:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7c and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbe0001ff; valaddr_reg:x3; val_offset:5049*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5049*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1684:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7c and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbe0003ff; valaddr_reg:x3; val_offset:5052*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5052*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1685:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7c and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbe0007ff; valaddr_reg:x3; val_offset:5055*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5055*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1686:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7c and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbe000fff; valaddr_reg:x3; val_offset:5058*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5058*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1687:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7c and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbe001fff; valaddr_reg:x3; val_offset:5061*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5061*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1688:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7c and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbe003fff; valaddr_reg:x3; val_offset:5064*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5064*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1689:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7c and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbe007fff; valaddr_reg:x3; val_offset:5067*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5067*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1690:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7c and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbe00ffff; valaddr_reg:x3; val_offset:5070*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5070*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1691:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7c and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbe01ffff; valaddr_reg:x3; val_offset:5073*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5073*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1692:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7c and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbe03ffff; valaddr_reg:x3; val_offset:5076*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5076*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1693:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7c and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbe07ffff; valaddr_reg:x3; val_offset:5079*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5079*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1694:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7c and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbe0fffff; valaddr_reg:x3; val_offset:5082*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5082*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1695:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7c and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbe1fffff; valaddr_reg:x3; val_offset:5085*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5085*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1696:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7c and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbe3fffff; valaddr_reg:x3; val_offset:5088*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5088*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1697:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7c and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbe400000; valaddr_reg:x3; val_offset:5091*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5091*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1698:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7c and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbe600000; valaddr_reg:x3; val_offset:5094*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5094*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1699:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7c and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbe700000; valaddr_reg:x3; val_offset:5097*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5097*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1700:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7c and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbe780000; valaddr_reg:x3; val_offset:5100*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5100*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1701:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7c and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbe7c0000; valaddr_reg:x3; val_offset:5103*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5103*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1702:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7c and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbe7e0000; valaddr_reg:x3; val_offset:5106*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5106*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1703:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7c and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbe7f0000; valaddr_reg:x3; val_offset:5109*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5109*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1704:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7c and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbe7f8000; valaddr_reg:x3; val_offset:5112*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5112*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1705:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7c and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbe7fc000; valaddr_reg:x3; val_offset:5115*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5115*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1706:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7c and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbe7fe000; valaddr_reg:x3; val_offset:5118*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5118*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1707:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7c and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbe7ff000; valaddr_reg:x3; val_offset:5121*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5121*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1708:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7c and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbe7ff800; valaddr_reg:x3; val_offset:5124*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5124*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1709:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7c and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbe7ffc00; valaddr_reg:x3; val_offset:5127*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5127*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1710:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7c and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbe7ffe00; valaddr_reg:x3; val_offset:5130*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5130*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1711:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7c and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbe7fff00; valaddr_reg:x3; val_offset:5133*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5133*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1712:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7c and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbe7fff80; valaddr_reg:x3; val_offset:5136*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5136*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1713:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7c and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbe7fffc0; valaddr_reg:x3; val_offset:5139*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5139*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1714:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7c and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbe7fffe0; valaddr_reg:x3; val_offset:5142*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5142*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1715:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7c and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbe7ffff0; valaddr_reg:x3; val_offset:5145*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5145*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1716:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7c and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbe7ffff8; valaddr_reg:x3; val_offset:5148*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5148*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1717:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7c and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbe7ffffc; valaddr_reg:x3; val_offset:5151*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5151*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1718:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7c and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbe7ffffe; valaddr_reg:x3; val_offset:5154*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5154*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1719:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7c and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbe7fffff; valaddr_reg:x3; val_offset:5157*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5157*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1720:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbf800001; valaddr_reg:x3; val_offset:5160*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5160*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1721:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbf800003; valaddr_reg:x3; val_offset:5163*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5163*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1722:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbf800007; valaddr_reg:x3; val_offset:5166*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5166*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1723:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbf999999; valaddr_reg:x3; val_offset:5169*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5169*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1724:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbfa49249; valaddr_reg:x3; val_offset:5172*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5172*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1725:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbfb33333; valaddr_reg:x3; val_offset:5175*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5175*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1726:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbfb6db6d; valaddr_reg:x3; val_offset:5178*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5178*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1727:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbfbbbbbb; valaddr_reg:x3; val_offset:5181*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5181*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1728:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbfc44444; valaddr_reg:x3; val_offset:5184*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5184*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1729:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbfcccccc; valaddr_reg:x3; val_offset:5187*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5187*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1730:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbfdb6db6; valaddr_reg:x3; val_offset:5190*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5190*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1731:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbfe66666; valaddr_reg:x3; val_offset:5193*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5193*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1732:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbfedb6db; valaddr_reg:x3; val_offset:5196*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5196*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1733:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbffffff8; valaddr_reg:x3; val_offset:5199*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5199*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1734:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbffffffc; valaddr_reg:x3; val_offset:5202*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5202*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1735:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbffffffe; valaddr_reg:x3; val_offset:5205*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5205*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1736:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x73 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x39800000; valaddr_reg:x3; val_offset:5208*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5208*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1737:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x73 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x39800001; valaddr_reg:x3; val_offset:5211*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5211*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1738:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x73 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x39800003; valaddr_reg:x3; val_offset:5214*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5214*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1739:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x73 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x39800007; valaddr_reg:x3; val_offset:5217*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5217*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1740:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x73 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x3980000f; valaddr_reg:x3; val_offset:5220*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5220*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1741:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x73 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x3980001f; valaddr_reg:x3; val_offset:5223*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5223*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1742:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x73 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x3980003f; valaddr_reg:x3; val_offset:5226*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5226*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1743:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x73 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x3980007f; valaddr_reg:x3; val_offset:5229*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5229*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1744:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x73 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x398000ff; valaddr_reg:x3; val_offset:5232*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5232*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1745:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x73 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x398001ff; valaddr_reg:x3; val_offset:5235*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5235*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1746:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x73 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x398003ff; valaddr_reg:x3; val_offset:5238*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5238*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1747:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x73 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x398007ff; valaddr_reg:x3; val_offset:5241*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5241*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1748:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x73 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x39800fff; valaddr_reg:x3; val_offset:5244*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5244*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1749:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x73 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x39801fff; valaddr_reg:x3; val_offset:5247*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5247*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1750:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x73 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x39803fff; valaddr_reg:x3; val_offset:5250*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5250*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1751:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x73 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x39807fff; valaddr_reg:x3; val_offset:5253*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5253*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1752:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x73 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x3980ffff; valaddr_reg:x3; val_offset:5256*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5256*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1753:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x73 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x3981ffff; valaddr_reg:x3; val_offset:5259*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5259*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1754:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x73 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x3983ffff; valaddr_reg:x3; val_offset:5262*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5262*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1755:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x73 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x3987ffff; valaddr_reg:x3; val_offset:5265*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5265*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1756:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x73 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x398fffff; valaddr_reg:x3; val_offset:5268*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5268*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1757:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x73 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x399fffff; valaddr_reg:x3; val_offset:5271*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5271*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1758:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x73 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x39bfffff; valaddr_reg:x3; val_offset:5274*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5274*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1759:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x73 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x39c00000; valaddr_reg:x3; val_offset:5277*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5277*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1760:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x73 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x39e00000; valaddr_reg:x3; val_offset:5280*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5280*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1761:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x73 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x39f00000; valaddr_reg:x3; val_offset:5283*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5283*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1762:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x73 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x39f80000; valaddr_reg:x3; val_offset:5286*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5286*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1763:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x73 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x39fc0000; valaddr_reg:x3; val_offset:5289*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5289*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1764:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x73 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x39fe0000; valaddr_reg:x3; val_offset:5292*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5292*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1765:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x73 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x39ff0000; valaddr_reg:x3; val_offset:5295*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5295*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1766:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x73 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x39ff8000; valaddr_reg:x3; val_offset:5298*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5298*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1767:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x73 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x39ffc000; valaddr_reg:x3; val_offset:5301*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5301*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1768:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x73 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x39ffe000; valaddr_reg:x3; val_offset:5304*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5304*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1769:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x73 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x39fff000; valaddr_reg:x3; val_offset:5307*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5307*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1770:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x73 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x39fff800; valaddr_reg:x3; val_offset:5310*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5310*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1771:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x73 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x39fffc00; valaddr_reg:x3; val_offset:5313*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5313*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1772:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x73 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x39fffe00; valaddr_reg:x3; val_offset:5316*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5316*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1773:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x73 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x39ffff00; valaddr_reg:x3; val_offset:5319*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5319*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1774:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x73 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x39ffff80; valaddr_reg:x3; val_offset:5322*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5322*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1775:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x73 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x39ffffc0; valaddr_reg:x3; val_offset:5325*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5325*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1776:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x73 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x39ffffe0; valaddr_reg:x3; val_offset:5328*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5328*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1777:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x73 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x39fffff0; valaddr_reg:x3; val_offset:5331*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5331*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1778:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x73 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x39fffff8; valaddr_reg:x3; val_offset:5334*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5334*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1779:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x73 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x39fffffc; valaddr_reg:x3; val_offset:5337*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5337*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1780:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x73 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x39fffffe; valaddr_reg:x3; val_offset:5340*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5340*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1781:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x73 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x39ffffff; valaddr_reg:x3; val_offset:5343*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5343*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1782:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x3f800001; valaddr_reg:x3; val_offset:5346*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5346*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1783:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x3f800003; valaddr_reg:x3; val_offset:5349*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5349*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1784:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x3f800007; valaddr_reg:x3; val_offset:5352*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5352*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1785:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x3f999999; valaddr_reg:x3; val_offset:5355*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5355*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1786:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x3fa49249; valaddr_reg:x3; val_offset:5358*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5358*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1787:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x3fb33333; valaddr_reg:x3; val_offset:5361*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5361*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1788:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x3fb6db6d; valaddr_reg:x3; val_offset:5364*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5364*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1789:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x3fbbbbbb; valaddr_reg:x3; val_offset:5367*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5367*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1790:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x3fc44444; valaddr_reg:x3; val_offset:5370*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5370*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1791:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x3fcccccc; valaddr_reg:x3; val_offset:5373*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5373*0 + 3*13*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(2096833061,32,FLEN)
NAN_BOXED(33716991,32,FLEN)
NAN_BOXED(1068948333,32,FLEN)
NAN_BOXED(2096833061,32,FLEN)
NAN_BOXED(33716991,32,FLEN)
NAN_BOXED(1069267899,32,FLEN)
NAN_BOXED(2096833061,32,FLEN)
NAN_BOXED(33716991,32,FLEN)
NAN_BOXED(1069827140,32,FLEN)
NAN_BOXED(2096833061,32,FLEN)
NAN_BOXED(33716991,32,FLEN)
NAN_BOXED(1070386380,32,FLEN)
NAN_BOXED(2096833061,32,FLEN)
NAN_BOXED(33716991,32,FLEN)
NAN_BOXED(1071345078,32,FLEN)
NAN_BOXED(2096833061,32,FLEN)
NAN_BOXED(33716991,32,FLEN)
NAN_BOXED(1072064102,32,FLEN)
NAN_BOXED(2096833061,32,FLEN)
NAN_BOXED(33716991,32,FLEN)
NAN_BOXED(1072543451,32,FLEN)
NAN_BOXED(2096833061,32,FLEN)
NAN_BOXED(33716991,32,FLEN)
NAN_BOXED(1073741816,32,FLEN)
NAN_BOXED(2096833061,32,FLEN)
NAN_BOXED(33716991,32,FLEN)
NAN_BOXED(1073741820,32,FLEN)
NAN_BOXED(2096833061,32,FLEN)
NAN_BOXED(33716991,32,FLEN)
NAN_BOXED(1073741822,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3187671040,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3187671041,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3187671043,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3187671047,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3187671055,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3187671071,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3187671103,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3187671167,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3187671295,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3187671551,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3187672063,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3187673087,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3187675135,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3187679231,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3187687423,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3187703807,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3187736575,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3187802111,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3187933183,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3188195327,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3188719615,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3189768191,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3191865343,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3191865344,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3193962496,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3195011072,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3195535360,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3195797504,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3195928576,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3195994112,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3196026880,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3196043264,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3196051456,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3196055552,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3196057600,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3196058624,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3196059136,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3196059392,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3196059520,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3196059584,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3196059616,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3196059632,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3196059640,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3196059644,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3196059646,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3196059647,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3212836865,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3212836867,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3212836871,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3214514585,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3215233609,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3216192307,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3216431981,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3216751547,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3217310788,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3217870028,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3218828726,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3219547750,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3220027099,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3221225464,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3221225468,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3221225470,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(964689920,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(964689921,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(964689923,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(964689927,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(964689935,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(964689951,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(964689983,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(964690047,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(964690175,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(964690431,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(964690943,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(964691967,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(964694015,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(964698111,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(964706303,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(964722687,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(964755455,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(964820991,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(964952063,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(965214207,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(965738495,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(966787071,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(968884223,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(968884224,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(970981376,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(972029952,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(972554240,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(972816384,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(972947456,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(973012992,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(973045760,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(973062144,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(973070336,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(973074432,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(973076480,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(973077504,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(973078016,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(973078272,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(973078400,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(973078464,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(973078496,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(973078512,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(973078520,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(973078524,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(973078526,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(973078527,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(1065353217,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(1065353219,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(1065353223,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(1067030937,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(1067749961,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(1068708659,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(1068948333,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(1069267899,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(1069827140,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(1070386380,32,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
