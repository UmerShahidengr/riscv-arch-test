
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 14:18:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32F/fmsub.s.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.s instruction of the RISC-V RV32F_Zicsr,RV32FD_Zicsr,RV64F_Zicsr,RV64FD_Zicsr extension for the fmsub_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF_Zicsr,RV32IFD_Zicsr,RV64IF_Zicsr,RV64IFD_Zicsr,RV32EF_Zicsr,RV32EFD_Zicsr,RV64EF_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fmsub_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*F.*);def TEST_CASE_1=True;",fmsub_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_17920:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x39eef2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x581e19 and fs3 == 1 and fe3 == 0x82 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb9eef2; op2val:0x80581e19;
op3val:0xc10007ff; valaddr_reg:x3; val_offset:53760*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53760*0 + 3*140*FLEN/8, x4, x1, x2)

inst_17921:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x39eef2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x581e19 and fs3 == 1 and fe3 == 0x82 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb9eef2; op2val:0x80581e19;
op3val:0xc1000fff; valaddr_reg:x3; val_offset:53763*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53763*0 + 3*140*FLEN/8, x4, x1, x2)

inst_17922:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x39eef2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x581e19 and fs3 == 1 and fe3 == 0x82 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb9eef2; op2val:0x80581e19;
op3val:0xc1001fff; valaddr_reg:x3; val_offset:53766*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53766*0 + 3*140*FLEN/8, x4, x1, x2)

inst_17923:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x39eef2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x581e19 and fs3 == 1 and fe3 == 0x82 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb9eef2; op2val:0x80581e19;
op3val:0xc1003fff; valaddr_reg:x3; val_offset:53769*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53769*0 + 3*140*FLEN/8, x4, x1, x2)

inst_17924:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x39eef2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x581e19 and fs3 == 1 and fe3 == 0x82 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb9eef2; op2val:0x80581e19;
op3val:0xc1007fff; valaddr_reg:x3; val_offset:53772*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53772*0 + 3*140*FLEN/8, x4, x1, x2)

inst_17925:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x39eef2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x581e19 and fs3 == 1 and fe3 == 0x82 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb9eef2; op2val:0x80581e19;
op3val:0xc100ffff; valaddr_reg:x3; val_offset:53775*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53775*0 + 3*140*FLEN/8, x4, x1, x2)

inst_17926:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x39eef2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x581e19 and fs3 == 1 and fe3 == 0x82 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb9eef2; op2val:0x80581e19;
op3val:0xc101ffff; valaddr_reg:x3; val_offset:53778*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53778*0 + 3*140*FLEN/8, x4, x1, x2)

inst_17927:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x39eef2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x581e19 and fs3 == 1 and fe3 == 0x82 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb9eef2; op2val:0x80581e19;
op3val:0xc103ffff; valaddr_reg:x3; val_offset:53781*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53781*0 + 3*140*FLEN/8, x4, x1, x2)

inst_17928:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x39eef2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x581e19 and fs3 == 1 and fe3 == 0x82 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb9eef2; op2val:0x80581e19;
op3val:0xc107ffff; valaddr_reg:x3; val_offset:53784*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53784*0 + 3*140*FLEN/8, x4, x1, x2)

inst_17929:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x39eef2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x581e19 and fs3 == 1 and fe3 == 0x82 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb9eef2; op2val:0x80581e19;
op3val:0xc10fffff; valaddr_reg:x3; val_offset:53787*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53787*0 + 3*140*FLEN/8, x4, x1, x2)

inst_17930:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x39eef2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x581e19 and fs3 == 1 and fe3 == 0x82 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb9eef2; op2val:0x80581e19;
op3val:0xc11fffff; valaddr_reg:x3; val_offset:53790*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53790*0 + 3*140*FLEN/8, x4, x1, x2)

inst_17931:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x39eef2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x581e19 and fs3 == 1 and fe3 == 0x82 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb9eef2; op2val:0x80581e19;
op3val:0xc13fffff; valaddr_reg:x3; val_offset:53793*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53793*0 + 3*140*FLEN/8, x4, x1, x2)

inst_17932:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x39eef2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x581e19 and fs3 == 1 and fe3 == 0x82 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb9eef2; op2val:0x80581e19;
op3val:0xc1400000; valaddr_reg:x3; val_offset:53796*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53796*0 + 3*140*FLEN/8, x4, x1, x2)

inst_17933:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x39eef2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x581e19 and fs3 == 1 and fe3 == 0x82 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb9eef2; op2val:0x80581e19;
op3val:0xc1600000; valaddr_reg:x3; val_offset:53799*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53799*0 + 3*140*FLEN/8, x4, x1, x2)

inst_17934:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x39eef2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x581e19 and fs3 == 1 and fe3 == 0x82 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb9eef2; op2val:0x80581e19;
op3val:0xc1700000; valaddr_reg:x3; val_offset:53802*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53802*0 + 3*140*FLEN/8, x4, x1, x2)

inst_17935:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x39eef2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x581e19 and fs3 == 1 and fe3 == 0x82 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb9eef2; op2val:0x80581e19;
op3val:0xc1780000; valaddr_reg:x3; val_offset:53805*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53805*0 + 3*140*FLEN/8, x4, x1, x2)

inst_17936:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x39eef2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x581e19 and fs3 == 1 and fe3 == 0x82 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb9eef2; op2val:0x80581e19;
op3val:0xc17c0000; valaddr_reg:x3; val_offset:53808*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53808*0 + 3*140*FLEN/8, x4, x1, x2)

inst_17937:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x39eef2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x581e19 and fs3 == 1 and fe3 == 0x82 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb9eef2; op2val:0x80581e19;
op3val:0xc17e0000; valaddr_reg:x3; val_offset:53811*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53811*0 + 3*140*FLEN/8, x4, x1, x2)

inst_17938:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x39eef2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x581e19 and fs3 == 1 and fe3 == 0x82 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb9eef2; op2val:0x80581e19;
op3val:0xc17f0000; valaddr_reg:x3; val_offset:53814*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53814*0 + 3*140*FLEN/8, x4, x1, x2)

inst_17939:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x39eef2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x581e19 and fs3 == 1 and fe3 == 0x82 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb9eef2; op2val:0x80581e19;
op3val:0xc17f8000; valaddr_reg:x3; val_offset:53817*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53817*0 + 3*140*FLEN/8, x4, x1, x2)

inst_17940:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x39eef2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x581e19 and fs3 == 1 and fe3 == 0x82 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb9eef2; op2val:0x80581e19;
op3val:0xc17fc000; valaddr_reg:x3; val_offset:53820*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53820*0 + 3*140*FLEN/8, x4, x1, x2)

inst_17941:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x39eef2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x581e19 and fs3 == 1 and fe3 == 0x82 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb9eef2; op2val:0x80581e19;
op3val:0xc17fe000; valaddr_reg:x3; val_offset:53823*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53823*0 + 3*140*FLEN/8, x4, x1, x2)

inst_17942:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x39eef2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x581e19 and fs3 == 1 and fe3 == 0x82 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb9eef2; op2val:0x80581e19;
op3val:0xc17ff000; valaddr_reg:x3; val_offset:53826*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53826*0 + 3*140*FLEN/8, x4, x1, x2)

inst_17943:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x39eef2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x581e19 and fs3 == 1 and fe3 == 0x82 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb9eef2; op2val:0x80581e19;
op3val:0xc17ff800; valaddr_reg:x3; val_offset:53829*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53829*0 + 3*140*FLEN/8, x4, x1, x2)

inst_17944:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x39eef2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x581e19 and fs3 == 1 and fe3 == 0x82 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb9eef2; op2val:0x80581e19;
op3val:0xc17ffc00; valaddr_reg:x3; val_offset:53832*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53832*0 + 3*140*FLEN/8, x4, x1, x2)

inst_17945:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x39eef2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x581e19 and fs3 == 1 and fe3 == 0x82 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb9eef2; op2val:0x80581e19;
op3val:0xc17ffe00; valaddr_reg:x3; val_offset:53835*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53835*0 + 3*140*FLEN/8, x4, x1, x2)

inst_17946:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x39eef2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x581e19 and fs3 == 1 and fe3 == 0x82 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb9eef2; op2val:0x80581e19;
op3val:0xc17fff00; valaddr_reg:x3; val_offset:53838*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53838*0 + 3*140*FLEN/8, x4, x1, x2)

inst_17947:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x39eef2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x581e19 and fs3 == 1 and fe3 == 0x82 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb9eef2; op2val:0x80581e19;
op3val:0xc17fff80; valaddr_reg:x3; val_offset:53841*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53841*0 + 3*140*FLEN/8, x4, x1, x2)

inst_17948:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x39eef2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x581e19 and fs3 == 1 and fe3 == 0x82 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb9eef2; op2val:0x80581e19;
op3val:0xc17fffc0; valaddr_reg:x3; val_offset:53844*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53844*0 + 3*140*FLEN/8, x4, x1, x2)

inst_17949:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x39eef2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x581e19 and fs3 == 1 and fe3 == 0x82 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb9eef2; op2val:0x80581e19;
op3val:0xc17fffe0; valaddr_reg:x3; val_offset:53847*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53847*0 + 3*140*FLEN/8, x4, x1, x2)

inst_17950:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x39eef2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x581e19 and fs3 == 1 and fe3 == 0x82 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb9eef2; op2val:0x80581e19;
op3val:0xc17ffff0; valaddr_reg:x3; val_offset:53850*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53850*0 + 3*140*FLEN/8, x4, x1, x2)

inst_17951:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x39eef2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x581e19 and fs3 == 1 and fe3 == 0x82 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb9eef2; op2val:0x80581e19;
op3val:0xc17ffff8; valaddr_reg:x3; val_offset:53853*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53853*0 + 3*140*FLEN/8, x4, x1, x2)

inst_17952:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x39eef2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x581e19 and fs3 == 1 and fe3 == 0x82 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb9eef2; op2val:0x80581e19;
op3val:0xc17ffffc; valaddr_reg:x3; val_offset:53856*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53856*0 + 3*140*FLEN/8, x4, x1, x2)

inst_17953:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x39eef2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x581e19 and fs3 == 1 and fe3 == 0x82 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb9eef2; op2val:0x80581e19;
op3val:0xc17ffffe; valaddr_reg:x3; val_offset:53859*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53859*0 + 3*140*FLEN/8, x4, x1, x2)

inst_17954:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x39eef2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x581e19 and fs3 == 1 and fe3 == 0x82 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb9eef2; op2val:0x80581e19;
op3val:0xc17fffff; valaddr_reg:x3; val_offset:53862*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53862*0 + 3*140*FLEN/8, x4, x1, x2)

inst_17955:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3afa5a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x57a014 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebafa5a; op2val:0x57a014;
op3val:0x3f800001; valaddr_reg:x3; val_offset:53865*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53865*0 + 3*140*FLEN/8, x4, x1, x2)

inst_17956:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3afa5a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x57a014 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebafa5a; op2val:0x57a014;
op3val:0x3f800003; valaddr_reg:x3; val_offset:53868*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53868*0 + 3*140*FLEN/8, x4, x1, x2)

inst_17957:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3afa5a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x57a014 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebafa5a; op2val:0x57a014;
op3val:0x3f800007; valaddr_reg:x3; val_offset:53871*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53871*0 + 3*140*FLEN/8, x4, x1, x2)

inst_17958:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3afa5a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x57a014 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebafa5a; op2val:0x57a014;
op3val:0x3f999999; valaddr_reg:x3; val_offset:53874*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53874*0 + 3*140*FLEN/8, x4, x1, x2)

inst_17959:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3afa5a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x57a014 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebafa5a; op2val:0x57a014;
op3val:0x3fa49249; valaddr_reg:x3; val_offset:53877*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53877*0 + 3*140*FLEN/8, x4, x1, x2)

inst_17960:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3afa5a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x57a014 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebafa5a; op2val:0x57a014;
op3val:0x3fb33333; valaddr_reg:x3; val_offset:53880*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53880*0 + 3*140*FLEN/8, x4, x1, x2)

inst_17961:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3afa5a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x57a014 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebafa5a; op2val:0x57a014;
op3val:0x3fb6db6d; valaddr_reg:x3; val_offset:53883*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53883*0 + 3*140*FLEN/8, x4, x1, x2)

inst_17962:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3afa5a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x57a014 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebafa5a; op2val:0x57a014;
op3val:0x3fbbbbbb; valaddr_reg:x3; val_offset:53886*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53886*0 + 3*140*FLEN/8, x4, x1, x2)

inst_17963:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3afa5a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x57a014 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebafa5a; op2val:0x57a014;
op3val:0x3fc44444; valaddr_reg:x3; val_offset:53889*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53889*0 + 3*140*FLEN/8, x4, x1, x2)

inst_17964:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3afa5a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x57a014 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebafa5a; op2val:0x57a014;
op3val:0x3fcccccc; valaddr_reg:x3; val_offset:53892*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53892*0 + 3*140*FLEN/8, x4, x1, x2)

inst_17965:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3afa5a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x57a014 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebafa5a; op2val:0x57a014;
op3val:0x3fdb6db6; valaddr_reg:x3; val_offset:53895*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53895*0 + 3*140*FLEN/8, x4, x1, x2)

inst_17966:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3afa5a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x57a014 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebafa5a; op2val:0x57a014;
op3val:0x3fe66666; valaddr_reg:x3; val_offset:53898*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53898*0 + 3*140*FLEN/8, x4, x1, x2)

inst_17967:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3afa5a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x57a014 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebafa5a; op2val:0x57a014;
op3val:0x3fedb6db; valaddr_reg:x3; val_offset:53901*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53901*0 + 3*140*FLEN/8, x4, x1, x2)

inst_17968:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3afa5a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x57a014 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebafa5a; op2val:0x57a014;
op3val:0x3ffffff8; valaddr_reg:x3; val_offset:53904*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53904*0 + 3*140*FLEN/8, x4, x1, x2)

inst_17969:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3afa5a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x57a014 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebafa5a; op2val:0x57a014;
op3val:0x3ffffffc; valaddr_reg:x3; val_offset:53907*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53907*0 + 3*140*FLEN/8, x4, x1, x2)

inst_17970:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3afa5a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x57a014 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebafa5a; op2val:0x57a014;
op3val:0x3ffffffe; valaddr_reg:x3; val_offset:53910*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53910*0 + 3*140*FLEN/8, x4, x1, x2)

inst_17971:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3afa5a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x57a014 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebafa5a; op2val:0x57a014;
op3val:0x40800000; valaddr_reg:x3; val_offset:53913*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53913*0 + 3*140*FLEN/8, x4, x1, x2)

inst_17972:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3afa5a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x57a014 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebafa5a; op2val:0x57a014;
op3val:0x40800001; valaddr_reg:x3; val_offset:53916*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53916*0 + 3*140*FLEN/8, x4, x1, x2)

inst_17973:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3afa5a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x57a014 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebafa5a; op2val:0x57a014;
op3val:0x40800003; valaddr_reg:x3; val_offset:53919*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53919*0 + 3*140*FLEN/8, x4, x1, x2)

inst_17974:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3afa5a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x57a014 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebafa5a; op2val:0x57a014;
op3val:0x40800007; valaddr_reg:x3; val_offset:53922*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53922*0 + 3*140*FLEN/8, x4, x1, x2)

inst_17975:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3afa5a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x57a014 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebafa5a; op2val:0x57a014;
op3val:0x4080000f; valaddr_reg:x3; val_offset:53925*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53925*0 + 3*140*FLEN/8, x4, x1, x2)

inst_17976:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3afa5a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x57a014 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebafa5a; op2val:0x57a014;
op3val:0x4080001f; valaddr_reg:x3; val_offset:53928*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53928*0 + 3*140*FLEN/8, x4, x1, x2)

inst_17977:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3afa5a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x57a014 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebafa5a; op2val:0x57a014;
op3val:0x4080003f; valaddr_reg:x3; val_offset:53931*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53931*0 + 3*140*FLEN/8, x4, x1, x2)

inst_17978:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3afa5a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x57a014 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebafa5a; op2val:0x57a014;
op3val:0x4080007f; valaddr_reg:x3; val_offset:53934*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53934*0 + 3*140*FLEN/8, x4, x1, x2)

inst_17979:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3afa5a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x57a014 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebafa5a; op2val:0x57a014;
op3val:0x408000ff; valaddr_reg:x3; val_offset:53937*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53937*0 + 3*140*FLEN/8, x4, x1, x2)

inst_17980:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3afa5a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x57a014 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebafa5a; op2val:0x57a014;
op3val:0x408001ff; valaddr_reg:x3; val_offset:53940*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53940*0 + 3*140*FLEN/8, x4, x1, x2)

inst_17981:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3afa5a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x57a014 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebafa5a; op2val:0x57a014;
op3val:0x408003ff; valaddr_reg:x3; val_offset:53943*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53943*0 + 3*140*FLEN/8, x4, x1, x2)

inst_17982:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3afa5a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x57a014 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebafa5a; op2val:0x57a014;
op3val:0x408007ff; valaddr_reg:x3; val_offset:53946*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53946*0 + 3*140*FLEN/8, x4, x1, x2)

inst_17983:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3afa5a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x57a014 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebafa5a; op2val:0x57a014;
op3val:0x40800fff; valaddr_reg:x3; val_offset:53949*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53949*0 + 3*140*FLEN/8, x4, x1, x2)

inst_17984:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3afa5a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x57a014 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebafa5a; op2val:0x57a014;
op3val:0x40801fff; valaddr_reg:x3; val_offset:53952*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53952*0 + 3*140*FLEN/8, x4, x1, x2)

inst_17985:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3afa5a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x57a014 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebafa5a; op2val:0x57a014;
op3val:0x40803fff; valaddr_reg:x3; val_offset:53955*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53955*0 + 3*140*FLEN/8, x4, x1, x2)

inst_17986:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3afa5a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x57a014 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebafa5a; op2val:0x57a014;
op3val:0x40807fff; valaddr_reg:x3; val_offset:53958*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53958*0 + 3*140*FLEN/8, x4, x1, x2)

inst_17987:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3afa5a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x57a014 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebafa5a; op2val:0x57a014;
op3val:0x4080ffff; valaddr_reg:x3; val_offset:53961*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53961*0 + 3*140*FLEN/8, x4, x1, x2)

inst_17988:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3afa5a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x57a014 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebafa5a; op2val:0x57a014;
op3val:0x4081ffff; valaddr_reg:x3; val_offset:53964*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53964*0 + 3*140*FLEN/8, x4, x1, x2)

inst_17989:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3afa5a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x57a014 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebafa5a; op2val:0x57a014;
op3val:0x4083ffff; valaddr_reg:x3; val_offset:53967*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53967*0 + 3*140*FLEN/8, x4, x1, x2)

inst_17990:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3afa5a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x57a014 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebafa5a; op2val:0x57a014;
op3val:0x4087ffff; valaddr_reg:x3; val_offset:53970*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53970*0 + 3*140*FLEN/8, x4, x1, x2)

inst_17991:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3afa5a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x57a014 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebafa5a; op2val:0x57a014;
op3val:0x408fffff; valaddr_reg:x3; val_offset:53973*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53973*0 + 3*140*FLEN/8, x4, x1, x2)

inst_17992:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3afa5a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x57a014 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebafa5a; op2val:0x57a014;
op3val:0x409fffff; valaddr_reg:x3; val_offset:53976*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53976*0 + 3*140*FLEN/8, x4, x1, x2)

inst_17993:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3afa5a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x57a014 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebafa5a; op2val:0x57a014;
op3val:0x40bfffff; valaddr_reg:x3; val_offset:53979*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53979*0 + 3*140*FLEN/8, x4, x1, x2)

inst_17994:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3afa5a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x57a014 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebafa5a; op2val:0x57a014;
op3val:0x40c00000; valaddr_reg:x3; val_offset:53982*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53982*0 + 3*140*FLEN/8, x4, x1, x2)

inst_17995:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3afa5a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x57a014 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebafa5a; op2val:0x57a014;
op3val:0x40e00000; valaddr_reg:x3; val_offset:53985*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53985*0 + 3*140*FLEN/8, x4, x1, x2)

inst_17996:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3afa5a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x57a014 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebafa5a; op2val:0x57a014;
op3val:0x40f00000; valaddr_reg:x3; val_offset:53988*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53988*0 + 3*140*FLEN/8, x4, x1, x2)

inst_17997:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3afa5a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x57a014 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebafa5a; op2val:0x57a014;
op3val:0x40f80000; valaddr_reg:x3; val_offset:53991*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53991*0 + 3*140*FLEN/8, x4, x1, x2)

inst_17998:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3afa5a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x57a014 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebafa5a; op2val:0x57a014;
op3val:0x40fc0000; valaddr_reg:x3; val_offset:53994*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53994*0 + 3*140*FLEN/8, x4, x1, x2)

inst_17999:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3afa5a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x57a014 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebafa5a; op2val:0x57a014;
op3val:0x40fe0000; valaddr_reg:x3; val_offset:53997*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53997*0 + 3*140*FLEN/8, x4, x1, x2)

inst_18000:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3afa5a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x57a014 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebafa5a; op2val:0x57a014;
op3val:0x40ff0000; valaddr_reg:x3; val_offset:54000*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54000*0 + 3*140*FLEN/8, x4, x1, x2)

inst_18001:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3afa5a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x57a014 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebafa5a; op2val:0x57a014;
op3val:0x40ff8000; valaddr_reg:x3; val_offset:54003*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54003*0 + 3*140*FLEN/8, x4, x1, x2)

inst_18002:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3afa5a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x57a014 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebafa5a; op2val:0x57a014;
op3val:0x40ffc000; valaddr_reg:x3; val_offset:54006*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54006*0 + 3*140*FLEN/8, x4, x1, x2)

inst_18003:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3afa5a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x57a014 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebafa5a; op2val:0x57a014;
op3val:0x40ffe000; valaddr_reg:x3; val_offset:54009*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54009*0 + 3*140*FLEN/8, x4, x1, x2)

inst_18004:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3afa5a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x57a014 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebafa5a; op2val:0x57a014;
op3val:0x40fff000; valaddr_reg:x3; val_offset:54012*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54012*0 + 3*140*FLEN/8, x4, x1, x2)

inst_18005:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3afa5a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x57a014 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebafa5a; op2val:0x57a014;
op3val:0x40fff800; valaddr_reg:x3; val_offset:54015*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54015*0 + 3*140*FLEN/8, x4, x1, x2)

inst_18006:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3afa5a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x57a014 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebafa5a; op2val:0x57a014;
op3val:0x40fffc00; valaddr_reg:x3; val_offset:54018*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54018*0 + 3*140*FLEN/8, x4, x1, x2)

inst_18007:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3afa5a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x57a014 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebafa5a; op2val:0x57a014;
op3val:0x40fffe00; valaddr_reg:x3; val_offset:54021*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54021*0 + 3*140*FLEN/8, x4, x1, x2)

inst_18008:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3afa5a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x57a014 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebafa5a; op2val:0x57a014;
op3val:0x40ffff00; valaddr_reg:x3; val_offset:54024*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54024*0 + 3*140*FLEN/8, x4, x1, x2)

inst_18009:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3afa5a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x57a014 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebafa5a; op2val:0x57a014;
op3val:0x40ffff80; valaddr_reg:x3; val_offset:54027*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54027*0 + 3*140*FLEN/8, x4, x1, x2)

inst_18010:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3afa5a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x57a014 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebafa5a; op2val:0x57a014;
op3val:0x40ffffc0; valaddr_reg:x3; val_offset:54030*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54030*0 + 3*140*FLEN/8, x4, x1, x2)

inst_18011:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3afa5a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x57a014 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebafa5a; op2val:0x57a014;
op3val:0x40ffffe0; valaddr_reg:x3; val_offset:54033*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54033*0 + 3*140*FLEN/8, x4, x1, x2)

inst_18012:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3afa5a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x57a014 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebafa5a; op2val:0x57a014;
op3val:0x40fffff0; valaddr_reg:x3; val_offset:54036*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54036*0 + 3*140*FLEN/8, x4, x1, x2)

inst_18013:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3afa5a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x57a014 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebafa5a; op2val:0x57a014;
op3val:0x40fffff8; valaddr_reg:x3; val_offset:54039*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54039*0 + 3*140*FLEN/8, x4, x1, x2)

inst_18014:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3afa5a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x57a014 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebafa5a; op2val:0x57a014;
op3val:0x40fffffc; valaddr_reg:x3; val_offset:54042*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54042*0 + 3*140*FLEN/8, x4, x1, x2)

inst_18015:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3afa5a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x57a014 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebafa5a; op2val:0x57a014;
op3val:0x40fffffe; valaddr_reg:x3; val_offset:54045*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54045*0 + 3*140*FLEN/8, x4, x1, x2)

inst_18016:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3afa5a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x57a014 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebafa5a; op2val:0x57a014;
op3val:0x40ffffff; valaddr_reg:x3; val_offset:54048*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54048*0 + 3*140*FLEN/8, x4, x1, x2)

inst_18017:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3baf29 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574ba9 and fs3 == 0 and fe3 == 0x6f and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbaf29; op2val:0x574ba9;
op3val:0x37800000; valaddr_reg:x3; val_offset:54051*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54051*0 + 3*140*FLEN/8, x4, x1, x2)

inst_18018:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3baf29 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574ba9 and fs3 == 0 and fe3 == 0x6f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbaf29; op2val:0x574ba9;
op3val:0x37800001; valaddr_reg:x3; val_offset:54054*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54054*0 + 3*140*FLEN/8, x4, x1, x2)

inst_18019:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3baf29 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574ba9 and fs3 == 0 and fe3 == 0x6f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbaf29; op2val:0x574ba9;
op3val:0x37800003; valaddr_reg:x3; val_offset:54057*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54057*0 + 3*140*FLEN/8, x4, x1, x2)

inst_18020:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3baf29 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574ba9 and fs3 == 0 and fe3 == 0x6f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbaf29; op2val:0x574ba9;
op3val:0x37800007; valaddr_reg:x3; val_offset:54060*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54060*0 + 3*140*FLEN/8, x4, x1, x2)

inst_18021:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3baf29 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574ba9 and fs3 == 0 and fe3 == 0x6f and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbaf29; op2val:0x574ba9;
op3val:0x3780000f; valaddr_reg:x3; val_offset:54063*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54063*0 + 3*140*FLEN/8, x4, x1, x2)

inst_18022:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3baf29 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574ba9 and fs3 == 0 and fe3 == 0x6f and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbaf29; op2val:0x574ba9;
op3val:0x3780001f; valaddr_reg:x3; val_offset:54066*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54066*0 + 3*140*FLEN/8, x4, x1, x2)

inst_18023:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3baf29 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574ba9 and fs3 == 0 and fe3 == 0x6f and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbaf29; op2val:0x574ba9;
op3val:0x3780003f; valaddr_reg:x3; val_offset:54069*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54069*0 + 3*140*FLEN/8, x4, x1, x2)

inst_18024:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3baf29 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574ba9 and fs3 == 0 and fe3 == 0x6f and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbaf29; op2val:0x574ba9;
op3val:0x3780007f; valaddr_reg:x3; val_offset:54072*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54072*0 + 3*140*FLEN/8, x4, x1, x2)

inst_18025:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3baf29 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574ba9 and fs3 == 0 and fe3 == 0x6f and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbaf29; op2val:0x574ba9;
op3val:0x378000ff; valaddr_reg:x3; val_offset:54075*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54075*0 + 3*140*FLEN/8, x4, x1, x2)

inst_18026:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3baf29 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574ba9 and fs3 == 0 and fe3 == 0x6f and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbaf29; op2val:0x574ba9;
op3val:0x378001ff; valaddr_reg:x3; val_offset:54078*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54078*0 + 3*140*FLEN/8, x4, x1, x2)

inst_18027:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3baf29 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574ba9 and fs3 == 0 and fe3 == 0x6f and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbaf29; op2val:0x574ba9;
op3val:0x378003ff; valaddr_reg:x3; val_offset:54081*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54081*0 + 3*140*FLEN/8, x4, x1, x2)

inst_18028:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3baf29 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574ba9 and fs3 == 0 and fe3 == 0x6f and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbaf29; op2val:0x574ba9;
op3val:0x378007ff; valaddr_reg:x3; val_offset:54084*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54084*0 + 3*140*FLEN/8, x4, x1, x2)

inst_18029:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3baf29 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574ba9 and fs3 == 0 and fe3 == 0x6f and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbaf29; op2val:0x574ba9;
op3val:0x37800fff; valaddr_reg:x3; val_offset:54087*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54087*0 + 3*140*FLEN/8, x4, x1, x2)

inst_18030:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3baf29 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574ba9 and fs3 == 0 and fe3 == 0x6f and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbaf29; op2val:0x574ba9;
op3val:0x37801fff; valaddr_reg:x3; val_offset:54090*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54090*0 + 3*140*FLEN/8, x4, x1, x2)

inst_18031:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3baf29 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574ba9 and fs3 == 0 and fe3 == 0x6f and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbaf29; op2val:0x574ba9;
op3val:0x37803fff; valaddr_reg:x3; val_offset:54093*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54093*0 + 3*140*FLEN/8, x4, x1, x2)

inst_18032:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3baf29 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574ba9 and fs3 == 0 and fe3 == 0x6f and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbaf29; op2val:0x574ba9;
op3val:0x37807fff; valaddr_reg:x3; val_offset:54096*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54096*0 + 3*140*FLEN/8, x4, x1, x2)

inst_18033:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3baf29 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574ba9 and fs3 == 0 and fe3 == 0x6f and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbaf29; op2val:0x574ba9;
op3val:0x3780ffff; valaddr_reg:x3; val_offset:54099*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54099*0 + 3*140*FLEN/8, x4, x1, x2)

inst_18034:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3baf29 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574ba9 and fs3 == 0 and fe3 == 0x6f and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbaf29; op2val:0x574ba9;
op3val:0x3781ffff; valaddr_reg:x3; val_offset:54102*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54102*0 + 3*140*FLEN/8, x4, x1, x2)

inst_18035:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3baf29 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574ba9 and fs3 == 0 and fe3 == 0x6f and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbaf29; op2val:0x574ba9;
op3val:0x3783ffff; valaddr_reg:x3; val_offset:54105*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54105*0 + 3*140*FLEN/8, x4, x1, x2)

inst_18036:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3baf29 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574ba9 and fs3 == 0 and fe3 == 0x6f and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbaf29; op2val:0x574ba9;
op3val:0x3787ffff; valaddr_reg:x3; val_offset:54108*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54108*0 + 3*140*FLEN/8, x4, x1, x2)

inst_18037:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3baf29 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574ba9 and fs3 == 0 and fe3 == 0x6f and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbaf29; op2val:0x574ba9;
op3val:0x378fffff; valaddr_reg:x3; val_offset:54111*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54111*0 + 3*140*FLEN/8, x4, x1, x2)

inst_18038:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3baf29 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574ba9 and fs3 == 0 and fe3 == 0x6f and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbaf29; op2val:0x574ba9;
op3val:0x379fffff; valaddr_reg:x3; val_offset:54114*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54114*0 + 3*140*FLEN/8, x4, x1, x2)

inst_18039:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3baf29 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574ba9 and fs3 == 0 and fe3 == 0x6f and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbaf29; op2val:0x574ba9;
op3val:0x37bfffff; valaddr_reg:x3; val_offset:54117*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54117*0 + 3*140*FLEN/8, x4, x1, x2)

inst_18040:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3baf29 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574ba9 and fs3 == 0 and fe3 == 0x6f and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbaf29; op2val:0x574ba9;
op3val:0x37c00000; valaddr_reg:x3; val_offset:54120*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54120*0 + 3*140*FLEN/8, x4, x1, x2)

inst_18041:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3baf29 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574ba9 and fs3 == 0 and fe3 == 0x6f and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbaf29; op2val:0x574ba9;
op3val:0x37e00000; valaddr_reg:x3; val_offset:54123*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54123*0 + 3*140*FLEN/8, x4, x1, x2)

inst_18042:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3baf29 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574ba9 and fs3 == 0 and fe3 == 0x6f and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbaf29; op2val:0x574ba9;
op3val:0x37f00000; valaddr_reg:x3; val_offset:54126*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54126*0 + 3*140*FLEN/8, x4, x1, x2)

inst_18043:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3baf29 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574ba9 and fs3 == 0 and fe3 == 0x6f and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbaf29; op2val:0x574ba9;
op3val:0x37f80000; valaddr_reg:x3; val_offset:54129*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54129*0 + 3*140*FLEN/8, x4, x1, x2)

inst_18044:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3baf29 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574ba9 and fs3 == 0 and fe3 == 0x6f and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbaf29; op2val:0x574ba9;
op3val:0x37fc0000; valaddr_reg:x3; val_offset:54132*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54132*0 + 3*140*FLEN/8, x4, x1, x2)

inst_18045:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3baf29 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574ba9 and fs3 == 0 and fe3 == 0x6f and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbaf29; op2val:0x574ba9;
op3val:0x37fe0000; valaddr_reg:x3; val_offset:54135*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54135*0 + 3*140*FLEN/8, x4, x1, x2)

inst_18046:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3baf29 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574ba9 and fs3 == 0 and fe3 == 0x6f and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbaf29; op2val:0x574ba9;
op3val:0x37ff0000; valaddr_reg:x3; val_offset:54138*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54138*0 + 3*140*FLEN/8, x4, x1, x2)

inst_18047:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3baf29 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574ba9 and fs3 == 0 and fe3 == 0x6f and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbaf29; op2val:0x574ba9;
op3val:0x37ff8000; valaddr_reg:x3; val_offset:54141*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54141*0 + 3*140*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(2126114546,32,FLEN)
NAN_BOXED(2153258521,32,FLEN)
NAN_BOXED(3238004735,32,FLEN)
NAN_BOXED(2126114546,32,FLEN)
NAN_BOXED(2153258521,32,FLEN)
NAN_BOXED(3238006783,32,FLEN)
NAN_BOXED(2126114546,32,FLEN)
NAN_BOXED(2153258521,32,FLEN)
NAN_BOXED(3238010879,32,FLEN)
NAN_BOXED(2126114546,32,FLEN)
NAN_BOXED(2153258521,32,FLEN)
NAN_BOXED(3238019071,32,FLEN)
NAN_BOXED(2126114546,32,FLEN)
NAN_BOXED(2153258521,32,FLEN)
NAN_BOXED(3238035455,32,FLEN)
NAN_BOXED(2126114546,32,FLEN)
NAN_BOXED(2153258521,32,FLEN)
NAN_BOXED(3238068223,32,FLEN)
NAN_BOXED(2126114546,32,FLEN)
NAN_BOXED(2153258521,32,FLEN)
NAN_BOXED(3238133759,32,FLEN)
NAN_BOXED(2126114546,32,FLEN)
NAN_BOXED(2153258521,32,FLEN)
NAN_BOXED(3238264831,32,FLEN)
NAN_BOXED(2126114546,32,FLEN)
NAN_BOXED(2153258521,32,FLEN)
NAN_BOXED(3238526975,32,FLEN)
NAN_BOXED(2126114546,32,FLEN)
NAN_BOXED(2153258521,32,FLEN)
NAN_BOXED(3239051263,32,FLEN)
NAN_BOXED(2126114546,32,FLEN)
NAN_BOXED(2153258521,32,FLEN)
NAN_BOXED(3240099839,32,FLEN)
NAN_BOXED(2126114546,32,FLEN)
NAN_BOXED(2153258521,32,FLEN)
NAN_BOXED(3242196991,32,FLEN)
NAN_BOXED(2126114546,32,FLEN)
NAN_BOXED(2153258521,32,FLEN)
NAN_BOXED(3242196992,32,FLEN)
NAN_BOXED(2126114546,32,FLEN)
NAN_BOXED(2153258521,32,FLEN)
NAN_BOXED(3244294144,32,FLEN)
NAN_BOXED(2126114546,32,FLEN)
NAN_BOXED(2153258521,32,FLEN)
NAN_BOXED(3245342720,32,FLEN)
NAN_BOXED(2126114546,32,FLEN)
NAN_BOXED(2153258521,32,FLEN)
NAN_BOXED(3245867008,32,FLEN)
NAN_BOXED(2126114546,32,FLEN)
NAN_BOXED(2153258521,32,FLEN)
NAN_BOXED(3246129152,32,FLEN)
NAN_BOXED(2126114546,32,FLEN)
NAN_BOXED(2153258521,32,FLEN)
NAN_BOXED(3246260224,32,FLEN)
NAN_BOXED(2126114546,32,FLEN)
NAN_BOXED(2153258521,32,FLEN)
NAN_BOXED(3246325760,32,FLEN)
NAN_BOXED(2126114546,32,FLEN)
NAN_BOXED(2153258521,32,FLEN)
NAN_BOXED(3246358528,32,FLEN)
NAN_BOXED(2126114546,32,FLEN)
NAN_BOXED(2153258521,32,FLEN)
NAN_BOXED(3246374912,32,FLEN)
NAN_BOXED(2126114546,32,FLEN)
NAN_BOXED(2153258521,32,FLEN)
NAN_BOXED(3246383104,32,FLEN)
NAN_BOXED(2126114546,32,FLEN)
NAN_BOXED(2153258521,32,FLEN)
NAN_BOXED(3246387200,32,FLEN)
NAN_BOXED(2126114546,32,FLEN)
NAN_BOXED(2153258521,32,FLEN)
NAN_BOXED(3246389248,32,FLEN)
NAN_BOXED(2126114546,32,FLEN)
NAN_BOXED(2153258521,32,FLEN)
NAN_BOXED(3246390272,32,FLEN)
NAN_BOXED(2126114546,32,FLEN)
NAN_BOXED(2153258521,32,FLEN)
NAN_BOXED(3246390784,32,FLEN)
NAN_BOXED(2126114546,32,FLEN)
NAN_BOXED(2153258521,32,FLEN)
NAN_BOXED(3246391040,32,FLEN)
NAN_BOXED(2126114546,32,FLEN)
NAN_BOXED(2153258521,32,FLEN)
NAN_BOXED(3246391168,32,FLEN)
NAN_BOXED(2126114546,32,FLEN)
NAN_BOXED(2153258521,32,FLEN)
NAN_BOXED(3246391232,32,FLEN)
NAN_BOXED(2126114546,32,FLEN)
NAN_BOXED(2153258521,32,FLEN)
NAN_BOXED(3246391264,32,FLEN)
NAN_BOXED(2126114546,32,FLEN)
NAN_BOXED(2153258521,32,FLEN)
NAN_BOXED(3246391280,32,FLEN)
NAN_BOXED(2126114546,32,FLEN)
NAN_BOXED(2153258521,32,FLEN)
NAN_BOXED(3246391288,32,FLEN)
NAN_BOXED(2126114546,32,FLEN)
NAN_BOXED(2153258521,32,FLEN)
NAN_BOXED(3246391292,32,FLEN)
NAN_BOXED(2126114546,32,FLEN)
NAN_BOXED(2153258521,32,FLEN)
NAN_BOXED(3246391294,32,FLEN)
NAN_BOXED(2126114546,32,FLEN)
NAN_BOXED(2153258521,32,FLEN)
NAN_BOXED(3246391295,32,FLEN)
NAN_BOXED(2126183002,32,FLEN)
NAN_BOXED(5742612,32,FLEN)
NAN_BOXED(1065353217,32,FLEN)
NAN_BOXED(2126183002,32,FLEN)
NAN_BOXED(5742612,32,FLEN)
NAN_BOXED(1065353219,32,FLEN)
NAN_BOXED(2126183002,32,FLEN)
NAN_BOXED(5742612,32,FLEN)
NAN_BOXED(1065353223,32,FLEN)
NAN_BOXED(2126183002,32,FLEN)
NAN_BOXED(5742612,32,FLEN)
NAN_BOXED(1067030937,32,FLEN)
NAN_BOXED(2126183002,32,FLEN)
NAN_BOXED(5742612,32,FLEN)
NAN_BOXED(1067749961,32,FLEN)
NAN_BOXED(2126183002,32,FLEN)
NAN_BOXED(5742612,32,FLEN)
NAN_BOXED(1068708659,32,FLEN)
NAN_BOXED(2126183002,32,FLEN)
NAN_BOXED(5742612,32,FLEN)
NAN_BOXED(1068948333,32,FLEN)
NAN_BOXED(2126183002,32,FLEN)
NAN_BOXED(5742612,32,FLEN)
NAN_BOXED(1069267899,32,FLEN)
NAN_BOXED(2126183002,32,FLEN)
NAN_BOXED(5742612,32,FLEN)
NAN_BOXED(1069827140,32,FLEN)
NAN_BOXED(2126183002,32,FLEN)
NAN_BOXED(5742612,32,FLEN)
NAN_BOXED(1070386380,32,FLEN)
NAN_BOXED(2126183002,32,FLEN)
NAN_BOXED(5742612,32,FLEN)
NAN_BOXED(1071345078,32,FLEN)
NAN_BOXED(2126183002,32,FLEN)
NAN_BOXED(5742612,32,FLEN)
NAN_BOXED(1072064102,32,FLEN)
NAN_BOXED(2126183002,32,FLEN)
NAN_BOXED(5742612,32,FLEN)
NAN_BOXED(1072543451,32,FLEN)
NAN_BOXED(2126183002,32,FLEN)
NAN_BOXED(5742612,32,FLEN)
NAN_BOXED(1073741816,32,FLEN)
NAN_BOXED(2126183002,32,FLEN)
NAN_BOXED(5742612,32,FLEN)
NAN_BOXED(1073741820,32,FLEN)
NAN_BOXED(2126183002,32,FLEN)
NAN_BOXED(5742612,32,FLEN)
NAN_BOXED(1073741822,32,FLEN)
NAN_BOXED(2126183002,32,FLEN)
NAN_BOXED(5742612,32,FLEN)
NAN_BOXED(1082130432,32,FLEN)
NAN_BOXED(2126183002,32,FLEN)
NAN_BOXED(5742612,32,FLEN)
NAN_BOXED(1082130433,32,FLEN)
NAN_BOXED(2126183002,32,FLEN)
NAN_BOXED(5742612,32,FLEN)
NAN_BOXED(1082130435,32,FLEN)
NAN_BOXED(2126183002,32,FLEN)
NAN_BOXED(5742612,32,FLEN)
NAN_BOXED(1082130439,32,FLEN)
NAN_BOXED(2126183002,32,FLEN)
NAN_BOXED(5742612,32,FLEN)
NAN_BOXED(1082130447,32,FLEN)
NAN_BOXED(2126183002,32,FLEN)
NAN_BOXED(5742612,32,FLEN)
NAN_BOXED(1082130463,32,FLEN)
NAN_BOXED(2126183002,32,FLEN)
NAN_BOXED(5742612,32,FLEN)
NAN_BOXED(1082130495,32,FLEN)
NAN_BOXED(2126183002,32,FLEN)
NAN_BOXED(5742612,32,FLEN)
NAN_BOXED(1082130559,32,FLEN)
NAN_BOXED(2126183002,32,FLEN)
NAN_BOXED(5742612,32,FLEN)
NAN_BOXED(1082130687,32,FLEN)
NAN_BOXED(2126183002,32,FLEN)
NAN_BOXED(5742612,32,FLEN)
NAN_BOXED(1082130943,32,FLEN)
NAN_BOXED(2126183002,32,FLEN)
NAN_BOXED(5742612,32,FLEN)
NAN_BOXED(1082131455,32,FLEN)
NAN_BOXED(2126183002,32,FLEN)
NAN_BOXED(5742612,32,FLEN)
NAN_BOXED(1082132479,32,FLEN)
NAN_BOXED(2126183002,32,FLEN)
NAN_BOXED(5742612,32,FLEN)
NAN_BOXED(1082134527,32,FLEN)
NAN_BOXED(2126183002,32,FLEN)
NAN_BOXED(5742612,32,FLEN)
NAN_BOXED(1082138623,32,FLEN)
NAN_BOXED(2126183002,32,FLEN)
NAN_BOXED(5742612,32,FLEN)
NAN_BOXED(1082146815,32,FLEN)
NAN_BOXED(2126183002,32,FLEN)
NAN_BOXED(5742612,32,FLEN)
NAN_BOXED(1082163199,32,FLEN)
NAN_BOXED(2126183002,32,FLEN)
NAN_BOXED(5742612,32,FLEN)
NAN_BOXED(1082195967,32,FLEN)
NAN_BOXED(2126183002,32,FLEN)
NAN_BOXED(5742612,32,FLEN)
NAN_BOXED(1082261503,32,FLEN)
NAN_BOXED(2126183002,32,FLEN)
NAN_BOXED(5742612,32,FLEN)
NAN_BOXED(1082392575,32,FLEN)
NAN_BOXED(2126183002,32,FLEN)
NAN_BOXED(5742612,32,FLEN)
NAN_BOXED(1082654719,32,FLEN)
NAN_BOXED(2126183002,32,FLEN)
NAN_BOXED(5742612,32,FLEN)
NAN_BOXED(1083179007,32,FLEN)
NAN_BOXED(2126183002,32,FLEN)
NAN_BOXED(5742612,32,FLEN)
NAN_BOXED(1084227583,32,FLEN)
NAN_BOXED(2126183002,32,FLEN)
NAN_BOXED(5742612,32,FLEN)
NAN_BOXED(1086324735,32,FLEN)
NAN_BOXED(2126183002,32,FLEN)
NAN_BOXED(5742612,32,FLEN)
NAN_BOXED(1086324736,32,FLEN)
NAN_BOXED(2126183002,32,FLEN)
NAN_BOXED(5742612,32,FLEN)
NAN_BOXED(1088421888,32,FLEN)
NAN_BOXED(2126183002,32,FLEN)
NAN_BOXED(5742612,32,FLEN)
NAN_BOXED(1089470464,32,FLEN)
NAN_BOXED(2126183002,32,FLEN)
NAN_BOXED(5742612,32,FLEN)
NAN_BOXED(1089994752,32,FLEN)
NAN_BOXED(2126183002,32,FLEN)
NAN_BOXED(5742612,32,FLEN)
NAN_BOXED(1090256896,32,FLEN)
NAN_BOXED(2126183002,32,FLEN)
NAN_BOXED(5742612,32,FLEN)
NAN_BOXED(1090387968,32,FLEN)
NAN_BOXED(2126183002,32,FLEN)
NAN_BOXED(5742612,32,FLEN)
NAN_BOXED(1090453504,32,FLEN)
NAN_BOXED(2126183002,32,FLEN)
NAN_BOXED(5742612,32,FLEN)
NAN_BOXED(1090486272,32,FLEN)
NAN_BOXED(2126183002,32,FLEN)
NAN_BOXED(5742612,32,FLEN)
NAN_BOXED(1090502656,32,FLEN)
NAN_BOXED(2126183002,32,FLEN)
NAN_BOXED(5742612,32,FLEN)
NAN_BOXED(1090510848,32,FLEN)
NAN_BOXED(2126183002,32,FLEN)
NAN_BOXED(5742612,32,FLEN)
NAN_BOXED(1090514944,32,FLEN)
NAN_BOXED(2126183002,32,FLEN)
NAN_BOXED(5742612,32,FLEN)
NAN_BOXED(1090516992,32,FLEN)
NAN_BOXED(2126183002,32,FLEN)
NAN_BOXED(5742612,32,FLEN)
NAN_BOXED(1090518016,32,FLEN)
NAN_BOXED(2126183002,32,FLEN)
NAN_BOXED(5742612,32,FLEN)
NAN_BOXED(1090518528,32,FLEN)
NAN_BOXED(2126183002,32,FLEN)
NAN_BOXED(5742612,32,FLEN)
NAN_BOXED(1090518784,32,FLEN)
NAN_BOXED(2126183002,32,FLEN)
NAN_BOXED(5742612,32,FLEN)
NAN_BOXED(1090518912,32,FLEN)
NAN_BOXED(2126183002,32,FLEN)
NAN_BOXED(5742612,32,FLEN)
NAN_BOXED(1090518976,32,FLEN)
NAN_BOXED(2126183002,32,FLEN)
NAN_BOXED(5742612,32,FLEN)
NAN_BOXED(1090519008,32,FLEN)
NAN_BOXED(2126183002,32,FLEN)
NAN_BOXED(5742612,32,FLEN)
NAN_BOXED(1090519024,32,FLEN)
NAN_BOXED(2126183002,32,FLEN)
NAN_BOXED(5742612,32,FLEN)
NAN_BOXED(1090519032,32,FLEN)
NAN_BOXED(2126183002,32,FLEN)
NAN_BOXED(5742612,32,FLEN)
NAN_BOXED(1090519036,32,FLEN)
NAN_BOXED(2126183002,32,FLEN)
NAN_BOXED(5742612,32,FLEN)
NAN_BOXED(1090519038,32,FLEN)
NAN_BOXED(2126183002,32,FLEN)
NAN_BOXED(5742612,32,FLEN)
NAN_BOXED(1090519039,32,FLEN)
NAN_BOXED(2126229289,32,FLEN)
NAN_BOXED(5721001,32,FLEN)
NAN_BOXED(931135488,32,FLEN)
NAN_BOXED(2126229289,32,FLEN)
NAN_BOXED(5721001,32,FLEN)
NAN_BOXED(931135489,32,FLEN)
NAN_BOXED(2126229289,32,FLEN)
NAN_BOXED(5721001,32,FLEN)
NAN_BOXED(931135491,32,FLEN)
NAN_BOXED(2126229289,32,FLEN)
NAN_BOXED(5721001,32,FLEN)
NAN_BOXED(931135495,32,FLEN)
NAN_BOXED(2126229289,32,FLEN)
NAN_BOXED(5721001,32,FLEN)
NAN_BOXED(931135503,32,FLEN)
NAN_BOXED(2126229289,32,FLEN)
NAN_BOXED(5721001,32,FLEN)
NAN_BOXED(931135519,32,FLEN)
NAN_BOXED(2126229289,32,FLEN)
NAN_BOXED(5721001,32,FLEN)
NAN_BOXED(931135551,32,FLEN)
NAN_BOXED(2126229289,32,FLEN)
NAN_BOXED(5721001,32,FLEN)
NAN_BOXED(931135615,32,FLEN)
NAN_BOXED(2126229289,32,FLEN)
NAN_BOXED(5721001,32,FLEN)
NAN_BOXED(931135743,32,FLEN)
NAN_BOXED(2126229289,32,FLEN)
NAN_BOXED(5721001,32,FLEN)
NAN_BOXED(931135999,32,FLEN)
NAN_BOXED(2126229289,32,FLEN)
NAN_BOXED(5721001,32,FLEN)
NAN_BOXED(931136511,32,FLEN)
NAN_BOXED(2126229289,32,FLEN)
NAN_BOXED(5721001,32,FLEN)
NAN_BOXED(931137535,32,FLEN)
NAN_BOXED(2126229289,32,FLEN)
NAN_BOXED(5721001,32,FLEN)
NAN_BOXED(931139583,32,FLEN)
NAN_BOXED(2126229289,32,FLEN)
NAN_BOXED(5721001,32,FLEN)
NAN_BOXED(931143679,32,FLEN)
NAN_BOXED(2126229289,32,FLEN)
NAN_BOXED(5721001,32,FLEN)
NAN_BOXED(931151871,32,FLEN)
NAN_BOXED(2126229289,32,FLEN)
NAN_BOXED(5721001,32,FLEN)
NAN_BOXED(931168255,32,FLEN)
NAN_BOXED(2126229289,32,FLEN)
NAN_BOXED(5721001,32,FLEN)
NAN_BOXED(931201023,32,FLEN)
NAN_BOXED(2126229289,32,FLEN)
NAN_BOXED(5721001,32,FLEN)
NAN_BOXED(931266559,32,FLEN)
NAN_BOXED(2126229289,32,FLEN)
NAN_BOXED(5721001,32,FLEN)
NAN_BOXED(931397631,32,FLEN)
NAN_BOXED(2126229289,32,FLEN)
NAN_BOXED(5721001,32,FLEN)
NAN_BOXED(931659775,32,FLEN)
NAN_BOXED(2126229289,32,FLEN)
NAN_BOXED(5721001,32,FLEN)
NAN_BOXED(932184063,32,FLEN)
NAN_BOXED(2126229289,32,FLEN)
NAN_BOXED(5721001,32,FLEN)
NAN_BOXED(933232639,32,FLEN)
NAN_BOXED(2126229289,32,FLEN)
NAN_BOXED(5721001,32,FLEN)
NAN_BOXED(935329791,32,FLEN)
NAN_BOXED(2126229289,32,FLEN)
NAN_BOXED(5721001,32,FLEN)
NAN_BOXED(935329792,32,FLEN)
NAN_BOXED(2126229289,32,FLEN)
NAN_BOXED(5721001,32,FLEN)
NAN_BOXED(937426944,32,FLEN)
NAN_BOXED(2126229289,32,FLEN)
NAN_BOXED(5721001,32,FLEN)
NAN_BOXED(938475520,32,FLEN)
NAN_BOXED(2126229289,32,FLEN)
NAN_BOXED(5721001,32,FLEN)
NAN_BOXED(938999808,32,FLEN)
NAN_BOXED(2126229289,32,FLEN)
NAN_BOXED(5721001,32,FLEN)
NAN_BOXED(939261952,32,FLEN)
NAN_BOXED(2126229289,32,FLEN)
NAN_BOXED(5721001,32,FLEN)
NAN_BOXED(939393024,32,FLEN)
NAN_BOXED(2126229289,32,FLEN)
NAN_BOXED(5721001,32,FLEN)
NAN_BOXED(939458560,32,FLEN)
NAN_BOXED(2126229289,32,FLEN)
NAN_BOXED(5721001,32,FLEN)
NAN_BOXED(939491328,32,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
