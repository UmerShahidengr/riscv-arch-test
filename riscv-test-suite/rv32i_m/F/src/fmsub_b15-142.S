
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 14:18:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32F/fmsub.s.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.s instruction of the RISC-V RV32F_Zicsr,RV32FD_Zicsr,RV64F_Zicsr,RV64FD_Zicsr extension for the fmsub_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF_Zicsr,RV32IFD_Zicsr,RV64IF_Zicsr,RV64IFD_Zicsr,RV32EF_Zicsr,RV32EFD_Zicsr,RV64EF_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fmsub_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*F.*);def TEST_CASE_1=True;",fmsub_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_18048:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3baf29 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574ba9 and fs3 == 0 and fe3 == 0x6f and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbaf29; op2val:0x574ba9;
op3val:0x37ffc000; valaddr_reg:x3; val_offset:54144*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54144*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18049:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3baf29 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574ba9 and fs3 == 0 and fe3 == 0x6f and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbaf29; op2val:0x574ba9;
op3val:0x37ffe000; valaddr_reg:x3; val_offset:54147*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54147*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18050:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3baf29 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574ba9 and fs3 == 0 and fe3 == 0x6f and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbaf29; op2val:0x574ba9;
op3val:0x37fff000; valaddr_reg:x3; val_offset:54150*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54150*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18051:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3baf29 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574ba9 and fs3 == 0 and fe3 == 0x6f and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbaf29; op2val:0x574ba9;
op3val:0x37fff800; valaddr_reg:x3; val_offset:54153*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54153*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18052:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3baf29 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574ba9 and fs3 == 0 and fe3 == 0x6f and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbaf29; op2val:0x574ba9;
op3val:0x37fffc00; valaddr_reg:x3; val_offset:54156*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54156*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18053:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3baf29 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574ba9 and fs3 == 0 and fe3 == 0x6f and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbaf29; op2val:0x574ba9;
op3val:0x37fffe00; valaddr_reg:x3; val_offset:54159*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54159*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18054:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3baf29 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574ba9 and fs3 == 0 and fe3 == 0x6f and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbaf29; op2val:0x574ba9;
op3val:0x37ffff00; valaddr_reg:x3; val_offset:54162*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54162*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18055:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3baf29 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574ba9 and fs3 == 0 and fe3 == 0x6f and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbaf29; op2val:0x574ba9;
op3val:0x37ffff80; valaddr_reg:x3; val_offset:54165*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54165*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18056:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3baf29 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574ba9 and fs3 == 0 and fe3 == 0x6f and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbaf29; op2val:0x574ba9;
op3val:0x37ffffc0; valaddr_reg:x3; val_offset:54168*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54168*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18057:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3baf29 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574ba9 and fs3 == 0 and fe3 == 0x6f and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbaf29; op2val:0x574ba9;
op3val:0x37ffffe0; valaddr_reg:x3; val_offset:54171*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54171*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18058:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3baf29 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574ba9 and fs3 == 0 and fe3 == 0x6f and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbaf29; op2val:0x574ba9;
op3val:0x37fffff0; valaddr_reg:x3; val_offset:54174*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54174*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18059:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3baf29 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574ba9 and fs3 == 0 and fe3 == 0x6f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbaf29; op2val:0x574ba9;
op3val:0x37fffff8; valaddr_reg:x3; val_offset:54177*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54177*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18060:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3baf29 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574ba9 and fs3 == 0 and fe3 == 0x6f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbaf29; op2val:0x574ba9;
op3val:0x37fffffc; valaddr_reg:x3; val_offset:54180*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54180*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18061:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3baf29 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574ba9 and fs3 == 0 and fe3 == 0x6f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbaf29; op2val:0x574ba9;
op3val:0x37fffffe; valaddr_reg:x3; val_offset:54183*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54183*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18062:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3baf29 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574ba9 and fs3 == 0 and fe3 == 0x6f and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbaf29; op2val:0x574ba9;
op3val:0x37ffffff; valaddr_reg:x3; val_offset:54186*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54186*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18063:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3baf29 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574ba9 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbaf29; op2val:0x574ba9;
op3val:0x3f800001; valaddr_reg:x3; val_offset:54189*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54189*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18064:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3baf29 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574ba9 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbaf29; op2val:0x574ba9;
op3val:0x3f800003; valaddr_reg:x3; val_offset:54192*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54192*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18065:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3baf29 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574ba9 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbaf29; op2val:0x574ba9;
op3val:0x3f800007; valaddr_reg:x3; val_offset:54195*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54195*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18066:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3baf29 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574ba9 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbaf29; op2val:0x574ba9;
op3val:0x3f999999; valaddr_reg:x3; val_offset:54198*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54198*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18067:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3baf29 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574ba9 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbaf29; op2val:0x574ba9;
op3val:0x3fa49249; valaddr_reg:x3; val_offset:54201*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54201*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18068:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3baf29 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574ba9 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbaf29; op2val:0x574ba9;
op3val:0x3fb33333; valaddr_reg:x3; val_offset:54204*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54204*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18069:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3baf29 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574ba9 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbaf29; op2val:0x574ba9;
op3val:0x3fb6db6d; valaddr_reg:x3; val_offset:54207*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54207*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18070:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3baf29 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574ba9 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbaf29; op2val:0x574ba9;
op3val:0x3fbbbbbb; valaddr_reg:x3; val_offset:54210*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54210*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18071:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3baf29 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574ba9 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbaf29; op2val:0x574ba9;
op3val:0x3fc44444; valaddr_reg:x3; val_offset:54213*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54213*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18072:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3baf29 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574ba9 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbaf29; op2val:0x574ba9;
op3val:0x3fcccccc; valaddr_reg:x3; val_offset:54216*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54216*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18073:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3baf29 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574ba9 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbaf29; op2val:0x574ba9;
op3val:0x3fdb6db6; valaddr_reg:x3; val_offset:54219*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54219*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18074:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3baf29 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574ba9 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbaf29; op2val:0x574ba9;
op3val:0x3fe66666; valaddr_reg:x3; val_offset:54222*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54222*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18075:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3baf29 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574ba9 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbaf29; op2val:0x574ba9;
op3val:0x3fedb6db; valaddr_reg:x3; val_offset:54225*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54225*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18076:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3baf29 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574ba9 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbaf29; op2val:0x574ba9;
op3val:0x3ffffff8; valaddr_reg:x3; val_offset:54228*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54228*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18077:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3baf29 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574ba9 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbaf29; op2val:0x574ba9;
op3val:0x3ffffffc; valaddr_reg:x3; val_offset:54231*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54231*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18078:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3baf29 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574ba9 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbaf29; op2val:0x574ba9;
op3val:0x3ffffffe; valaddr_reg:x3; val_offset:54234*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54234*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18079:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3bbd75 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574504 and fs3 == 0 and fe3 == 0x41 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbbd75; op2val:0x574504;
op3val:0x20800000; valaddr_reg:x3; val_offset:54237*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54237*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18080:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3bbd75 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574504 and fs3 == 0 and fe3 == 0x41 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbbd75; op2val:0x574504;
op3val:0x20800001; valaddr_reg:x3; val_offset:54240*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54240*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18081:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3bbd75 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574504 and fs3 == 0 and fe3 == 0x41 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbbd75; op2val:0x574504;
op3val:0x20800003; valaddr_reg:x3; val_offset:54243*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54243*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18082:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3bbd75 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574504 and fs3 == 0 and fe3 == 0x41 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbbd75; op2val:0x574504;
op3val:0x20800007; valaddr_reg:x3; val_offset:54246*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54246*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18083:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3bbd75 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574504 and fs3 == 0 and fe3 == 0x41 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbbd75; op2val:0x574504;
op3val:0x2080000f; valaddr_reg:x3; val_offset:54249*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54249*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18084:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3bbd75 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574504 and fs3 == 0 and fe3 == 0x41 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbbd75; op2val:0x574504;
op3val:0x2080001f; valaddr_reg:x3; val_offset:54252*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54252*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18085:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3bbd75 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574504 and fs3 == 0 and fe3 == 0x41 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbbd75; op2val:0x574504;
op3val:0x2080003f; valaddr_reg:x3; val_offset:54255*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54255*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18086:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3bbd75 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574504 and fs3 == 0 and fe3 == 0x41 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbbd75; op2val:0x574504;
op3val:0x2080007f; valaddr_reg:x3; val_offset:54258*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54258*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18087:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3bbd75 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574504 and fs3 == 0 and fe3 == 0x41 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbbd75; op2val:0x574504;
op3val:0x208000ff; valaddr_reg:x3; val_offset:54261*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54261*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18088:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3bbd75 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574504 and fs3 == 0 and fe3 == 0x41 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbbd75; op2val:0x574504;
op3val:0x208001ff; valaddr_reg:x3; val_offset:54264*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54264*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18089:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3bbd75 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574504 and fs3 == 0 and fe3 == 0x41 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbbd75; op2val:0x574504;
op3val:0x208003ff; valaddr_reg:x3; val_offset:54267*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54267*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18090:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3bbd75 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574504 and fs3 == 0 and fe3 == 0x41 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbbd75; op2val:0x574504;
op3val:0x208007ff; valaddr_reg:x3; val_offset:54270*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54270*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18091:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3bbd75 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574504 and fs3 == 0 and fe3 == 0x41 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbbd75; op2val:0x574504;
op3val:0x20800fff; valaddr_reg:x3; val_offset:54273*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54273*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18092:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3bbd75 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574504 and fs3 == 0 and fe3 == 0x41 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbbd75; op2val:0x574504;
op3val:0x20801fff; valaddr_reg:x3; val_offset:54276*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54276*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18093:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3bbd75 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574504 and fs3 == 0 and fe3 == 0x41 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbbd75; op2val:0x574504;
op3val:0x20803fff; valaddr_reg:x3; val_offset:54279*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54279*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18094:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3bbd75 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574504 and fs3 == 0 and fe3 == 0x41 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbbd75; op2val:0x574504;
op3val:0x20807fff; valaddr_reg:x3; val_offset:54282*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54282*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18095:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3bbd75 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574504 and fs3 == 0 and fe3 == 0x41 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbbd75; op2val:0x574504;
op3val:0x2080ffff; valaddr_reg:x3; val_offset:54285*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54285*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18096:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3bbd75 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574504 and fs3 == 0 and fe3 == 0x41 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbbd75; op2val:0x574504;
op3val:0x2081ffff; valaddr_reg:x3; val_offset:54288*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54288*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18097:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3bbd75 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574504 and fs3 == 0 and fe3 == 0x41 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbbd75; op2val:0x574504;
op3val:0x2083ffff; valaddr_reg:x3; val_offset:54291*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54291*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18098:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3bbd75 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574504 and fs3 == 0 and fe3 == 0x41 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbbd75; op2val:0x574504;
op3val:0x2087ffff; valaddr_reg:x3; val_offset:54294*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54294*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18099:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3bbd75 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574504 and fs3 == 0 and fe3 == 0x41 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbbd75; op2val:0x574504;
op3val:0x208fffff; valaddr_reg:x3; val_offset:54297*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54297*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18100:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3bbd75 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574504 and fs3 == 0 and fe3 == 0x41 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbbd75; op2val:0x574504;
op3val:0x209fffff; valaddr_reg:x3; val_offset:54300*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54300*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18101:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3bbd75 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574504 and fs3 == 0 and fe3 == 0x41 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbbd75; op2val:0x574504;
op3val:0x20bfffff; valaddr_reg:x3; val_offset:54303*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54303*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18102:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3bbd75 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574504 and fs3 == 0 and fe3 == 0x41 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbbd75; op2val:0x574504;
op3val:0x20c00000; valaddr_reg:x3; val_offset:54306*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54306*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18103:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3bbd75 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574504 and fs3 == 0 and fe3 == 0x41 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbbd75; op2val:0x574504;
op3val:0x20e00000; valaddr_reg:x3; val_offset:54309*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54309*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18104:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3bbd75 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574504 and fs3 == 0 and fe3 == 0x41 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbbd75; op2val:0x574504;
op3val:0x20f00000; valaddr_reg:x3; val_offset:54312*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54312*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18105:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3bbd75 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574504 and fs3 == 0 and fe3 == 0x41 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbbd75; op2val:0x574504;
op3val:0x20f80000; valaddr_reg:x3; val_offset:54315*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54315*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18106:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3bbd75 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574504 and fs3 == 0 and fe3 == 0x41 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbbd75; op2val:0x574504;
op3val:0x20fc0000; valaddr_reg:x3; val_offset:54318*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54318*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18107:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3bbd75 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574504 and fs3 == 0 and fe3 == 0x41 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbbd75; op2val:0x574504;
op3val:0x20fe0000; valaddr_reg:x3; val_offset:54321*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54321*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18108:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3bbd75 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574504 and fs3 == 0 and fe3 == 0x41 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbbd75; op2val:0x574504;
op3val:0x20ff0000; valaddr_reg:x3; val_offset:54324*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54324*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18109:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3bbd75 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574504 and fs3 == 0 and fe3 == 0x41 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbbd75; op2val:0x574504;
op3val:0x20ff8000; valaddr_reg:x3; val_offset:54327*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54327*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18110:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3bbd75 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574504 and fs3 == 0 and fe3 == 0x41 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbbd75; op2val:0x574504;
op3val:0x20ffc000; valaddr_reg:x3; val_offset:54330*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54330*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18111:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3bbd75 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574504 and fs3 == 0 and fe3 == 0x41 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbbd75; op2val:0x574504;
op3val:0x20ffe000; valaddr_reg:x3; val_offset:54333*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54333*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18112:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3bbd75 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574504 and fs3 == 0 and fe3 == 0x41 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbbd75; op2val:0x574504;
op3val:0x20fff000; valaddr_reg:x3; val_offset:54336*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54336*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18113:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3bbd75 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574504 and fs3 == 0 and fe3 == 0x41 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbbd75; op2val:0x574504;
op3val:0x20fff800; valaddr_reg:x3; val_offset:54339*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54339*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18114:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3bbd75 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574504 and fs3 == 0 and fe3 == 0x41 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbbd75; op2val:0x574504;
op3val:0x20fffc00; valaddr_reg:x3; val_offset:54342*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54342*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18115:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3bbd75 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574504 and fs3 == 0 and fe3 == 0x41 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbbd75; op2val:0x574504;
op3val:0x20fffe00; valaddr_reg:x3; val_offset:54345*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54345*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18116:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3bbd75 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574504 and fs3 == 0 and fe3 == 0x41 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbbd75; op2val:0x574504;
op3val:0x20ffff00; valaddr_reg:x3; val_offset:54348*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54348*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18117:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3bbd75 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574504 and fs3 == 0 and fe3 == 0x41 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbbd75; op2val:0x574504;
op3val:0x20ffff80; valaddr_reg:x3; val_offset:54351*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54351*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18118:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3bbd75 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574504 and fs3 == 0 and fe3 == 0x41 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbbd75; op2val:0x574504;
op3val:0x20ffffc0; valaddr_reg:x3; val_offset:54354*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54354*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18119:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3bbd75 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574504 and fs3 == 0 and fe3 == 0x41 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbbd75; op2val:0x574504;
op3val:0x20ffffe0; valaddr_reg:x3; val_offset:54357*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54357*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18120:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3bbd75 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574504 and fs3 == 0 and fe3 == 0x41 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbbd75; op2val:0x574504;
op3val:0x20fffff0; valaddr_reg:x3; val_offset:54360*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54360*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18121:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3bbd75 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574504 and fs3 == 0 and fe3 == 0x41 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbbd75; op2val:0x574504;
op3val:0x20fffff8; valaddr_reg:x3; val_offset:54363*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54363*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18122:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3bbd75 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574504 and fs3 == 0 and fe3 == 0x41 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbbd75; op2val:0x574504;
op3val:0x20fffffc; valaddr_reg:x3; val_offset:54366*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54366*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18123:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3bbd75 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574504 and fs3 == 0 and fe3 == 0x41 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbbd75; op2val:0x574504;
op3val:0x20fffffe; valaddr_reg:x3; val_offset:54369*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54369*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18124:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3bbd75 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574504 and fs3 == 0 and fe3 == 0x41 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbbd75; op2val:0x574504;
op3val:0x20ffffff; valaddr_reg:x3; val_offset:54372*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54372*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18125:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3bbd75 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574504 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbbd75; op2val:0x574504;
op3val:0x3f800001; valaddr_reg:x3; val_offset:54375*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54375*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18126:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3bbd75 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574504 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbbd75; op2val:0x574504;
op3val:0x3f800003; valaddr_reg:x3; val_offset:54378*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54378*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18127:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3bbd75 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574504 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbbd75; op2val:0x574504;
op3val:0x3f800007; valaddr_reg:x3; val_offset:54381*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54381*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18128:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3bbd75 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574504 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbbd75; op2val:0x574504;
op3val:0x3f999999; valaddr_reg:x3; val_offset:54384*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54384*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18129:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3bbd75 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574504 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbbd75; op2val:0x574504;
op3val:0x3fa49249; valaddr_reg:x3; val_offset:54387*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54387*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18130:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3bbd75 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574504 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbbd75; op2val:0x574504;
op3val:0x3fb33333; valaddr_reg:x3; val_offset:54390*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54390*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18131:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3bbd75 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574504 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbbd75; op2val:0x574504;
op3val:0x3fb6db6d; valaddr_reg:x3; val_offset:54393*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54393*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18132:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3bbd75 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574504 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbbd75; op2val:0x574504;
op3val:0x3fbbbbbb; valaddr_reg:x3; val_offset:54396*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54396*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18133:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3bbd75 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574504 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbbd75; op2val:0x574504;
op3val:0x3fc44444; valaddr_reg:x3; val_offset:54399*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54399*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18134:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3bbd75 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574504 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbbd75; op2val:0x574504;
op3val:0x3fcccccc; valaddr_reg:x3; val_offset:54402*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54402*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18135:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3bbd75 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574504 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbbd75; op2val:0x574504;
op3val:0x3fdb6db6; valaddr_reg:x3; val_offset:54405*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54405*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18136:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3bbd75 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574504 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbbd75; op2val:0x574504;
op3val:0x3fe66666; valaddr_reg:x3; val_offset:54408*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54408*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18137:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3bbd75 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574504 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbbd75; op2val:0x574504;
op3val:0x3fedb6db; valaddr_reg:x3; val_offset:54411*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54411*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18138:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3bbd75 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574504 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbbd75; op2val:0x574504;
op3val:0x3ffffff8; valaddr_reg:x3; val_offset:54414*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54414*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18139:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3bbd75 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574504 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbbd75; op2val:0x574504;
op3val:0x3ffffffc; valaddr_reg:x3; val_offset:54417*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54417*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18140:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3bbd75 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x574504 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbbd75; op2val:0x574504;
op3val:0x3ffffffe; valaddr_reg:x3; val_offset:54420*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54420*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18141:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3bbee4 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2e88b1 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbbee4; op2val:0xc02e88b1;
op3val:0xe6800000; valaddr_reg:x3; val_offset:54423*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54423*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18142:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3bbee4 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2e88b1 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbbee4; op2val:0xc02e88b1;
op3val:0xe6800001; valaddr_reg:x3; val_offset:54426*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54426*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18143:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3bbee4 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2e88b1 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbbee4; op2val:0xc02e88b1;
op3val:0xe6800003; valaddr_reg:x3; val_offset:54429*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54429*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18144:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3bbee4 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2e88b1 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbbee4; op2val:0xc02e88b1;
op3val:0xe6800007; valaddr_reg:x3; val_offset:54432*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54432*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18145:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3bbee4 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2e88b1 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbbee4; op2val:0xc02e88b1;
op3val:0xe680000f; valaddr_reg:x3; val_offset:54435*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54435*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18146:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3bbee4 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2e88b1 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbbee4; op2val:0xc02e88b1;
op3val:0xe680001f; valaddr_reg:x3; val_offset:54438*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54438*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18147:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3bbee4 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2e88b1 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbbee4; op2val:0xc02e88b1;
op3val:0xe680003f; valaddr_reg:x3; val_offset:54441*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54441*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18148:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3bbee4 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2e88b1 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbbee4; op2val:0xc02e88b1;
op3val:0xe680007f; valaddr_reg:x3; val_offset:54444*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54444*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18149:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3bbee4 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2e88b1 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbbee4; op2val:0xc02e88b1;
op3val:0xe68000ff; valaddr_reg:x3; val_offset:54447*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54447*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18150:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3bbee4 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2e88b1 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbbee4; op2val:0xc02e88b1;
op3val:0xe68001ff; valaddr_reg:x3; val_offset:54450*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54450*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18151:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3bbee4 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2e88b1 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbbee4; op2val:0xc02e88b1;
op3val:0xe68003ff; valaddr_reg:x3; val_offset:54453*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54453*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18152:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3bbee4 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2e88b1 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbbee4; op2val:0xc02e88b1;
op3val:0xe68007ff; valaddr_reg:x3; val_offset:54456*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54456*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18153:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3bbee4 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2e88b1 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbbee4; op2val:0xc02e88b1;
op3val:0xe6800fff; valaddr_reg:x3; val_offset:54459*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54459*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18154:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3bbee4 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2e88b1 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbbee4; op2val:0xc02e88b1;
op3val:0xe6801fff; valaddr_reg:x3; val_offset:54462*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54462*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18155:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3bbee4 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2e88b1 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbbee4; op2val:0xc02e88b1;
op3val:0xe6803fff; valaddr_reg:x3; val_offset:54465*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54465*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18156:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3bbee4 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2e88b1 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbbee4; op2val:0xc02e88b1;
op3val:0xe6807fff; valaddr_reg:x3; val_offset:54468*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54468*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18157:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3bbee4 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2e88b1 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbbee4; op2val:0xc02e88b1;
op3val:0xe680ffff; valaddr_reg:x3; val_offset:54471*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54471*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18158:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3bbee4 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2e88b1 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbbee4; op2val:0xc02e88b1;
op3val:0xe681ffff; valaddr_reg:x3; val_offset:54474*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54474*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18159:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3bbee4 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2e88b1 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbbee4; op2val:0xc02e88b1;
op3val:0xe683ffff; valaddr_reg:x3; val_offset:54477*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54477*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18160:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3bbee4 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2e88b1 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbbee4; op2val:0xc02e88b1;
op3val:0xe687ffff; valaddr_reg:x3; val_offset:54480*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54480*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18161:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3bbee4 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2e88b1 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbbee4; op2val:0xc02e88b1;
op3val:0xe68fffff; valaddr_reg:x3; val_offset:54483*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54483*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18162:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3bbee4 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2e88b1 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbbee4; op2val:0xc02e88b1;
op3val:0xe69fffff; valaddr_reg:x3; val_offset:54486*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54486*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18163:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3bbee4 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2e88b1 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbbee4; op2val:0xc02e88b1;
op3val:0xe6bfffff; valaddr_reg:x3; val_offset:54489*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54489*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18164:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3bbee4 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2e88b1 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbbee4; op2val:0xc02e88b1;
op3val:0xe6c00000; valaddr_reg:x3; val_offset:54492*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54492*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18165:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3bbee4 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2e88b1 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbbee4; op2val:0xc02e88b1;
op3val:0xe6e00000; valaddr_reg:x3; val_offset:54495*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54495*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18166:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3bbee4 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2e88b1 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbbee4; op2val:0xc02e88b1;
op3val:0xe6f00000; valaddr_reg:x3; val_offset:54498*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54498*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18167:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3bbee4 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2e88b1 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbbee4; op2val:0xc02e88b1;
op3val:0xe6f80000; valaddr_reg:x3; val_offset:54501*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54501*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18168:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3bbee4 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2e88b1 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbbee4; op2val:0xc02e88b1;
op3val:0xe6fc0000; valaddr_reg:x3; val_offset:54504*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54504*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18169:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3bbee4 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2e88b1 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbbee4; op2val:0xc02e88b1;
op3val:0xe6fe0000; valaddr_reg:x3; val_offset:54507*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54507*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18170:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3bbee4 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2e88b1 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbbee4; op2val:0xc02e88b1;
op3val:0xe6ff0000; valaddr_reg:x3; val_offset:54510*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54510*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18171:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3bbee4 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2e88b1 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbbee4; op2val:0xc02e88b1;
op3val:0xe6ff8000; valaddr_reg:x3; val_offset:54513*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54513*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18172:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3bbee4 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2e88b1 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbbee4; op2val:0xc02e88b1;
op3val:0xe6ffc000; valaddr_reg:x3; val_offset:54516*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54516*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18173:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3bbee4 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2e88b1 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbbee4; op2val:0xc02e88b1;
op3val:0xe6ffe000; valaddr_reg:x3; val_offset:54519*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54519*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18174:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3bbee4 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2e88b1 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbbee4; op2val:0xc02e88b1;
op3val:0xe6fff000; valaddr_reg:x3; val_offset:54522*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54522*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18175:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3bbee4 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2e88b1 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebbbee4; op2val:0xc02e88b1;
op3val:0xe6fff800; valaddr_reg:x3; val_offset:54525*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 54525*0 + 3*141*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(2126229289,32,FLEN)
NAN_BOXED(5721001,32,FLEN)
NAN_BOXED(939507712,32,FLEN)
NAN_BOXED(2126229289,32,FLEN)
NAN_BOXED(5721001,32,FLEN)
NAN_BOXED(939515904,32,FLEN)
NAN_BOXED(2126229289,32,FLEN)
NAN_BOXED(5721001,32,FLEN)
NAN_BOXED(939520000,32,FLEN)
NAN_BOXED(2126229289,32,FLEN)
NAN_BOXED(5721001,32,FLEN)
NAN_BOXED(939522048,32,FLEN)
NAN_BOXED(2126229289,32,FLEN)
NAN_BOXED(5721001,32,FLEN)
NAN_BOXED(939523072,32,FLEN)
NAN_BOXED(2126229289,32,FLEN)
NAN_BOXED(5721001,32,FLEN)
NAN_BOXED(939523584,32,FLEN)
NAN_BOXED(2126229289,32,FLEN)
NAN_BOXED(5721001,32,FLEN)
NAN_BOXED(939523840,32,FLEN)
NAN_BOXED(2126229289,32,FLEN)
NAN_BOXED(5721001,32,FLEN)
NAN_BOXED(939523968,32,FLEN)
NAN_BOXED(2126229289,32,FLEN)
NAN_BOXED(5721001,32,FLEN)
NAN_BOXED(939524032,32,FLEN)
NAN_BOXED(2126229289,32,FLEN)
NAN_BOXED(5721001,32,FLEN)
NAN_BOXED(939524064,32,FLEN)
NAN_BOXED(2126229289,32,FLEN)
NAN_BOXED(5721001,32,FLEN)
NAN_BOXED(939524080,32,FLEN)
NAN_BOXED(2126229289,32,FLEN)
NAN_BOXED(5721001,32,FLEN)
NAN_BOXED(939524088,32,FLEN)
NAN_BOXED(2126229289,32,FLEN)
NAN_BOXED(5721001,32,FLEN)
NAN_BOXED(939524092,32,FLEN)
NAN_BOXED(2126229289,32,FLEN)
NAN_BOXED(5721001,32,FLEN)
NAN_BOXED(939524094,32,FLEN)
NAN_BOXED(2126229289,32,FLEN)
NAN_BOXED(5721001,32,FLEN)
NAN_BOXED(939524095,32,FLEN)
NAN_BOXED(2126229289,32,FLEN)
NAN_BOXED(5721001,32,FLEN)
NAN_BOXED(1065353217,32,FLEN)
NAN_BOXED(2126229289,32,FLEN)
NAN_BOXED(5721001,32,FLEN)
NAN_BOXED(1065353219,32,FLEN)
NAN_BOXED(2126229289,32,FLEN)
NAN_BOXED(5721001,32,FLEN)
NAN_BOXED(1065353223,32,FLEN)
NAN_BOXED(2126229289,32,FLEN)
NAN_BOXED(5721001,32,FLEN)
NAN_BOXED(1067030937,32,FLEN)
NAN_BOXED(2126229289,32,FLEN)
NAN_BOXED(5721001,32,FLEN)
NAN_BOXED(1067749961,32,FLEN)
NAN_BOXED(2126229289,32,FLEN)
NAN_BOXED(5721001,32,FLEN)
NAN_BOXED(1068708659,32,FLEN)
NAN_BOXED(2126229289,32,FLEN)
NAN_BOXED(5721001,32,FLEN)
NAN_BOXED(1068948333,32,FLEN)
NAN_BOXED(2126229289,32,FLEN)
NAN_BOXED(5721001,32,FLEN)
NAN_BOXED(1069267899,32,FLEN)
NAN_BOXED(2126229289,32,FLEN)
NAN_BOXED(5721001,32,FLEN)
NAN_BOXED(1069827140,32,FLEN)
NAN_BOXED(2126229289,32,FLEN)
NAN_BOXED(5721001,32,FLEN)
NAN_BOXED(1070386380,32,FLEN)
NAN_BOXED(2126229289,32,FLEN)
NAN_BOXED(5721001,32,FLEN)
NAN_BOXED(1071345078,32,FLEN)
NAN_BOXED(2126229289,32,FLEN)
NAN_BOXED(5721001,32,FLEN)
NAN_BOXED(1072064102,32,FLEN)
NAN_BOXED(2126229289,32,FLEN)
NAN_BOXED(5721001,32,FLEN)
NAN_BOXED(1072543451,32,FLEN)
NAN_BOXED(2126229289,32,FLEN)
NAN_BOXED(5721001,32,FLEN)
NAN_BOXED(1073741816,32,FLEN)
NAN_BOXED(2126229289,32,FLEN)
NAN_BOXED(5721001,32,FLEN)
NAN_BOXED(1073741820,32,FLEN)
NAN_BOXED(2126229289,32,FLEN)
NAN_BOXED(5721001,32,FLEN)
NAN_BOXED(1073741822,32,FLEN)
NAN_BOXED(2126232949,32,FLEN)
NAN_BOXED(5719300,32,FLEN)
NAN_BOXED(545259520,32,FLEN)
NAN_BOXED(2126232949,32,FLEN)
NAN_BOXED(5719300,32,FLEN)
NAN_BOXED(545259521,32,FLEN)
NAN_BOXED(2126232949,32,FLEN)
NAN_BOXED(5719300,32,FLEN)
NAN_BOXED(545259523,32,FLEN)
NAN_BOXED(2126232949,32,FLEN)
NAN_BOXED(5719300,32,FLEN)
NAN_BOXED(545259527,32,FLEN)
NAN_BOXED(2126232949,32,FLEN)
NAN_BOXED(5719300,32,FLEN)
NAN_BOXED(545259535,32,FLEN)
NAN_BOXED(2126232949,32,FLEN)
NAN_BOXED(5719300,32,FLEN)
NAN_BOXED(545259551,32,FLEN)
NAN_BOXED(2126232949,32,FLEN)
NAN_BOXED(5719300,32,FLEN)
NAN_BOXED(545259583,32,FLEN)
NAN_BOXED(2126232949,32,FLEN)
NAN_BOXED(5719300,32,FLEN)
NAN_BOXED(545259647,32,FLEN)
NAN_BOXED(2126232949,32,FLEN)
NAN_BOXED(5719300,32,FLEN)
NAN_BOXED(545259775,32,FLEN)
NAN_BOXED(2126232949,32,FLEN)
NAN_BOXED(5719300,32,FLEN)
NAN_BOXED(545260031,32,FLEN)
NAN_BOXED(2126232949,32,FLEN)
NAN_BOXED(5719300,32,FLEN)
NAN_BOXED(545260543,32,FLEN)
NAN_BOXED(2126232949,32,FLEN)
NAN_BOXED(5719300,32,FLEN)
NAN_BOXED(545261567,32,FLEN)
NAN_BOXED(2126232949,32,FLEN)
NAN_BOXED(5719300,32,FLEN)
NAN_BOXED(545263615,32,FLEN)
NAN_BOXED(2126232949,32,FLEN)
NAN_BOXED(5719300,32,FLEN)
NAN_BOXED(545267711,32,FLEN)
NAN_BOXED(2126232949,32,FLEN)
NAN_BOXED(5719300,32,FLEN)
NAN_BOXED(545275903,32,FLEN)
NAN_BOXED(2126232949,32,FLEN)
NAN_BOXED(5719300,32,FLEN)
NAN_BOXED(545292287,32,FLEN)
NAN_BOXED(2126232949,32,FLEN)
NAN_BOXED(5719300,32,FLEN)
NAN_BOXED(545325055,32,FLEN)
NAN_BOXED(2126232949,32,FLEN)
NAN_BOXED(5719300,32,FLEN)
NAN_BOXED(545390591,32,FLEN)
NAN_BOXED(2126232949,32,FLEN)
NAN_BOXED(5719300,32,FLEN)
NAN_BOXED(545521663,32,FLEN)
NAN_BOXED(2126232949,32,FLEN)
NAN_BOXED(5719300,32,FLEN)
NAN_BOXED(545783807,32,FLEN)
NAN_BOXED(2126232949,32,FLEN)
NAN_BOXED(5719300,32,FLEN)
NAN_BOXED(546308095,32,FLEN)
NAN_BOXED(2126232949,32,FLEN)
NAN_BOXED(5719300,32,FLEN)
NAN_BOXED(547356671,32,FLEN)
NAN_BOXED(2126232949,32,FLEN)
NAN_BOXED(5719300,32,FLEN)
NAN_BOXED(549453823,32,FLEN)
NAN_BOXED(2126232949,32,FLEN)
NAN_BOXED(5719300,32,FLEN)
NAN_BOXED(549453824,32,FLEN)
NAN_BOXED(2126232949,32,FLEN)
NAN_BOXED(5719300,32,FLEN)
NAN_BOXED(551550976,32,FLEN)
NAN_BOXED(2126232949,32,FLEN)
NAN_BOXED(5719300,32,FLEN)
NAN_BOXED(552599552,32,FLEN)
NAN_BOXED(2126232949,32,FLEN)
NAN_BOXED(5719300,32,FLEN)
NAN_BOXED(553123840,32,FLEN)
NAN_BOXED(2126232949,32,FLEN)
NAN_BOXED(5719300,32,FLEN)
NAN_BOXED(553385984,32,FLEN)
NAN_BOXED(2126232949,32,FLEN)
NAN_BOXED(5719300,32,FLEN)
NAN_BOXED(553517056,32,FLEN)
NAN_BOXED(2126232949,32,FLEN)
NAN_BOXED(5719300,32,FLEN)
NAN_BOXED(553582592,32,FLEN)
NAN_BOXED(2126232949,32,FLEN)
NAN_BOXED(5719300,32,FLEN)
NAN_BOXED(553615360,32,FLEN)
NAN_BOXED(2126232949,32,FLEN)
NAN_BOXED(5719300,32,FLEN)
NAN_BOXED(553631744,32,FLEN)
NAN_BOXED(2126232949,32,FLEN)
NAN_BOXED(5719300,32,FLEN)
NAN_BOXED(553639936,32,FLEN)
NAN_BOXED(2126232949,32,FLEN)
NAN_BOXED(5719300,32,FLEN)
NAN_BOXED(553644032,32,FLEN)
NAN_BOXED(2126232949,32,FLEN)
NAN_BOXED(5719300,32,FLEN)
NAN_BOXED(553646080,32,FLEN)
NAN_BOXED(2126232949,32,FLEN)
NAN_BOXED(5719300,32,FLEN)
NAN_BOXED(553647104,32,FLEN)
NAN_BOXED(2126232949,32,FLEN)
NAN_BOXED(5719300,32,FLEN)
NAN_BOXED(553647616,32,FLEN)
NAN_BOXED(2126232949,32,FLEN)
NAN_BOXED(5719300,32,FLEN)
NAN_BOXED(553647872,32,FLEN)
NAN_BOXED(2126232949,32,FLEN)
NAN_BOXED(5719300,32,FLEN)
NAN_BOXED(553648000,32,FLEN)
NAN_BOXED(2126232949,32,FLEN)
NAN_BOXED(5719300,32,FLEN)
NAN_BOXED(553648064,32,FLEN)
NAN_BOXED(2126232949,32,FLEN)
NAN_BOXED(5719300,32,FLEN)
NAN_BOXED(553648096,32,FLEN)
NAN_BOXED(2126232949,32,FLEN)
NAN_BOXED(5719300,32,FLEN)
NAN_BOXED(553648112,32,FLEN)
NAN_BOXED(2126232949,32,FLEN)
NAN_BOXED(5719300,32,FLEN)
NAN_BOXED(553648120,32,FLEN)
NAN_BOXED(2126232949,32,FLEN)
NAN_BOXED(5719300,32,FLEN)
NAN_BOXED(553648124,32,FLEN)
NAN_BOXED(2126232949,32,FLEN)
NAN_BOXED(5719300,32,FLEN)
NAN_BOXED(553648126,32,FLEN)
NAN_BOXED(2126232949,32,FLEN)
NAN_BOXED(5719300,32,FLEN)
NAN_BOXED(553648127,32,FLEN)
NAN_BOXED(2126232949,32,FLEN)
NAN_BOXED(5719300,32,FLEN)
NAN_BOXED(1065353217,32,FLEN)
NAN_BOXED(2126232949,32,FLEN)
NAN_BOXED(5719300,32,FLEN)
NAN_BOXED(1065353219,32,FLEN)
NAN_BOXED(2126232949,32,FLEN)
NAN_BOXED(5719300,32,FLEN)
NAN_BOXED(1065353223,32,FLEN)
NAN_BOXED(2126232949,32,FLEN)
NAN_BOXED(5719300,32,FLEN)
NAN_BOXED(1067030937,32,FLEN)
NAN_BOXED(2126232949,32,FLEN)
NAN_BOXED(5719300,32,FLEN)
NAN_BOXED(1067749961,32,FLEN)
NAN_BOXED(2126232949,32,FLEN)
NAN_BOXED(5719300,32,FLEN)
NAN_BOXED(1068708659,32,FLEN)
NAN_BOXED(2126232949,32,FLEN)
NAN_BOXED(5719300,32,FLEN)
NAN_BOXED(1068948333,32,FLEN)
NAN_BOXED(2126232949,32,FLEN)
NAN_BOXED(5719300,32,FLEN)
NAN_BOXED(1069267899,32,FLEN)
NAN_BOXED(2126232949,32,FLEN)
NAN_BOXED(5719300,32,FLEN)
NAN_BOXED(1069827140,32,FLEN)
NAN_BOXED(2126232949,32,FLEN)
NAN_BOXED(5719300,32,FLEN)
NAN_BOXED(1070386380,32,FLEN)
NAN_BOXED(2126232949,32,FLEN)
NAN_BOXED(5719300,32,FLEN)
NAN_BOXED(1071345078,32,FLEN)
NAN_BOXED(2126232949,32,FLEN)
NAN_BOXED(5719300,32,FLEN)
NAN_BOXED(1072064102,32,FLEN)
NAN_BOXED(2126232949,32,FLEN)
NAN_BOXED(5719300,32,FLEN)
NAN_BOXED(1072543451,32,FLEN)
NAN_BOXED(2126232949,32,FLEN)
NAN_BOXED(5719300,32,FLEN)
NAN_BOXED(1073741816,32,FLEN)
NAN_BOXED(2126232949,32,FLEN)
NAN_BOXED(5719300,32,FLEN)
NAN_BOXED(1073741820,32,FLEN)
NAN_BOXED(2126232949,32,FLEN)
NAN_BOXED(5719300,32,FLEN)
NAN_BOXED(1073741822,32,FLEN)
NAN_BOXED(2126233316,32,FLEN)
NAN_BOXED(3224275121,32,FLEN)
NAN_BOXED(3867148288,32,FLEN)
NAN_BOXED(2126233316,32,FLEN)
NAN_BOXED(3224275121,32,FLEN)
NAN_BOXED(3867148289,32,FLEN)
NAN_BOXED(2126233316,32,FLEN)
NAN_BOXED(3224275121,32,FLEN)
NAN_BOXED(3867148291,32,FLEN)
NAN_BOXED(2126233316,32,FLEN)
NAN_BOXED(3224275121,32,FLEN)
NAN_BOXED(3867148295,32,FLEN)
NAN_BOXED(2126233316,32,FLEN)
NAN_BOXED(3224275121,32,FLEN)
NAN_BOXED(3867148303,32,FLEN)
NAN_BOXED(2126233316,32,FLEN)
NAN_BOXED(3224275121,32,FLEN)
NAN_BOXED(3867148319,32,FLEN)
NAN_BOXED(2126233316,32,FLEN)
NAN_BOXED(3224275121,32,FLEN)
NAN_BOXED(3867148351,32,FLEN)
NAN_BOXED(2126233316,32,FLEN)
NAN_BOXED(3224275121,32,FLEN)
NAN_BOXED(3867148415,32,FLEN)
NAN_BOXED(2126233316,32,FLEN)
NAN_BOXED(3224275121,32,FLEN)
NAN_BOXED(3867148543,32,FLEN)
NAN_BOXED(2126233316,32,FLEN)
NAN_BOXED(3224275121,32,FLEN)
NAN_BOXED(3867148799,32,FLEN)
NAN_BOXED(2126233316,32,FLEN)
NAN_BOXED(3224275121,32,FLEN)
NAN_BOXED(3867149311,32,FLEN)
NAN_BOXED(2126233316,32,FLEN)
NAN_BOXED(3224275121,32,FLEN)
NAN_BOXED(3867150335,32,FLEN)
NAN_BOXED(2126233316,32,FLEN)
NAN_BOXED(3224275121,32,FLEN)
NAN_BOXED(3867152383,32,FLEN)
NAN_BOXED(2126233316,32,FLEN)
NAN_BOXED(3224275121,32,FLEN)
NAN_BOXED(3867156479,32,FLEN)
NAN_BOXED(2126233316,32,FLEN)
NAN_BOXED(3224275121,32,FLEN)
NAN_BOXED(3867164671,32,FLEN)
NAN_BOXED(2126233316,32,FLEN)
NAN_BOXED(3224275121,32,FLEN)
NAN_BOXED(3867181055,32,FLEN)
NAN_BOXED(2126233316,32,FLEN)
NAN_BOXED(3224275121,32,FLEN)
NAN_BOXED(3867213823,32,FLEN)
NAN_BOXED(2126233316,32,FLEN)
NAN_BOXED(3224275121,32,FLEN)
NAN_BOXED(3867279359,32,FLEN)
NAN_BOXED(2126233316,32,FLEN)
NAN_BOXED(3224275121,32,FLEN)
NAN_BOXED(3867410431,32,FLEN)
NAN_BOXED(2126233316,32,FLEN)
NAN_BOXED(3224275121,32,FLEN)
NAN_BOXED(3867672575,32,FLEN)
NAN_BOXED(2126233316,32,FLEN)
NAN_BOXED(3224275121,32,FLEN)
NAN_BOXED(3868196863,32,FLEN)
NAN_BOXED(2126233316,32,FLEN)
NAN_BOXED(3224275121,32,FLEN)
NAN_BOXED(3869245439,32,FLEN)
NAN_BOXED(2126233316,32,FLEN)
NAN_BOXED(3224275121,32,FLEN)
NAN_BOXED(3871342591,32,FLEN)
NAN_BOXED(2126233316,32,FLEN)
NAN_BOXED(3224275121,32,FLEN)
NAN_BOXED(3871342592,32,FLEN)
NAN_BOXED(2126233316,32,FLEN)
NAN_BOXED(3224275121,32,FLEN)
NAN_BOXED(3873439744,32,FLEN)
NAN_BOXED(2126233316,32,FLEN)
NAN_BOXED(3224275121,32,FLEN)
NAN_BOXED(3874488320,32,FLEN)
NAN_BOXED(2126233316,32,FLEN)
NAN_BOXED(3224275121,32,FLEN)
NAN_BOXED(3875012608,32,FLEN)
NAN_BOXED(2126233316,32,FLEN)
NAN_BOXED(3224275121,32,FLEN)
NAN_BOXED(3875274752,32,FLEN)
NAN_BOXED(2126233316,32,FLEN)
NAN_BOXED(3224275121,32,FLEN)
NAN_BOXED(3875405824,32,FLEN)
NAN_BOXED(2126233316,32,FLEN)
NAN_BOXED(3224275121,32,FLEN)
NAN_BOXED(3875471360,32,FLEN)
NAN_BOXED(2126233316,32,FLEN)
NAN_BOXED(3224275121,32,FLEN)
NAN_BOXED(3875504128,32,FLEN)
NAN_BOXED(2126233316,32,FLEN)
NAN_BOXED(3224275121,32,FLEN)
NAN_BOXED(3875520512,32,FLEN)
NAN_BOXED(2126233316,32,FLEN)
NAN_BOXED(3224275121,32,FLEN)
NAN_BOXED(3875528704,32,FLEN)
NAN_BOXED(2126233316,32,FLEN)
NAN_BOXED(3224275121,32,FLEN)
NAN_BOXED(3875532800,32,FLEN)
NAN_BOXED(2126233316,32,FLEN)
NAN_BOXED(3224275121,32,FLEN)
NAN_BOXED(3875534848,32,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
