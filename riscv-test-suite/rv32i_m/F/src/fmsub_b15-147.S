
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 14:18:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32F/fmsub.s.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.s instruction of the RISC-V RV32F_Zicsr,RV32FD_Zicsr,RV64F_Zicsr,RV64FD_Zicsr extension for the fmsub_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF_Zicsr,RV32IFD_Zicsr,RV64IF_Zicsr,RV64IFD_Zicsr,RV32EF_Zicsr,RV32EFD_Zicsr,RV64EF_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fmsub_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*F.*);def TEST_CASE_1=True;",fmsub_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_18688:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3fcd22 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x13 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebfcd22; op2val:0x0;
op3val:0x9fffc00; valaddr_reg:x3; val_offset:56064*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56064*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18689:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3fcd22 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x13 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebfcd22; op2val:0x0;
op3val:0x9fffe00; valaddr_reg:x3; val_offset:56067*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56067*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18690:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3fcd22 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x13 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebfcd22; op2val:0x0;
op3val:0x9ffff00; valaddr_reg:x3; val_offset:56070*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56070*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18691:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3fcd22 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x13 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebfcd22; op2val:0x0;
op3val:0x9ffff80; valaddr_reg:x3; val_offset:56073*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56073*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18692:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3fcd22 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x13 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebfcd22; op2val:0x0;
op3val:0x9ffffc0; valaddr_reg:x3; val_offset:56076*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56076*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18693:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3fcd22 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x13 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebfcd22; op2val:0x0;
op3val:0x9ffffe0; valaddr_reg:x3; val_offset:56079*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56079*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18694:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3fcd22 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x13 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebfcd22; op2val:0x0;
op3val:0x9fffff0; valaddr_reg:x3; val_offset:56082*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56082*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18695:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3fcd22 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x13 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebfcd22; op2val:0x0;
op3val:0x9fffff8; valaddr_reg:x3; val_offset:56085*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56085*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18696:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3fcd22 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x13 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebfcd22; op2val:0x0;
op3val:0x9fffffc; valaddr_reg:x3; val_offset:56088*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56088*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18697:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3fcd22 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x13 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebfcd22; op2val:0x0;
op3val:0x9fffffe; valaddr_reg:x3; val_offset:56091*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56091*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18698:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3fcd22 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x13 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebfcd22; op2val:0x0;
op3val:0x9ffffff; valaddr_reg:x3; val_offset:56094*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56094*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18699:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x40d43a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x29eed4 and fs3 == 0 and fe3 == 0xeb and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec0d43a; op2val:0x4029eed4;
op3val:0x75800000; valaddr_reg:x3; val_offset:56097*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56097*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18700:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x40d43a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x29eed4 and fs3 == 0 and fe3 == 0xeb and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec0d43a; op2val:0x4029eed4;
op3val:0x75800001; valaddr_reg:x3; val_offset:56100*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56100*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18701:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x40d43a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x29eed4 and fs3 == 0 and fe3 == 0xeb and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec0d43a; op2val:0x4029eed4;
op3val:0x75800003; valaddr_reg:x3; val_offset:56103*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56103*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18702:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x40d43a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x29eed4 and fs3 == 0 and fe3 == 0xeb and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec0d43a; op2val:0x4029eed4;
op3val:0x75800007; valaddr_reg:x3; val_offset:56106*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56106*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18703:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x40d43a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x29eed4 and fs3 == 0 and fe3 == 0xeb and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec0d43a; op2val:0x4029eed4;
op3val:0x7580000f; valaddr_reg:x3; val_offset:56109*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56109*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18704:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x40d43a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x29eed4 and fs3 == 0 and fe3 == 0xeb and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec0d43a; op2val:0x4029eed4;
op3val:0x7580001f; valaddr_reg:x3; val_offset:56112*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56112*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18705:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x40d43a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x29eed4 and fs3 == 0 and fe3 == 0xeb and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec0d43a; op2val:0x4029eed4;
op3val:0x7580003f; valaddr_reg:x3; val_offset:56115*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56115*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18706:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x40d43a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x29eed4 and fs3 == 0 and fe3 == 0xeb and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec0d43a; op2val:0x4029eed4;
op3val:0x7580007f; valaddr_reg:x3; val_offset:56118*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56118*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18707:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x40d43a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x29eed4 and fs3 == 0 and fe3 == 0xeb and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec0d43a; op2val:0x4029eed4;
op3val:0x758000ff; valaddr_reg:x3; val_offset:56121*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56121*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18708:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x40d43a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x29eed4 and fs3 == 0 and fe3 == 0xeb and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec0d43a; op2val:0x4029eed4;
op3val:0x758001ff; valaddr_reg:x3; val_offset:56124*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56124*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18709:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x40d43a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x29eed4 and fs3 == 0 and fe3 == 0xeb and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec0d43a; op2val:0x4029eed4;
op3val:0x758003ff; valaddr_reg:x3; val_offset:56127*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56127*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18710:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x40d43a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x29eed4 and fs3 == 0 and fe3 == 0xeb and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec0d43a; op2val:0x4029eed4;
op3val:0x758007ff; valaddr_reg:x3; val_offset:56130*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56130*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18711:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x40d43a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x29eed4 and fs3 == 0 and fe3 == 0xeb and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec0d43a; op2val:0x4029eed4;
op3val:0x75800fff; valaddr_reg:x3; val_offset:56133*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56133*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18712:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x40d43a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x29eed4 and fs3 == 0 and fe3 == 0xeb and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec0d43a; op2val:0x4029eed4;
op3val:0x75801fff; valaddr_reg:x3; val_offset:56136*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56136*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18713:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x40d43a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x29eed4 and fs3 == 0 and fe3 == 0xeb and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec0d43a; op2val:0x4029eed4;
op3val:0x75803fff; valaddr_reg:x3; val_offset:56139*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56139*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18714:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x40d43a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x29eed4 and fs3 == 0 and fe3 == 0xeb and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec0d43a; op2val:0x4029eed4;
op3val:0x75807fff; valaddr_reg:x3; val_offset:56142*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56142*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18715:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x40d43a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x29eed4 and fs3 == 0 and fe3 == 0xeb and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec0d43a; op2val:0x4029eed4;
op3val:0x7580ffff; valaddr_reg:x3; val_offset:56145*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56145*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18716:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x40d43a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x29eed4 and fs3 == 0 and fe3 == 0xeb and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec0d43a; op2val:0x4029eed4;
op3val:0x7581ffff; valaddr_reg:x3; val_offset:56148*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56148*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18717:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x40d43a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x29eed4 and fs3 == 0 and fe3 == 0xeb and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec0d43a; op2val:0x4029eed4;
op3val:0x7583ffff; valaddr_reg:x3; val_offset:56151*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56151*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18718:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x40d43a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x29eed4 and fs3 == 0 and fe3 == 0xeb and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec0d43a; op2val:0x4029eed4;
op3val:0x7587ffff; valaddr_reg:x3; val_offset:56154*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56154*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18719:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x40d43a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x29eed4 and fs3 == 0 and fe3 == 0xeb and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec0d43a; op2val:0x4029eed4;
op3val:0x758fffff; valaddr_reg:x3; val_offset:56157*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56157*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18720:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x40d43a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x29eed4 and fs3 == 0 and fe3 == 0xeb and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec0d43a; op2val:0x4029eed4;
op3val:0x759fffff; valaddr_reg:x3; val_offset:56160*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56160*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18721:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x40d43a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x29eed4 and fs3 == 0 and fe3 == 0xeb and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec0d43a; op2val:0x4029eed4;
op3val:0x75bfffff; valaddr_reg:x3; val_offset:56163*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56163*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18722:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x40d43a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x29eed4 and fs3 == 0 and fe3 == 0xeb and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec0d43a; op2val:0x4029eed4;
op3val:0x75c00000; valaddr_reg:x3; val_offset:56166*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56166*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18723:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x40d43a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x29eed4 and fs3 == 0 and fe3 == 0xeb and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec0d43a; op2val:0x4029eed4;
op3val:0x75e00000; valaddr_reg:x3; val_offset:56169*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56169*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18724:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x40d43a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x29eed4 and fs3 == 0 and fe3 == 0xeb and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec0d43a; op2val:0x4029eed4;
op3val:0x75f00000; valaddr_reg:x3; val_offset:56172*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56172*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18725:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x40d43a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x29eed4 and fs3 == 0 and fe3 == 0xeb and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec0d43a; op2val:0x4029eed4;
op3val:0x75f80000; valaddr_reg:x3; val_offset:56175*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56175*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18726:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x40d43a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x29eed4 and fs3 == 0 and fe3 == 0xeb and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec0d43a; op2val:0x4029eed4;
op3val:0x75fc0000; valaddr_reg:x3; val_offset:56178*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56178*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18727:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x40d43a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x29eed4 and fs3 == 0 and fe3 == 0xeb and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec0d43a; op2val:0x4029eed4;
op3val:0x75fe0000; valaddr_reg:x3; val_offset:56181*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56181*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18728:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x40d43a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x29eed4 and fs3 == 0 and fe3 == 0xeb and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec0d43a; op2val:0x4029eed4;
op3val:0x75ff0000; valaddr_reg:x3; val_offset:56184*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56184*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18729:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x40d43a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x29eed4 and fs3 == 0 and fe3 == 0xeb and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec0d43a; op2val:0x4029eed4;
op3val:0x75ff8000; valaddr_reg:x3; val_offset:56187*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56187*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18730:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x40d43a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x29eed4 and fs3 == 0 and fe3 == 0xeb and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec0d43a; op2val:0x4029eed4;
op3val:0x75ffc000; valaddr_reg:x3; val_offset:56190*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56190*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18731:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x40d43a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x29eed4 and fs3 == 0 and fe3 == 0xeb and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec0d43a; op2val:0x4029eed4;
op3val:0x75ffe000; valaddr_reg:x3; val_offset:56193*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56193*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18732:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x40d43a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x29eed4 and fs3 == 0 and fe3 == 0xeb and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec0d43a; op2val:0x4029eed4;
op3val:0x75fff000; valaddr_reg:x3; val_offset:56196*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56196*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18733:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x40d43a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x29eed4 and fs3 == 0 and fe3 == 0xeb and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec0d43a; op2val:0x4029eed4;
op3val:0x75fff800; valaddr_reg:x3; val_offset:56199*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56199*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18734:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x40d43a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x29eed4 and fs3 == 0 and fe3 == 0xeb and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec0d43a; op2val:0x4029eed4;
op3val:0x75fffc00; valaddr_reg:x3; val_offset:56202*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56202*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18735:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x40d43a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x29eed4 and fs3 == 0 and fe3 == 0xeb and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec0d43a; op2val:0x4029eed4;
op3val:0x75fffe00; valaddr_reg:x3; val_offset:56205*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56205*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18736:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x40d43a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x29eed4 and fs3 == 0 and fe3 == 0xeb and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec0d43a; op2val:0x4029eed4;
op3val:0x75ffff00; valaddr_reg:x3; val_offset:56208*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56208*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18737:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x40d43a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x29eed4 and fs3 == 0 and fe3 == 0xeb and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec0d43a; op2val:0x4029eed4;
op3val:0x75ffff80; valaddr_reg:x3; val_offset:56211*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56211*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18738:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x40d43a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x29eed4 and fs3 == 0 and fe3 == 0xeb and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec0d43a; op2val:0x4029eed4;
op3val:0x75ffffc0; valaddr_reg:x3; val_offset:56214*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56214*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18739:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x40d43a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x29eed4 and fs3 == 0 and fe3 == 0xeb and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec0d43a; op2val:0x4029eed4;
op3val:0x75ffffe0; valaddr_reg:x3; val_offset:56217*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56217*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18740:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x40d43a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x29eed4 and fs3 == 0 and fe3 == 0xeb and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec0d43a; op2val:0x4029eed4;
op3val:0x75fffff0; valaddr_reg:x3; val_offset:56220*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56220*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18741:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x40d43a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x29eed4 and fs3 == 0 and fe3 == 0xeb and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec0d43a; op2val:0x4029eed4;
op3val:0x75fffff8; valaddr_reg:x3; val_offset:56223*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56223*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18742:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x40d43a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x29eed4 and fs3 == 0 and fe3 == 0xeb and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec0d43a; op2val:0x4029eed4;
op3val:0x75fffffc; valaddr_reg:x3; val_offset:56226*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56226*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18743:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x40d43a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x29eed4 and fs3 == 0 and fe3 == 0xeb and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec0d43a; op2val:0x4029eed4;
op3val:0x75fffffe; valaddr_reg:x3; val_offset:56229*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56229*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18744:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x40d43a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x29eed4 and fs3 == 0 and fe3 == 0xeb and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec0d43a; op2val:0x4029eed4;
op3val:0x75ffffff; valaddr_reg:x3; val_offset:56232*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56232*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18745:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x40d43a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x29eed4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec0d43a; op2val:0x4029eed4;
op3val:0x7f000001; valaddr_reg:x3; val_offset:56235*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56235*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18746:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x40d43a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x29eed4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec0d43a; op2val:0x4029eed4;
op3val:0x7f000003; valaddr_reg:x3; val_offset:56238*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56238*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18747:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x40d43a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x29eed4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec0d43a; op2val:0x4029eed4;
op3val:0x7f000007; valaddr_reg:x3; val_offset:56241*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56241*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18748:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x40d43a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x29eed4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec0d43a; op2val:0x4029eed4;
op3val:0x7f199999; valaddr_reg:x3; val_offset:56244*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56244*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18749:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x40d43a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x29eed4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec0d43a; op2val:0x4029eed4;
op3val:0x7f249249; valaddr_reg:x3; val_offset:56247*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56247*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18750:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x40d43a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x29eed4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec0d43a; op2val:0x4029eed4;
op3val:0x7f333333; valaddr_reg:x3; val_offset:56250*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56250*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18751:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x40d43a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x29eed4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec0d43a; op2val:0x4029eed4;
op3val:0x7f36db6d; valaddr_reg:x3; val_offset:56253*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56253*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18752:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x40d43a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x29eed4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec0d43a; op2val:0x4029eed4;
op3val:0x7f3bbbbb; valaddr_reg:x3; val_offset:56256*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56256*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18753:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x40d43a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x29eed4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec0d43a; op2val:0x4029eed4;
op3val:0x7f444444; valaddr_reg:x3; val_offset:56259*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56259*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18754:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x40d43a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x29eed4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec0d43a; op2val:0x4029eed4;
op3val:0x7f4ccccc; valaddr_reg:x3; val_offset:56262*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56262*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18755:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x40d43a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x29eed4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec0d43a; op2val:0x4029eed4;
op3val:0x7f5b6db6; valaddr_reg:x3; val_offset:56265*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56265*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18756:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x40d43a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x29eed4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec0d43a; op2val:0x4029eed4;
op3val:0x7f666666; valaddr_reg:x3; val_offset:56268*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56268*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18757:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x40d43a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x29eed4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec0d43a; op2val:0x4029eed4;
op3val:0x7f6db6db; valaddr_reg:x3; val_offset:56271*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56271*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18758:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x40d43a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x29eed4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec0d43a; op2val:0x4029eed4;
op3val:0x7f7ffff8; valaddr_reg:x3; val_offset:56274*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56274*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18759:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x40d43a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x29eed4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec0d43a; op2val:0x4029eed4;
op3val:0x7f7ffffc; valaddr_reg:x3; val_offset:56277*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56277*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18760:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x40d43a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x29eed4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec0d43a; op2val:0x4029eed4;
op3val:0x7f7ffffe; valaddr_reg:x3; val_offset:56280*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56280*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18761:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x41a1ac and fs2 == 0 and fe2 == 0x00 and fm2 == 0x549d43 and fs3 == 0 and fe3 == 0x35 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec1a1ac; op2val:0x549d43;
op3val:0x1a800000; valaddr_reg:x3; val_offset:56283*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56283*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18762:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x41a1ac and fs2 == 0 and fe2 == 0x00 and fm2 == 0x549d43 and fs3 == 0 and fe3 == 0x35 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec1a1ac; op2val:0x549d43;
op3val:0x1a800001; valaddr_reg:x3; val_offset:56286*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56286*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18763:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x41a1ac and fs2 == 0 and fe2 == 0x00 and fm2 == 0x549d43 and fs3 == 0 and fe3 == 0x35 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec1a1ac; op2val:0x549d43;
op3val:0x1a800003; valaddr_reg:x3; val_offset:56289*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56289*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18764:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x41a1ac and fs2 == 0 and fe2 == 0x00 and fm2 == 0x549d43 and fs3 == 0 and fe3 == 0x35 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec1a1ac; op2val:0x549d43;
op3val:0x1a800007; valaddr_reg:x3; val_offset:56292*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56292*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18765:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x41a1ac and fs2 == 0 and fe2 == 0x00 and fm2 == 0x549d43 and fs3 == 0 and fe3 == 0x35 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec1a1ac; op2val:0x549d43;
op3val:0x1a80000f; valaddr_reg:x3; val_offset:56295*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56295*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18766:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x41a1ac and fs2 == 0 and fe2 == 0x00 and fm2 == 0x549d43 and fs3 == 0 and fe3 == 0x35 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec1a1ac; op2val:0x549d43;
op3val:0x1a80001f; valaddr_reg:x3; val_offset:56298*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56298*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18767:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x41a1ac and fs2 == 0 and fe2 == 0x00 and fm2 == 0x549d43 and fs3 == 0 and fe3 == 0x35 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec1a1ac; op2val:0x549d43;
op3val:0x1a80003f; valaddr_reg:x3; val_offset:56301*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56301*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18768:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x41a1ac and fs2 == 0 and fe2 == 0x00 and fm2 == 0x549d43 and fs3 == 0 and fe3 == 0x35 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec1a1ac; op2val:0x549d43;
op3val:0x1a80007f; valaddr_reg:x3; val_offset:56304*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56304*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18769:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x41a1ac and fs2 == 0 and fe2 == 0x00 and fm2 == 0x549d43 and fs3 == 0 and fe3 == 0x35 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec1a1ac; op2val:0x549d43;
op3val:0x1a8000ff; valaddr_reg:x3; val_offset:56307*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56307*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18770:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x41a1ac and fs2 == 0 and fe2 == 0x00 and fm2 == 0x549d43 and fs3 == 0 and fe3 == 0x35 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec1a1ac; op2val:0x549d43;
op3val:0x1a8001ff; valaddr_reg:x3; val_offset:56310*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56310*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18771:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x41a1ac and fs2 == 0 and fe2 == 0x00 and fm2 == 0x549d43 and fs3 == 0 and fe3 == 0x35 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec1a1ac; op2val:0x549d43;
op3val:0x1a8003ff; valaddr_reg:x3; val_offset:56313*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56313*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18772:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x41a1ac and fs2 == 0 and fe2 == 0x00 and fm2 == 0x549d43 and fs3 == 0 and fe3 == 0x35 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec1a1ac; op2val:0x549d43;
op3val:0x1a8007ff; valaddr_reg:x3; val_offset:56316*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56316*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18773:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x41a1ac and fs2 == 0 and fe2 == 0x00 and fm2 == 0x549d43 and fs3 == 0 and fe3 == 0x35 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec1a1ac; op2val:0x549d43;
op3val:0x1a800fff; valaddr_reg:x3; val_offset:56319*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56319*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18774:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x41a1ac and fs2 == 0 and fe2 == 0x00 and fm2 == 0x549d43 and fs3 == 0 and fe3 == 0x35 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec1a1ac; op2val:0x549d43;
op3val:0x1a801fff; valaddr_reg:x3; val_offset:56322*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56322*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18775:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x41a1ac and fs2 == 0 and fe2 == 0x00 and fm2 == 0x549d43 and fs3 == 0 and fe3 == 0x35 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec1a1ac; op2val:0x549d43;
op3val:0x1a803fff; valaddr_reg:x3; val_offset:56325*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56325*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18776:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x41a1ac and fs2 == 0 and fe2 == 0x00 and fm2 == 0x549d43 and fs3 == 0 and fe3 == 0x35 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec1a1ac; op2val:0x549d43;
op3val:0x1a807fff; valaddr_reg:x3; val_offset:56328*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56328*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18777:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x41a1ac and fs2 == 0 and fe2 == 0x00 and fm2 == 0x549d43 and fs3 == 0 and fe3 == 0x35 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec1a1ac; op2val:0x549d43;
op3val:0x1a80ffff; valaddr_reg:x3; val_offset:56331*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56331*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18778:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x41a1ac and fs2 == 0 and fe2 == 0x00 and fm2 == 0x549d43 and fs3 == 0 and fe3 == 0x35 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec1a1ac; op2val:0x549d43;
op3val:0x1a81ffff; valaddr_reg:x3; val_offset:56334*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56334*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18779:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x41a1ac and fs2 == 0 and fe2 == 0x00 and fm2 == 0x549d43 and fs3 == 0 and fe3 == 0x35 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec1a1ac; op2val:0x549d43;
op3val:0x1a83ffff; valaddr_reg:x3; val_offset:56337*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56337*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18780:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x41a1ac and fs2 == 0 and fe2 == 0x00 and fm2 == 0x549d43 and fs3 == 0 and fe3 == 0x35 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec1a1ac; op2val:0x549d43;
op3val:0x1a87ffff; valaddr_reg:x3; val_offset:56340*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56340*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18781:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x41a1ac and fs2 == 0 and fe2 == 0x00 and fm2 == 0x549d43 and fs3 == 0 and fe3 == 0x35 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec1a1ac; op2val:0x549d43;
op3val:0x1a8fffff; valaddr_reg:x3; val_offset:56343*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56343*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18782:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x41a1ac and fs2 == 0 and fe2 == 0x00 and fm2 == 0x549d43 and fs3 == 0 and fe3 == 0x35 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec1a1ac; op2val:0x549d43;
op3val:0x1a9fffff; valaddr_reg:x3; val_offset:56346*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56346*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18783:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x41a1ac and fs2 == 0 and fe2 == 0x00 and fm2 == 0x549d43 and fs3 == 0 and fe3 == 0x35 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec1a1ac; op2val:0x549d43;
op3val:0x1abfffff; valaddr_reg:x3; val_offset:56349*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56349*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18784:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x41a1ac and fs2 == 0 and fe2 == 0x00 and fm2 == 0x549d43 and fs3 == 0 and fe3 == 0x35 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec1a1ac; op2val:0x549d43;
op3val:0x1ac00000; valaddr_reg:x3; val_offset:56352*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56352*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18785:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x41a1ac and fs2 == 0 and fe2 == 0x00 and fm2 == 0x549d43 and fs3 == 0 and fe3 == 0x35 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec1a1ac; op2val:0x549d43;
op3val:0x1ae00000; valaddr_reg:x3; val_offset:56355*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56355*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18786:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x41a1ac and fs2 == 0 and fe2 == 0x00 and fm2 == 0x549d43 and fs3 == 0 and fe3 == 0x35 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec1a1ac; op2val:0x549d43;
op3val:0x1af00000; valaddr_reg:x3; val_offset:56358*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56358*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18787:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x41a1ac and fs2 == 0 and fe2 == 0x00 and fm2 == 0x549d43 and fs3 == 0 and fe3 == 0x35 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec1a1ac; op2val:0x549d43;
op3val:0x1af80000; valaddr_reg:x3; val_offset:56361*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56361*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18788:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x41a1ac and fs2 == 0 and fe2 == 0x00 and fm2 == 0x549d43 and fs3 == 0 and fe3 == 0x35 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec1a1ac; op2val:0x549d43;
op3val:0x1afc0000; valaddr_reg:x3; val_offset:56364*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56364*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18789:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x41a1ac and fs2 == 0 and fe2 == 0x00 and fm2 == 0x549d43 and fs3 == 0 and fe3 == 0x35 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec1a1ac; op2val:0x549d43;
op3val:0x1afe0000; valaddr_reg:x3; val_offset:56367*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56367*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18790:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x41a1ac and fs2 == 0 and fe2 == 0x00 and fm2 == 0x549d43 and fs3 == 0 and fe3 == 0x35 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec1a1ac; op2val:0x549d43;
op3val:0x1aff0000; valaddr_reg:x3; val_offset:56370*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56370*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18791:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x41a1ac and fs2 == 0 and fe2 == 0x00 and fm2 == 0x549d43 and fs3 == 0 and fe3 == 0x35 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec1a1ac; op2val:0x549d43;
op3val:0x1aff8000; valaddr_reg:x3; val_offset:56373*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56373*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18792:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x41a1ac and fs2 == 0 and fe2 == 0x00 and fm2 == 0x549d43 and fs3 == 0 and fe3 == 0x35 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec1a1ac; op2val:0x549d43;
op3val:0x1affc000; valaddr_reg:x3; val_offset:56376*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56376*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18793:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x41a1ac and fs2 == 0 and fe2 == 0x00 and fm2 == 0x549d43 and fs3 == 0 and fe3 == 0x35 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec1a1ac; op2val:0x549d43;
op3val:0x1affe000; valaddr_reg:x3; val_offset:56379*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56379*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18794:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x41a1ac and fs2 == 0 and fe2 == 0x00 and fm2 == 0x549d43 and fs3 == 0 and fe3 == 0x35 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec1a1ac; op2val:0x549d43;
op3val:0x1afff000; valaddr_reg:x3; val_offset:56382*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56382*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18795:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x41a1ac and fs2 == 0 and fe2 == 0x00 and fm2 == 0x549d43 and fs3 == 0 and fe3 == 0x35 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec1a1ac; op2val:0x549d43;
op3val:0x1afff800; valaddr_reg:x3; val_offset:56385*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56385*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18796:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x41a1ac and fs2 == 0 and fe2 == 0x00 and fm2 == 0x549d43 and fs3 == 0 and fe3 == 0x35 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec1a1ac; op2val:0x549d43;
op3val:0x1afffc00; valaddr_reg:x3; val_offset:56388*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56388*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18797:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x41a1ac and fs2 == 0 and fe2 == 0x00 and fm2 == 0x549d43 and fs3 == 0 and fe3 == 0x35 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec1a1ac; op2val:0x549d43;
op3val:0x1afffe00; valaddr_reg:x3; val_offset:56391*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56391*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18798:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x41a1ac and fs2 == 0 and fe2 == 0x00 and fm2 == 0x549d43 and fs3 == 0 and fe3 == 0x35 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec1a1ac; op2val:0x549d43;
op3val:0x1affff00; valaddr_reg:x3; val_offset:56394*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56394*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18799:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x41a1ac and fs2 == 0 and fe2 == 0x00 and fm2 == 0x549d43 and fs3 == 0 and fe3 == 0x35 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec1a1ac; op2val:0x549d43;
op3val:0x1affff80; valaddr_reg:x3; val_offset:56397*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56397*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18800:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x41a1ac and fs2 == 0 and fe2 == 0x00 and fm2 == 0x549d43 and fs3 == 0 and fe3 == 0x35 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec1a1ac; op2val:0x549d43;
op3val:0x1affffc0; valaddr_reg:x3; val_offset:56400*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56400*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18801:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x41a1ac and fs2 == 0 and fe2 == 0x00 and fm2 == 0x549d43 and fs3 == 0 and fe3 == 0x35 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec1a1ac; op2val:0x549d43;
op3val:0x1affffe0; valaddr_reg:x3; val_offset:56403*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56403*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18802:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x41a1ac and fs2 == 0 and fe2 == 0x00 and fm2 == 0x549d43 and fs3 == 0 and fe3 == 0x35 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec1a1ac; op2val:0x549d43;
op3val:0x1afffff0; valaddr_reg:x3; val_offset:56406*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56406*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18803:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x41a1ac and fs2 == 0 and fe2 == 0x00 and fm2 == 0x549d43 and fs3 == 0 and fe3 == 0x35 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec1a1ac; op2val:0x549d43;
op3val:0x1afffff8; valaddr_reg:x3; val_offset:56409*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56409*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18804:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x41a1ac and fs2 == 0 and fe2 == 0x00 and fm2 == 0x549d43 and fs3 == 0 and fe3 == 0x35 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec1a1ac; op2val:0x549d43;
op3val:0x1afffffc; valaddr_reg:x3; val_offset:56412*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56412*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18805:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x41a1ac and fs2 == 0 and fe2 == 0x00 and fm2 == 0x549d43 and fs3 == 0 and fe3 == 0x35 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec1a1ac; op2val:0x549d43;
op3val:0x1afffffe; valaddr_reg:x3; val_offset:56415*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56415*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18806:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x41a1ac and fs2 == 0 and fe2 == 0x00 and fm2 == 0x549d43 and fs3 == 0 and fe3 == 0x35 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec1a1ac; op2val:0x549d43;
op3val:0x1affffff; valaddr_reg:x3; val_offset:56418*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56418*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18807:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x41a1ac and fs2 == 0 and fe2 == 0x00 and fm2 == 0x549d43 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec1a1ac; op2val:0x549d43;
op3val:0x3f800001; valaddr_reg:x3; val_offset:56421*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56421*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18808:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x41a1ac and fs2 == 0 and fe2 == 0x00 and fm2 == 0x549d43 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec1a1ac; op2val:0x549d43;
op3val:0x3f800003; valaddr_reg:x3; val_offset:56424*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56424*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18809:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x41a1ac and fs2 == 0 and fe2 == 0x00 and fm2 == 0x549d43 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec1a1ac; op2val:0x549d43;
op3val:0x3f800007; valaddr_reg:x3; val_offset:56427*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56427*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18810:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x41a1ac and fs2 == 0 and fe2 == 0x00 and fm2 == 0x549d43 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec1a1ac; op2val:0x549d43;
op3val:0x3f999999; valaddr_reg:x3; val_offset:56430*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56430*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18811:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x41a1ac and fs2 == 0 and fe2 == 0x00 and fm2 == 0x549d43 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec1a1ac; op2val:0x549d43;
op3val:0x3fa49249; valaddr_reg:x3; val_offset:56433*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56433*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18812:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x41a1ac and fs2 == 0 and fe2 == 0x00 and fm2 == 0x549d43 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec1a1ac; op2val:0x549d43;
op3val:0x3fb33333; valaddr_reg:x3; val_offset:56436*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56436*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18813:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x41a1ac and fs2 == 0 and fe2 == 0x00 and fm2 == 0x549d43 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec1a1ac; op2val:0x549d43;
op3val:0x3fb6db6d; valaddr_reg:x3; val_offset:56439*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56439*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18814:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x41a1ac and fs2 == 0 and fe2 == 0x00 and fm2 == 0x549d43 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec1a1ac; op2val:0x549d43;
op3val:0x3fbbbbbb; valaddr_reg:x3; val_offset:56442*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56442*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18815:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x41a1ac and fs2 == 0 and fe2 == 0x00 and fm2 == 0x549d43 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec1a1ac; op2val:0x549d43;
op3val:0x3fc44444; valaddr_reg:x3; val_offset:56445*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56445*0 + 3*146*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(2126499106,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(167771136,32,FLEN)
NAN_BOXED(2126499106,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(167771648,32,FLEN)
NAN_BOXED(2126499106,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(167771904,32,FLEN)
NAN_BOXED(2126499106,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(167772032,32,FLEN)
NAN_BOXED(2126499106,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(167772096,32,FLEN)
NAN_BOXED(2126499106,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(167772128,32,FLEN)
NAN_BOXED(2126499106,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(167772144,32,FLEN)
NAN_BOXED(2126499106,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(167772152,32,FLEN)
NAN_BOXED(2126499106,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(167772156,32,FLEN)
NAN_BOXED(2126499106,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(167772158,32,FLEN)
NAN_BOXED(2126499106,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(167772159,32,FLEN)
NAN_BOXED(2126566458,32,FLEN)
NAN_BOXED(1076489940,32,FLEN)
NAN_BOXED(1971322880,32,FLEN)
NAN_BOXED(2126566458,32,FLEN)
NAN_BOXED(1076489940,32,FLEN)
NAN_BOXED(1971322881,32,FLEN)
NAN_BOXED(2126566458,32,FLEN)
NAN_BOXED(1076489940,32,FLEN)
NAN_BOXED(1971322883,32,FLEN)
NAN_BOXED(2126566458,32,FLEN)
NAN_BOXED(1076489940,32,FLEN)
NAN_BOXED(1971322887,32,FLEN)
NAN_BOXED(2126566458,32,FLEN)
NAN_BOXED(1076489940,32,FLEN)
NAN_BOXED(1971322895,32,FLEN)
NAN_BOXED(2126566458,32,FLEN)
NAN_BOXED(1076489940,32,FLEN)
NAN_BOXED(1971322911,32,FLEN)
NAN_BOXED(2126566458,32,FLEN)
NAN_BOXED(1076489940,32,FLEN)
NAN_BOXED(1971322943,32,FLEN)
NAN_BOXED(2126566458,32,FLEN)
NAN_BOXED(1076489940,32,FLEN)
NAN_BOXED(1971323007,32,FLEN)
NAN_BOXED(2126566458,32,FLEN)
NAN_BOXED(1076489940,32,FLEN)
NAN_BOXED(1971323135,32,FLEN)
NAN_BOXED(2126566458,32,FLEN)
NAN_BOXED(1076489940,32,FLEN)
NAN_BOXED(1971323391,32,FLEN)
NAN_BOXED(2126566458,32,FLEN)
NAN_BOXED(1076489940,32,FLEN)
NAN_BOXED(1971323903,32,FLEN)
NAN_BOXED(2126566458,32,FLEN)
NAN_BOXED(1076489940,32,FLEN)
NAN_BOXED(1971324927,32,FLEN)
NAN_BOXED(2126566458,32,FLEN)
NAN_BOXED(1076489940,32,FLEN)
NAN_BOXED(1971326975,32,FLEN)
NAN_BOXED(2126566458,32,FLEN)
NAN_BOXED(1076489940,32,FLEN)
NAN_BOXED(1971331071,32,FLEN)
NAN_BOXED(2126566458,32,FLEN)
NAN_BOXED(1076489940,32,FLEN)
NAN_BOXED(1971339263,32,FLEN)
NAN_BOXED(2126566458,32,FLEN)
NAN_BOXED(1076489940,32,FLEN)
NAN_BOXED(1971355647,32,FLEN)
NAN_BOXED(2126566458,32,FLEN)
NAN_BOXED(1076489940,32,FLEN)
NAN_BOXED(1971388415,32,FLEN)
NAN_BOXED(2126566458,32,FLEN)
NAN_BOXED(1076489940,32,FLEN)
NAN_BOXED(1971453951,32,FLEN)
NAN_BOXED(2126566458,32,FLEN)
NAN_BOXED(1076489940,32,FLEN)
NAN_BOXED(1971585023,32,FLEN)
NAN_BOXED(2126566458,32,FLEN)
NAN_BOXED(1076489940,32,FLEN)
NAN_BOXED(1971847167,32,FLEN)
NAN_BOXED(2126566458,32,FLEN)
NAN_BOXED(1076489940,32,FLEN)
NAN_BOXED(1972371455,32,FLEN)
NAN_BOXED(2126566458,32,FLEN)
NAN_BOXED(1076489940,32,FLEN)
NAN_BOXED(1973420031,32,FLEN)
NAN_BOXED(2126566458,32,FLEN)
NAN_BOXED(1076489940,32,FLEN)
NAN_BOXED(1975517183,32,FLEN)
NAN_BOXED(2126566458,32,FLEN)
NAN_BOXED(1076489940,32,FLEN)
NAN_BOXED(1975517184,32,FLEN)
NAN_BOXED(2126566458,32,FLEN)
NAN_BOXED(1076489940,32,FLEN)
NAN_BOXED(1977614336,32,FLEN)
NAN_BOXED(2126566458,32,FLEN)
NAN_BOXED(1076489940,32,FLEN)
NAN_BOXED(1978662912,32,FLEN)
NAN_BOXED(2126566458,32,FLEN)
NAN_BOXED(1076489940,32,FLEN)
NAN_BOXED(1979187200,32,FLEN)
NAN_BOXED(2126566458,32,FLEN)
NAN_BOXED(1076489940,32,FLEN)
NAN_BOXED(1979449344,32,FLEN)
NAN_BOXED(2126566458,32,FLEN)
NAN_BOXED(1076489940,32,FLEN)
NAN_BOXED(1979580416,32,FLEN)
NAN_BOXED(2126566458,32,FLEN)
NAN_BOXED(1076489940,32,FLEN)
NAN_BOXED(1979645952,32,FLEN)
NAN_BOXED(2126566458,32,FLEN)
NAN_BOXED(1076489940,32,FLEN)
NAN_BOXED(1979678720,32,FLEN)
NAN_BOXED(2126566458,32,FLEN)
NAN_BOXED(1076489940,32,FLEN)
NAN_BOXED(1979695104,32,FLEN)
NAN_BOXED(2126566458,32,FLEN)
NAN_BOXED(1076489940,32,FLEN)
NAN_BOXED(1979703296,32,FLEN)
NAN_BOXED(2126566458,32,FLEN)
NAN_BOXED(1076489940,32,FLEN)
NAN_BOXED(1979707392,32,FLEN)
NAN_BOXED(2126566458,32,FLEN)
NAN_BOXED(1076489940,32,FLEN)
NAN_BOXED(1979709440,32,FLEN)
NAN_BOXED(2126566458,32,FLEN)
NAN_BOXED(1076489940,32,FLEN)
NAN_BOXED(1979710464,32,FLEN)
NAN_BOXED(2126566458,32,FLEN)
NAN_BOXED(1076489940,32,FLEN)
NAN_BOXED(1979710976,32,FLEN)
NAN_BOXED(2126566458,32,FLEN)
NAN_BOXED(1076489940,32,FLEN)
NAN_BOXED(1979711232,32,FLEN)
NAN_BOXED(2126566458,32,FLEN)
NAN_BOXED(1076489940,32,FLEN)
NAN_BOXED(1979711360,32,FLEN)
NAN_BOXED(2126566458,32,FLEN)
NAN_BOXED(1076489940,32,FLEN)
NAN_BOXED(1979711424,32,FLEN)
NAN_BOXED(2126566458,32,FLEN)
NAN_BOXED(1076489940,32,FLEN)
NAN_BOXED(1979711456,32,FLEN)
NAN_BOXED(2126566458,32,FLEN)
NAN_BOXED(1076489940,32,FLEN)
NAN_BOXED(1979711472,32,FLEN)
NAN_BOXED(2126566458,32,FLEN)
NAN_BOXED(1076489940,32,FLEN)
NAN_BOXED(1979711480,32,FLEN)
NAN_BOXED(2126566458,32,FLEN)
NAN_BOXED(1076489940,32,FLEN)
NAN_BOXED(1979711484,32,FLEN)
NAN_BOXED(2126566458,32,FLEN)
NAN_BOXED(1076489940,32,FLEN)
NAN_BOXED(1979711486,32,FLEN)
NAN_BOXED(2126566458,32,FLEN)
NAN_BOXED(1076489940,32,FLEN)
NAN_BOXED(1979711487,32,FLEN)
NAN_BOXED(2126566458,32,FLEN)
NAN_BOXED(1076489940,32,FLEN)
NAN_BOXED(2130706433,32,FLEN)
NAN_BOXED(2126566458,32,FLEN)
NAN_BOXED(1076489940,32,FLEN)
NAN_BOXED(2130706435,32,FLEN)
NAN_BOXED(2126566458,32,FLEN)
NAN_BOXED(1076489940,32,FLEN)
NAN_BOXED(2130706439,32,FLEN)
NAN_BOXED(2126566458,32,FLEN)
NAN_BOXED(1076489940,32,FLEN)
NAN_BOXED(2132384153,32,FLEN)
NAN_BOXED(2126566458,32,FLEN)
NAN_BOXED(1076489940,32,FLEN)
NAN_BOXED(2133103177,32,FLEN)
NAN_BOXED(2126566458,32,FLEN)
NAN_BOXED(1076489940,32,FLEN)
NAN_BOXED(2134061875,32,FLEN)
NAN_BOXED(2126566458,32,FLEN)
NAN_BOXED(1076489940,32,FLEN)
NAN_BOXED(2134301549,32,FLEN)
NAN_BOXED(2126566458,32,FLEN)
NAN_BOXED(1076489940,32,FLEN)
NAN_BOXED(2134621115,32,FLEN)
NAN_BOXED(2126566458,32,FLEN)
NAN_BOXED(1076489940,32,FLEN)
NAN_BOXED(2135180356,32,FLEN)
NAN_BOXED(2126566458,32,FLEN)
NAN_BOXED(1076489940,32,FLEN)
NAN_BOXED(2135739596,32,FLEN)
NAN_BOXED(2126566458,32,FLEN)
NAN_BOXED(1076489940,32,FLEN)
NAN_BOXED(2136698294,32,FLEN)
NAN_BOXED(2126566458,32,FLEN)
NAN_BOXED(1076489940,32,FLEN)
NAN_BOXED(2137417318,32,FLEN)
NAN_BOXED(2126566458,32,FLEN)
NAN_BOXED(1076489940,32,FLEN)
NAN_BOXED(2137896667,32,FLEN)
NAN_BOXED(2126566458,32,FLEN)
NAN_BOXED(1076489940,32,FLEN)
NAN_BOXED(2139095032,32,FLEN)
NAN_BOXED(2126566458,32,FLEN)
NAN_BOXED(1076489940,32,FLEN)
NAN_BOXED(2139095036,32,FLEN)
NAN_BOXED(2126566458,32,FLEN)
NAN_BOXED(1076489940,32,FLEN)
NAN_BOXED(2139095038,32,FLEN)
NAN_BOXED(2126619052,32,FLEN)
NAN_BOXED(5545283,32,FLEN)
NAN_BOXED(444596224,32,FLEN)
NAN_BOXED(2126619052,32,FLEN)
NAN_BOXED(5545283,32,FLEN)
NAN_BOXED(444596225,32,FLEN)
NAN_BOXED(2126619052,32,FLEN)
NAN_BOXED(5545283,32,FLEN)
NAN_BOXED(444596227,32,FLEN)
NAN_BOXED(2126619052,32,FLEN)
NAN_BOXED(5545283,32,FLEN)
NAN_BOXED(444596231,32,FLEN)
NAN_BOXED(2126619052,32,FLEN)
NAN_BOXED(5545283,32,FLEN)
NAN_BOXED(444596239,32,FLEN)
NAN_BOXED(2126619052,32,FLEN)
NAN_BOXED(5545283,32,FLEN)
NAN_BOXED(444596255,32,FLEN)
NAN_BOXED(2126619052,32,FLEN)
NAN_BOXED(5545283,32,FLEN)
NAN_BOXED(444596287,32,FLEN)
NAN_BOXED(2126619052,32,FLEN)
NAN_BOXED(5545283,32,FLEN)
NAN_BOXED(444596351,32,FLEN)
NAN_BOXED(2126619052,32,FLEN)
NAN_BOXED(5545283,32,FLEN)
NAN_BOXED(444596479,32,FLEN)
NAN_BOXED(2126619052,32,FLEN)
NAN_BOXED(5545283,32,FLEN)
NAN_BOXED(444596735,32,FLEN)
NAN_BOXED(2126619052,32,FLEN)
NAN_BOXED(5545283,32,FLEN)
NAN_BOXED(444597247,32,FLEN)
NAN_BOXED(2126619052,32,FLEN)
NAN_BOXED(5545283,32,FLEN)
NAN_BOXED(444598271,32,FLEN)
NAN_BOXED(2126619052,32,FLEN)
NAN_BOXED(5545283,32,FLEN)
NAN_BOXED(444600319,32,FLEN)
NAN_BOXED(2126619052,32,FLEN)
NAN_BOXED(5545283,32,FLEN)
NAN_BOXED(444604415,32,FLEN)
NAN_BOXED(2126619052,32,FLEN)
NAN_BOXED(5545283,32,FLEN)
NAN_BOXED(444612607,32,FLEN)
NAN_BOXED(2126619052,32,FLEN)
NAN_BOXED(5545283,32,FLEN)
NAN_BOXED(444628991,32,FLEN)
NAN_BOXED(2126619052,32,FLEN)
NAN_BOXED(5545283,32,FLEN)
NAN_BOXED(444661759,32,FLEN)
NAN_BOXED(2126619052,32,FLEN)
NAN_BOXED(5545283,32,FLEN)
NAN_BOXED(444727295,32,FLEN)
NAN_BOXED(2126619052,32,FLEN)
NAN_BOXED(5545283,32,FLEN)
NAN_BOXED(444858367,32,FLEN)
NAN_BOXED(2126619052,32,FLEN)
NAN_BOXED(5545283,32,FLEN)
NAN_BOXED(445120511,32,FLEN)
NAN_BOXED(2126619052,32,FLEN)
NAN_BOXED(5545283,32,FLEN)
NAN_BOXED(445644799,32,FLEN)
NAN_BOXED(2126619052,32,FLEN)
NAN_BOXED(5545283,32,FLEN)
NAN_BOXED(446693375,32,FLEN)
NAN_BOXED(2126619052,32,FLEN)
NAN_BOXED(5545283,32,FLEN)
NAN_BOXED(448790527,32,FLEN)
NAN_BOXED(2126619052,32,FLEN)
NAN_BOXED(5545283,32,FLEN)
NAN_BOXED(448790528,32,FLEN)
NAN_BOXED(2126619052,32,FLEN)
NAN_BOXED(5545283,32,FLEN)
NAN_BOXED(450887680,32,FLEN)
NAN_BOXED(2126619052,32,FLEN)
NAN_BOXED(5545283,32,FLEN)
NAN_BOXED(451936256,32,FLEN)
NAN_BOXED(2126619052,32,FLEN)
NAN_BOXED(5545283,32,FLEN)
NAN_BOXED(452460544,32,FLEN)
NAN_BOXED(2126619052,32,FLEN)
NAN_BOXED(5545283,32,FLEN)
NAN_BOXED(452722688,32,FLEN)
NAN_BOXED(2126619052,32,FLEN)
NAN_BOXED(5545283,32,FLEN)
NAN_BOXED(452853760,32,FLEN)
NAN_BOXED(2126619052,32,FLEN)
NAN_BOXED(5545283,32,FLEN)
NAN_BOXED(452919296,32,FLEN)
NAN_BOXED(2126619052,32,FLEN)
NAN_BOXED(5545283,32,FLEN)
NAN_BOXED(452952064,32,FLEN)
NAN_BOXED(2126619052,32,FLEN)
NAN_BOXED(5545283,32,FLEN)
NAN_BOXED(452968448,32,FLEN)
NAN_BOXED(2126619052,32,FLEN)
NAN_BOXED(5545283,32,FLEN)
NAN_BOXED(452976640,32,FLEN)
NAN_BOXED(2126619052,32,FLEN)
NAN_BOXED(5545283,32,FLEN)
NAN_BOXED(452980736,32,FLEN)
NAN_BOXED(2126619052,32,FLEN)
NAN_BOXED(5545283,32,FLEN)
NAN_BOXED(452982784,32,FLEN)
NAN_BOXED(2126619052,32,FLEN)
NAN_BOXED(5545283,32,FLEN)
NAN_BOXED(452983808,32,FLEN)
NAN_BOXED(2126619052,32,FLEN)
NAN_BOXED(5545283,32,FLEN)
NAN_BOXED(452984320,32,FLEN)
NAN_BOXED(2126619052,32,FLEN)
NAN_BOXED(5545283,32,FLEN)
NAN_BOXED(452984576,32,FLEN)
NAN_BOXED(2126619052,32,FLEN)
NAN_BOXED(5545283,32,FLEN)
NAN_BOXED(452984704,32,FLEN)
NAN_BOXED(2126619052,32,FLEN)
NAN_BOXED(5545283,32,FLEN)
NAN_BOXED(452984768,32,FLEN)
NAN_BOXED(2126619052,32,FLEN)
NAN_BOXED(5545283,32,FLEN)
NAN_BOXED(452984800,32,FLEN)
NAN_BOXED(2126619052,32,FLEN)
NAN_BOXED(5545283,32,FLEN)
NAN_BOXED(452984816,32,FLEN)
NAN_BOXED(2126619052,32,FLEN)
NAN_BOXED(5545283,32,FLEN)
NAN_BOXED(452984824,32,FLEN)
NAN_BOXED(2126619052,32,FLEN)
NAN_BOXED(5545283,32,FLEN)
NAN_BOXED(452984828,32,FLEN)
NAN_BOXED(2126619052,32,FLEN)
NAN_BOXED(5545283,32,FLEN)
NAN_BOXED(452984830,32,FLEN)
NAN_BOXED(2126619052,32,FLEN)
NAN_BOXED(5545283,32,FLEN)
NAN_BOXED(452984831,32,FLEN)
NAN_BOXED(2126619052,32,FLEN)
NAN_BOXED(5545283,32,FLEN)
NAN_BOXED(1065353217,32,FLEN)
NAN_BOXED(2126619052,32,FLEN)
NAN_BOXED(5545283,32,FLEN)
NAN_BOXED(1065353219,32,FLEN)
NAN_BOXED(2126619052,32,FLEN)
NAN_BOXED(5545283,32,FLEN)
NAN_BOXED(1065353223,32,FLEN)
NAN_BOXED(2126619052,32,FLEN)
NAN_BOXED(5545283,32,FLEN)
NAN_BOXED(1067030937,32,FLEN)
NAN_BOXED(2126619052,32,FLEN)
NAN_BOXED(5545283,32,FLEN)
NAN_BOXED(1067749961,32,FLEN)
NAN_BOXED(2126619052,32,FLEN)
NAN_BOXED(5545283,32,FLEN)
NAN_BOXED(1068708659,32,FLEN)
NAN_BOXED(2126619052,32,FLEN)
NAN_BOXED(5545283,32,FLEN)
NAN_BOXED(1068948333,32,FLEN)
NAN_BOXED(2126619052,32,FLEN)
NAN_BOXED(5545283,32,FLEN)
NAN_BOXED(1069267899,32,FLEN)
NAN_BOXED(2126619052,32,FLEN)
NAN_BOXED(5545283,32,FLEN)
NAN_BOXED(1069827140,32,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
