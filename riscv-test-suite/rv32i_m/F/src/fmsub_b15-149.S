
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 14:18:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32F/fmsub.s.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.s instruction of the RISC-V RV32F_Zicsr,RV32FD_Zicsr,RV64F_Zicsr,RV64FD_Zicsr extension for the fmsub_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF_Zicsr,RV32IFD_Zicsr,RV64IF_Zicsr,RV64IFD_Zicsr,RV32EF_Zicsr,RV32EFD_Zicsr,RV64EF_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fmsub_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*F.*);def TEST_CASE_1=True;",fmsub_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_18944:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43e7e5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x15 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3e7e5; op2val:0x0;
op3val:0xafffffc; valaddr_reg:x3; val_offset:56832*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56832*0 + 3*148*FLEN/8, x4, x1, x2)

inst_18945:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43e7e5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x15 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3e7e5; op2val:0x0;
op3val:0xafffffe; valaddr_reg:x3; val_offset:56835*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56835*0 + 3*148*FLEN/8, x4, x1, x2)

inst_18946:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43e7e5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x15 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3e7e5; op2val:0x0;
op3val:0xaffffff; valaddr_reg:x3; val_offset:56838*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56838*0 + 3*148*FLEN/8, x4, x1, x2)

inst_18947:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43ed0a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3ed0a; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:56841*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56841*0 + 3*148*FLEN/8, x4, x1, x2)

inst_18948:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43ed0a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3ed0a; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:56844*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56844*0 + 3*148*FLEN/8, x4, x1, x2)

inst_18949:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43ed0a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3ed0a; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:56847*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56847*0 + 3*148*FLEN/8, x4, x1, x2)

inst_18950:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43ed0a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3ed0a; op2val:0x0;
op3val:0x199999; valaddr_reg:x3; val_offset:56850*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56850*0 + 3*148*FLEN/8, x4, x1, x2)

inst_18951:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43ed0a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3ed0a; op2val:0x0;
op3val:0x249249; valaddr_reg:x3; val_offset:56853*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56853*0 + 3*148*FLEN/8, x4, x1, x2)

inst_18952:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43ed0a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3ed0a; op2val:0x0;
op3val:0x333333; valaddr_reg:x3; val_offset:56856*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56856*0 + 3*148*FLEN/8, x4, x1, x2)

inst_18953:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43ed0a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3ed0a; op2val:0x0;
op3val:0x36db6d; valaddr_reg:x3; val_offset:56859*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56859*0 + 3*148*FLEN/8, x4, x1, x2)

inst_18954:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43ed0a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3ed0a; op2val:0x0;
op3val:0x3bbbbb; valaddr_reg:x3; val_offset:56862*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56862*0 + 3*148*FLEN/8, x4, x1, x2)

inst_18955:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43ed0a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3ed0a; op2val:0x0;
op3val:0x444444; valaddr_reg:x3; val_offset:56865*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56865*0 + 3*148*FLEN/8, x4, x1, x2)

inst_18956:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43ed0a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3ed0a; op2val:0x0;
op3val:0x4ccccc; valaddr_reg:x3; val_offset:56868*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56868*0 + 3*148*FLEN/8, x4, x1, x2)

inst_18957:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43ed0a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3ed0a; op2val:0x0;
op3val:0x5b6db6; valaddr_reg:x3; val_offset:56871*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56871*0 + 3*148*FLEN/8, x4, x1, x2)

inst_18958:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43ed0a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3ed0a; op2val:0x0;
op3val:0x666666; valaddr_reg:x3; val_offset:56874*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56874*0 + 3*148*FLEN/8, x4, x1, x2)

inst_18959:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43ed0a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3ed0a; op2val:0x0;
op3val:0x6db6db; valaddr_reg:x3; val_offset:56877*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56877*0 + 3*148*FLEN/8, x4, x1, x2)

inst_18960:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43ed0a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3ed0a; op2val:0x0;
op3val:0x7ffff8; valaddr_reg:x3; val_offset:56880*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56880*0 + 3*148*FLEN/8, x4, x1, x2)

inst_18961:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43ed0a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3ed0a; op2val:0x0;
op3val:0x7ffffc; valaddr_reg:x3; val_offset:56883*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56883*0 + 3*148*FLEN/8, x4, x1, x2)

inst_18962:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43ed0a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3ed0a; op2val:0x0;
op3val:0x7ffffe; valaddr_reg:x3; val_offset:56886*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56886*0 + 3*148*FLEN/8, x4, x1, x2)

inst_18963:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43ed0a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3ed0a; op2val:0x0;
op3val:0xe800000; valaddr_reg:x3; val_offset:56889*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56889*0 + 3*148*FLEN/8, x4, x1, x2)

inst_18964:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43ed0a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3ed0a; op2val:0x0;
op3val:0xe800001; valaddr_reg:x3; val_offset:56892*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56892*0 + 3*148*FLEN/8, x4, x1, x2)

inst_18965:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43ed0a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3ed0a; op2val:0x0;
op3val:0xe800003; valaddr_reg:x3; val_offset:56895*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56895*0 + 3*148*FLEN/8, x4, x1, x2)

inst_18966:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43ed0a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3ed0a; op2val:0x0;
op3val:0xe800007; valaddr_reg:x3; val_offset:56898*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56898*0 + 3*148*FLEN/8, x4, x1, x2)

inst_18967:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43ed0a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3ed0a; op2val:0x0;
op3val:0xe80000f; valaddr_reg:x3; val_offset:56901*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56901*0 + 3*148*FLEN/8, x4, x1, x2)

inst_18968:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43ed0a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3ed0a; op2val:0x0;
op3val:0xe80001f; valaddr_reg:x3; val_offset:56904*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56904*0 + 3*148*FLEN/8, x4, x1, x2)

inst_18969:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43ed0a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3ed0a; op2val:0x0;
op3val:0xe80003f; valaddr_reg:x3; val_offset:56907*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56907*0 + 3*148*FLEN/8, x4, x1, x2)

inst_18970:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43ed0a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3ed0a; op2val:0x0;
op3val:0xe80007f; valaddr_reg:x3; val_offset:56910*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56910*0 + 3*148*FLEN/8, x4, x1, x2)

inst_18971:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43ed0a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3ed0a; op2val:0x0;
op3val:0xe8000ff; valaddr_reg:x3; val_offset:56913*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56913*0 + 3*148*FLEN/8, x4, x1, x2)

inst_18972:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43ed0a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3ed0a; op2val:0x0;
op3val:0xe8001ff; valaddr_reg:x3; val_offset:56916*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56916*0 + 3*148*FLEN/8, x4, x1, x2)

inst_18973:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43ed0a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3ed0a; op2val:0x0;
op3val:0xe8003ff; valaddr_reg:x3; val_offset:56919*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56919*0 + 3*148*FLEN/8, x4, x1, x2)

inst_18974:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43ed0a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3ed0a; op2val:0x0;
op3val:0xe8007ff; valaddr_reg:x3; val_offset:56922*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56922*0 + 3*148*FLEN/8, x4, x1, x2)

inst_18975:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43ed0a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3ed0a; op2val:0x0;
op3val:0xe800fff; valaddr_reg:x3; val_offset:56925*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56925*0 + 3*148*FLEN/8, x4, x1, x2)

inst_18976:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43ed0a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3ed0a; op2val:0x0;
op3val:0xe801fff; valaddr_reg:x3; val_offset:56928*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56928*0 + 3*148*FLEN/8, x4, x1, x2)

inst_18977:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43ed0a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3ed0a; op2val:0x0;
op3val:0xe803fff; valaddr_reg:x3; val_offset:56931*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56931*0 + 3*148*FLEN/8, x4, x1, x2)

inst_18978:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43ed0a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3ed0a; op2val:0x0;
op3val:0xe807fff; valaddr_reg:x3; val_offset:56934*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56934*0 + 3*148*FLEN/8, x4, x1, x2)

inst_18979:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43ed0a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3ed0a; op2val:0x0;
op3val:0xe80ffff; valaddr_reg:x3; val_offset:56937*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56937*0 + 3*148*FLEN/8, x4, x1, x2)

inst_18980:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43ed0a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3ed0a; op2val:0x0;
op3val:0xe81ffff; valaddr_reg:x3; val_offset:56940*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56940*0 + 3*148*FLEN/8, x4, x1, x2)

inst_18981:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43ed0a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3ed0a; op2val:0x0;
op3val:0xe83ffff; valaddr_reg:x3; val_offset:56943*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56943*0 + 3*148*FLEN/8, x4, x1, x2)

inst_18982:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43ed0a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3ed0a; op2val:0x0;
op3val:0xe87ffff; valaddr_reg:x3; val_offset:56946*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56946*0 + 3*148*FLEN/8, x4, x1, x2)

inst_18983:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43ed0a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3ed0a; op2val:0x0;
op3val:0xe8fffff; valaddr_reg:x3; val_offset:56949*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56949*0 + 3*148*FLEN/8, x4, x1, x2)

inst_18984:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43ed0a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3ed0a; op2val:0x0;
op3val:0xe9fffff; valaddr_reg:x3; val_offset:56952*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56952*0 + 3*148*FLEN/8, x4, x1, x2)

inst_18985:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43ed0a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3ed0a; op2val:0x0;
op3val:0xebfffff; valaddr_reg:x3; val_offset:56955*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56955*0 + 3*148*FLEN/8, x4, x1, x2)

inst_18986:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43ed0a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3ed0a; op2val:0x0;
op3val:0xec00000; valaddr_reg:x3; val_offset:56958*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56958*0 + 3*148*FLEN/8, x4, x1, x2)

inst_18987:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43ed0a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3ed0a; op2val:0x0;
op3val:0xee00000; valaddr_reg:x3; val_offset:56961*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56961*0 + 3*148*FLEN/8, x4, x1, x2)

inst_18988:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43ed0a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3ed0a; op2val:0x0;
op3val:0xef00000; valaddr_reg:x3; val_offset:56964*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56964*0 + 3*148*FLEN/8, x4, x1, x2)

inst_18989:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43ed0a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3ed0a; op2val:0x0;
op3val:0xef80000; valaddr_reg:x3; val_offset:56967*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56967*0 + 3*148*FLEN/8, x4, x1, x2)

inst_18990:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43ed0a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3ed0a; op2val:0x0;
op3val:0xefc0000; valaddr_reg:x3; val_offset:56970*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56970*0 + 3*148*FLEN/8, x4, x1, x2)

inst_18991:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43ed0a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3ed0a; op2val:0x0;
op3val:0xefe0000; valaddr_reg:x3; val_offset:56973*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56973*0 + 3*148*FLEN/8, x4, x1, x2)

inst_18992:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43ed0a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3ed0a; op2val:0x0;
op3val:0xeff0000; valaddr_reg:x3; val_offset:56976*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56976*0 + 3*148*FLEN/8, x4, x1, x2)

inst_18993:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43ed0a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3ed0a; op2val:0x0;
op3val:0xeff8000; valaddr_reg:x3; val_offset:56979*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56979*0 + 3*148*FLEN/8, x4, x1, x2)

inst_18994:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43ed0a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3ed0a; op2val:0x0;
op3val:0xeffc000; valaddr_reg:x3; val_offset:56982*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56982*0 + 3*148*FLEN/8, x4, x1, x2)

inst_18995:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43ed0a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3ed0a; op2val:0x0;
op3val:0xeffe000; valaddr_reg:x3; val_offset:56985*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56985*0 + 3*148*FLEN/8, x4, x1, x2)

inst_18996:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43ed0a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3ed0a; op2val:0x0;
op3val:0xefff000; valaddr_reg:x3; val_offset:56988*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56988*0 + 3*148*FLEN/8, x4, x1, x2)

inst_18997:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43ed0a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3ed0a; op2val:0x0;
op3val:0xefff800; valaddr_reg:x3; val_offset:56991*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56991*0 + 3*148*FLEN/8, x4, x1, x2)

inst_18998:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43ed0a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3ed0a; op2val:0x0;
op3val:0xefffc00; valaddr_reg:x3; val_offset:56994*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56994*0 + 3*148*FLEN/8, x4, x1, x2)

inst_18999:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43ed0a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3ed0a; op2val:0x0;
op3val:0xefffe00; valaddr_reg:x3; val_offset:56997*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56997*0 + 3*148*FLEN/8, x4, x1, x2)

inst_19000:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43ed0a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3ed0a; op2val:0x0;
op3val:0xeffff00; valaddr_reg:x3; val_offset:57000*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57000*0 + 3*148*FLEN/8, x4, x1, x2)

inst_19001:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43ed0a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3ed0a; op2val:0x0;
op3val:0xeffff80; valaddr_reg:x3; val_offset:57003*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57003*0 + 3*148*FLEN/8, x4, x1, x2)

inst_19002:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43ed0a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3ed0a; op2val:0x0;
op3val:0xeffffc0; valaddr_reg:x3; val_offset:57006*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57006*0 + 3*148*FLEN/8, x4, x1, x2)

inst_19003:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43ed0a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3ed0a; op2val:0x0;
op3val:0xeffffe0; valaddr_reg:x3; val_offset:57009*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57009*0 + 3*148*FLEN/8, x4, x1, x2)

inst_19004:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43ed0a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3ed0a; op2val:0x0;
op3val:0xefffff0; valaddr_reg:x3; val_offset:57012*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57012*0 + 3*148*FLEN/8, x4, x1, x2)

inst_19005:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43ed0a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3ed0a; op2val:0x0;
op3val:0xefffff8; valaddr_reg:x3; val_offset:57015*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57015*0 + 3*148*FLEN/8, x4, x1, x2)

inst_19006:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43ed0a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3ed0a; op2val:0x0;
op3val:0xefffffc; valaddr_reg:x3; val_offset:57018*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57018*0 + 3*148*FLEN/8, x4, x1, x2)

inst_19007:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43ed0a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3ed0a; op2val:0x0;
op3val:0xefffffe; valaddr_reg:x3; val_offset:57021*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57021*0 + 3*148*FLEN/8, x4, x1, x2)

inst_19008:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43ed0a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3ed0a; op2val:0x0;
op3val:0xeffffff; valaddr_reg:x3; val_offset:57024*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57024*0 + 3*148*FLEN/8, x4, x1, x2)

inst_19009:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x443686 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x27008f and fs3 == 1 and fe3 == 0xbe and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec43686; op2val:0xc027008f;
op3val:0xdf000000; valaddr_reg:x3; val_offset:57027*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57027*0 + 3*148*FLEN/8, x4, x1, x2)

inst_19010:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x443686 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x27008f and fs3 == 1 and fe3 == 0xbe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec43686; op2val:0xc027008f;
op3val:0xdf000001; valaddr_reg:x3; val_offset:57030*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57030*0 + 3*148*FLEN/8, x4, x1, x2)

inst_19011:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x443686 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x27008f and fs3 == 1 and fe3 == 0xbe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec43686; op2val:0xc027008f;
op3val:0xdf000003; valaddr_reg:x3; val_offset:57033*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57033*0 + 3*148*FLEN/8, x4, x1, x2)

inst_19012:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x443686 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x27008f and fs3 == 1 and fe3 == 0xbe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec43686; op2val:0xc027008f;
op3val:0xdf000007; valaddr_reg:x3; val_offset:57036*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57036*0 + 3*148*FLEN/8, x4, x1, x2)

inst_19013:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x443686 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x27008f and fs3 == 1 and fe3 == 0xbe and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec43686; op2val:0xc027008f;
op3val:0xdf00000f; valaddr_reg:x3; val_offset:57039*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57039*0 + 3*148*FLEN/8, x4, x1, x2)

inst_19014:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x443686 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x27008f and fs3 == 1 and fe3 == 0xbe and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec43686; op2val:0xc027008f;
op3val:0xdf00001f; valaddr_reg:x3; val_offset:57042*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57042*0 + 3*148*FLEN/8, x4, x1, x2)

inst_19015:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x443686 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x27008f and fs3 == 1 and fe3 == 0xbe and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec43686; op2val:0xc027008f;
op3val:0xdf00003f; valaddr_reg:x3; val_offset:57045*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57045*0 + 3*148*FLEN/8, x4, x1, x2)

inst_19016:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x443686 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x27008f and fs3 == 1 and fe3 == 0xbe and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec43686; op2val:0xc027008f;
op3val:0xdf00007f; valaddr_reg:x3; val_offset:57048*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57048*0 + 3*148*FLEN/8, x4, x1, x2)

inst_19017:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x443686 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x27008f and fs3 == 1 and fe3 == 0xbe and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec43686; op2val:0xc027008f;
op3val:0xdf0000ff; valaddr_reg:x3; val_offset:57051*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57051*0 + 3*148*FLEN/8, x4, x1, x2)

inst_19018:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x443686 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x27008f and fs3 == 1 and fe3 == 0xbe and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec43686; op2val:0xc027008f;
op3val:0xdf0001ff; valaddr_reg:x3; val_offset:57054*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57054*0 + 3*148*FLEN/8, x4, x1, x2)

inst_19019:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x443686 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x27008f and fs3 == 1 and fe3 == 0xbe and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec43686; op2val:0xc027008f;
op3val:0xdf0003ff; valaddr_reg:x3; val_offset:57057*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57057*0 + 3*148*FLEN/8, x4, x1, x2)

inst_19020:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x443686 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x27008f and fs3 == 1 and fe3 == 0xbe and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec43686; op2val:0xc027008f;
op3val:0xdf0007ff; valaddr_reg:x3; val_offset:57060*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57060*0 + 3*148*FLEN/8, x4, x1, x2)

inst_19021:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x443686 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x27008f and fs3 == 1 and fe3 == 0xbe and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec43686; op2val:0xc027008f;
op3val:0xdf000fff; valaddr_reg:x3; val_offset:57063*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57063*0 + 3*148*FLEN/8, x4, x1, x2)

inst_19022:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x443686 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x27008f and fs3 == 1 and fe3 == 0xbe and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec43686; op2val:0xc027008f;
op3val:0xdf001fff; valaddr_reg:x3; val_offset:57066*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57066*0 + 3*148*FLEN/8, x4, x1, x2)

inst_19023:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x443686 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x27008f and fs3 == 1 and fe3 == 0xbe and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec43686; op2val:0xc027008f;
op3val:0xdf003fff; valaddr_reg:x3; val_offset:57069*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57069*0 + 3*148*FLEN/8, x4, x1, x2)

inst_19024:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x443686 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x27008f and fs3 == 1 and fe3 == 0xbe and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec43686; op2val:0xc027008f;
op3val:0xdf007fff; valaddr_reg:x3; val_offset:57072*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57072*0 + 3*148*FLEN/8, x4, x1, x2)

inst_19025:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x443686 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x27008f and fs3 == 1 and fe3 == 0xbe and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec43686; op2val:0xc027008f;
op3val:0xdf00ffff; valaddr_reg:x3; val_offset:57075*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57075*0 + 3*148*FLEN/8, x4, x1, x2)

inst_19026:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x443686 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x27008f and fs3 == 1 and fe3 == 0xbe and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec43686; op2val:0xc027008f;
op3val:0xdf01ffff; valaddr_reg:x3; val_offset:57078*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57078*0 + 3*148*FLEN/8, x4, x1, x2)

inst_19027:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x443686 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x27008f and fs3 == 1 and fe3 == 0xbe and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec43686; op2val:0xc027008f;
op3val:0xdf03ffff; valaddr_reg:x3; val_offset:57081*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57081*0 + 3*148*FLEN/8, x4, x1, x2)

inst_19028:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x443686 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x27008f and fs3 == 1 and fe3 == 0xbe and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec43686; op2val:0xc027008f;
op3val:0xdf07ffff; valaddr_reg:x3; val_offset:57084*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57084*0 + 3*148*FLEN/8, x4, x1, x2)

inst_19029:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x443686 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x27008f and fs3 == 1 and fe3 == 0xbe and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec43686; op2val:0xc027008f;
op3val:0xdf0fffff; valaddr_reg:x3; val_offset:57087*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57087*0 + 3*148*FLEN/8, x4, x1, x2)

inst_19030:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x443686 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x27008f and fs3 == 1 and fe3 == 0xbe and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec43686; op2val:0xc027008f;
op3val:0xdf1fffff; valaddr_reg:x3; val_offset:57090*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57090*0 + 3*148*FLEN/8, x4, x1, x2)

inst_19031:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x443686 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x27008f and fs3 == 1 and fe3 == 0xbe and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec43686; op2val:0xc027008f;
op3val:0xdf3fffff; valaddr_reg:x3; val_offset:57093*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57093*0 + 3*148*FLEN/8, x4, x1, x2)

inst_19032:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x443686 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x27008f and fs3 == 1 and fe3 == 0xbe and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec43686; op2val:0xc027008f;
op3val:0xdf400000; valaddr_reg:x3; val_offset:57096*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57096*0 + 3*148*FLEN/8, x4, x1, x2)

inst_19033:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x443686 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x27008f and fs3 == 1 and fe3 == 0xbe and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec43686; op2val:0xc027008f;
op3val:0xdf600000; valaddr_reg:x3; val_offset:57099*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57099*0 + 3*148*FLEN/8, x4, x1, x2)

inst_19034:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x443686 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x27008f and fs3 == 1 and fe3 == 0xbe and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec43686; op2val:0xc027008f;
op3val:0xdf700000; valaddr_reg:x3; val_offset:57102*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57102*0 + 3*148*FLEN/8, x4, x1, x2)

inst_19035:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x443686 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x27008f and fs3 == 1 and fe3 == 0xbe and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec43686; op2val:0xc027008f;
op3val:0xdf780000; valaddr_reg:x3; val_offset:57105*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57105*0 + 3*148*FLEN/8, x4, x1, x2)

inst_19036:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x443686 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x27008f and fs3 == 1 and fe3 == 0xbe and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec43686; op2val:0xc027008f;
op3val:0xdf7c0000; valaddr_reg:x3; val_offset:57108*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57108*0 + 3*148*FLEN/8, x4, x1, x2)

inst_19037:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x443686 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x27008f and fs3 == 1 and fe3 == 0xbe and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec43686; op2val:0xc027008f;
op3val:0xdf7e0000; valaddr_reg:x3; val_offset:57111*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57111*0 + 3*148*FLEN/8, x4, x1, x2)

inst_19038:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x443686 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x27008f and fs3 == 1 and fe3 == 0xbe and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec43686; op2val:0xc027008f;
op3val:0xdf7f0000; valaddr_reg:x3; val_offset:57114*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57114*0 + 3*148*FLEN/8, x4, x1, x2)

inst_19039:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x443686 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x27008f and fs3 == 1 and fe3 == 0xbe and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec43686; op2val:0xc027008f;
op3val:0xdf7f8000; valaddr_reg:x3; val_offset:57117*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57117*0 + 3*148*FLEN/8, x4, x1, x2)

inst_19040:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x443686 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x27008f and fs3 == 1 and fe3 == 0xbe and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec43686; op2val:0xc027008f;
op3val:0xdf7fc000; valaddr_reg:x3; val_offset:57120*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57120*0 + 3*148*FLEN/8, x4, x1, x2)

inst_19041:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x443686 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x27008f and fs3 == 1 and fe3 == 0xbe and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec43686; op2val:0xc027008f;
op3val:0xdf7fe000; valaddr_reg:x3; val_offset:57123*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57123*0 + 3*148*FLEN/8, x4, x1, x2)

inst_19042:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x443686 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x27008f and fs3 == 1 and fe3 == 0xbe and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec43686; op2val:0xc027008f;
op3val:0xdf7ff000; valaddr_reg:x3; val_offset:57126*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57126*0 + 3*148*FLEN/8, x4, x1, x2)

inst_19043:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x443686 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x27008f and fs3 == 1 and fe3 == 0xbe and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec43686; op2val:0xc027008f;
op3val:0xdf7ff800; valaddr_reg:x3; val_offset:57129*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57129*0 + 3*148*FLEN/8, x4, x1, x2)

inst_19044:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x443686 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x27008f and fs3 == 1 and fe3 == 0xbe and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec43686; op2val:0xc027008f;
op3val:0xdf7ffc00; valaddr_reg:x3; val_offset:57132*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57132*0 + 3*148*FLEN/8, x4, x1, x2)

inst_19045:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x443686 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x27008f and fs3 == 1 and fe3 == 0xbe and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec43686; op2val:0xc027008f;
op3val:0xdf7ffe00; valaddr_reg:x3; val_offset:57135*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57135*0 + 3*148*FLEN/8, x4, x1, x2)

inst_19046:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x443686 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x27008f and fs3 == 1 and fe3 == 0xbe and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec43686; op2val:0xc027008f;
op3val:0xdf7fff00; valaddr_reg:x3; val_offset:57138*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57138*0 + 3*148*FLEN/8, x4, x1, x2)

inst_19047:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x443686 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x27008f and fs3 == 1 and fe3 == 0xbe and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec43686; op2val:0xc027008f;
op3val:0xdf7fff80; valaddr_reg:x3; val_offset:57141*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57141*0 + 3*148*FLEN/8, x4, x1, x2)

inst_19048:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x443686 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x27008f and fs3 == 1 and fe3 == 0xbe and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec43686; op2val:0xc027008f;
op3val:0xdf7fffc0; valaddr_reg:x3; val_offset:57144*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57144*0 + 3*148*FLEN/8, x4, x1, x2)

inst_19049:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x443686 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x27008f and fs3 == 1 and fe3 == 0xbe and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec43686; op2val:0xc027008f;
op3val:0xdf7fffe0; valaddr_reg:x3; val_offset:57147*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57147*0 + 3*148*FLEN/8, x4, x1, x2)

inst_19050:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x443686 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x27008f and fs3 == 1 and fe3 == 0xbe and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec43686; op2val:0xc027008f;
op3val:0xdf7ffff0; valaddr_reg:x3; val_offset:57150*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57150*0 + 3*148*FLEN/8, x4, x1, x2)

inst_19051:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x443686 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x27008f and fs3 == 1 and fe3 == 0xbe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec43686; op2val:0xc027008f;
op3val:0xdf7ffff8; valaddr_reg:x3; val_offset:57153*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57153*0 + 3*148*FLEN/8, x4, x1, x2)

inst_19052:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x443686 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x27008f and fs3 == 1 and fe3 == 0xbe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec43686; op2val:0xc027008f;
op3val:0xdf7ffffc; valaddr_reg:x3; val_offset:57156*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57156*0 + 3*148*FLEN/8, x4, x1, x2)

inst_19053:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x443686 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x27008f and fs3 == 1 and fe3 == 0xbe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec43686; op2val:0xc027008f;
op3val:0xdf7ffffe; valaddr_reg:x3; val_offset:57159*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57159*0 + 3*148*FLEN/8, x4, x1, x2)

inst_19054:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x443686 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x27008f and fs3 == 1 and fe3 == 0xbe and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec43686; op2val:0xc027008f;
op3val:0xdf7fffff; valaddr_reg:x3; val_offset:57162*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57162*0 + 3*148*FLEN/8, x4, x1, x2)

inst_19055:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x443686 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x27008f and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec43686; op2val:0xc027008f;
op3val:0xff000001; valaddr_reg:x3; val_offset:57165*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57165*0 + 3*148*FLEN/8, x4, x1, x2)

inst_19056:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x443686 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x27008f and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec43686; op2val:0xc027008f;
op3val:0xff000003; valaddr_reg:x3; val_offset:57168*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57168*0 + 3*148*FLEN/8, x4, x1, x2)

inst_19057:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x443686 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x27008f and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec43686; op2val:0xc027008f;
op3val:0xff000007; valaddr_reg:x3; val_offset:57171*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57171*0 + 3*148*FLEN/8, x4, x1, x2)

inst_19058:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x443686 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x27008f and fs3 == 1 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec43686; op2val:0xc027008f;
op3val:0xff199999; valaddr_reg:x3; val_offset:57174*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57174*0 + 3*148*FLEN/8, x4, x1, x2)

inst_19059:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x443686 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x27008f and fs3 == 1 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec43686; op2val:0xc027008f;
op3val:0xff249249; valaddr_reg:x3; val_offset:57177*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57177*0 + 3*148*FLEN/8, x4, x1, x2)

inst_19060:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x443686 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x27008f and fs3 == 1 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec43686; op2val:0xc027008f;
op3val:0xff333333; valaddr_reg:x3; val_offset:57180*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57180*0 + 3*148*FLEN/8, x4, x1, x2)

inst_19061:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x443686 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x27008f and fs3 == 1 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec43686; op2val:0xc027008f;
op3val:0xff36db6d; valaddr_reg:x3; val_offset:57183*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57183*0 + 3*148*FLEN/8, x4, x1, x2)

inst_19062:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x443686 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x27008f and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec43686; op2val:0xc027008f;
op3val:0xff3bbbbb; valaddr_reg:x3; val_offset:57186*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57186*0 + 3*148*FLEN/8, x4, x1, x2)

inst_19063:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x443686 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x27008f and fs3 == 1 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec43686; op2val:0xc027008f;
op3val:0xff444444; valaddr_reg:x3; val_offset:57189*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57189*0 + 3*148*FLEN/8, x4, x1, x2)

inst_19064:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x443686 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x27008f and fs3 == 1 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec43686; op2val:0xc027008f;
op3val:0xff4ccccc; valaddr_reg:x3; val_offset:57192*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57192*0 + 3*148*FLEN/8, x4, x1, x2)

inst_19065:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x443686 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x27008f and fs3 == 1 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec43686; op2val:0xc027008f;
op3val:0xff5b6db6; valaddr_reg:x3; val_offset:57195*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57195*0 + 3*148*FLEN/8, x4, x1, x2)

inst_19066:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x443686 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x27008f and fs3 == 1 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec43686; op2val:0xc027008f;
op3val:0xff666666; valaddr_reg:x3; val_offset:57198*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57198*0 + 3*148*FLEN/8, x4, x1, x2)

inst_19067:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x443686 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x27008f and fs3 == 1 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec43686; op2val:0xc027008f;
op3val:0xff6db6db; valaddr_reg:x3; val_offset:57201*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57201*0 + 3*148*FLEN/8, x4, x1, x2)

inst_19068:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x443686 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x27008f and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec43686; op2val:0xc027008f;
op3val:0xff7ffff8; valaddr_reg:x3; val_offset:57204*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57204*0 + 3*148*FLEN/8, x4, x1, x2)

inst_19069:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x443686 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x27008f and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec43686; op2val:0xc027008f;
op3val:0xff7ffffc; valaddr_reg:x3; val_offset:57207*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57207*0 + 3*148*FLEN/8, x4, x1, x2)

inst_19070:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x443686 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x27008f and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec43686; op2val:0xc027008f;
op3val:0xff7ffffe; valaddr_reg:x3; val_offset:57210*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57210*0 + 3*148*FLEN/8, x4, x1, x2)

inst_19071:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x452952 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec52952; op2val:0x80000000;
op3val:0x80000001; valaddr_reg:x3; val_offset:57213*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57213*0 + 3*148*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(2126768101,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(184549372,32,FLEN)
NAN_BOXED(2126768101,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(184549374,32,FLEN)
NAN_BOXED(2126768101,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(184549375,32,FLEN)
NAN_BOXED(2126769418,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(2126769418,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3,32,FLEN)
NAN_BOXED(2126769418,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7,32,FLEN)
NAN_BOXED(2126769418,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1677721,32,FLEN)
NAN_BOXED(2126769418,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2396745,32,FLEN)
NAN_BOXED(2126769418,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3355443,32,FLEN)
NAN_BOXED(2126769418,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3595117,32,FLEN)
NAN_BOXED(2126769418,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3914683,32,FLEN)
NAN_BOXED(2126769418,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(4473924,32,FLEN)
NAN_BOXED(2126769418,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5033164,32,FLEN)
NAN_BOXED(2126769418,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5991862,32,FLEN)
NAN_BOXED(2126769418,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(6710886,32,FLEN)
NAN_BOXED(2126769418,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7190235,32,FLEN)
NAN_BOXED(2126769418,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388600,32,FLEN)
NAN_BOXED(2126769418,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388604,32,FLEN)
NAN_BOXED(2126769418,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388606,32,FLEN)
NAN_BOXED(2126769418,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(243269632,32,FLEN)
NAN_BOXED(2126769418,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(243269633,32,FLEN)
NAN_BOXED(2126769418,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(243269635,32,FLEN)
NAN_BOXED(2126769418,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(243269639,32,FLEN)
NAN_BOXED(2126769418,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(243269647,32,FLEN)
NAN_BOXED(2126769418,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(243269663,32,FLEN)
NAN_BOXED(2126769418,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(243269695,32,FLEN)
NAN_BOXED(2126769418,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(243269759,32,FLEN)
NAN_BOXED(2126769418,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(243269887,32,FLEN)
NAN_BOXED(2126769418,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(243270143,32,FLEN)
NAN_BOXED(2126769418,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(243270655,32,FLEN)
NAN_BOXED(2126769418,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(243271679,32,FLEN)
NAN_BOXED(2126769418,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(243273727,32,FLEN)
NAN_BOXED(2126769418,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(243277823,32,FLEN)
NAN_BOXED(2126769418,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(243286015,32,FLEN)
NAN_BOXED(2126769418,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(243302399,32,FLEN)
NAN_BOXED(2126769418,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(243335167,32,FLEN)
NAN_BOXED(2126769418,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(243400703,32,FLEN)
NAN_BOXED(2126769418,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(243531775,32,FLEN)
NAN_BOXED(2126769418,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(243793919,32,FLEN)
NAN_BOXED(2126769418,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(244318207,32,FLEN)
NAN_BOXED(2126769418,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(245366783,32,FLEN)
NAN_BOXED(2126769418,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(247463935,32,FLEN)
NAN_BOXED(2126769418,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(247463936,32,FLEN)
NAN_BOXED(2126769418,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(249561088,32,FLEN)
NAN_BOXED(2126769418,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(250609664,32,FLEN)
NAN_BOXED(2126769418,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(251133952,32,FLEN)
NAN_BOXED(2126769418,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(251396096,32,FLEN)
NAN_BOXED(2126769418,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(251527168,32,FLEN)
NAN_BOXED(2126769418,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(251592704,32,FLEN)
NAN_BOXED(2126769418,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(251625472,32,FLEN)
NAN_BOXED(2126769418,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(251641856,32,FLEN)
NAN_BOXED(2126769418,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(251650048,32,FLEN)
NAN_BOXED(2126769418,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(251654144,32,FLEN)
NAN_BOXED(2126769418,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(251656192,32,FLEN)
NAN_BOXED(2126769418,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(251657216,32,FLEN)
NAN_BOXED(2126769418,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(251657728,32,FLEN)
NAN_BOXED(2126769418,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(251657984,32,FLEN)
NAN_BOXED(2126769418,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(251658112,32,FLEN)
NAN_BOXED(2126769418,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(251658176,32,FLEN)
NAN_BOXED(2126769418,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(251658208,32,FLEN)
NAN_BOXED(2126769418,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(251658224,32,FLEN)
NAN_BOXED(2126769418,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(251658232,32,FLEN)
NAN_BOXED(2126769418,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(251658236,32,FLEN)
NAN_BOXED(2126769418,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(251658238,32,FLEN)
NAN_BOXED(2126769418,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(251658239,32,FLEN)
NAN_BOXED(2126788230,32,FLEN)
NAN_BOXED(3223781519,32,FLEN)
NAN_BOXED(3741319168,32,FLEN)
NAN_BOXED(2126788230,32,FLEN)
NAN_BOXED(3223781519,32,FLEN)
NAN_BOXED(3741319169,32,FLEN)
NAN_BOXED(2126788230,32,FLEN)
NAN_BOXED(3223781519,32,FLEN)
NAN_BOXED(3741319171,32,FLEN)
NAN_BOXED(2126788230,32,FLEN)
NAN_BOXED(3223781519,32,FLEN)
NAN_BOXED(3741319175,32,FLEN)
NAN_BOXED(2126788230,32,FLEN)
NAN_BOXED(3223781519,32,FLEN)
NAN_BOXED(3741319183,32,FLEN)
NAN_BOXED(2126788230,32,FLEN)
NAN_BOXED(3223781519,32,FLEN)
NAN_BOXED(3741319199,32,FLEN)
NAN_BOXED(2126788230,32,FLEN)
NAN_BOXED(3223781519,32,FLEN)
NAN_BOXED(3741319231,32,FLEN)
NAN_BOXED(2126788230,32,FLEN)
NAN_BOXED(3223781519,32,FLEN)
NAN_BOXED(3741319295,32,FLEN)
NAN_BOXED(2126788230,32,FLEN)
NAN_BOXED(3223781519,32,FLEN)
NAN_BOXED(3741319423,32,FLEN)
NAN_BOXED(2126788230,32,FLEN)
NAN_BOXED(3223781519,32,FLEN)
NAN_BOXED(3741319679,32,FLEN)
NAN_BOXED(2126788230,32,FLEN)
NAN_BOXED(3223781519,32,FLEN)
NAN_BOXED(3741320191,32,FLEN)
NAN_BOXED(2126788230,32,FLEN)
NAN_BOXED(3223781519,32,FLEN)
NAN_BOXED(3741321215,32,FLEN)
NAN_BOXED(2126788230,32,FLEN)
NAN_BOXED(3223781519,32,FLEN)
NAN_BOXED(3741323263,32,FLEN)
NAN_BOXED(2126788230,32,FLEN)
NAN_BOXED(3223781519,32,FLEN)
NAN_BOXED(3741327359,32,FLEN)
NAN_BOXED(2126788230,32,FLEN)
NAN_BOXED(3223781519,32,FLEN)
NAN_BOXED(3741335551,32,FLEN)
NAN_BOXED(2126788230,32,FLEN)
NAN_BOXED(3223781519,32,FLEN)
NAN_BOXED(3741351935,32,FLEN)
NAN_BOXED(2126788230,32,FLEN)
NAN_BOXED(3223781519,32,FLEN)
NAN_BOXED(3741384703,32,FLEN)
NAN_BOXED(2126788230,32,FLEN)
NAN_BOXED(3223781519,32,FLEN)
NAN_BOXED(3741450239,32,FLEN)
NAN_BOXED(2126788230,32,FLEN)
NAN_BOXED(3223781519,32,FLEN)
NAN_BOXED(3741581311,32,FLEN)
NAN_BOXED(2126788230,32,FLEN)
NAN_BOXED(3223781519,32,FLEN)
NAN_BOXED(3741843455,32,FLEN)
NAN_BOXED(2126788230,32,FLEN)
NAN_BOXED(3223781519,32,FLEN)
NAN_BOXED(3742367743,32,FLEN)
NAN_BOXED(2126788230,32,FLEN)
NAN_BOXED(3223781519,32,FLEN)
NAN_BOXED(3743416319,32,FLEN)
NAN_BOXED(2126788230,32,FLEN)
NAN_BOXED(3223781519,32,FLEN)
NAN_BOXED(3745513471,32,FLEN)
NAN_BOXED(2126788230,32,FLEN)
NAN_BOXED(3223781519,32,FLEN)
NAN_BOXED(3745513472,32,FLEN)
NAN_BOXED(2126788230,32,FLEN)
NAN_BOXED(3223781519,32,FLEN)
NAN_BOXED(3747610624,32,FLEN)
NAN_BOXED(2126788230,32,FLEN)
NAN_BOXED(3223781519,32,FLEN)
NAN_BOXED(3748659200,32,FLEN)
NAN_BOXED(2126788230,32,FLEN)
NAN_BOXED(3223781519,32,FLEN)
NAN_BOXED(3749183488,32,FLEN)
NAN_BOXED(2126788230,32,FLEN)
NAN_BOXED(3223781519,32,FLEN)
NAN_BOXED(3749445632,32,FLEN)
NAN_BOXED(2126788230,32,FLEN)
NAN_BOXED(3223781519,32,FLEN)
NAN_BOXED(3749576704,32,FLEN)
NAN_BOXED(2126788230,32,FLEN)
NAN_BOXED(3223781519,32,FLEN)
NAN_BOXED(3749642240,32,FLEN)
NAN_BOXED(2126788230,32,FLEN)
NAN_BOXED(3223781519,32,FLEN)
NAN_BOXED(3749675008,32,FLEN)
NAN_BOXED(2126788230,32,FLEN)
NAN_BOXED(3223781519,32,FLEN)
NAN_BOXED(3749691392,32,FLEN)
NAN_BOXED(2126788230,32,FLEN)
NAN_BOXED(3223781519,32,FLEN)
NAN_BOXED(3749699584,32,FLEN)
NAN_BOXED(2126788230,32,FLEN)
NAN_BOXED(3223781519,32,FLEN)
NAN_BOXED(3749703680,32,FLEN)
NAN_BOXED(2126788230,32,FLEN)
NAN_BOXED(3223781519,32,FLEN)
NAN_BOXED(3749705728,32,FLEN)
NAN_BOXED(2126788230,32,FLEN)
NAN_BOXED(3223781519,32,FLEN)
NAN_BOXED(3749706752,32,FLEN)
NAN_BOXED(2126788230,32,FLEN)
NAN_BOXED(3223781519,32,FLEN)
NAN_BOXED(3749707264,32,FLEN)
NAN_BOXED(2126788230,32,FLEN)
NAN_BOXED(3223781519,32,FLEN)
NAN_BOXED(3749707520,32,FLEN)
NAN_BOXED(2126788230,32,FLEN)
NAN_BOXED(3223781519,32,FLEN)
NAN_BOXED(3749707648,32,FLEN)
NAN_BOXED(2126788230,32,FLEN)
NAN_BOXED(3223781519,32,FLEN)
NAN_BOXED(3749707712,32,FLEN)
NAN_BOXED(2126788230,32,FLEN)
NAN_BOXED(3223781519,32,FLEN)
NAN_BOXED(3749707744,32,FLEN)
NAN_BOXED(2126788230,32,FLEN)
NAN_BOXED(3223781519,32,FLEN)
NAN_BOXED(3749707760,32,FLEN)
NAN_BOXED(2126788230,32,FLEN)
NAN_BOXED(3223781519,32,FLEN)
NAN_BOXED(3749707768,32,FLEN)
NAN_BOXED(2126788230,32,FLEN)
NAN_BOXED(3223781519,32,FLEN)
NAN_BOXED(3749707772,32,FLEN)
NAN_BOXED(2126788230,32,FLEN)
NAN_BOXED(3223781519,32,FLEN)
NAN_BOXED(3749707774,32,FLEN)
NAN_BOXED(2126788230,32,FLEN)
NAN_BOXED(3223781519,32,FLEN)
NAN_BOXED(3749707775,32,FLEN)
NAN_BOXED(2126788230,32,FLEN)
NAN_BOXED(3223781519,32,FLEN)
NAN_BOXED(4278190081,32,FLEN)
NAN_BOXED(2126788230,32,FLEN)
NAN_BOXED(3223781519,32,FLEN)
NAN_BOXED(4278190083,32,FLEN)
NAN_BOXED(2126788230,32,FLEN)
NAN_BOXED(3223781519,32,FLEN)
NAN_BOXED(4278190087,32,FLEN)
NAN_BOXED(2126788230,32,FLEN)
NAN_BOXED(3223781519,32,FLEN)
NAN_BOXED(4279867801,32,FLEN)
NAN_BOXED(2126788230,32,FLEN)
NAN_BOXED(3223781519,32,FLEN)
NAN_BOXED(4280586825,32,FLEN)
NAN_BOXED(2126788230,32,FLEN)
NAN_BOXED(3223781519,32,FLEN)
NAN_BOXED(4281545523,32,FLEN)
NAN_BOXED(2126788230,32,FLEN)
NAN_BOXED(3223781519,32,FLEN)
NAN_BOXED(4281785197,32,FLEN)
NAN_BOXED(2126788230,32,FLEN)
NAN_BOXED(3223781519,32,FLEN)
NAN_BOXED(4282104763,32,FLEN)
NAN_BOXED(2126788230,32,FLEN)
NAN_BOXED(3223781519,32,FLEN)
NAN_BOXED(4282664004,32,FLEN)
NAN_BOXED(2126788230,32,FLEN)
NAN_BOXED(3223781519,32,FLEN)
NAN_BOXED(4283223244,32,FLEN)
NAN_BOXED(2126788230,32,FLEN)
NAN_BOXED(3223781519,32,FLEN)
NAN_BOXED(4284181942,32,FLEN)
NAN_BOXED(2126788230,32,FLEN)
NAN_BOXED(3223781519,32,FLEN)
NAN_BOXED(4284900966,32,FLEN)
NAN_BOXED(2126788230,32,FLEN)
NAN_BOXED(3223781519,32,FLEN)
NAN_BOXED(4285380315,32,FLEN)
NAN_BOXED(2126788230,32,FLEN)
NAN_BOXED(3223781519,32,FLEN)
NAN_BOXED(4286578680,32,FLEN)
NAN_BOXED(2126788230,32,FLEN)
NAN_BOXED(3223781519,32,FLEN)
NAN_BOXED(4286578684,32,FLEN)
NAN_BOXED(2126788230,32,FLEN)
NAN_BOXED(3223781519,32,FLEN)
NAN_BOXED(4286578686,32,FLEN)
NAN_BOXED(2126850386,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
