
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 14:18:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32F/fmsub.s.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.s instruction of the RISC-V RV32F_Zicsr,RV32FD_Zicsr,RV64F_Zicsr,RV64FD_Zicsr extension for the fmsub_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF_Zicsr,RV32IFD_Zicsr,RV64IF_Zicsr,RV64IFD_Zicsr,RV32EF_Zicsr,RV32EFD_Zicsr,RV64EF_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fmsub_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*F.*);def TEST_CASE_1=True;",fmsub_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_19200:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x465625 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec65625; op2val:0x0;
op3val:0x333333; valaddr_reg:x3; val_offset:57600*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57600*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19201:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x465625 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec65625; op2val:0x0;
op3val:0x36db6d; valaddr_reg:x3; val_offset:57603*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57603*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19202:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x465625 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec65625; op2val:0x0;
op3val:0x3bbbbb; valaddr_reg:x3; val_offset:57606*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57606*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19203:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x465625 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec65625; op2val:0x0;
op3val:0x444444; valaddr_reg:x3; val_offset:57609*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57609*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19204:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x465625 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec65625; op2val:0x0;
op3val:0x4ccccc; valaddr_reg:x3; val_offset:57612*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57612*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19205:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x465625 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec65625; op2val:0x0;
op3val:0x5b6db6; valaddr_reg:x3; val_offset:57615*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57615*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19206:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x465625 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec65625; op2val:0x0;
op3val:0x666666; valaddr_reg:x3; val_offset:57618*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57618*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19207:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x465625 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec65625; op2val:0x0;
op3val:0x6db6db; valaddr_reg:x3; val_offset:57621*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57621*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19208:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x465625 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec65625; op2val:0x0;
op3val:0x7ffff8; valaddr_reg:x3; val_offset:57624*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57624*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19209:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x465625 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec65625; op2val:0x0;
op3val:0x7ffffc; valaddr_reg:x3; val_offset:57627*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57627*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19210:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x465625 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec65625; op2val:0x0;
op3val:0x7ffffe; valaddr_reg:x3; val_offset:57630*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57630*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19211:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x465625 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec65625; op2val:0x0;
op3val:0x2800000; valaddr_reg:x3; val_offset:57633*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57633*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19212:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x465625 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec65625; op2val:0x0;
op3val:0x2800001; valaddr_reg:x3; val_offset:57636*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57636*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19213:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x465625 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec65625; op2val:0x0;
op3val:0x2800003; valaddr_reg:x3; val_offset:57639*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57639*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19214:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x465625 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec65625; op2val:0x0;
op3val:0x2800007; valaddr_reg:x3; val_offset:57642*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57642*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19215:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x465625 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec65625; op2val:0x0;
op3val:0x280000f; valaddr_reg:x3; val_offset:57645*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57645*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19216:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x465625 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec65625; op2val:0x0;
op3val:0x280001f; valaddr_reg:x3; val_offset:57648*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57648*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19217:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x465625 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec65625; op2val:0x0;
op3val:0x280003f; valaddr_reg:x3; val_offset:57651*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57651*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19218:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x465625 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec65625; op2val:0x0;
op3val:0x280007f; valaddr_reg:x3; val_offset:57654*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57654*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19219:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x465625 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec65625; op2val:0x0;
op3val:0x28000ff; valaddr_reg:x3; val_offset:57657*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57657*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19220:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x465625 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec65625; op2val:0x0;
op3val:0x28001ff; valaddr_reg:x3; val_offset:57660*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57660*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19221:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x465625 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec65625; op2val:0x0;
op3val:0x28003ff; valaddr_reg:x3; val_offset:57663*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57663*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19222:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x465625 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec65625; op2val:0x0;
op3val:0x28007ff; valaddr_reg:x3; val_offset:57666*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57666*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19223:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x465625 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec65625; op2val:0x0;
op3val:0x2800fff; valaddr_reg:x3; val_offset:57669*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57669*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19224:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x465625 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec65625; op2val:0x0;
op3val:0x2801fff; valaddr_reg:x3; val_offset:57672*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57672*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19225:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x465625 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec65625; op2val:0x0;
op3val:0x2803fff; valaddr_reg:x3; val_offset:57675*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57675*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19226:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x465625 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec65625; op2val:0x0;
op3val:0x2807fff; valaddr_reg:x3; val_offset:57678*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57678*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19227:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x465625 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec65625; op2val:0x0;
op3val:0x280ffff; valaddr_reg:x3; val_offset:57681*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57681*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19228:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x465625 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec65625; op2val:0x0;
op3val:0x281ffff; valaddr_reg:x3; val_offset:57684*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57684*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19229:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x465625 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec65625; op2val:0x0;
op3val:0x283ffff; valaddr_reg:x3; val_offset:57687*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57687*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19230:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x465625 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec65625; op2val:0x0;
op3val:0x287ffff; valaddr_reg:x3; val_offset:57690*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57690*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19231:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x465625 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec65625; op2val:0x0;
op3val:0x28fffff; valaddr_reg:x3; val_offset:57693*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57693*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19232:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x465625 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec65625; op2val:0x0;
op3val:0x29fffff; valaddr_reg:x3; val_offset:57696*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57696*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19233:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x465625 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec65625; op2val:0x0;
op3val:0x2bfffff; valaddr_reg:x3; val_offset:57699*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57699*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19234:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x465625 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec65625; op2val:0x0;
op3val:0x2c00000; valaddr_reg:x3; val_offset:57702*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57702*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19235:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x465625 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec65625; op2val:0x0;
op3val:0x2e00000; valaddr_reg:x3; val_offset:57705*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57705*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19236:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x465625 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec65625; op2val:0x0;
op3val:0x2f00000; valaddr_reg:x3; val_offset:57708*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57708*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19237:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x465625 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec65625; op2val:0x0;
op3val:0x2f80000; valaddr_reg:x3; val_offset:57711*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57711*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19238:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x465625 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec65625; op2val:0x0;
op3val:0x2fc0000; valaddr_reg:x3; val_offset:57714*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57714*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19239:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x465625 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec65625; op2val:0x0;
op3val:0x2fe0000; valaddr_reg:x3; val_offset:57717*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57717*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19240:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x465625 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec65625; op2val:0x0;
op3val:0x2ff0000; valaddr_reg:x3; val_offset:57720*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57720*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19241:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x465625 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec65625; op2val:0x0;
op3val:0x2ff8000; valaddr_reg:x3; val_offset:57723*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57723*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19242:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x465625 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec65625; op2val:0x0;
op3val:0x2ffc000; valaddr_reg:x3; val_offset:57726*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57726*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19243:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x465625 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec65625; op2val:0x0;
op3val:0x2ffe000; valaddr_reg:x3; val_offset:57729*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57729*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19244:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x465625 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec65625; op2val:0x0;
op3val:0x2fff000; valaddr_reg:x3; val_offset:57732*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57732*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19245:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x465625 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec65625; op2val:0x0;
op3val:0x2fff800; valaddr_reg:x3; val_offset:57735*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57735*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19246:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x465625 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec65625; op2val:0x0;
op3val:0x2fffc00; valaddr_reg:x3; val_offset:57738*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57738*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19247:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x465625 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec65625; op2val:0x0;
op3val:0x2fffe00; valaddr_reg:x3; val_offset:57741*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57741*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19248:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x465625 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec65625; op2val:0x0;
op3val:0x2ffff00; valaddr_reg:x3; val_offset:57744*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57744*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19249:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x465625 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec65625; op2val:0x0;
op3val:0x2ffff80; valaddr_reg:x3; val_offset:57747*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57747*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19250:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x465625 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec65625; op2val:0x0;
op3val:0x2ffffc0; valaddr_reg:x3; val_offset:57750*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57750*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19251:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x465625 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec65625; op2val:0x0;
op3val:0x2ffffe0; valaddr_reg:x3; val_offset:57753*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57753*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19252:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x465625 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec65625; op2val:0x0;
op3val:0x2fffff0; valaddr_reg:x3; val_offset:57756*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57756*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19253:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x465625 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec65625; op2val:0x0;
op3val:0x2fffff8; valaddr_reg:x3; val_offset:57759*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57759*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19254:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x465625 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec65625; op2val:0x0;
op3val:0x2fffffc; valaddr_reg:x3; val_offset:57762*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57762*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19255:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x465625 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec65625; op2val:0x0;
op3val:0x2fffffe; valaddr_reg:x3; val_offset:57765*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57765*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19256:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x465625 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec65625; op2val:0x0;
op3val:0x2ffffff; valaddr_reg:x3; val_offset:57768*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57768*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19257:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x470598 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x525296 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec70598; op2val:0x525296;
op3val:0x3f800000; valaddr_reg:x3; val_offset:57771*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57771*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19258:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x470598 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x525296 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec70598; op2val:0x525296;
op3val:0x3f800001; valaddr_reg:x3; val_offset:57774*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57774*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19259:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x470598 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x525296 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec70598; op2val:0x525296;
op3val:0x3f800003; valaddr_reg:x3; val_offset:57777*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57777*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19260:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x470598 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x525296 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec70598; op2val:0x525296;
op3val:0x3f800007; valaddr_reg:x3; val_offset:57780*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57780*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19261:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x470598 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x525296 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec70598; op2val:0x525296;
op3val:0x3f80000f; valaddr_reg:x3; val_offset:57783*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57783*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19262:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x470598 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x525296 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec70598; op2val:0x525296;
op3val:0x3f80001f; valaddr_reg:x3; val_offset:57786*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57786*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19263:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x470598 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x525296 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec70598; op2val:0x525296;
op3val:0x3f80003f; valaddr_reg:x3; val_offset:57789*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57789*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19264:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x470598 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x525296 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec70598; op2val:0x525296;
op3val:0x3f80007f; valaddr_reg:x3; val_offset:57792*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57792*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19265:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x470598 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x525296 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec70598; op2val:0x525296;
op3val:0x3f8000ff; valaddr_reg:x3; val_offset:57795*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57795*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19266:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x470598 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x525296 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec70598; op2val:0x525296;
op3val:0x3f8001ff; valaddr_reg:x3; val_offset:57798*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57798*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19267:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x470598 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x525296 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec70598; op2val:0x525296;
op3val:0x3f8003ff; valaddr_reg:x3; val_offset:57801*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57801*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19268:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x470598 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x525296 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec70598; op2val:0x525296;
op3val:0x3f8007ff; valaddr_reg:x3; val_offset:57804*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57804*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19269:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x470598 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x525296 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec70598; op2val:0x525296;
op3val:0x3f800fff; valaddr_reg:x3; val_offset:57807*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57807*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19270:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x470598 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x525296 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec70598; op2val:0x525296;
op3val:0x3f801fff; valaddr_reg:x3; val_offset:57810*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57810*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19271:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x470598 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x525296 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec70598; op2val:0x525296;
op3val:0x3f803fff; valaddr_reg:x3; val_offset:57813*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57813*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19272:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x470598 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x525296 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec70598; op2val:0x525296;
op3val:0x3f807fff; valaddr_reg:x3; val_offset:57816*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57816*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19273:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x470598 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x525296 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec70598; op2val:0x525296;
op3val:0x3f80ffff; valaddr_reg:x3; val_offset:57819*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57819*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19274:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x470598 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x525296 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec70598; op2val:0x525296;
op3val:0x3f81ffff; valaddr_reg:x3; val_offset:57822*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57822*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19275:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x470598 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x525296 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec70598; op2val:0x525296;
op3val:0x3f83ffff; valaddr_reg:x3; val_offset:57825*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57825*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19276:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x470598 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x525296 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec70598; op2val:0x525296;
op3val:0x3f87ffff; valaddr_reg:x3; val_offset:57828*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57828*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19277:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x470598 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x525296 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec70598; op2val:0x525296;
op3val:0x3f8fffff; valaddr_reg:x3; val_offset:57831*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57831*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19278:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x470598 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x525296 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec70598; op2val:0x525296;
op3val:0x3f999999; valaddr_reg:x3; val_offset:57834*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57834*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19279:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x470598 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x525296 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec70598; op2val:0x525296;
op3val:0x3f9fffff; valaddr_reg:x3; val_offset:57837*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57837*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19280:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x470598 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x525296 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec70598; op2val:0x525296;
op3val:0x3fa49249; valaddr_reg:x3; val_offset:57840*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57840*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19281:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x470598 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x525296 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec70598; op2val:0x525296;
op3val:0x3fb33333; valaddr_reg:x3; val_offset:57843*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57843*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19282:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x470598 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x525296 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec70598; op2val:0x525296;
op3val:0x3fb6db6d; valaddr_reg:x3; val_offset:57846*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57846*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19283:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x470598 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x525296 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec70598; op2val:0x525296;
op3val:0x3fbbbbbb; valaddr_reg:x3; val_offset:57849*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57849*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19284:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x470598 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x525296 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec70598; op2val:0x525296;
op3val:0x3fbfffff; valaddr_reg:x3; val_offset:57852*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57852*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19285:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x470598 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x525296 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec70598; op2val:0x525296;
op3val:0x3fc00000; valaddr_reg:x3; val_offset:57855*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57855*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19286:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x470598 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x525296 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec70598; op2val:0x525296;
op3val:0x3fc44444; valaddr_reg:x3; val_offset:57858*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57858*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19287:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x470598 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x525296 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec70598; op2val:0x525296;
op3val:0x3fcccccc; valaddr_reg:x3; val_offset:57861*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57861*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19288:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x470598 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x525296 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec70598; op2val:0x525296;
op3val:0x3fdb6db6; valaddr_reg:x3; val_offset:57864*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57864*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19289:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x470598 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x525296 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec70598; op2val:0x525296;
op3val:0x3fe00000; valaddr_reg:x3; val_offset:57867*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57867*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19290:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x470598 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x525296 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec70598; op2val:0x525296;
op3val:0x3fe66666; valaddr_reg:x3; val_offset:57870*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57870*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19291:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x470598 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x525296 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec70598; op2val:0x525296;
op3val:0x3fedb6db; valaddr_reg:x3; val_offset:57873*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57873*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19292:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x470598 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x525296 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec70598; op2val:0x525296;
op3val:0x3ff00000; valaddr_reg:x3; val_offset:57876*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57876*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19293:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x470598 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x525296 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec70598; op2val:0x525296;
op3val:0x3ff80000; valaddr_reg:x3; val_offset:57879*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57879*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19294:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x470598 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x525296 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec70598; op2val:0x525296;
op3val:0x3ffc0000; valaddr_reg:x3; val_offset:57882*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57882*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19295:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x470598 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x525296 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec70598; op2val:0x525296;
op3val:0x3ffe0000; valaddr_reg:x3; val_offset:57885*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57885*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19296:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x470598 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x525296 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec70598; op2val:0x525296;
op3val:0x3fff0000; valaddr_reg:x3; val_offset:57888*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57888*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19297:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x470598 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x525296 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec70598; op2val:0x525296;
op3val:0x3fff8000; valaddr_reg:x3; val_offset:57891*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57891*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19298:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x470598 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x525296 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec70598; op2val:0x525296;
op3val:0x3fffc000; valaddr_reg:x3; val_offset:57894*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57894*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19299:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x470598 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x525296 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec70598; op2val:0x525296;
op3val:0x3fffe000; valaddr_reg:x3; val_offset:57897*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57897*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19300:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x470598 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x525296 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec70598; op2val:0x525296;
op3val:0x3ffff000; valaddr_reg:x3; val_offset:57900*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57900*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19301:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x470598 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x525296 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec70598; op2val:0x525296;
op3val:0x3ffff800; valaddr_reg:x3; val_offset:57903*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57903*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19302:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x470598 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x525296 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec70598; op2val:0x525296;
op3val:0x3ffffc00; valaddr_reg:x3; val_offset:57906*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57906*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19303:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x470598 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x525296 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec70598; op2val:0x525296;
op3val:0x3ffffe00; valaddr_reg:x3; val_offset:57909*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57909*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19304:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x470598 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x525296 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec70598; op2val:0x525296;
op3val:0x3fffff00; valaddr_reg:x3; val_offset:57912*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57912*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19305:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x470598 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x525296 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec70598; op2val:0x525296;
op3val:0x3fffff80; valaddr_reg:x3; val_offset:57915*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57915*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19306:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x470598 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x525296 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec70598; op2val:0x525296;
op3val:0x3fffffc0; valaddr_reg:x3; val_offset:57918*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57918*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19307:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x470598 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x525296 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec70598; op2val:0x525296;
op3val:0x3fffffe0; valaddr_reg:x3; val_offset:57921*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57921*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19308:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x470598 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x525296 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec70598; op2val:0x525296;
op3val:0x3ffffff0; valaddr_reg:x3; val_offset:57924*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57924*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19309:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x470598 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x525296 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec70598; op2val:0x525296;
op3val:0x3ffffff8; valaddr_reg:x3; val_offset:57927*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57927*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19310:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x470598 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x525296 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec70598; op2val:0x525296;
op3val:0x3ffffffc; valaddr_reg:x3; val_offset:57930*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57930*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19311:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x470598 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x525296 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec70598; op2val:0x525296;
op3val:0x3ffffffe; valaddr_reg:x3; val_offset:57933*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57933*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19312:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x470598 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x525296 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec70598; op2val:0x525296;
op3val:0x3fffffff; valaddr_reg:x3; val_offset:57936*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57936*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19313:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x470fb2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x249cd2 and fs3 == 1 and fe3 == 0xf1 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec70fb2; op2val:0xc0249cd2;
op3val:0xf8800000; valaddr_reg:x3; val_offset:57939*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57939*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19314:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x470fb2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x249cd2 and fs3 == 1 and fe3 == 0xf1 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec70fb2; op2val:0xc0249cd2;
op3val:0xf8800001; valaddr_reg:x3; val_offset:57942*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57942*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19315:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x470fb2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x249cd2 and fs3 == 1 and fe3 == 0xf1 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec70fb2; op2val:0xc0249cd2;
op3val:0xf8800003; valaddr_reg:x3; val_offset:57945*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57945*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19316:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x470fb2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x249cd2 and fs3 == 1 and fe3 == 0xf1 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec70fb2; op2val:0xc0249cd2;
op3val:0xf8800007; valaddr_reg:x3; val_offset:57948*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57948*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19317:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x470fb2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x249cd2 and fs3 == 1 and fe3 == 0xf1 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec70fb2; op2val:0xc0249cd2;
op3val:0xf880000f; valaddr_reg:x3; val_offset:57951*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57951*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19318:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x470fb2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x249cd2 and fs3 == 1 and fe3 == 0xf1 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec70fb2; op2val:0xc0249cd2;
op3val:0xf880001f; valaddr_reg:x3; val_offset:57954*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57954*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19319:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x470fb2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x249cd2 and fs3 == 1 and fe3 == 0xf1 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec70fb2; op2val:0xc0249cd2;
op3val:0xf880003f; valaddr_reg:x3; val_offset:57957*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57957*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19320:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x470fb2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x249cd2 and fs3 == 1 and fe3 == 0xf1 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec70fb2; op2val:0xc0249cd2;
op3val:0xf880007f; valaddr_reg:x3; val_offset:57960*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57960*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19321:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x470fb2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x249cd2 and fs3 == 1 and fe3 == 0xf1 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec70fb2; op2val:0xc0249cd2;
op3val:0xf88000ff; valaddr_reg:x3; val_offset:57963*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57963*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19322:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x470fb2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x249cd2 and fs3 == 1 and fe3 == 0xf1 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec70fb2; op2val:0xc0249cd2;
op3val:0xf88001ff; valaddr_reg:x3; val_offset:57966*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57966*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19323:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x470fb2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x249cd2 and fs3 == 1 and fe3 == 0xf1 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec70fb2; op2val:0xc0249cd2;
op3val:0xf88003ff; valaddr_reg:x3; val_offset:57969*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57969*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19324:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x470fb2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x249cd2 and fs3 == 1 and fe3 == 0xf1 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec70fb2; op2val:0xc0249cd2;
op3val:0xf88007ff; valaddr_reg:x3; val_offset:57972*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57972*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19325:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x470fb2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x249cd2 and fs3 == 1 and fe3 == 0xf1 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec70fb2; op2val:0xc0249cd2;
op3val:0xf8800fff; valaddr_reg:x3; val_offset:57975*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57975*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19326:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x470fb2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x249cd2 and fs3 == 1 and fe3 == 0xf1 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec70fb2; op2val:0xc0249cd2;
op3val:0xf8801fff; valaddr_reg:x3; val_offset:57978*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57978*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19327:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x470fb2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x249cd2 and fs3 == 1 and fe3 == 0xf1 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec70fb2; op2val:0xc0249cd2;
op3val:0xf8803fff; valaddr_reg:x3; val_offset:57981*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57981*0 + 3*150*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(2126927397,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3355443,32,FLEN)
NAN_BOXED(2126927397,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3595117,32,FLEN)
NAN_BOXED(2126927397,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3914683,32,FLEN)
NAN_BOXED(2126927397,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(4473924,32,FLEN)
NAN_BOXED(2126927397,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5033164,32,FLEN)
NAN_BOXED(2126927397,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5991862,32,FLEN)
NAN_BOXED(2126927397,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(6710886,32,FLEN)
NAN_BOXED(2126927397,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7190235,32,FLEN)
NAN_BOXED(2126927397,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388600,32,FLEN)
NAN_BOXED(2126927397,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388604,32,FLEN)
NAN_BOXED(2126927397,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388606,32,FLEN)
NAN_BOXED(2126927397,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41943040,32,FLEN)
NAN_BOXED(2126927397,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41943041,32,FLEN)
NAN_BOXED(2126927397,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41943043,32,FLEN)
NAN_BOXED(2126927397,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41943047,32,FLEN)
NAN_BOXED(2126927397,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41943055,32,FLEN)
NAN_BOXED(2126927397,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41943071,32,FLEN)
NAN_BOXED(2126927397,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41943103,32,FLEN)
NAN_BOXED(2126927397,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41943167,32,FLEN)
NAN_BOXED(2126927397,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41943295,32,FLEN)
NAN_BOXED(2126927397,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41943551,32,FLEN)
NAN_BOXED(2126927397,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41944063,32,FLEN)
NAN_BOXED(2126927397,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41945087,32,FLEN)
NAN_BOXED(2126927397,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41947135,32,FLEN)
NAN_BOXED(2126927397,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41951231,32,FLEN)
NAN_BOXED(2126927397,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41959423,32,FLEN)
NAN_BOXED(2126927397,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41975807,32,FLEN)
NAN_BOXED(2126927397,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(42008575,32,FLEN)
NAN_BOXED(2126927397,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(42074111,32,FLEN)
NAN_BOXED(2126927397,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(42205183,32,FLEN)
NAN_BOXED(2126927397,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(42467327,32,FLEN)
NAN_BOXED(2126927397,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(42991615,32,FLEN)
NAN_BOXED(2126927397,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(44040191,32,FLEN)
NAN_BOXED(2126927397,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(46137343,32,FLEN)
NAN_BOXED(2126927397,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(46137344,32,FLEN)
NAN_BOXED(2126927397,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(48234496,32,FLEN)
NAN_BOXED(2126927397,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(49283072,32,FLEN)
NAN_BOXED(2126927397,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(49807360,32,FLEN)
NAN_BOXED(2126927397,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50069504,32,FLEN)
NAN_BOXED(2126927397,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50200576,32,FLEN)
NAN_BOXED(2126927397,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50266112,32,FLEN)
NAN_BOXED(2126927397,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50298880,32,FLEN)
NAN_BOXED(2126927397,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50315264,32,FLEN)
NAN_BOXED(2126927397,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50323456,32,FLEN)
NAN_BOXED(2126927397,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50327552,32,FLEN)
NAN_BOXED(2126927397,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50329600,32,FLEN)
NAN_BOXED(2126927397,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50330624,32,FLEN)
NAN_BOXED(2126927397,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50331136,32,FLEN)
NAN_BOXED(2126927397,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50331392,32,FLEN)
NAN_BOXED(2126927397,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50331520,32,FLEN)
NAN_BOXED(2126927397,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50331584,32,FLEN)
NAN_BOXED(2126927397,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50331616,32,FLEN)
NAN_BOXED(2126927397,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50331632,32,FLEN)
NAN_BOXED(2126927397,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50331640,32,FLEN)
NAN_BOXED(2126927397,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50331644,32,FLEN)
NAN_BOXED(2126927397,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50331646,32,FLEN)
NAN_BOXED(2126927397,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50331647,32,FLEN)
NAN_BOXED(2126972312,32,FLEN)
NAN_BOXED(5395094,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(2126972312,32,FLEN)
NAN_BOXED(5395094,32,FLEN)
NAN_BOXED(1065353217,32,FLEN)
NAN_BOXED(2126972312,32,FLEN)
NAN_BOXED(5395094,32,FLEN)
NAN_BOXED(1065353219,32,FLEN)
NAN_BOXED(2126972312,32,FLEN)
NAN_BOXED(5395094,32,FLEN)
NAN_BOXED(1065353223,32,FLEN)
NAN_BOXED(2126972312,32,FLEN)
NAN_BOXED(5395094,32,FLEN)
NAN_BOXED(1065353231,32,FLEN)
NAN_BOXED(2126972312,32,FLEN)
NAN_BOXED(5395094,32,FLEN)
NAN_BOXED(1065353247,32,FLEN)
NAN_BOXED(2126972312,32,FLEN)
NAN_BOXED(5395094,32,FLEN)
NAN_BOXED(1065353279,32,FLEN)
NAN_BOXED(2126972312,32,FLEN)
NAN_BOXED(5395094,32,FLEN)
NAN_BOXED(1065353343,32,FLEN)
NAN_BOXED(2126972312,32,FLEN)
NAN_BOXED(5395094,32,FLEN)
NAN_BOXED(1065353471,32,FLEN)
NAN_BOXED(2126972312,32,FLEN)
NAN_BOXED(5395094,32,FLEN)
NAN_BOXED(1065353727,32,FLEN)
NAN_BOXED(2126972312,32,FLEN)
NAN_BOXED(5395094,32,FLEN)
NAN_BOXED(1065354239,32,FLEN)
NAN_BOXED(2126972312,32,FLEN)
NAN_BOXED(5395094,32,FLEN)
NAN_BOXED(1065355263,32,FLEN)
NAN_BOXED(2126972312,32,FLEN)
NAN_BOXED(5395094,32,FLEN)
NAN_BOXED(1065357311,32,FLEN)
NAN_BOXED(2126972312,32,FLEN)
NAN_BOXED(5395094,32,FLEN)
NAN_BOXED(1065361407,32,FLEN)
NAN_BOXED(2126972312,32,FLEN)
NAN_BOXED(5395094,32,FLEN)
NAN_BOXED(1065369599,32,FLEN)
NAN_BOXED(2126972312,32,FLEN)
NAN_BOXED(5395094,32,FLEN)
NAN_BOXED(1065385983,32,FLEN)
NAN_BOXED(2126972312,32,FLEN)
NAN_BOXED(5395094,32,FLEN)
NAN_BOXED(1065418751,32,FLEN)
NAN_BOXED(2126972312,32,FLEN)
NAN_BOXED(5395094,32,FLEN)
NAN_BOXED(1065484287,32,FLEN)
NAN_BOXED(2126972312,32,FLEN)
NAN_BOXED(5395094,32,FLEN)
NAN_BOXED(1065615359,32,FLEN)
NAN_BOXED(2126972312,32,FLEN)
NAN_BOXED(5395094,32,FLEN)
NAN_BOXED(1065877503,32,FLEN)
NAN_BOXED(2126972312,32,FLEN)
NAN_BOXED(5395094,32,FLEN)
NAN_BOXED(1066401791,32,FLEN)
NAN_BOXED(2126972312,32,FLEN)
NAN_BOXED(5395094,32,FLEN)
NAN_BOXED(1067030937,32,FLEN)
NAN_BOXED(2126972312,32,FLEN)
NAN_BOXED(5395094,32,FLEN)
NAN_BOXED(1067450367,32,FLEN)
NAN_BOXED(2126972312,32,FLEN)
NAN_BOXED(5395094,32,FLEN)
NAN_BOXED(1067749961,32,FLEN)
NAN_BOXED(2126972312,32,FLEN)
NAN_BOXED(5395094,32,FLEN)
NAN_BOXED(1068708659,32,FLEN)
NAN_BOXED(2126972312,32,FLEN)
NAN_BOXED(5395094,32,FLEN)
NAN_BOXED(1068948333,32,FLEN)
NAN_BOXED(2126972312,32,FLEN)
NAN_BOXED(5395094,32,FLEN)
NAN_BOXED(1069267899,32,FLEN)
NAN_BOXED(2126972312,32,FLEN)
NAN_BOXED(5395094,32,FLEN)
NAN_BOXED(1069547519,32,FLEN)
NAN_BOXED(2126972312,32,FLEN)
NAN_BOXED(5395094,32,FLEN)
NAN_BOXED(1069547520,32,FLEN)
NAN_BOXED(2126972312,32,FLEN)
NAN_BOXED(5395094,32,FLEN)
NAN_BOXED(1069827140,32,FLEN)
NAN_BOXED(2126972312,32,FLEN)
NAN_BOXED(5395094,32,FLEN)
NAN_BOXED(1070386380,32,FLEN)
NAN_BOXED(2126972312,32,FLEN)
NAN_BOXED(5395094,32,FLEN)
NAN_BOXED(1071345078,32,FLEN)
NAN_BOXED(2126972312,32,FLEN)
NAN_BOXED(5395094,32,FLEN)
NAN_BOXED(1071644672,32,FLEN)
NAN_BOXED(2126972312,32,FLEN)
NAN_BOXED(5395094,32,FLEN)
NAN_BOXED(1072064102,32,FLEN)
NAN_BOXED(2126972312,32,FLEN)
NAN_BOXED(5395094,32,FLEN)
NAN_BOXED(1072543451,32,FLEN)
NAN_BOXED(2126972312,32,FLEN)
NAN_BOXED(5395094,32,FLEN)
NAN_BOXED(1072693248,32,FLEN)
NAN_BOXED(2126972312,32,FLEN)
NAN_BOXED(5395094,32,FLEN)
NAN_BOXED(1073217536,32,FLEN)
NAN_BOXED(2126972312,32,FLEN)
NAN_BOXED(5395094,32,FLEN)
NAN_BOXED(1073479680,32,FLEN)
NAN_BOXED(2126972312,32,FLEN)
NAN_BOXED(5395094,32,FLEN)
NAN_BOXED(1073610752,32,FLEN)
NAN_BOXED(2126972312,32,FLEN)
NAN_BOXED(5395094,32,FLEN)
NAN_BOXED(1073676288,32,FLEN)
NAN_BOXED(2126972312,32,FLEN)
NAN_BOXED(5395094,32,FLEN)
NAN_BOXED(1073709056,32,FLEN)
NAN_BOXED(2126972312,32,FLEN)
NAN_BOXED(5395094,32,FLEN)
NAN_BOXED(1073725440,32,FLEN)
NAN_BOXED(2126972312,32,FLEN)
NAN_BOXED(5395094,32,FLEN)
NAN_BOXED(1073733632,32,FLEN)
NAN_BOXED(2126972312,32,FLEN)
NAN_BOXED(5395094,32,FLEN)
NAN_BOXED(1073737728,32,FLEN)
NAN_BOXED(2126972312,32,FLEN)
NAN_BOXED(5395094,32,FLEN)
NAN_BOXED(1073739776,32,FLEN)
NAN_BOXED(2126972312,32,FLEN)
NAN_BOXED(5395094,32,FLEN)
NAN_BOXED(1073740800,32,FLEN)
NAN_BOXED(2126972312,32,FLEN)
NAN_BOXED(5395094,32,FLEN)
NAN_BOXED(1073741312,32,FLEN)
NAN_BOXED(2126972312,32,FLEN)
NAN_BOXED(5395094,32,FLEN)
NAN_BOXED(1073741568,32,FLEN)
NAN_BOXED(2126972312,32,FLEN)
NAN_BOXED(5395094,32,FLEN)
NAN_BOXED(1073741696,32,FLEN)
NAN_BOXED(2126972312,32,FLEN)
NAN_BOXED(5395094,32,FLEN)
NAN_BOXED(1073741760,32,FLEN)
NAN_BOXED(2126972312,32,FLEN)
NAN_BOXED(5395094,32,FLEN)
NAN_BOXED(1073741792,32,FLEN)
NAN_BOXED(2126972312,32,FLEN)
NAN_BOXED(5395094,32,FLEN)
NAN_BOXED(1073741808,32,FLEN)
NAN_BOXED(2126972312,32,FLEN)
NAN_BOXED(5395094,32,FLEN)
NAN_BOXED(1073741816,32,FLEN)
NAN_BOXED(2126972312,32,FLEN)
NAN_BOXED(5395094,32,FLEN)
NAN_BOXED(1073741820,32,FLEN)
NAN_BOXED(2126972312,32,FLEN)
NAN_BOXED(5395094,32,FLEN)
NAN_BOXED(1073741822,32,FLEN)
NAN_BOXED(2126972312,32,FLEN)
NAN_BOXED(5395094,32,FLEN)
NAN_BOXED(1073741823,32,FLEN)
NAN_BOXED(2126974898,32,FLEN)
NAN_BOXED(3223624914,32,FLEN)
NAN_BOXED(4169138176,32,FLEN)
NAN_BOXED(2126974898,32,FLEN)
NAN_BOXED(3223624914,32,FLEN)
NAN_BOXED(4169138177,32,FLEN)
NAN_BOXED(2126974898,32,FLEN)
NAN_BOXED(3223624914,32,FLEN)
NAN_BOXED(4169138179,32,FLEN)
NAN_BOXED(2126974898,32,FLEN)
NAN_BOXED(3223624914,32,FLEN)
NAN_BOXED(4169138183,32,FLEN)
NAN_BOXED(2126974898,32,FLEN)
NAN_BOXED(3223624914,32,FLEN)
NAN_BOXED(4169138191,32,FLEN)
NAN_BOXED(2126974898,32,FLEN)
NAN_BOXED(3223624914,32,FLEN)
NAN_BOXED(4169138207,32,FLEN)
NAN_BOXED(2126974898,32,FLEN)
NAN_BOXED(3223624914,32,FLEN)
NAN_BOXED(4169138239,32,FLEN)
NAN_BOXED(2126974898,32,FLEN)
NAN_BOXED(3223624914,32,FLEN)
NAN_BOXED(4169138303,32,FLEN)
NAN_BOXED(2126974898,32,FLEN)
NAN_BOXED(3223624914,32,FLEN)
NAN_BOXED(4169138431,32,FLEN)
NAN_BOXED(2126974898,32,FLEN)
NAN_BOXED(3223624914,32,FLEN)
NAN_BOXED(4169138687,32,FLEN)
NAN_BOXED(2126974898,32,FLEN)
NAN_BOXED(3223624914,32,FLEN)
NAN_BOXED(4169139199,32,FLEN)
NAN_BOXED(2126974898,32,FLEN)
NAN_BOXED(3223624914,32,FLEN)
NAN_BOXED(4169140223,32,FLEN)
NAN_BOXED(2126974898,32,FLEN)
NAN_BOXED(3223624914,32,FLEN)
NAN_BOXED(4169142271,32,FLEN)
NAN_BOXED(2126974898,32,FLEN)
NAN_BOXED(3223624914,32,FLEN)
NAN_BOXED(4169146367,32,FLEN)
NAN_BOXED(2126974898,32,FLEN)
NAN_BOXED(3223624914,32,FLEN)
NAN_BOXED(4169154559,32,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
