
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 14:18:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32F/fmsub.s.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.s instruction of the RISC-V RV32F_Zicsr,RV32FD_Zicsr,RV64F_Zicsr,RV64FD_Zicsr extension for the fmsub_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF_Zicsr,RV32IFD_Zicsr,RV64IF_Zicsr,RV64IFD_Zicsr,RV32EF_Zicsr,RV32EFD_Zicsr,RV64EF_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fmsub_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*F.*);def TEST_CASE_1=True;",fmsub_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_19712:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x496831 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x22b206 and fs3 == 1 and fe3 == 0xb7 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec96831; op2val:0xc022b206;
op3val:0xdbfc0000; valaddr_reg:x3; val_offset:59136*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59136*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19713:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x496831 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x22b206 and fs3 == 1 and fe3 == 0xb7 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec96831; op2val:0xc022b206;
op3val:0xdbfe0000; valaddr_reg:x3; val_offset:59139*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59139*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19714:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x496831 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x22b206 and fs3 == 1 and fe3 == 0xb7 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec96831; op2val:0xc022b206;
op3val:0xdbff0000; valaddr_reg:x3; val_offset:59142*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59142*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19715:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x496831 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x22b206 and fs3 == 1 and fe3 == 0xb7 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec96831; op2val:0xc022b206;
op3val:0xdbff8000; valaddr_reg:x3; val_offset:59145*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59145*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19716:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x496831 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x22b206 and fs3 == 1 and fe3 == 0xb7 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec96831; op2val:0xc022b206;
op3val:0xdbffc000; valaddr_reg:x3; val_offset:59148*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59148*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19717:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x496831 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x22b206 and fs3 == 1 and fe3 == 0xb7 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec96831; op2val:0xc022b206;
op3val:0xdbffe000; valaddr_reg:x3; val_offset:59151*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59151*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19718:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x496831 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x22b206 and fs3 == 1 and fe3 == 0xb7 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec96831; op2val:0xc022b206;
op3val:0xdbfff000; valaddr_reg:x3; val_offset:59154*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59154*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19719:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x496831 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x22b206 and fs3 == 1 and fe3 == 0xb7 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec96831; op2val:0xc022b206;
op3val:0xdbfff800; valaddr_reg:x3; val_offset:59157*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59157*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19720:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x496831 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x22b206 and fs3 == 1 and fe3 == 0xb7 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec96831; op2val:0xc022b206;
op3val:0xdbfffc00; valaddr_reg:x3; val_offset:59160*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59160*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19721:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x496831 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x22b206 and fs3 == 1 and fe3 == 0xb7 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec96831; op2val:0xc022b206;
op3val:0xdbfffe00; valaddr_reg:x3; val_offset:59163*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59163*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19722:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x496831 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x22b206 and fs3 == 1 and fe3 == 0xb7 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec96831; op2val:0xc022b206;
op3val:0xdbffff00; valaddr_reg:x3; val_offset:59166*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59166*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19723:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x496831 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x22b206 and fs3 == 1 and fe3 == 0xb7 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec96831; op2val:0xc022b206;
op3val:0xdbffff80; valaddr_reg:x3; val_offset:59169*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59169*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19724:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x496831 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x22b206 and fs3 == 1 and fe3 == 0xb7 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec96831; op2val:0xc022b206;
op3val:0xdbffffc0; valaddr_reg:x3; val_offset:59172*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59172*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19725:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x496831 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x22b206 and fs3 == 1 and fe3 == 0xb7 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec96831; op2val:0xc022b206;
op3val:0xdbffffe0; valaddr_reg:x3; val_offset:59175*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59175*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19726:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x496831 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x22b206 and fs3 == 1 and fe3 == 0xb7 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec96831; op2val:0xc022b206;
op3val:0xdbfffff0; valaddr_reg:x3; val_offset:59178*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59178*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19727:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x496831 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x22b206 and fs3 == 1 and fe3 == 0xb7 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec96831; op2val:0xc022b206;
op3val:0xdbfffff8; valaddr_reg:x3; val_offset:59181*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59181*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19728:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x496831 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x22b206 and fs3 == 1 and fe3 == 0xb7 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec96831; op2val:0xc022b206;
op3val:0xdbfffffc; valaddr_reg:x3; val_offset:59184*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59184*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19729:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x496831 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x22b206 and fs3 == 1 and fe3 == 0xb7 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec96831; op2val:0xc022b206;
op3val:0xdbfffffe; valaddr_reg:x3; val_offset:59187*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59187*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19730:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x496831 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x22b206 and fs3 == 1 and fe3 == 0xb7 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec96831; op2val:0xc022b206;
op3val:0xdbffffff; valaddr_reg:x3; val_offset:59190*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59190*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19731:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x496831 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x22b206 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec96831; op2val:0xc022b206;
op3val:0xff000001; valaddr_reg:x3; val_offset:59193*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59193*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19732:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x496831 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x22b206 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec96831; op2val:0xc022b206;
op3val:0xff000003; valaddr_reg:x3; val_offset:59196*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59196*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19733:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x496831 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x22b206 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec96831; op2val:0xc022b206;
op3val:0xff000007; valaddr_reg:x3; val_offset:59199*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59199*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19734:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x496831 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x22b206 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec96831; op2val:0xc022b206;
op3val:0xff199999; valaddr_reg:x3; val_offset:59202*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59202*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19735:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x496831 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x22b206 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec96831; op2val:0xc022b206;
op3val:0xff249249; valaddr_reg:x3; val_offset:59205*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59205*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19736:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x496831 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x22b206 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec96831; op2val:0xc022b206;
op3val:0xff333333; valaddr_reg:x3; val_offset:59208*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59208*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19737:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x496831 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x22b206 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec96831; op2val:0xc022b206;
op3val:0xff36db6d; valaddr_reg:x3; val_offset:59211*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59211*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19738:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x496831 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x22b206 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec96831; op2val:0xc022b206;
op3val:0xff3bbbbb; valaddr_reg:x3; val_offset:59214*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59214*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19739:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x496831 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x22b206 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec96831; op2val:0xc022b206;
op3val:0xff444444; valaddr_reg:x3; val_offset:59217*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59217*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19740:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x496831 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x22b206 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec96831; op2val:0xc022b206;
op3val:0xff4ccccc; valaddr_reg:x3; val_offset:59220*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59220*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19741:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x496831 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x22b206 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec96831; op2val:0xc022b206;
op3val:0xff5b6db6; valaddr_reg:x3; val_offset:59223*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59223*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19742:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x496831 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x22b206 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec96831; op2val:0xc022b206;
op3val:0xff666666; valaddr_reg:x3; val_offset:59226*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59226*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19743:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x496831 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x22b206 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec96831; op2val:0xc022b206;
op3val:0xff6db6db; valaddr_reg:x3; val_offset:59229*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59229*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19744:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x496831 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x22b206 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec96831; op2val:0xc022b206;
op3val:0xff7ffff8; valaddr_reg:x3; val_offset:59232*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59232*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19745:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x496831 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x22b206 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec96831; op2val:0xc022b206;
op3val:0xff7ffffc; valaddr_reg:x3; val_offset:59235*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59235*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19746:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x496831 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x22b206 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec96831; op2val:0xc022b206;
op3val:0xff7ffffe; valaddr_reg:x3; val_offset:59238*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59238*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19747:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4982ac and fs2 == 0 and fe2 == 0x80 and fm2 == 0x229ca6 and fs3 == 0 and fe3 == 0xd1 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec982ac; op2val:0x40229ca6;
op3val:0x68800000; valaddr_reg:x3; val_offset:59241*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59241*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19748:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4982ac and fs2 == 0 and fe2 == 0x80 and fm2 == 0x229ca6 and fs3 == 0 and fe3 == 0xd1 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec982ac; op2val:0x40229ca6;
op3val:0x68800001; valaddr_reg:x3; val_offset:59244*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59244*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19749:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4982ac and fs2 == 0 and fe2 == 0x80 and fm2 == 0x229ca6 and fs3 == 0 and fe3 == 0xd1 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec982ac; op2val:0x40229ca6;
op3val:0x68800003; valaddr_reg:x3; val_offset:59247*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59247*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19750:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4982ac and fs2 == 0 and fe2 == 0x80 and fm2 == 0x229ca6 and fs3 == 0 and fe3 == 0xd1 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec982ac; op2val:0x40229ca6;
op3val:0x68800007; valaddr_reg:x3; val_offset:59250*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59250*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19751:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4982ac and fs2 == 0 and fe2 == 0x80 and fm2 == 0x229ca6 and fs3 == 0 and fe3 == 0xd1 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec982ac; op2val:0x40229ca6;
op3val:0x6880000f; valaddr_reg:x3; val_offset:59253*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59253*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19752:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4982ac and fs2 == 0 and fe2 == 0x80 and fm2 == 0x229ca6 and fs3 == 0 and fe3 == 0xd1 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec982ac; op2val:0x40229ca6;
op3val:0x6880001f; valaddr_reg:x3; val_offset:59256*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59256*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19753:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4982ac and fs2 == 0 and fe2 == 0x80 and fm2 == 0x229ca6 and fs3 == 0 and fe3 == 0xd1 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec982ac; op2val:0x40229ca6;
op3val:0x6880003f; valaddr_reg:x3; val_offset:59259*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59259*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19754:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4982ac and fs2 == 0 and fe2 == 0x80 and fm2 == 0x229ca6 and fs3 == 0 and fe3 == 0xd1 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec982ac; op2val:0x40229ca6;
op3val:0x6880007f; valaddr_reg:x3; val_offset:59262*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59262*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19755:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4982ac and fs2 == 0 and fe2 == 0x80 and fm2 == 0x229ca6 and fs3 == 0 and fe3 == 0xd1 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec982ac; op2val:0x40229ca6;
op3val:0x688000ff; valaddr_reg:x3; val_offset:59265*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59265*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19756:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4982ac and fs2 == 0 and fe2 == 0x80 and fm2 == 0x229ca6 and fs3 == 0 and fe3 == 0xd1 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec982ac; op2val:0x40229ca6;
op3val:0x688001ff; valaddr_reg:x3; val_offset:59268*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59268*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19757:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4982ac and fs2 == 0 and fe2 == 0x80 and fm2 == 0x229ca6 and fs3 == 0 and fe3 == 0xd1 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec982ac; op2val:0x40229ca6;
op3val:0x688003ff; valaddr_reg:x3; val_offset:59271*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59271*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19758:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4982ac and fs2 == 0 and fe2 == 0x80 and fm2 == 0x229ca6 and fs3 == 0 and fe3 == 0xd1 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec982ac; op2val:0x40229ca6;
op3val:0x688007ff; valaddr_reg:x3; val_offset:59274*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59274*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19759:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4982ac and fs2 == 0 and fe2 == 0x80 and fm2 == 0x229ca6 and fs3 == 0 and fe3 == 0xd1 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec982ac; op2val:0x40229ca6;
op3val:0x68800fff; valaddr_reg:x3; val_offset:59277*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59277*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19760:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4982ac and fs2 == 0 and fe2 == 0x80 and fm2 == 0x229ca6 and fs3 == 0 and fe3 == 0xd1 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec982ac; op2val:0x40229ca6;
op3val:0x68801fff; valaddr_reg:x3; val_offset:59280*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59280*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19761:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4982ac and fs2 == 0 and fe2 == 0x80 and fm2 == 0x229ca6 and fs3 == 0 and fe3 == 0xd1 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec982ac; op2val:0x40229ca6;
op3val:0x68803fff; valaddr_reg:x3; val_offset:59283*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59283*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19762:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4982ac and fs2 == 0 and fe2 == 0x80 and fm2 == 0x229ca6 and fs3 == 0 and fe3 == 0xd1 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec982ac; op2val:0x40229ca6;
op3val:0x68807fff; valaddr_reg:x3; val_offset:59286*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59286*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19763:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4982ac and fs2 == 0 and fe2 == 0x80 and fm2 == 0x229ca6 and fs3 == 0 and fe3 == 0xd1 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec982ac; op2val:0x40229ca6;
op3val:0x6880ffff; valaddr_reg:x3; val_offset:59289*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59289*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19764:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4982ac and fs2 == 0 and fe2 == 0x80 and fm2 == 0x229ca6 and fs3 == 0 and fe3 == 0xd1 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec982ac; op2val:0x40229ca6;
op3val:0x6881ffff; valaddr_reg:x3; val_offset:59292*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59292*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19765:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4982ac and fs2 == 0 and fe2 == 0x80 and fm2 == 0x229ca6 and fs3 == 0 and fe3 == 0xd1 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec982ac; op2val:0x40229ca6;
op3val:0x6883ffff; valaddr_reg:x3; val_offset:59295*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59295*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19766:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4982ac and fs2 == 0 and fe2 == 0x80 and fm2 == 0x229ca6 and fs3 == 0 and fe3 == 0xd1 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec982ac; op2val:0x40229ca6;
op3val:0x6887ffff; valaddr_reg:x3; val_offset:59298*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59298*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19767:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4982ac and fs2 == 0 and fe2 == 0x80 and fm2 == 0x229ca6 and fs3 == 0 and fe3 == 0xd1 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec982ac; op2val:0x40229ca6;
op3val:0x688fffff; valaddr_reg:x3; val_offset:59301*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59301*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19768:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4982ac and fs2 == 0 and fe2 == 0x80 and fm2 == 0x229ca6 and fs3 == 0 and fe3 == 0xd1 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec982ac; op2val:0x40229ca6;
op3val:0x689fffff; valaddr_reg:x3; val_offset:59304*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59304*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19769:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4982ac and fs2 == 0 and fe2 == 0x80 and fm2 == 0x229ca6 and fs3 == 0 and fe3 == 0xd1 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec982ac; op2val:0x40229ca6;
op3val:0x68bfffff; valaddr_reg:x3; val_offset:59307*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59307*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19770:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4982ac and fs2 == 0 and fe2 == 0x80 and fm2 == 0x229ca6 and fs3 == 0 and fe3 == 0xd1 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec982ac; op2val:0x40229ca6;
op3val:0x68c00000; valaddr_reg:x3; val_offset:59310*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59310*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19771:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4982ac and fs2 == 0 and fe2 == 0x80 and fm2 == 0x229ca6 and fs3 == 0 and fe3 == 0xd1 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec982ac; op2val:0x40229ca6;
op3val:0x68e00000; valaddr_reg:x3; val_offset:59313*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59313*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19772:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4982ac and fs2 == 0 and fe2 == 0x80 and fm2 == 0x229ca6 and fs3 == 0 and fe3 == 0xd1 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec982ac; op2val:0x40229ca6;
op3val:0x68f00000; valaddr_reg:x3; val_offset:59316*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59316*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19773:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4982ac and fs2 == 0 and fe2 == 0x80 and fm2 == 0x229ca6 and fs3 == 0 and fe3 == 0xd1 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec982ac; op2val:0x40229ca6;
op3val:0x68f80000; valaddr_reg:x3; val_offset:59319*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59319*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19774:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4982ac and fs2 == 0 and fe2 == 0x80 and fm2 == 0x229ca6 and fs3 == 0 and fe3 == 0xd1 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec982ac; op2val:0x40229ca6;
op3val:0x68fc0000; valaddr_reg:x3; val_offset:59322*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59322*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19775:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4982ac and fs2 == 0 and fe2 == 0x80 and fm2 == 0x229ca6 and fs3 == 0 and fe3 == 0xd1 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec982ac; op2val:0x40229ca6;
op3val:0x68fe0000; valaddr_reg:x3; val_offset:59325*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59325*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19776:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4982ac and fs2 == 0 and fe2 == 0x80 and fm2 == 0x229ca6 and fs3 == 0 and fe3 == 0xd1 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec982ac; op2val:0x40229ca6;
op3val:0x68ff0000; valaddr_reg:x3; val_offset:59328*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59328*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19777:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4982ac and fs2 == 0 and fe2 == 0x80 and fm2 == 0x229ca6 and fs3 == 0 and fe3 == 0xd1 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec982ac; op2val:0x40229ca6;
op3val:0x68ff8000; valaddr_reg:x3; val_offset:59331*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59331*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19778:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4982ac and fs2 == 0 and fe2 == 0x80 and fm2 == 0x229ca6 and fs3 == 0 and fe3 == 0xd1 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec982ac; op2val:0x40229ca6;
op3val:0x68ffc000; valaddr_reg:x3; val_offset:59334*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59334*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19779:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4982ac and fs2 == 0 and fe2 == 0x80 and fm2 == 0x229ca6 and fs3 == 0 and fe3 == 0xd1 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec982ac; op2val:0x40229ca6;
op3val:0x68ffe000; valaddr_reg:x3; val_offset:59337*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59337*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19780:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4982ac and fs2 == 0 and fe2 == 0x80 and fm2 == 0x229ca6 and fs3 == 0 and fe3 == 0xd1 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec982ac; op2val:0x40229ca6;
op3val:0x68fff000; valaddr_reg:x3; val_offset:59340*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59340*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19781:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4982ac and fs2 == 0 and fe2 == 0x80 and fm2 == 0x229ca6 and fs3 == 0 and fe3 == 0xd1 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec982ac; op2val:0x40229ca6;
op3val:0x68fff800; valaddr_reg:x3; val_offset:59343*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59343*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19782:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4982ac and fs2 == 0 and fe2 == 0x80 and fm2 == 0x229ca6 and fs3 == 0 and fe3 == 0xd1 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec982ac; op2val:0x40229ca6;
op3val:0x68fffc00; valaddr_reg:x3; val_offset:59346*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59346*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19783:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4982ac and fs2 == 0 and fe2 == 0x80 and fm2 == 0x229ca6 and fs3 == 0 and fe3 == 0xd1 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec982ac; op2val:0x40229ca6;
op3val:0x68fffe00; valaddr_reg:x3; val_offset:59349*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59349*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19784:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4982ac and fs2 == 0 and fe2 == 0x80 and fm2 == 0x229ca6 and fs3 == 0 and fe3 == 0xd1 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec982ac; op2val:0x40229ca6;
op3val:0x68ffff00; valaddr_reg:x3; val_offset:59352*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59352*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19785:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4982ac and fs2 == 0 and fe2 == 0x80 and fm2 == 0x229ca6 and fs3 == 0 and fe3 == 0xd1 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec982ac; op2val:0x40229ca6;
op3val:0x68ffff80; valaddr_reg:x3; val_offset:59355*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59355*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19786:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4982ac and fs2 == 0 and fe2 == 0x80 and fm2 == 0x229ca6 and fs3 == 0 and fe3 == 0xd1 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec982ac; op2val:0x40229ca6;
op3val:0x68ffffc0; valaddr_reg:x3; val_offset:59358*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59358*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19787:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4982ac and fs2 == 0 and fe2 == 0x80 and fm2 == 0x229ca6 and fs3 == 0 and fe3 == 0xd1 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec982ac; op2val:0x40229ca6;
op3val:0x68ffffe0; valaddr_reg:x3; val_offset:59361*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59361*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19788:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4982ac and fs2 == 0 and fe2 == 0x80 and fm2 == 0x229ca6 and fs3 == 0 and fe3 == 0xd1 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec982ac; op2val:0x40229ca6;
op3val:0x68fffff0; valaddr_reg:x3; val_offset:59364*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59364*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19789:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4982ac and fs2 == 0 and fe2 == 0x80 and fm2 == 0x229ca6 and fs3 == 0 and fe3 == 0xd1 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec982ac; op2val:0x40229ca6;
op3val:0x68fffff8; valaddr_reg:x3; val_offset:59367*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59367*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19790:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4982ac and fs2 == 0 and fe2 == 0x80 and fm2 == 0x229ca6 and fs3 == 0 and fe3 == 0xd1 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec982ac; op2val:0x40229ca6;
op3val:0x68fffffc; valaddr_reg:x3; val_offset:59370*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59370*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19791:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4982ac and fs2 == 0 and fe2 == 0x80 and fm2 == 0x229ca6 and fs3 == 0 and fe3 == 0xd1 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec982ac; op2val:0x40229ca6;
op3val:0x68fffffe; valaddr_reg:x3; val_offset:59373*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59373*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19792:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4982ac and fs2 == 0 and fe2 == 0x80 and fm2 == 0x229ca6 and fs3 == 0 and fe3 == 0xd1 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec982ac; op2val:0x40229ca6;
op3val:0x68ffffff; valaddr_reg:x3; val_offset:59376*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59376*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19793:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4982ac and fs2 == 0 and fe2 == 0x80 and fm2 == 0x229ca6 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec982ac; op2val:0x40229ca6;
op3val:0x7f000001; valaddr_reg:x3; val_offset:59379*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59379*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19794:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4982ac and fs2 == 0 and fe2 == 0x80 and fm2 == 0x229ca6 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec982ac; op2val:0x40229ca6;
op3val:0x7f000003; valaddr_reg:x3; val_offset:59382*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59382*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19795:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4982ac and fs2 == 0 and fe2 == 0x80 and fm2 == 0x229ca6 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec982ac; op2val:0x40229ca6;
op3val:0x7f000007; valaddr_reg:x3; val_offset:59385*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59385*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19796:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4982ac and fs2 == 0 and fe2 == 0x80 and fm2 == 0x229ca6 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec982ac; op2val:0x40229ca6;
op3val:0x7f199999; valaddr_reg:x3; val_offset:59388*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59388*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19797:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4982ac and fs2 == 0 and fe2 == 0x80 and fm2 == 0x229ca6 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec982ac; op2val:0x40229ca6;
op3val:0x7f249249; valaddr_reg:x3; val_offset:59391*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59391*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19798:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4982ac and fs2 == 0 and fe2 == 0x80 and fm2 == 0x229ca6 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec982ac; op2val:0x40229ca6;
op3val:0x7f333333; valaddr_reg:x3; val_offset:59394*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59394*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19799:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4982ac and fs2 == 0 and fe2 == 0x80 and fm2 == 0x229ca6 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec982ac; op2val:0x40229ca6;
op3val:0x7f36db6d; valaddr_reg:x3; val_offset:59397*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59397*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19800:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4982ac and fs2 == 0 and fe2 == 0x80 and fm2 == 0x229ca6 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec982ac; op2val:0x40229ca6;
op3val:0x7f3bbbbb; valaddr_reg:x3; val_offset:59400*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59400*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19801:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4982ac and fs2 == 0 and fe2 == 0x80 and fm2 == 0x229ca6 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec982ac; op2val:0x40229ca6;
op3val:0x7f444444; valaddr_reg:x3; val_offset:59403*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59403*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19802:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4982ac and fs2 == 0 and fe2 == 0x80 and fm2 == 0x229ca6 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec982ac; op2val:0x40229ca6;
op3val:0x7f4ccccc; valaddr_reg:x3; val_offset:59406*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59406*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19803:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4982ac and fs2 == 0 and fe2 == 0x80 and fm2 == 0x229ca6 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec982ac; op2val:0x40229ca6;
op3val:0x7f5b6db6; valaddr_reg:x3; val_offset:59409*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59409*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19804:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4982ac and fs2 == 0 and fe2 == 0x80 and fm2 == 0x229ca6 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec982ac; op2val:0x40229ca6;
op3val:0x7f666666; valaddr_reg:x3; val_offset:59412*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59412*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19805:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4982ac and fs2 == 0 and fe2 == 0x80 and fm2 == 0x229ca6 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec982ac; op2val:0x40229ca6;
op3val:0x7f6db6db; valaddr_reg:x3; val_offset:59415*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59415*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19806:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4982ac and fs2 == 0 and fe2 == 0x80 and fm2 == 0x229ca6 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec982ac; op2val:0x40229ca6;
op3val:0x7f7ffff8; valaddr_reg:x3; val_offset:59418*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59418*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19807:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4982ac and fs2 == 0 and fe2 == 0x80 and fm2 == 0x229ca6 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec982ac; op2val:0x40229ca6;
op3val:0x7f7ffffc; valaddr_reg:x3; val_offset:59421*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59421*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19808:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4982ac and fs2 == 0 and fe2 == 0x80 and fm2 == 0x229ca6 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec982ac; op2val:0x40229ca6;
op3val:0x7f7ffffe; valaddr_reg:x3; val_offset:59424*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59424*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19809:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x49bd8c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec9bd8c; op2val:0x80000000;
op3val:0x80000000; valaddr_reg:x3; val_offset:59427*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59427*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19810:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x49bd8c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec9bd8c; op2val:0x80000000;
op3val:0x80000001; valaddr_reg:x3; val_offset:59430*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59430*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19811:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x49bd8c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec9bd8c; op2val:0x80000000;
op3val:0x80000003; valaddr_reg:x3; val_offset:59433*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59433*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19812:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x49bd8c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec9bd8c; op2val:0x80000000;
op3val:0x80000007; valaddr_reg:x3; val_offset:59436*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59436*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19813:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x49bd8c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec9bd8c; op2val:0x80000000;
op3val:0x8000000f; valaddr_reg:x3; val_offset:59439*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59439*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19814:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x49bd8c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec9bd8c; op2val:0x80000000;
op3val:0x8000001f; valaddr_reg:x3; val_offset:59442*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59442*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19815:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x49bd8c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec9bd8c; op2val:0x80000000;
op3val:0x8000003f; valaddr_reg:x3; val_offset:59445*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59445*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19816:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x49bd8c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec9bd8c; op2val:0x80000000;
op3val:0x8000007f; valaddr_reg:x3; val_offset:59448*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59448*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19817:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x49bd8c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec9bd8c; op2val:0x80000000;
op3val:0x800000ff; valaddr_reg:x3; val_offset:59451*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59451*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19818:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x49bd8c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec9bd8c; op2val:0x80000000;
op3val:0x800001ff; valaddr_reg:x3; val_offset:59454*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59454*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19819:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x49bd8c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec9bd8c; op2val:0x80000000;
op3val:0x800003ff; valaddr_reg:x3; val_offset:59457*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59457*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19820:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x49bd8c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec9bd8c; op2val:0x80000000;
op3val:0x800007ff; valaddr_reg:x3; val_offset:59460*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59460*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19821:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x49bd8c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec9bd8c; op2val:0x80000000;
op3val:0x80000fff; valaddr_reg:x3; val_offset:59463*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59463*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19822:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x49bd8c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec9bd8c; op2val:0x80000000;
op3val:0x80001fff; valaddr_reg:x3; val_offset:59466*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59466*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19823:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x49bd8c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec9bd8c; op2val:0x80000000;
op3val:0x80003fff; valaddr_reg:x3; val_offset:59469*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59469*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19824:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x49bd8c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec9bd8c; op2val:0x80000000;
op3val:0x80007fff; valaddr_reg:x3; val_offset:59472*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59472*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19825:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x49bd8c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec9bd8c; op2val:0x80000000;
op3val:0x8000ffff; valaddr_reg:x3; val_offset:59475*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59475*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19826:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x49bd8c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec9bd8c; op2val:0x80000000;
op3val:0x8001ffff; valaddr_reg:x3; val_offset:59478*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59478*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19827:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x49bd8c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec9bd8c; op2val:0x80000000;
op3val:0x8003ffff; valaddr_reg:x3; val_offset:59481*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59481*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19828:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x49bd8c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec9bd8c; op2val:0x80000000;
op3val:0x8007ffff; valaddr_reg:x3; val_offset:59484*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59484*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19829:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x49bd8c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec9bd8c; op2val:0x80000000;
op3val:0x800fffff; valaddr_reg:x3; val_offset:59487*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59487*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19830:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x49bd8c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec9bd8c; op2val:0x80000000;
op3val:0x80199999; valaddr_reg:x3; val_offset:59490*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59490*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19831:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x49bd8c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec9bd8c; op2val:0x80000000;
op3val:0x801fffff; valaddr_reg:x3; val_offset:59493*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59493*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19832:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x49bd8c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec9bd8c; op2val:0x80000000;
op3val:0x80249249; valaddr_reg:x3; val_offset:59496*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59496*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19833:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x49bd8c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec9bd8c; op2val:0x80000000;
op3val:0x80333333; valaddr_reg:x3; val_offset:59499*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59499*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19834:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x49bd8c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec9bd8c; op2val:0x80000000;
op3val:0x8036db6d; valaddr_reg:x3; val_offset:59502*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59502*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19835:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x49bd8c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec9bd8c; op2val:0x80000000;
op3val:0x803bbbbb; valaddr_reg:x3; val_offset:59505*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59505*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19836:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x49bd8c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec9bd8c; op2val:0x80000000;
op3val:0x803fffff; valaddr_reg:x3; val_offset:59508*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59508*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19837:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x49bd8c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec9bd8c; op2val:0x80000000;
op3val:0x80400000; valaddr_reg:x3; val_offset:59511*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59511*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19838:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x49bd8c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec9bd8c; op2val:0x80000000;
op3val:0x80444444; valaddr_reg:x3; val_offset:59514*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59514*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19839:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x49bd8c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec9bd8c; op2val:0x80000000;
op3val:0x804ccccc; valaddr_reg:x3; val_offset:59517*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59517*0 + 3*154*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(2127128625,32,FLEN)
NAN_BOXED(3223499270,32,FLEN)
NAN_BOXED(3690725376,32,FLEN)
NAN_BOXED(2127128625,32,FLEN)
NAN_BOXED(3223499270,32,FLEN)
NAN_BOXED(3690856448,32,FLEN)
NAN_BOXED(2127128625,32,FLEN)
NAN_BOXED(3223499270,32,FLEN)
NAN_BOXED(3690921984,32,FLEN)
NAN_BOXED(2127128625,32,FLEN)
NAN_BOXED(3223499270,32,FLEN)
NAN_BOXED(3690954752,32,FLEN)
NAN_BOXED(2127128625,32,FLEN)
NAN_BOXED(3223499270,32,FLEN)
NAN_BOXED(3690971136,32,FLEN)
NAN_BOXED(2127128625,32,FLEN)
NAN_BOXED(3223499270,32,FLEN)
NAN_BOXED(3690979328,32,FLEN)
NAN_BOXED(2127128625,32,FLEN)
NAN_BOXED(3223499270,32,FLEN)
NAN_BOXED(3690983424,32,FLEN)
NAN_BOXED(2127128625,32,FLEN)
NAN_BOXED(3223499270,32,FLEN)
NAN_BOXED(3690985472,32,FLEN)
NAN_BOXED(2127128625,32,FLEN)
NAN_BOXED(3223499270,32,FLEN)
NAN_BOXED(3690986496,32,FLEN)
NAN_BOXED(2127128625,32,FLEN)
NAN_BOXED(3223499270,32,FLEN)
NAN_BOXED(3690987008,32,FLEN)
NAN_BOXED(2127128625,32,FLEN)
NAN_BOXED(3223499270,32,FLEN)
NAN_BOXED(3690987264,32,FLEN)
NAN_BOXED(2127128625,32,FLEN)
NAN_BOXED(3223499270,32,FLEN)
NAN_BOXED(3690987392,32,FLEN)
NAN_BOXED(2127128625,32,FLEN)
NAN_BOXED(3223499270,32,FLEN)
NAN_BOXED(3690987456,32,FLEN)
NAN_BOXED(2127128625,32,FLEN)
NAN_BOXED(3223499270,32,FLEN)
NAN_BOXED(3690987488,32,FLEN)
NAN_BOXED(2127128625,32,FLEN)
NAN_BOXED(3223499270,32,FLEN)
NAN_BOXED(3690987504,32,FLEN)
NAN_BOXED(2127128625,32,FLEN)
NAN_BOXED(3223499270,32,FLEN)
NAN_BOXED(3690987512,32,FLEN)
NAN_BOXED(2127128625,32,FLEN)
NAN_BOXED(3223499270,32,FLEN)
NAN_BOXED(3690987516,32,FLEN)
NAN_BOXED(2127128625,32,FLEN)
NAN_BOXED(3223499270,32,FLEN)
NAN_BOXED(3690987518,32,FLEN)
NAN_BOXED(2127128625,32,FLEN)
NAN_BOXED(3223499270,32,FLEN)
NAN_BOXED(3690987519,32,FLEN)
NAN_BOXED(2127128625,32,FLEN)
NAN_BOXED(3223499270,32,FLEN)
NAN_BOXED(4278190081,32,FLEN)
NAN_BOXED(2127128625,32,FLEN)
NAN_BOXED(3223499270,32,FLEN)
NAN_BOXED(4278190083,32,FLEN)
NAN_BOXED(2127128625,32,FLEN)
NAN_BOXED(3223499270,32,FLEN)
NAN_BOXED(4278190087,32,FLEN)
NAN_BOXED(2127128625,32,FLEN)
NAN_BOXED(3223499270,32,FLEN)
NAN_BOXED(4279867801,32,FLEN)
NAN_BOXED(2127128625,32,FLEN)
NAN_BOXED(3223499270,32,FLEN)
NAN_BOXED(4280586825,32,FLEN)
NAN_BOXED(2127128625,32,FLEN)
NAN_BOXED(3223499270,32,FLEN)
NAN_BOXED(4281545523,32,FLEN)
NAN_BOXED(2127128625,32,FLEN)
NAN_BOXED(3223499270,32,FLEN)
NAN_BOXED(4281785197,32,FLEN)
NAN_BOXED(2127128625,32,FLEN)
NAN_BOXED(3223499270,32,FLEN)
NAN_BOXED(4282104763,32,FLEN)
NAN_BOXED(2127128625,32,FLEN)
NAN_BOXED(3223499270,32,FLEN)
NAN_BOXED(4282664004,32,FLEN)
NAN_BOXED(2127128625,32,FLEN)
NAN_BOXED(3223499270,32,FLEN)
NAN_BOXED(4283223244,32,FLEN)
NAN_BOXED(2127128625,32,FLEN)
NAN_BOXED(3223499270,32,FLEN)
NAN_BOXED(4284181942,32,FLEN)
NAN_BOXED(2127128625,32,FLEN)
NAN_BOXED(3223499270,32,FLEN)
NAN_BOXED(4284900966,32,FLEN)
NAN_BOXED(2127128625,32,FLEN)
NAN_BOXED(3223499270,32,FLEN)
NAN_BOXED(4285380315,32,FLEN)
NAN_BOXED(2127128625,32,FLEN)
NAN_BOXED(3223499270,32,FLEN)
NAN_BOXED(4286578680,32,FLEN)
NAN_BOXED(2127128625,32,FLEN)
NAN_BOXED(3223499270,32,FLEN)
NAN_BOXED(4286578684,32,FLEN)
NAN_BOXED(2127128625,32,FLEN)
NAN_BOXED(3223499270,32,FLEN)
NAN_BOXED(4286578686,32,FLEN)
NAN_BOXED(2127135404,32,FLEN)
NAN_BOXED(1076010150,32,FLEN)
NAN_BOXED(1753219072,32,FLEN)
NAN_BOXED(2127135404,32,FLEN)
NAN_BOXED(1076010150,32,FLEN)
NAN_BOXED(1753219073,32,FLEN)
NAN_BOXED(2127135404,32,FLEN)
NAN_BOXED(1076010150,32,FLEN)
NAN_BOXED(1753219075,32,FLEN)
NAN_BOXED(2127135404,32,FLEN)
NAN_BOXED(1076010150,32,FLEN)
NAN_BOXED(1753219079,32,FLEN)
NAN_BOXED(2127135404,32,FLEN)
NAN_BOXED(1076010150,32,FLEN)
NAN_BOXED(1753219087,32,FLEN)
NAN_BOXED(2127135404,32,FLEN)
NAN_BOXED(1076010150,32,FLEN)
NAN_BOXED(1753219103,32,FLEN)
NAN_BOXED(2127135404,32,FLEN)
NAN_BOXED(1076010150,32,FLEN)
NAN_BOXED(1753219135,32,FLEN)
NAN_BOXED(2127135404,32,FLEN)
NAN_BOXED(1076010150,32,FLEN)
NAN_BOXED(1753219199,32,FLEN)
NAN_BOXED(2127135404,32,FLEN)
NAN_BOXED(1076010150,32,FLEN)
NAN_BOXED(1753219327,32,FLEN)
NAN_BOXED(2127135404,32,FLEN)
NAN_BOXED(1076010150,32,FLEN)
NAN_BOXED(1753219583,32,FLEN)
NAN_BOXED(2127135404,32,FLEN)
NAN_BOXED(1076010150,32,FLEN)
NAN_BOXED(1753220095,32,FLEN)
NAN_BOXED(2127135404,32,FLEN)
NAN_BOXED(1076010150,32,FLEN)
NAN_BOXED(1753221119,32,FLEN)
NAN_BOXED(2127135404,32,FLEN)
NAN_BOXED(1076010150,32,FLEN)
NAN_BOXED(1753223167,32,FLEN)
NAN_BOXED(2127135404,32,FLEN)
NAN_BOXED(1076010150,32,FLEN)
NAN_BOXED(1753227263,32,FLEN)
NAN_BOXED(2127135404,32,FLEN)
NAN_BOXED(1076010150,32,FLEN)
NAN_BOXED(1753235455,32,FLEN)
NAN_BOXED(2127135404,32,FLEN)
NAN_BOXED(1076010150,32,FLEN)
NAN_BOXED(1753251839,32,FLEN)
NAN_BOXED(2127135404,32,FLEN)
NAN_BOXED(1076010150,32,FLEN)
NAN_BOXED(1753284607,32,FLEN)
NAN_BOXED(2127135404,32,FLEN)
NAN_BOXED(1076010150,32,FLEN)
NAN_BOXED(1753350143,32,FLEN)
NAN_BOXED(2127135404,32,FLEN)
NAN_BOXED(1076010150,32,FLEN)
NAN_BOXED(1753481215,32,FLEN)
NAN_BOXED(2127135404,32,FLEN)
NAN_BOXED(1076010150,32,FLEN)
NAN_BOXED(1753743359,32,FLEN)
NAN_BOXED(2127135404,32,FLEN)
NAN_BOXED(1076010150,32,FLEN)
NAN_BOXED(1754267647,32,FLEN)
NAN_BOXED(2127135404,32,FLEN)
NAN_BOXED(1076010150,32,FLEN)
NAN_BOXED(1755316223,32,FLEN)
NAN_BOXED(2127135404,32,FLEN)
NAN_BOXED(1076010150,32,FLEN)
NAN_BOXED(1757413375,32,FLEN)
NAN_BOXED(2127135404,32,FLEN)
NAN_BOXED(1076010150,32,FLEN)
NAN_BOXED(1757413376,32,FLEN)
NAN_BOXED(2127135404,32,FLEN)
NAN_BOXED(1076010150,32,FLEN)
NAN_BOXED(1759510528,32,FLEN)
NAN_BOXED(2127135404,32,FLEN)
NAN_BOXED(1076010150,32,FLEN)
NAN_BOXED(1760559104,32,FLEN)
NAN_BOXED(2127135404,32,FLEN)
NAN_BOXED(1076010150,32,FLEN)
NAN_BOXED(1761083392,32,FLEN)
NAN_BOXED(2127135404,32,FLEN)
NAN_BOXED(1076010150,32,FLEN)
NAN_BOXED(1761345536,32,FLEN)
NAN_BOXED(2127135404,32,FLEN)
NAN_BOXED(1076010150,32,FLEN)
NAN_BOXED(1761476608,32,FLEN)
NAN_BOXED(2127135404,32,FLEN)
NAN_BOXED(1076010150,32,FLEN)
NAN_BOXED(1761542144,32,FLEN)
NAN_BOXED(2127135404,32,FLEN)
NAN_BOXED(1076010150,32,FLEN)
NAN_BOXED(1761574912,32,FLEN)
NAN_BOXED(2127135404,32,FLEN)
NAN_BOXED(1076010150,32,FLEN)
NAN_BOXED(1761591296,32,FLEN)
NAN_BOXED(2127135404,32,FLEN)
NAN_BOXED(1076010150,32,FLEN)
NAN_BOXED(1761599488,32,FLEN)
NAN_BOXED(2127135404,32,FLEN)
NAN_BOXED(1076010150,32,FLEN)
NAN_BOXED(1761603584,32,FLEN)
NAN_BOXED(2127135404,32,FLEN)
NAN_BOXED(1076010150,32,FLEN)
NAN_BOXED(1761605632,32,FLEN)
NAN_BOXED(2127135404,32,FLEN)
NAN_BOXED(1076010150,32,FLEN)
NAN_BOXED(1761606656,32,FLEN)
NAN_BOXED(2127135404,32,FLEN)
NAN_BOXED(1076010150,32,FLEN)
NAN_BOXED(1761607168,32,FLEN)
NAN_BOXED(2127135404,32,FLEN)
NAN_BOXED(1076010150,32,FLEN)
NAN_BOXED(1761607424,32,FLEN)
NAN_BOXED(2127135404,32,FLEN)
NAN_BOXED(1076010150,32,FLEN)
NAN_BOXED(1761607552,32,FLEN)
NAN_BOXED(2127135404,32,FLEN)
NAN_BOXED(1076010150,32,FLEN)
NAN_BOXED(1761607616,32,FLEN)
NAN_BOXED(2127135404,32,FLEN)
NAN_BOXED(1076010150,32,FLEN)
NAN_BOXED(1761607648,32,FLEN)
NAN_BOXED(2127135404,32,FLEN)
NAN_BOXED(1076010150,32,FLEN)
NAN_BOXED(1761607664,32,FLEN)
NAN_BOXED(2127135404,32,FLEN)
NAN_BOXED(1076010150,32,FLEN)
NAN_BOXED(1761607672,32,FLEN)
NAN_BOXED(2127135404,32,FLEN)
NAN_BOXED(1076010150,32,FLEN)
NAN_BOXED(1761607676,32,FLEN)
NAN_BOXED(2127135404,32,FLEN)
NAN_BOXED(1076010150,32,FLEN)
NAN_BOXED(1761607678,32,FLEN)
NAN_BOXED(2127135404,32,FLEN)
NAN_BOXED(1076010150,32,FLEN)
NAN_BOXED(1761607679,32,FLEN)
NAN_BOXED(2127135404,32,FLEN)
NAN_BOXED(1076010150,32,FLEN)
NAN_BOXED(2130706433,32,FLEN)
NAN_BOXED(2127135404,32,FLEN)
NAN_BOXED(1076010150,32,FLEN)
NAN_BOXED(2130706435,32,FLEN)
NAN_BOXED(2127135404,32,FLEN)
NAN_BOXED(1076010150,32,FLEN)
NAN_BOXED(2130706439,32,FLEN)
NAN_BOXED(2127135404,32,FLEN)
NAN_BOXED(1076010150,32,FLEN)
NAN_BOXED(2132384153,32,FLEN)
NAN_BOXED(2127135404,32,FLEN)
NAN_BOXED(1076010150,32,FLEN)
NAN_BOXED(2133103177,32,FLEN)
NAN_BOXED(2127135404,32,FLEN)
NAN_BOXED(1076010150,32,FLEN)
NAN_BOXED(2134061875,32,FLEN)
NAN_BOXED(2127135404,32,FLEN)
NAN_BOXED(1076010150,32,FLEN)
NAN_BOXED(2134301549,32,FLEN)
NAN_BOXED(2127135404,32,FLEN)
NAN_BOXED(1076010150,32,FLEN)
NAN_BOXED(2134621115,32,FLEN)
NAN_BOXED(2127135404,32,FLEN)
NAN_BOXED(1076010150,32,FLEN)
NAN_BOXED(2135180356,32,FLEN)
NAN_BOXED(2127135404,32,FLEN)
NAN_BOXED(1076010150,32,FLEN)
NAN_BOXED(2135739596,32,FLEN)
NAN_BOXED(2127135404,32,FLEN)
NAN_BOXED(1076010150,32,FLEN)
NAN_BOXED(2136698294,32,FLEN)
NAN_BOXED(2127135404,32,FLEN)
NAN_BOXED(1076010150,32,FLEN)
NAN_BOXED(2137417318,32,FLEN)
NAN_BOXED(2127135404,32,FLEN)
NAN_BOXED(1076010150,32,FLEN)
NAN_BOXED(2137896667,32,FLEN)
NAN_BOXED(2127135404,32,FLEN)
NAN_BOXED(1076010150,32,FLEN)
NAN_BOXED(2139095032,32,FLEN)
NAN_BOXED(2127135404,32,FLEN)
NAN_BOXED(1076010150,32,FLEN)
NAN_BOXED(2139095036,32,FLEN)
NAN_BOXED(2127135404,32,FLEN)
NAN_BOXED(1076010150,32,FLEN)
NAN_BOXED(2139095038,32,FLEN)
NAN_BOXED(2127150476,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2127150476,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2127150476,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483651,32,FLEN)
NAN_BOXED(2127150476,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483655,32,FLEN)
NAN_BOXED(2127150476,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483663,32,FLEN)
NAN_BOXED(2127150476,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483679,32,FLEN)
NAN_BOXED(2127150476,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483711,32,FLEN)
NAN_BOXED(2127150476,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483775,32,FLEN)
NAN_BOXED(2127150476,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483903,32,FLEN)
NAN_BOXED(2127150476,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147484159,32,FLEN)
NAN_BOXED(2127150476,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147484671,32,FLEN)
NAN_BOXED(2127150476,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147485695,32,FLEN)
NAN_BOXED(2127150476,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147487743,32,FLEN)
NAN_BOXED(2127150476,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147491839,32,FLEN)
NAN_BOXED(2127150476,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147500031,32,FLEN)
NAN_BOXED(2127150476,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147516415,32,FLEN)
NAN_BOXED(2127150476,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147549183,32,FLEN)
NAN_BOXED(2127150476,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147614719,32,FLEN)
NAN_BOXED(2127150476,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147745791,32,FLEN)
NAN_BOXED(2127150476,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2148007935,32,FLEN)
NAN_BOXED(2127150476,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2148532223,32,FLEN)
NAN_BOXED(2127150476,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149161369,32,FLEN)
NAN_BOXED(2127150476,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149580799,32,FLEN)
NAN_BOXED(2127150476,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149880393,32,FLEN)
NAN_BOXED(2127150476,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2150839091,32,FLEN)
NAN_BOXED(2127150476,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151078765,32,FLEN)
NAN_BOXED(2127150476,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151398331,32,FLEN)
NAN_BOXED(2127150476,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151677951,32,FLEN)
NAN_BOXED(2127150476,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151677952,32,FLEN)
NAN_BOXED(2127150476,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151957572,32,FLEN)
NAN_BOXED(2127150476,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2152516812,32,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
