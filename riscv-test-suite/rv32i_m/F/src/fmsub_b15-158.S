
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 14:18:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32F/fmsub.s.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.s instruction of the RISC-V RV32F_Zicsr,RV32FD_Zicsr,RV64F_Zicsr,RV64FD_Zicsr extension for the fmsub_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF_Zicsr,RV32IFD_Zicsr,RV64IF_Zicsr,RV64IFD_Zicsr,RV32EF_Zicsr,RV32EFD_Zicsr,RV64EF_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fmsub_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*F.*);def TEST_CASE_1=True;",fmsub_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_20096:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4c43c5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1a and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ecc43c5; op2val:0x0;
op3val:0xd7f0000; valaddr_reg:x3; val_offset:60288*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60288*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20097:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4c43c5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1a and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ecc43c5; op2val:0x0;
op3val:0xd7f8000; valaddr_reg:x3; val_offset:60291*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60291*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20098:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4c43c5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1a and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ecc43c5; op2val:0x0;
op3val:0xd7fc000; valaddr_reg:x3; val_offset:60294*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60294*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20099:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4c43c5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1a and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ecc43c5; op2val:0x0;
op3val:0xd7fe000; valaddr_reg:x3; val_offset:60297*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60297*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20100:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4c43c5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1a and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ecc43c5; op2val:0x0;
op3val:0xd7ff000; valaddr_reg:x3; val_offset:60300*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60300*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20101:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4c43c5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1a and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ecc43c5; op2val:0x0;
op3val:0xd7ff800; valaddr_reg:x3; val_offset:60303*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60303*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20102:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4c43c5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1a and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ecc43c5; op2val:0x0;
op3val:0xd7ffc00; valaddr_reg:x3; val_offset:60306*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60306*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20103:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4c43c5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1a and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ecc43c5; op2val:0x0;
op3val:0xd7ffe00; valaddr_reg:x3; val_offset:60309*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60309*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20104:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4c43c5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1a and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ecc43c5; op2val:0x0;
op3val:0xd7fff00; valaddr_reg:x3; val_offset:60312*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60312*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20105:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4c43c5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1a and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ecc43c5; op2val:0x0;
op3val:0xd7fff80; valaddr_reg:x3; val_offset:60315*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60315*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20106:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4c43c5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1a and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ecc43c5; op2val:0x0;
op3val:0xd7fffc0; valaddr_reg:x3; val_offset:60318*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60318*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20107:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4c43c5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1a and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ecc43c5; op2val:0x0;
op3val:0xd7fffe0; valaddr_reg:x3; val_offset:60321*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60321*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20108:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4c43c5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1a and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ecc43c5; op2val:0x0;
op3val:0xd7ffff0; valaddr_reg:x3; val_offset:60324*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60324*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20109:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4c43c5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1a and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ecc43c5; op2val:0x0;
op3val:0xd7ffff8; valaddr_reg:x3; val_offset:60327*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60327*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20110:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4c43c5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1a and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ecc43c5; op2val:0x0;
op3val:0xd7ffffc; valaddr_reg:x3; val_offset:60330*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60330*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20111:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4c43c5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1a and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ecc43c5; op2val:0x0;
op3val:0xd7ffffe; valaddr_reg:x3; val_offset:60333*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60333*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20112:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4c43c5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1a and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ecc43c5; op2val:0x0;
op3val:0xd7fffff; valaddr_reg:x3; val_offset:60336*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60336*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20113:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4c9dba and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ecc9dba; op2val:0x80000000;
op3val:0x80000001; valaddr_reg:x3; val_offset:60339*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60339*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20114:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4c9dba and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ecc9dba; op2val:0x80000000;
op3val:0x80000003; valaddr_reg:x3; val_offset:60342*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60342*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20115:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4c9dba and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ecc9dba; op2val:0x80000000;
op3val:0x80000007; valaddr_reg:x3; val_offset:60345*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60345*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20116:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4c9dba and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ecc9dba; op2val:0x80000000;
op3val:0x80199999; valaddr_reg:x3; val_offset:60348*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60348*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20117:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4c9dba and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ecc9dba; op2val:0x80000000;
op3val:0x80249249; valaddr_reg:x3; val_offset:60351*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60351*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20118:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4c9dba and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ecc9dba; op2val:0x80000000;
op3val:0x80333333; valaddr_reg:x3; val_offset:60354*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60354*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20119:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4c9dba and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ecc9dba; op2val:0x80000000;
op3val:0x8036db6d; valaddr_reg:x3; val_offset:60357*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60357*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20120:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4c9dba and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ecc9dba; op2val:0x80000000;
op3val:0x803bbbbb; valaddr_reg:x3; val_offset:60360*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60360*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20121:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4c9dba and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ecc9dba; op2val:0x80000000;
op3val:0x80444444; valaddr_reg:x3; val_offset:60363*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60363*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20122:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4c9dba and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ecc9dba; op2val:0x80000000;
op3val:0x804ccccc; valaddr_reg:x3; val_offset:60366*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60366*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20123:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4c9dba and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ecc9dba; op2val:0x80000000;
op3val:0x805b6db6; valaddr_reg:x3; val_offset:60369*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60369*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20124:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4c9dba and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ecc9dba; op2val:0x80000000;
op3val:0x80666666; valaddr_reg:x3; val_offset:60372*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60372*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20125:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4c9dba and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ecc9dba; op2val:0x80000000;
op3val:0x806db6db; valaddr_reg:x3; val_offset:60375*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60375*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20126:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4c9dba and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ecc9dba; op2val:0x80000000;
op3val:0x807ffff8; valaddr_reg:x3; val_offset:60378*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60378*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20127:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4c9dba and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ecc9dba; op2val:0x80000000;
op3val:0x807ffffc; valaddr_reg:x3; val_offset:60381*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60381*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20128:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4c9dba and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ecc9dba; op2val:0x80000000;
op3val:0x807ffffe; valaddr_reg:x3; val_offset:60384*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60384*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20129:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4c9dba and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ecc9dba; op2val:0x80000000;
op3val:0xad000000; valaddr_reg:x3; val_offset:60387*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60387*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20130:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4c9dba and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ecc9dba; op2val:0x80000000;
op3val:0xad000001; valaddr_reg:x3; val_offset:60390*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60390*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20131:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4c9dba and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ecc9dba; op2val:0x80000000;
op3val:0xad000003; valaddr_reg:x3; val_offset:60393*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60393*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20132:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4c9dba and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ecc9dba; op2val:0x80000000;
op3val:0xad000007; valaddr_reg:x3; val_offset:60396*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60396*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20133:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4c9dba and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ecc9dba; op2val:0x80000000;
op3val:0xad00000f; valaddr_reg:x3; val_offset:60399*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60399*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20134:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4c9dba and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ecc9dba; op2val:0x80000000;
op3val:0xad00001f; valaddr_reg:x3; val_offset:60402*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60402*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20135:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4c9dba and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ecc9dba; op2val:0x80000000;
op3val:0xad00003f; valaddr_reg:x3; val_offset:60405*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60405*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20136:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4c9dba and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ecc9dba; op2val:0x80000000;
op3val:0xad00007f; valaddr_reg:x3; val_offset:60408*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60408*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20137:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4c9dba and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ecc9dba; op2val:0x80000000;
op3val:0xad0000ff; valaddr_reg:x3; val_offset:60411*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60411*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20138:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4c9dba and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ecc9dba; op2val:0x80000000;
op3val:0xad0001ff; valaddr_reg:x3; val_offset:60414*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60414*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20139:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4c9dba and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ecc9dba; op2val:0x80000000;
op3val:0xad0003ff; valaddr_reg:x3; val_offset:60417*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60417*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20140:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4c9dba and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ecc9dba; op2val:0x80000000;
op3val:0xad0007ff; valaddr_reg:x3; val_offset:60420*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60420*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20141:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4c9dba and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ecc9dba; op2val:0x80000000;
op3val:0xad000fff; valaddr_reg:x3; val_offset:60423*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60423*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20142:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4c9dba and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ecc9dba; op2val:0x80000000;
op3val:0xad001fff; valaddr_reg:x3; val_offset:60426*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60426*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20143:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4c9dba and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ecc9dba; op2val:0x80000000;
op3val:0xad003fff; valaddr_reg:x3; val_offset:60429*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60429*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20144:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4c9dba and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ecc9dba; op2val:0x80000000;
op3val:0xad007fff; valaddr_reg:x3; val_offset:60432*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60432*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20145:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4c9dba and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ecc9dba; op2val:0x80000000;
op3val:0xad00ffff; valaddr_reg:x3; val_offset:60435*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60435*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20146:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4c9dba and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ecc9dba; op2val:0x80000000;
op3val:0xad01ffff; valaddr_reg:x3; val_offset:60438*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60438*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20147:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4c9dba and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ecc9dba; op2val:0x80000000;
op3val:0xad03ffff; valaddr_reg:x3; val_offset:60441*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60441*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20148:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4c9dba and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ecc9dba; op2val:0x80000000;
op3val:0xad07ffff; valaddr_reg:x3; val_offset:60444*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60444*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20149:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4c9dba and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ecc9dba; op2val:0x80000000;
op3val:0xad0fffff; valaddr_reg:x3; val_offset:60447*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60447*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20150:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4c9dba and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ecc9dba; op2val:0x80000000;
op3val:0xad1fffff; valaddr_reg:x3; val_offset:60450*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60450*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20151:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4c9dba and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ecc9dba; op2val:0x80000000;
op3val:0xad3fffff; valaddr_reg:x3; val_offset:60453*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60453*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20152:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4c9dba and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ecc9dba; op2val:0x80000000;
op3val:0xad400000; valaddr_reg:x3; val_offset:60456*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60456*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20153:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4c9dba and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ecc9dba; op2val:0x80000000;
op3val:0xad600000; valaddr_reg:x3; val_offset:60459*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60459*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20154:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4c9dba and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ecc9dba; op2val:0x80000000;
op3val:0xad700000; valaddr_reg:x3; val_offset:60462*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60462*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20155:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4c9dba and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ecc9dba; op2val:0x80000000;
op3val:0xad780000; valaddr_reg:x3; val_offset:60465*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60465*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20156:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4c9dba and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ecc9dba; op2val:0x80000000;
op3val:0xad7c0000; valaddr_reg:x3; val_offset:60468*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60468*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20157:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4c9dba and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ecc9dba; op2val:0x80000000;
op3val:0xad7e0000; valaddr_reg:x3; val_offset:60471*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60471*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20158:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4c9dba and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ecc9dba; op2val:0x80000000;
op3val:0xad7f0000; valaddr_reg:x3; val_offset:60474*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60474*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20159:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4c9dba and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ecc9dba; op2val:0x80000000;
op3val:0xad7f8000; valaddr_reg:x3; val_offset:60477*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60477*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20160:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4c9dba and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ecc9dba; op2val:0x80000000;
op3val:0xad7fc000; valaddr_reg:x3; val_offset:60480*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60480*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20161:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4c9dba and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ecc9dba; op2val:0x80000000;
op3val:0xad7fe000; valaddr_reg:x3; val_offset:60483*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60483*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20162:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4c9dba and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ecc9dba; op2val:0x80000000;
op3val:0xad7ff000; valaddr_reg:x3; val_offset:60486*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60486*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20163:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4c9dba and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ecc9dba; op2val:0x80000000;
op3val:0xad7ff800; valaddr_reg:x3; val_offset:60489*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60489*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20164:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4c9dba and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ecc9dba; op2val:0x80000000;
op3val:0xad7ffc00; valaddr_reg:x3; val_offset:60492*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60492*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20165:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4c9dba and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ecc9dba; op2val:0x80000000;
op3val:0xad7ffe00; valaddr_reg:x3; val_offset:60495*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60495*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20166:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4c9dba and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ecc9dba; op2val:0x80000000;
op3val:0xad7fff00; valaddr_reg:x3; val_offset:60498*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60498*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20167:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4c9dba and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ecc9dba; op2val:0x80000000;
op3val:0xad7fff80; valaddr_reg:x3; val_offset:60501*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60501*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20168:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4c9dba and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ecc9dba; op2val:0x80000000;
op3val:0xad7fffc0; valaddr_reg:x3; val_offset:60504*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60504*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20169:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4c9dba and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ecc9dba; op2val:0x80000000;
op3val:0xad7fffe0; valaddr_reg:x3; val_offset:60507*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60507*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20170:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4c9dba and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ecc9dba; op2val:0x80000000;
op3val:0xad7ffff0; valaddr_reg:x3; val_offset:60510*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60510*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20171:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4c9dba and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ecc9dba; op2val:0x80000000;
op3val:0xad7ffff8; valaddr_reg:x3; val_offset:60513*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60513*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20172:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4c9dba and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ecc9dba; op2val:0x80000000;
op3val:0xad7ffffc; valaddr_reg:x3; val_offset:60516*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60516*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20173:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4c9dba and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ecc9dba; op2val:0x80000000;
op3val:0xad7ffffe; valaddr_reg:x3; val_offset:60519*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60519*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20174:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4c9dba and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ecc9dba; op2val:0x80000000;
op3val:0xad7fffff; valaddr_reg:x3; val_offset:60522*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60522*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20175:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4cbc5e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eccbc5e; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:60525*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60525*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20176:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4cbc5e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eccbc5e; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:60528*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60528*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20177:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4cbc5e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eccbc5e; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:60531*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60531*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20178:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4cbc5e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eccbc5e; op2val:0x0;
op3val:0x199999; valaddr_reg:x3; val_offset:60534*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60534*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20179:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4cbc5e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eccbc5e; op2val:0x0;
op3val:0x249249; valaddr_reg:x3; val_offset:60537*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60537*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20180:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4cbc5e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eccbc5e; op2val:0x0;
op3val:0x333333; valaddr_reg:x3; val_offset:60540*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60540*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20181:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4cbc5e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eccbc5e; op2val:0x0;
op3val:0x36db6d; valaddr_reg:x3; val_offset:60543*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60543*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20182:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4cbc5e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eccbc5e; op2val:0x0;
op3val:0x3bbbbb; valaddr_reg:x3; val_offset:60546*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60546*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20183:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4cbc5e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eccbc5e; op2val:0x0;
op3val:0x444444; valaddr_reg:x3; val_offset:60549*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60549*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20184:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4cbc5e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eccbc5e; op2val:0x0;
op3val:0x4ccccc; valaddr_reg:x3; val_offset:60552*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60552*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20185:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4cbc5e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eccbc5e; op2val:0x0;
op3val:0x5b6db6; valaddr_reg:x3; val_offset:60555*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60555*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20186:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4cbc5e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eccbc5e; op2val:0x0;
op3val:0x666666; valaddr_reg:x3; val_offset:60558*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60558*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20187:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4cbc5e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eccbc5e; op2val:0x0;
op3val:0x6db6db; valaddr_reg:x3; val_offset:60561*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60561*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20188:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4cbc5e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eccbc5e; op2val:0x0;
op3val:0x7ffff8; valaddr_reg:x3; val_offset:60564*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60564*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20189:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4cbc5e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eccbc5e; op2val:0x0;
op3val:0x7ffffc; valaddr_reg:x3; val_offset:60567*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60567*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20190:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4cbc5e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eccbc5e; op2val:0x0;
op3val:0x7ffffe; valaddr_reg:x3; val_offset:60570*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60570*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20191:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4cbc5e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x9d and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eccbc5e; op2val:0x0;
op3val:0x4e800000; valaddr_reg:x3; val_offset:60573*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60573*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20192:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4cbc5e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x9d and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eccbc5e; op2val:0x0;
op3val:0x4e800001; valaddr_reg:x3; val_offset:60576*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60576*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20193:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4cbc5e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x9d and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eccbc5e; op2val:0x0;
op3val:0x4e800003; valaddr_reg:x3; val_offset:60579*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60579*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20194:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4cbc5e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x9d and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eccbc5e; op2val:0x0;
op3val:0x4e800007; valaddr_reg:x3; val_offset:60582*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60582*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20195:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4cbc5e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x9d and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eccbc5e; op2val:0x0;
op3val:0x4e80000f; valaddr_reg:x3; val_offset:60585*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60585*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20196:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4cbc5e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x9d and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eccbc5e; op2val:0x0;
op3val:0x4e80001f; valaddr_reg:x3; val_offset:60588*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60588*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20197:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4cbc5e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x9d and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eccbc5e; op2val:0x0;
op3val:0x4e80003f; valaddr_reg:x3; val_offset:60591*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60591*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20198:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4cbc5e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x9d and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eccbc5e; op2val:0x0;
op3val:0x4e80007f; valaddr_reg:x3; val_offset:60594*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60594*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20199:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4cbc5e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x9d and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eccbc5e; op2val:0x0;
op3val:0x4e8000ff; valaddr_reg:x3; val_offset:60597*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60597*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20200:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4cbc5e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x9d and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eccbc5e; op2val:0x0;
op3val:0x4e8001ff; valaddr_reg:x3; val_offset:60600*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60600*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20201:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4cbc5e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x9d and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eccbc5e; op2val:0x0;
op3val:0x4e8003ff; valaddr_reg:x3; val_offset:60603*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60603*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20202:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4cbc5e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x9d and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eccbc5e; op2val:0x0;
op3val:0x4e8007ff; valaddr_reg:x3; val_offset:60606*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60606*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20203:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4cbc5e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x9d and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eccbc5e; op2val:0x0;
op3val:0x4e800fff; valaddr_reg:x3; val_offset:60609*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60609*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20204:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4cbc5e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x9d and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eccbc5e; op2val:0x0;
op3val:0x4e801fff; valaddr_reg:x3; val_offset:60612*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60612*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20205:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4cbc5e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x9d and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eccbc5e; op2val:0x0;
op3val:0x4e803fff; valaddr_reg:x3; val_offset:60615*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60615*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20206:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4cbc5e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x9d and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eccbc5e; op2val:0x0;
op3val:0x4e807fff; valaddr_reg:x3; val_offset:60618*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60618*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20207:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4cbc5e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x9d and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eccbc5e; op2val:0x0;
op3val:0x4e80ffff; valaddr_reg:x3; val_offset:60621*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60621*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20208:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4cbc5e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x9d and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eccbc5e; op2val:0x0;
op3val:0x4e81ffff; valaddr_reg:x3; val_offset:60624*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60624*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20209:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4cbc5e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x9d and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eccbc5e; op2val:0x0;
op3val:0x4e83ffff; valaddr_reg:x3; val_offset:60627*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60627*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20210:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4cbc5e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x9d and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eccbc5e; op2val:0x0;
op3val:0x4e87ffff; valaddr_reg:x3; val_offset:60630*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60630*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20211:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4cbc5e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x9d and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eccbc5e; op2val:0x0;
op3val:0x4e8fffff; valaddr_reg:x3; val_offset:60633*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60633*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20212:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4cbc5e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x9d and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eccbc5e; op2val:0x0;
op3val:0x4e9fffff; valaddr_reg:x3; val_offset:60636*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60636*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20213:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4cbc5e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x9d and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eccbc5e; op2val:0x0;
op3val:0x4ebfffff; valaddr_reg:x3; val_offset:60639*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60639*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20214:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4cbc5e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x9d and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eccbc5e; op2val:0x0;
op3val:0x4ec00000; valaddr_reg:x3; val_offset:60642*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60642*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20215:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4cbc5e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x9d and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eccbc5e; op2val:0x0;
op3val:0x4ee00000; valaddr_reg:x3; val_offset:60645*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60645*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20216:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4cbc5e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x9d and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eccbc5e; op2val:0x0;
op3val:0x4ef00000; valaddr_reg:x3; val_offset:60648*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60648*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20217:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4cbc5e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x9d and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eccbc5e; op2val:0x0;
op3val:0x4ef80000; valaddr_reg:x3; val_offset:60651*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60651*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20218:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4cbc5e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x9d and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eccbc5e; op2val:0x0;
op3val:0x4efc0000; valaddr_reg:x3; val_offset:60654*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60654*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20219:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4cbc5e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x9d and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eccbc5e; op2val:0x0;
op3val:0x4efe0000; valaddr_reg:x3; val_offset:60657*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60657*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20220:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4cbc5e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x9d and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eccbc5e; op2val:0x0;
op3val:0x4eff0000; valaddr_reg:x3; val_offset:60660*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60660*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20221:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4cbc5e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x9d and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eccbc5e; op2val:0x0;
op3val:0x4eff8000; valaddr_reg:x3; val_offset:60663*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60663*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20222:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4cbc5e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x9d and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eccbc5e; op2val:0x0;
op3val:0x4effc000; valaddr_reg:x3; val_offset:60666*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60666*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20223:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4cbc5e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x9d and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eccbc5e; op2val:0x0;
op3val:0x4effe000; valaddr_reg:x3; val_offset:60669*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60669*0 + 3*157*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(2127315909,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(226426880,32,FLEN)
NAN_BOXED(2127315909,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(226459648,32,FLEN)
NAN_BOXED(2127315909,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(226476032,32,FLEN)
NAN_BOXED(2127315909,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(226484224,32,FLEN)
NAN_BOXED(2127315909,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(226488320,32,FLEN)
NAN_BOXED(2127315909,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(226490368,32,FLEN)
NAN_BOXED(2127315909,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(226491392,32,FLEN)
NAN_BOXED(2127315909,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(226491904,32,FLEN)
NAN_BOXED(2127315909,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(226492160,32,FLEN)
NAN_BOXED(2127315909,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(226492288,32,FLEN)
NAN_BOXED(2127315909,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(226492352,32,FLEN)
NAN_BOXED(2127315909,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(226492384,32,FLEN)
NAN_BOXED(2127315909,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(226492400,32,FLEN)
NAN_BOXED(2127315909,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(226492408,32,FLEN)
NAN_BOXED(2127315909,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(226492412,32,FLEN)
NAN_BOXED(2127315909,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(226492414,32,FLEN)
NAN_BOXED(2127315909,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(226492415,32,FLEN)
NAN_BOXED(2127338938,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2127338938,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483651,32,FLEN)
NAN_BOXED(2127338938,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483655,32,FLEN)
NAN_BOXED(2127338938,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149161369,32,FLEN)
NAN_BOXED(2127338938,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149880393,32,FLEN)
NAN_BOXED(2127338938,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2150839091,32,FLEN)
NAN_BOXED(2127338938,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151078765,32,FLEN)
NAN_BOXED(2127338938,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151398331,32,FLEN)
NAN_BOXED(2127338938,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151957572,32,FLEN)
NAN_BOXED(2127338938,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2152516812,32,FLEN)
NAN_BOXED(2127338938,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2153475510,32,FLEN)
NAN_BOXED(2127338938,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154194534,32,FLEN)
NAN_BOXED(2127338938,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154673883,32,FLEN)
NAN_BOXED(2127338938,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872248,32,FLEN)
NAN_BOXED(2127338938,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872252,32,FLEN)
NAN_BOXED(2127338938,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872254,32,FLEN)
NAN_BOXED(2127338938,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2902458368,32,FLEN)
NAN_BOXED(2127338938,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2902458369,32,FLEN)
NAN_BOXED(2127338938,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2902458371,32,FLEN)
NAN_BOXED(2127338938,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2902458375,32,FLEN)
NAN_BOXED(2127338938,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2902458383,32,FLEN)
NAN_BOXED(2127338938,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2902458399,32,FLEN)
NAN_BOXED(2127338938,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2902458431,32,FLEN)
NAN_BOXED(2127338938,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2902458495,32,FLEN)
NAN_BOXED(2127338938,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2902458623,32,FLEN)
NAN_BOXED(2127338938,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2902458879,32,FLEN)
NAN_BOXED(2127338938,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2902459391,32,FLEN)
NAN_BOXED(2127338938,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2902460415,32,FLEN)
NAN_BOXED(2127338938,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2902462463,32,FLEN)
NAN_BOXED(2127338938,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2902466559,32,FLEN)
NAN_BOXED(2127338938,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2902474751,32,FLEN)
NAN_BOXED(2127338938,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2902491135,32,FLEN)
NAN_BOXED(2127338938,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2902523903,32,FLEN)
NAN_BOXED(2127338938,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2902589439,32,FLEN)
NAN_BOXED(2127338938,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2902720511,32,FLEN)
NAN_BOXED(2127338938,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2902982655,32,FLEN)
NAN_BOXED(2127338938,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2903506943,32,FLEN)
NAN_BOXED(2127338938,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2904555519,32,FLEN)
NAN_BOXED(2127338938,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2906652671,32,FLEN)
NAN_BOXED(2127338938,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2906652672,32,FLEN)
NAN_BOXED(2127338938,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2908749824,32,FLEN)
NAN_BOXED(2127338938,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2909798400,32,FLEN)
NAN_BOXED(2127338938,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2910322688,32,FLEN)
NAN_BOXED(2127338938,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2910584832,32,FLEN)
NAN_BOXED(2127338938,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2910715904,32,FLEN)
NAN_BOXED(2127338938,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2910781440,32,FLEN)
NAN_BOXED(2127338938,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2910814208,32,FLEN)
NAN_BOXED(2127338938,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2910830592,32,FLEN)
NAN_BOXED(2127338938,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2910838784,32,FLEN)
NAN_BOXED(2127338938,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2910842880,32,FLEN)
NAN_BOXED(2127338938,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2910844928,32,FLEN)
NAN_BOXED(2127338938,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2910845952,32,FLEN)
NAN_BOXED(2127338938,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2910846464,32,FLEN)
NAN_BOXED(2127338938,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2910846720,32,FLEN)
NAN_BOXED(2127338938,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2910846848,32,FLEN)
NAN_BOXED(2127338938,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2910846912,32,FLEN)
NAN_BOXED(2127338938,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2910846944,32,FLEN)
NAN_BOXED(2127338938,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2910846960,32,FLEN)
NAN_BOXED(2127338938,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2910846968,32,FLEN)
NAN_BOXED(2127338938,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2910846972,32,FLEN)
NAN_BOXED(2127338938,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2910846974,32,FLEN)
NAN_BOXED(2127338938,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2910846975,32,FLEN)
NAN_BOXED(2127346782,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(2127346782,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3,32,FLEN)
NAN_BOXED(2127346782,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7,32,FLEN)
NAN_BOXED(2127346782,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1677721,32,FLEN)
NAN_BOXED(2127346782,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2396745,32,FLEN)
NAN_BOXED(2127346782,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3355443,32,FLEN)
NAN_BOXED(2127346782,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3595117,32,FLEN)
NAN_BOXED(2127346782,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3914683,32,FLEN)
NAN_BOXED(2127346782,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(4473924,32,FLEN)
NAN_BOXED(2127346782,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5033164,32,FLEN)
NAN_BOXED(2127346782,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5991862,32,FLEN)
NAN_BOXED(2127346782,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(6710886,32,FLEN)
NAN_BOXED(2127346782,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7190235,32,FLEN)
NAN_BOXED(2127346782,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388600,32,FLEN)
NAN_BOXED(2127346782,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388604,32,FLEN)
NAN_BOXED(2127346782,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388606,32,FLEN)
NAN_BOXED(2127346782,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1317011456,32,FLEN)
NAN_BOXED(2127346782,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1317011457,32,FLEN)
NAN_BOXED(2127346782,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1317011459,32,FLEN)
NAN_BOXED(2127346782,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1317011463,32,FLEN)
NAN_BOXED(2127346782,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1317011471,32,FLEN)
NAN_BOXED(2127346782,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1317011487,32,FLEN)
NAN_BOXED(2127346782,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1317011519,32,FLEN)
NAN_BOXED(2127346782,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1317011583,32,FLEN)
NAN_BOXED(2127346782,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1317011711,32,FLEN)
NAN_BOXED(2127346782,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1317011967,32,FLEN)
NAN_BOXED(2127346782,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1317012479,32,FLEN)
NAN_BOXED(2127346782,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1317013503,32,FLEN)
NAN_BOXED(2127346782,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1317015551,32,FLEN)
NAN_BOXED(2127346782,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1317019647,32,FLEN)
NAN_BOXED(2127346782,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1317027839,32,FLEN)
NAN_BOXED(2127346782,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1317044223,32,FLEN)
NAN_BOXED(2127346782,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1317076991,32,FLEN)
NAN_BOXED(2127346782,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1317142527,32,FLEN)
NAN_BOXED(2127346782,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1317273599,32,FLEN)
NAN_BOXED(2127346782,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1317535743,32,FLEN)
NAN_BOXED(2127346782,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1318060031,32,FLEN)
NAN_BOXED(2127346782,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1319108607,32,FLEN)
NAN_BOXED(2127346782,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1321205759,32,FLEN)
NAN_BOXED(2127346782,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1321205760,32,FLEN)
NAN_BOXED(2127346782,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1323302912,32,FLEN)
NAN_BOXED(2127346782,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1324351488,32,FLEN)
NAN_BOXED(2127346782,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1324875776,32,FLEN)
NAN_BOXED(2127346782,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1325137920,32,FLEN)
NAN_BOXED(2127346782,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1325268992,32,FLEN)
NAN_BOXED(2127346782,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1325334528,32,FLEN)
NAN_BOXED(2127346782,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1325367296,32,FLEN)
NAN_BOXED(2127346782,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1325383680,32,FLEN)
NAN_BOXED(2127346782,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1325391872,32,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
