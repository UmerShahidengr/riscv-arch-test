
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 14:18:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32F/fmsub.s.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.s instruction of the RISC-V RV32F_Zicsr,RV32FD_Zicsr,RV64F_Zicsr,RV64FD_Zicsr extension for the fmsub_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF_Zicsr,RV32IFD_Zicsr,RV64IF_Zicsr,RV64IFD_Zicsr,RV32EF_Zicsr,RV32EFD_Zicsr,RV64EF_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fmsub_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*F.*);def TEST_CASE_1=True;",fmsub_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_21760:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x61cace and fs2 == 0 and fe2 == 0x80 and fm2 == 0x111fe3 and fs3 == 0 and fe3 == 0xca and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee1cace; op2val:0x40111fe3;
op3val:0x657ffc00; valaddr_reg:x3; val_offset:65280*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65280*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21761:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x61cace and fs2 == 0 and fe2 == 0x80 and fm2 == 0x111fe3 and fs3 == 0 and fe3 == 0xca and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee1cace; op2val:0x40111fe3;
op3val:0x657ffe00; valaddr_reg:x3; val_offset:65283*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65283*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21762:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x61cace and fs2 == 0 and fe2 == 0x80 and fm2 == 0x111fe3 and fs3 == 0 and fe3 == 0xca and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee1cace; op2val:0x40111fe3;
op3val:0x657fff00; valaddr_reg:x3; val_offset:65286*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65286*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21763:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x61cace and fs2 == 0 and fe2 == 0x80 and fm2 == 0x111fe3 and fs3 == 0 and fe3 == 0xca and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee1cace; op2val:0x40111fe3;
op3val:0x657fff80; valaddr_reg:x3; val_offset:65289*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65289*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21764:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x61cace and fs2 == 0 and fe2 == 0x80 and fm2 == 0x111fe3 and fs3 == 0 and fe3 == 0xca and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee1cace; op2val:0x40111fe3;
op3val:0x657fffc0; valaddr_reg:x3; val_offset:65292*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65292*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21765:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x61cace and fs2 == 0 and fe2 == 0x80 and fm2 == 0x111fe3 and fs3 == 0 and fe3 == 0xca and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee1cace; op2val:0x40111fe3;
op3val:0x657fffe0; valaddr_reg:x3; val_offset:65295*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65295*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21766:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x61cace and fs2 == 0 and fe2 == 0x80 and fm2 == 0x111fe3 and fs3 == 0 and fe3 == 0xca and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee1cace; op2val:0x40111fe3;
op3val:0x657ffff0; valaddr_reg:x3; val_offset:65298*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65298*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21767:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x61cace and fs2 == 0 and fe2 == 0x80 and fm2 == 0x111fe3 and fs3 == 0 and fe3 == 0xca and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee1cace; op2val:0x40111fe3;
op3val:0x657ffff8; valaddr_reg:x3; val_offset:65301*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65301*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21768:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x61cace and fs2 == 0 and fe2 == 0x80 and fm2 == 0x111fe3 and fs3 == 0 and fe3 == 0xca and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee1cace; op2val:0x40111fe3;
op3val:0x657ffffc; valaddr_reg:x3; val_offset:65304*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65304*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21769:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x61cace and fs2 == 0 and fe2 == 0x80 and fm2 == 0x111fe3 and fs3 == 0 and fe3 == 0xca and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee1cace; op2val:0x40111fe3;
op3val:0x657ffffe; valaddr_reg:x3; val_offset:65307*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65307*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21770:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x61cace and fs2 == 0 and fe2 == 0x80 and fm2 == 0x111fe3 and fs3 == 0 and fe3 == 0xca and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee1cace; op2val:0x40111fe3;
op3val:0x657fffff; valaddr_reg:x3; val_offset:65310*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65310*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21771:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x61cace and fs2 == 0 and fe2 == 0x80 and fm2 == 0x111fe3 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee1cace; op2val:0x40111fe3;
op3val:0x7f000001; valaddr_reg:x3; val_offset:65313*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65313*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21772:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x61cace and fs2 == 0 and fe2 == 0x80 and fm2 == 0x111fe3 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee1cace; op2val:0x40111fe3;
op3val:0x7f000003; valaddr_reg:x3; val_offset:65316*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65316*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21773:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x61cace and fs2 == 0 and fe2 == 0x80 and fm2 == 0x111fe3 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee1cace; op2val:0x40111fe3;
op3val:0x7f000007; valaddr_reg:x3; val_offset:65319*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65319*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21774:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x61cace and fs2 == 0 and fe2 == 0x80 and fm2 == 0x111fe3 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee1cace; op2val:0x40111fe3;
op3val:0x7f199999; valaddr_reg:x3; val_offset:65322*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65322*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21775:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x61cace and fs2 == 0 and fe2 == 0x80 and fm2 == 0x111fe3 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee1cace; op2val:0x40111fe3;
op3val:0x7f249249; valaddr_reg:x3; val_offset:65325*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65325*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21776:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x61cace and fs2 == 0 and fe2 == 0x80 and fm2 == 0x111fe3 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee1cace; op2val:0x40111fe3;
op3val:0x7f333333; valaddr_reg:x3; val_offset:65328*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65328*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21777:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x61cace and fs2 == 0 and fe2 == 0x80 and fm2 == 0x111fe3 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee1cace; op2val:0x40111fe3;
op3val:0x7f36db6d; valaddr_reg:x3; val_offset:65331*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65331*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21778:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x61cace and fs2 == 0 and fe2 == 0x80 and fm2 == 0x111fe3 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee1cace; op2val:0x40111fe3;
op3val:0x7f3bbbbb; valaddr_reg:x3; val_offset:65334*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65334*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21779:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x61cace and fs2 == 0 and fe2 == 0x80 and fm2 == 0x111fe3 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee1cace; op2val:0x40111fe3;
op3val:0x7f444444; valaddr_reg:x3; val_offset:65337*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65337*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21780:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x61cace and fs2 == 0 and fe2 == 0x80 and fm2 == 0x111fe3 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee1cace; op2val:0x40111fe3;
op3val:0x7f4ccccc; valaddr_reg:x3; val_offset:65340*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65340*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21781:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x61cace and fs2 == 0 and fe2 == 0x80 and fm2 == 0x111fe3 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee1cace; op2val:0x40111fe3;
op3val:0x7f5b6db6; valaddr_reg:x3; val_offset:65343*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65343*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21782:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x61cace and fs2 == 0 and fe2 == 0x80 and fm2 == 0x111fe3 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee1cace; op2val:0x40111fe3;
op3val:0x7f666666; valaddr_reg:x3; val_offset:65346*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65346*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21783:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x61cace and fs2 == 0 and fe2 == 0x80 and fm2 == 0x111fe3 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee1cace; op2val:0x40111fe3;
op3val:0x7f6db6db; valaddr_reg:x3; val_offset:65349*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65349*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21784:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x61cace and fs2 == 0 and fe2 == 0x80 and fm2 == 0x111fe3 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee1cace; op2val:0x40111fe3;
op3val:0x7f7ffff8; valaddr_reg:x3; val_offset:65352*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65352*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21785:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x61cace and fs2 == 0 and fe2 == 0x80 and fm2 == 0x111fe3 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee1cace; op2val:0x40111fe3;
op3val:0x7f7ffffc; valaddr_reg:x3; val_offset:65355*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65355*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21786:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x61cace and fs2 == 0 and fe2 == 0x80 and fm2 == 0x111fe3 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee1cace; op2val:0x40111fe3;
op3val:0x7f7ffffe; valaddr_reg:x3; val_offset:65358*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65358*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21787:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x625a19 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x486202 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee25a19; op2val:0x486202;
op3val:0x33000000; valaddr_reg:x3; val_offset:65361*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65361*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21788:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x625a19 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x486202 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee25a19; op2val:0x486202;
op3val:0x33000001; valaddr_reg:x3; val_offset:65364*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65364*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21789:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x625a19 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x486202 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee25a19; op2val:0x486202;
op3val:0x33000003; valaddr_reg:x3; val_offset:65367*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65367*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21790:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x625a19 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x486202 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee25a19; op2val:0x486202;
op3val:0x33000007; valaddr_reg:x3; val_offset:65370*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65370*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21791:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x625a19 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x486202 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee25a19; op2val:0x486202;
op3val:0x3300000f; valaddr_reg:x3; val_offset:65373*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65373*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21792:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x625a19 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x486202 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee25a19; op2val:0x486202;
op3val:0x3300001f; valaddr_reg:x3; val_offset:65376*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65376*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21793:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x625a19 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x486202 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee25a19; op2val:0x486202;
op3val:0x3300003f; valaddr_reg:x3; val_offset:65379*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65379*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21794:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x625a19 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x486202 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee25a19; op2val:0x486202;
op3val:0x3300007f; valaddr_reg:x3; val_offset:65382*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65382*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21795:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x625a19 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x486202 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee25a19; op2val:0x486202;
op3val:0x330000ff; valaddr_reg:x3; val_offset:65385*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65385*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21796:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x625a19 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x486202 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee25a19; op2val:0x486202;
op3val:0x330001ff; valaddr_reg:x3; val_offset:65388*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65388*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21797:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x625a19 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x486202 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee25a19; op2val:0x486202;
op3val:0x330003ff; valaddr_reg:x3; val_offset:65391*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65391*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21798:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x625a19 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x486202 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee25a19; op2val:0x486202;
op3val:0x330007ff; valaddr_reg:x3; val_offset:65394*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65394*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21799:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x625a19 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x486202 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee25a19; op2val:0x486202;
op3val:0x33000fff; valaddr_reg:x3; val_offset:65397*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65397*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21800:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x625a19 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x486202 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee25a19; op2val:0x486202;
op3val:0x33001fff; valaddr_reg:x3; val_offset:65400*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65400*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21801:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x625a19 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x486202 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee25a19; op2val:0x486202;
op3val:0x33003fff; valaddr_reg:x3; val_offset:65403*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65403*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21802:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x625a19 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x486202 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee25a19; op2val:0x486202;
op3val:0x33007fff; valaddr_reg:x3; val_offset:65406*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65406*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21803:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x625a19 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x486202 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee25a19; op2val:0x486202;
op3val:0x3300ffff; valaddr_reg:x3; val_offset:65409*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65409*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21804:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x625a19 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x486202 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee25a19; op2val:0x486202;
op3val:0x3301ffff; valaddr_reg:x3; val_offset:65412*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65412*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21805:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x625a19 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x486202 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee25a19; op2val:0x486202;
op3val:0x3303ffff; valaddr_reg:x3; val_offset:65415*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65415*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21806:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x625a19 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x486202 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee25a19; op2val:0x486202;
op3val:0x3307ffff; valaddr_reg:x3; val_offset:65418*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65418*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21807:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x625a19 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x486202 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee25a19; op2val:0x486202;
op3val:0x330fffff; valaddr_reg:x3; val_offset:65421*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65421*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21808:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x625a19 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x486202 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee25a19; op2val:0x486202;
op3val:0x331fffff; valaddr_reg:x3; val_offset:65424*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65424*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21809:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x625a19 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x486202 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee25a19; op2val:0x486202;
op3val:0x333fffff; valaddr_reg:x3; val_offset:65427*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65427*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21810:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x625a19 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x486202 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee25a19; op2val:0x486202;
op3val:0x33400000; valaddr_reg:x3; val_offset:65430*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65430*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21811:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x625a19 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x486202 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee25a19; op2val:0x486202;
op3val:0x33600000; valaddr_reg:x3; val_offset:65433*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65433*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21812:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x625a19 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x486202 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee25a19; op2val:0x486202;
op3val:0x33700000; valaddr_reg:x3; val_offset:65436*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65436*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21813:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x625a19 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x486202 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee25a19; op2val:0x486202;
op3val:0x33780000; valaddr_reg:x3; val_offset:65439*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65439*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21814:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x625a19 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x486202 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee25a19; op2val:0x486202;
op3val:0x337c0000; valaddr_reg:x3; val_offset:65442*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65442*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21815:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x625a19 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x486202 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee25a19; op2val:0x486202;
op3val:0x337e0000; valaddr_reg:x3; val_offset:65445*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65445*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21816:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x625a19 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x486202 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee25a19; op2val:0x486202;
op3val:0x337f0000; valaddr_reg:x3; val_offset:65448*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65448*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21817:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x625a19 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x486202 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee25a19; op2val:0x486202;
op3val:0x337f8000; valaddr_reg:x3; val_offset:65451*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65451*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21818:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x625a19 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x486202 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee25a19; op2val:0x486202;
op3val:0x337fc000; valaddr_reg:x3; val_offset:65454*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65454*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21819:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x625a19 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x486202 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee25a19; op2val:0x486202;
op3val:0x337fe000; valaddr_reg:x3; val_offset:65457*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65457*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21820:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x625a19 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x486202 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee25a19; op2val:0x486202;
op3val:0x337ff000; valaddr_reg:x3; val_offset:65460*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65460*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21821:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x625a19 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x486202 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee25a19; op2val:0x486202;
op3val:0x337ff800; valaddr_reg:x3; val_offset:65463*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65463*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21822:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x625a19 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x486202 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee25a19; op2val:0x486202;
op3val:0x337ffc00; valaddr_reg:x3; val_offset:65466*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65466*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21823:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x625a19 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x486202 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee25a19; op2val:0x486202;
op3val:0x337ffe00; valaddr_reg:x3; val_offset:65469*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65469*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21824:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x625a19 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x486202 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee25a19; op2val:0x486202;
op3val:0x337fff00; valaddr_reg:x3; val_offset:65472*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65472*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21825:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x625a19 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x486202 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee25a19; op2val:0x486202;
op3val:0x337fff80; valaddr_reg:x3; val_offset:65475*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65475*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21826:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x625a19 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x486202 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee25a19; op2val:0x486202;
op3val:0x337fffc0; valaddr_reg:x3; val_offset:65478*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65478*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21827:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x625a19 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x486202 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee25a19; op2val:0x486202;
op3val:0x337fffe0; valaddr_reg:x3; val_offset:65481*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65481*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21828:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x625a19 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x486202 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee25a19; op2val:0x486202;
op3val:0x337ffff0; valaddr_reg:x3; val_offset:65484*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65484*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21829:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x625a19 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x486202 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee25a19; op2val:0x486202;
op3val:0x337ffff8; valaddr_reg:x3; val_offset:65487*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65487*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21830:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x625a19 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x486202 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee25a19; op2val:0x486202;
op3val:0x337ffffc; valaddr_reg:x3; val_offset:65490*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65490*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21831:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x625a19 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x486202 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee25a19; op2val:0x486202;
op3val:0x337ffffe; valaddr_reg:x3; val_offset:65493*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65493*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21832:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x625a19 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x486202 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee25a19; op2val:0x486202;
op3val:0x337fffff; valaddr_reg:x3; val_offset:65496*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65496*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21833:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x625a19 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x486202 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee25a19; op2val:0x486202;
op3val:0x3f800001; valaddr_reg:x3; val_offset:65499*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65499*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21834:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x625a19 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x486202 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee25a19; op2val:0x486202;
op3val:0x3f800003; valaddr_reg:x3; val_offset:65502*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65502*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21835:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x625a19 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x486202 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee25a19; op2val:0x486202;
op3val:0x3f800007; valaddr_reg:x3; val_offset:65505*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65505*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21836:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x625a19 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x486202 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee25a19; op2val:0x486202;
op3val:0x3f999999; valaddr_reg:x3; val_offset:65508*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65508*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21837:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x625a19 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x486202 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee25a19; op2val:0x486202;
op3val:0x3fa49249; valaddr_reg:x3; val_offset:65511*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65511*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21838:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x625a19 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x486202 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee25a19; op2val:0x486202;
op3val:0x3fb33333; valaddr_reg:x3; val_offset:65514*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65514*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21839:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x625a19 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x486202 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee25a19; op2val:0x486202;
op3val:0x3fb6db6d; valaddr_reg:x3; val_offset:65517*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65517*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21840:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x625a19 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x486202 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee25a19; op2val:0x486202;
op3val:0x3fbbbbbb; valaddr_reg:x3; val_offset:65520*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65520*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21841:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x625a19 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x486202 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee25a19; op2val:0x486202;
op3val:0x3fc44444; valaddr_reg:x3; val_offset:65523*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65523*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21842:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x625a19 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x486202 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee25a19; op2val:0x486202;
op3val:0x3fcccccc; valaddr_reg:x3; val_offset:65526*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65526*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21843:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x625a19 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x486202 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee25a19; op2val:0x486202;
op3val:0x3fdb6db6; valaddr_reg:x3; val_offset:65529*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65529*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21844:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x625a19 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x486202 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee25a19; op2val:0x486202;
op3val:0x3fe66666; valaddr_reg:x3; val_offset:65532*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65532*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21845:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x625a19 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x486202 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee25a19; op2val:0x486202;
op3val:0x3fedb6db; valaddr_reg:x3; val_offset:65535*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65535*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21846:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x625a19 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x486202 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee25a19; op2val:0x486202;
op3val:0x3ffffff8; valaddr_reg:x3; val_offset:65538*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65538*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21847:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x625a19 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x486202 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee25a19; op2val:0x486202;
op3val:0x3ffffffc; valaddr_reg:x3; val_offset:65541*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65541*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21848:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x625a19 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x486202 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee25a19; op2val:0x486202;
op3val:0x3ffffffe; valaddr_reg:x3; val_offset:65544*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65544*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21849:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x63135e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4826f4 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee3135e; op2val:0x804826f4;
op3val:0xa6800000; valaddr_reg:x3; val_offset:65547*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65547*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21850:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x63135e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4826f4 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee3135e; op2val:0x804826f4;
op3val:0xa6800001; valaddr_reg:x3; val_offset:65550*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65550*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21851:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x63135e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4826f4 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee3135e; op2val:0x804826f4;
op3val:0xa6800003; valaddr_reg:x3; val_offset:65553*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65553*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21852:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x63135e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4826f4 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee3135e; op2val:0x804826f4;
op3val:0xa6800007; valaddr_reg:x3; val_offset:65556*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65556*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21853:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x63135e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4826f4 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee3135e; op2val:0x804826f4;
op3val:0xa680000f; valaddr_reg:x3; val_offset:65559*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65559*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21854:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x63135e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4826f4 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee3135e; op2val:0x804826f4;
op3val:0xa680001f; valaddr_reg:x3; val_offset:65562*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65562*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21855:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x63135e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4826f4 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee3135e; op2val:0x804826f4;
op3val:0xa680003f; valaddr_reg:x3; val_offset:65565*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65565*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21856:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x63135e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4826f4 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee3135e; op2val:0x804826f4;
op3val:0xa680007f; valaddr_reg:x3; val_offset:65568*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65568*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21857:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x63135e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4826f4 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee3135e; op2val:0x804826f4;
op3val:0xa68000ff; valaddr_reg:x3; val_offset:65571*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65571*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21858:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x63135e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4826f4 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee3135e; op2val:0x804826f4;
op3val:0xa68001ff; valaddr_reg:x3; val_offset:65574*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65574*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21859:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x63135e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4826f4 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee3135e; op2val:0x804826f4;
op3val:0xa68003ff; valaddr_reg:x3; val_offset:65577*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65577*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21860:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x63135e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4826f4 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee3135e; op2val:0x804826f4;
op3val:0xa68007ff; valaddr_reg:x3; val_offset:65580*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65580*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21861:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x63135e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4826f4 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee3135e; op2val:0x804826f4;
op3val:0xa6800fff; valaddr_reg:x3; val_offset:65583*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65583*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21862:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x63135e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4826f4 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee3135e; op2val:0x804826f4;
op3val:0xa6801fff; valaddr_reg:x3; val_offset:65586*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65586*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21863:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x63135e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4826f4 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee3135e; op2val:0x804826f4;
op3val:0xa6803fff; valaddr_reg:x3; val_offset:65589*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65589*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21864:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x63135e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4826f4 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee3135e; op2val:0x804826f4;
op3val:0xa6807fff; valaddr_reg:x3; val_offset:65592*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65592*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21865:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x63135e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4826f4 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee3135e; op2val:0x804826f4;
op3val:0xa680ffff; valaddr_reg:x3; val_offset:65595*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65595*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21866:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x63135e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4826f4 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee3135e; op2val:0x804826f4;
op3val:0xa681ffff; valaddr_reg:x3; val_offset:65598*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65598*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21867:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x63135e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4826f4 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee3135e; op2val:0x804826f4;
op3val:0xa683ffff; valaddr_reg:x3; val_offset:65601*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65601*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21868:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x63135e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4826f4 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee3135e; op2val:0x804826f4;
op3val:0xa687ffff; valaddr_reg:x3; val_offset:65604*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65604*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21869:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x63135e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4826f4 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee3135e; op2val:0x804826f4;
op3val:0xa68fffff; valaddr_reg:x3; val_offset:65607*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65607*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21870:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x63135e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4826f4 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee3135e; op2val:0x804826f4;
op3val:0xa69fffff; valaddr_reg:x3; val_offset:65610*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65610*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21871:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x63135e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4826f4 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee3135e; op2val:0x804826f4;
op3val:0xa6bfffff; valaddr_reg:x3; val_offset:65613*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65613*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21872:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x63135e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4826f4 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee3135e; op2val:0x804826f4;
op3val:0xa6c00000; valaddr_reg:x3; val_offset:65616*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65616*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21873:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x63135e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4826f4 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee3135e; op2val:0x804826f4;
op3val:0xa6e00000; valaddr_reg:x3; val_offset:65619*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65619*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21874:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x63135e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4826f4 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee3135e; op2val:0x804826f4;
op3val:0xa6f00000; valaddr_reg:x3; val_offset:65622*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65622*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21875:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x63135e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4826f4 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee3135e; op2val:0x804826f4;
op3val:0xa6f80000; valaddr_reg:x3; val_offset:65625*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65625*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21876:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x63135e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4826f4 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee3135e; op2val:0x804826f4;
op3val:0xa6fc0000; valaddr_reg:x3; val_offset:65628*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65628*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21877:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x63135e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4826f4 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee3135e; op2val:0x804826f4;
op3val:0xa6fe0000; valaddr_reg:x3; val_offset:65631*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65631*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21878:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x63135e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4826f4 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee3135e; op2val:0x804826f4;
op3val:0xa6ff0000; valaddr_reg:x3; val_offset:65634*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65634*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21879:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x63135e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4826f4 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee3135e; op2val:0x804826f4;
op3val:0xa6ff8000; valaddr_reg:x3; val_offset:65637*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65637*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21880:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x63135e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4826f4 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee3135e; op2val:0x804826f4;
op3val:0xa6ffc000; valaddr_reg:x3; val_offset:65640*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65640*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21881:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x63135e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4826f4 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee3135e; op2val:0x804826f4;
op3val:0xa6ffe000; valaddr_reg:x3; val_offset:65643*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65643*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21882:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x63135e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4826f4 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee3135e; op2val:0x804826f4;
op3val:0xa6fff000; valaddr_reg:x3; val_offset:65646*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65646*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21883:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x63135e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4826f4 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee3135e; op2val:0x804826f4;
op3val:0xa6fff800; valaddr_reg:x3; val_offset:65649*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65649*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21884:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x63135e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4826f4 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee3135e; op2val:0x804826f4;
op3val:0xa6fffc00; valaddr_reg:x3; val_offset:65652*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65652*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21885:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x63135e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4826f4 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee3135e; op2val:0x804826f4;
op3val:0xa6fffe00; valaddr_reg:x3; val_offset:65655*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65655*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21886:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x63135e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4826f4 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee3135e; op2val:0x804826f4;
op3val:0xa6ffff00; valaddr_reg:x3; val_offset:65658*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65658*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21887:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x63135e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4826f4 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee3135e; op2val:0x804826f4;
op3val:0xa6ffff80; valaddr_reg:x3; val_offset:65661*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 65661*0 + 3*170*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(2128726734,32,FLEN)
NAN_BOXED(1074864099,32,FLEN)
NAN_BOXED(1702886400,32,FLEN)
NAN_BOXED(2128726734,32,FLEN)
NAN_BOXED(1074864099,32,FLEN)
NAN_BOXED(1702886912,32,FLEN)
NAN_BOXED(2128726734,32,FLEN)
NAN_BOXED(1074864099,32,FLEN)
NAN_BOXED(1702887168,32,FLEN)
NAN_BOXED(2128726734,32,FLEN)
NAN_BOXED(1074864099,32,FLEN)
NAN_BOXED(1702887296,32,FLEN)
NAN_BOXED(2128726734,32,FLEN)
NAN_BOXED(1074864099,32,FLEN)
NAN_BOXED(1702887360,32,FLEN)
NAN_BOXED(2128726734,32,FLEN)
NAN_BOXED(1074864099,32,FLEN)
NAN_BOXED(1702887392,32,FLEN)
NAN_BOXED(2128726734,32,FLEN)
NAN_BOXED(1074864099,32,FLEN)
NAN_BOXED(1702887408,32,FLEN)
NAN_BOXED(2128726734,32,FLEN)
NAN_BOXED(1074864099,32,FLEN)
NAN_BOXED(1702887416,32,FLEN)
NAN_BOXED(2128726734,32,FLEN)
NAN_BOXED(1074864099,32,FLEN)
NAN_BOXED(1702887420,32,FLEN)
NAN_BOXED(2128726734,32,FLEN)
NAN_BOXED(1074864099,32,FLEN)
NAN_BOXED(1702887422,32,FLEN)
NAN_BOXED(2128726734,32,FLEN)
NAN_BOXED(1074864099,32,FLEN)
NAN_BOXED(1702887423,32,FLEN)
NAN_BOXED(2128726734,32,FLEN)
NAN_BOXED(1074864099,32,FLEN)
NAN_BOXED(2130706433,32,FLEN)
NAN_BOXED(2128726734,32,FLEN)
NAN_BOXED(1074864099,32,FLEN)
NAN_BOXED(2130706435,32,FLEN)
NAN_BOXED(2128726734,32,FLEN)
NAN_BOXED(1074864099,32,FLEN)
NAN_BOXED(2130706439,32,FLEN)
NAN_BOXED(2128726734,32,FLEN)
NAN_BOXED(1074864099,32,FLEN)
NAN_BOXED(2132384153,32,FLEN)
NAN_BOXED(2128726734,32,FLEN)
NAN_BOXED(1074864099,32,FLEN)
NAN_BOXED(2133103177,32,FLEN)
NAN_BOXED(2128726734,32,FLEN)
NAN_BOXED(1074864099,32,FLEN)
NAN_BOXED(2134061875,32,FLEN)
NAN_BOXED(2128726734,32,FLEN)
NAN_BOXED(1074864099,32,FLEN)
NAN_BOXED(2134301549,32,FLEN)
NAN_BOXED(2128726734,32,FLEN)
NAN_BOXED(1074864099,32,FLEN)
NAN_BOXED(2134621115,32,FLEN)
NAN_BOXED(2128726734,32,FLEN)
NAN_BOXED(1074864099,32,FLEN)
NAN_BOXED(2135180356,32,FLEN)
NAN_BOXED(2128726734,32,FLEN)
NAN_BOXED(1074864099,32,FLEN)
NAN_BOXED(2135739596,32,FLEN)
NAN_BOXED(2128726734,32,FLEN)
NAN_BOXED(1074864099,32,FLEN)
NAN_BOXED(2136698294,32,FLEN)
NAN_BOXED(2128726734,32,FLEN)
NAN_BOXED(1074864099,32,FLEN)
NAN_BOXED(2137417318,32,FLEN)
NAN_BOXED(2128726734,32,FLEN)
NAN_BOXED(1074864099,32,FLEN)
NAN_BOXED(2137896667,32,FLEN)
NAN_BOXED(2128726734,32,FLEN)
NAN_BOXED(1074864099,32,FLEN)
NAN_BOXED(2139095032,32,FLEN)
NAN_BOXED(2128726734,32,FLEN)
NAN_BOXED(1074864099,32,FLEN)
NAN_BOXED(2139095036,32,FLEN)
NAN_BOXED(2128726734,32,FLEN)
NAN_BOXED(1074864099,32,FLEN)
NAN_BOXED(2139095038,32,FLEN)
NAN_BOXED(2128763417,32,FLEN)
NAN_BOXED(4743682,32,FLEN)
NAN_BOXED(855638016,32,FLEN)
NAN_BOXED(2128763417,32,FLEN)
NAN_BOXED(4743682,32,FLEN)
NAN_BOXED(855638017,32,FLEN)
NAN_BOXED(2128763417,32,FLEN)
NAN_BOXED(4743682,32,FLEN)
NAN_BOXED(855638019,32,FLEN)
NAN_BOXED(2128763417,32,FLEN)
NAN_BOXED(4743682,32,FLEN)
NAN_BOXED(855638023,32,FLEN)
NAN_BOXED(2128763417,32,FLEN)
NAN_BOXED(4743682,32,FLEN)
NAN_BOXED(855638031,32,FLEN)
NAN_BOXED(2128763417,32,FLEN)
NAN_BOXED(4743682,32,FLEN)
NAN_BOXED(855638047,32,FLEN)
NAN_BOXED(2128763417,32,FLEN)
NAN_BOXED(4743682,32,FLEN)
NAN_BOXED(855638079,32,FLEN)
NAN_BOXED(2128763417,32,FLEN)
NAN_BOXED(4743682,32,FLEN)
NAN_BOXED(855638143,32,FLEN)
NAN_BOXED(2128763417,32,FLEN)
NAN_BOXED(4743682,32,FLEN)
NAN_BOXED(855638271,32,FLEN)
NAN_BOXED(2128763417,32,FLEN)
NAN_BOXED(4743682,32,FLEN)
NAN_BOXED(855638527,32,FLEN)
NAN_BOXED(2128763417,32,FLEN)
NAN_BOXED(4743682,32,FLEN)
NAN_BOXED(855639039,32,FLEN)
NAN_BOXED(2128763417,32,FLEN)
NAN_BOXED(4743682,32,FLEN)
NAN_BOXED(855640063,32,FLEN)
NAN_BOXED(2128763417,32,FLEN)
NAN_BOXED(4743682,32,FLEN)
NAN_BOXED(855642111,32,FLEN)
NAN_BOXED(2128763417,32,FLEN)
NAN_BOXED(4743682,32,FLEN)
NAN_BOXED(855646207,32,FLEN)
NAN_BOXED(2128763417,32,FLEN)
NAN_BOXED(4743682,32,FLEN)
NAN_BOXED(855654399,32,FLEN)
NAN_BOXED(2128763417,32,FLEN)
NAN_BOXED(4743682,32,FLEN)
NAN_BOXED(855670783,32,FLEN)
NAN_BOXED(2128763417,32,FLEN)
NAN_BOXED(4743682,32,FLEN)
NAN_BOXED(855703551,32,FLEN)
NAN_BOXED(2128763417,32,FLEN)
NAN_BOXED(4743682,32,FLEN)
NAN_BOXED(855769087,32,FLEN)
NAN_BOXED(2128763417,32,FLEN)
NAN_BOXED(4743682,32,FLEN)
NAN_BOXED(855900159,32,FLEN)
NAN_BOXED(2128763417,32,FLEN)
NAN_BOXED(4743682,32,FLEN)
NAN_BOXED(856162303,32,FLEN)
NAN_BOXED(2128763417,32,FLEN)
NAN_BOXED(4743682,32,FLEN)
NAN_BOXED(856686591,32,FLEN)
NAN_BOXED(2128763417,32,FLEN)
NAN_BOXED(4743682,32,FLEN)
NAN_BOXED(857735167,32,FLEN)
NAN_BOXED(2128763417,32,FLEN)
NAN_BOXED(4743682,32,FLEN)
NAN_BOXED(859832319,32,FLEN)
NAN_BOXED(2128763417,32,FLEN)
NAN_BOXED(4743682,32,FLEN)
NAN_BOXED(859832320,32,FLEN)
NAN_BOXED(2128763417,32,FLEN)
NAN_BOXED(4743682,32,FLEN)
NAN_BOXED(861929472,32,FLEN)
NAN_BOXED(2128763417,32,FLEN)
NAN_BOXED(4743682,32,FLEN)
NAN_BOXED(862978048,32,FLEN)
NAN_BOXED(2128763417,32,FLEN)
NAN_BOXED(4743682,32,FLEN)
NAN_BOXED(863502336,32,FLEN)
NAN_BOXED(2128763417,32,FLEN)
NAN_BOXED(4743682,32,FLEN)
NAN_BOXED(863764480,32,FLEN)
NAN_BOXED(2128763417,32,FLEN)
NAN_BOXED(4743682,32,FLEN)
NAN_BOXED(863895552,32,FLEN)
NAN_BOXED(2128763417,32,FLEN)
NAN_BOXED(4743682,32,FLEN)
NAN_BOXED(863961088,32,FLEN)
NAN_BOXED(2128763417,32,FLEN)
NAN_BOXED(4743682,32,FLEN)
NAN_BOXED(863993856,32,FLEN)
NAN_BOXED(2128763417,32,FLEN)
NAN_BOXED(4743682,32,FLEN)
NAN_BOXED(864010240,32,FLEN)
NAN_BOXED(2128763417,32,FLEN)
NAN_BOXED(4743682,32,FLEN)
NAN_BOXED(864018432,32,FLEN)
NAN_BOXED(2128763417,32,FLEN)
NAN_BOXED(4743682,32,FLEN)
NAN_BOXED(864022528,32,FLEN)
NAN_BOXED(2128763417,32,FLEN)
NAN_BOXED(4743682,32,FLEN)
NAN_BOXED(864024576,32,FLEN)
NAN_BOXED(2128763417,32,FLEN)
NAN_BOXED(4743682,32,FLEN)
NAN_BOXED(864025600,32,FLEN)
NAN_BOXED(2128763417,32,FLEN)
NAN_BOXED(4743682,32,FLEN)
NAN_BOXED(864026112,32,FLEN)
NAN_BOXED(2128763417,32,FLEN)
NAN_BOXED(4743682,32,FLEN)
NAN_BOXED(864026368,32,FLEN)
NAN_BOXED(2128763417,32,FLEN)
NAN_BOXED(4743682,32,FLEN)
NAN_BOXED(864026496,32,FLEN)
NAN_BOXED(2128763417,32,FLEN)
NAN_BOXED(4743682,32,FLEN)
NAN_BOXED(864026560,32,FLEN)
NAN_BOXED(2128763417,32,FLEN)
NAN_BOXED(4743682,32,FLEN)
NAN_BOXED(864026592,32,FLEN)
NAN_BOXED(2128763417,32,FLEN)
NAN_BOXED(4743682,32,FLEN)
NAN_BOXED(864026608,32,FLEN)
NAN_BOXED(2128763417,32,FLEN)
NAN_BOXED(4743682,32,FLEN)
NAN_BOXED(864026616,32,FLEN)
NAN_BOXED(2128763417,32,FLEN)
NAN_BOXED(4743682,32,FLEN)
NAN_BOXED(864026620,32,FLEN)
NAN_BOXED(2128763417,32,FLEN)
NAN_BOXED(4743682,32,FLEN)
NAN_BOXED(864026622,32,FLEN)
NAN_BOXED(2128763417,32,FLEN)
NAN_BOXED(4743682,32,FLEN)
NAN_BOXED(864026623,32,FLEN)
NAN_BOXED(2128763417,32,FLEN)
NAN_BOXED(4743682,32,FLEN)
NAN_BOXED(1065353217,32,FLEN)
NAN_BOXED(2128763417,32,FLEN)
NAN_BOXED(4743682,32,FLEN)
NAN_BOXED(1065353219,32,FLEN)
NAN_BOXED(2128763417,32,FLEN)
NAN_BOXED(4743682,32,FLEN)
NAN_BOXED(1065353223,32,FLEN)
NAN_BOXED(2128763417,32,FLEN)
NAN_BOXED(4743682,32,FLEN)
NAN_BOXED(1067030937,32,FLEN)
NAN_BOXED(2128763417,32,FLEN)
NAN_BOXED(4743682,32,FLEN)
NAN_BOXED(1067749961,32,FLEN)
NAN_BOXED(2128763417,32,FLEN)
NAN_BOXED(4743682,32,FLEN)
NAN_BOXED(1068708659,32,FLEN)
NAN_BOXED(2128763417,32,FLEN)
NAN_BOXED(4743682,32,FLEN)
NAN_BOXED(1068948333,32,FLEN)
NAN_BOXED(2128763417,32,FLEN)
NAN_BOXED(4743682,32,FLEN)
NAN_BOXED(1069267899,32,FLEN)
NAN_BOXED(2128763417,32,FLEN)
NAN_BOXED(4743682,32,FLEN)
NAN_BOXED(1069827140,32,FLEN)
NAN_BOXED(2128763417,32,FLEN)
NAN_BOXED(4743682,32,FLEN)
NAN_BOXED(1070386380,32,FLEN)
NAN_BOXED(2128763417,32,FLEN)
NAN_BOXED(4743682,32,FLEN)
NAN_BOXED(1071345078,32,FLEN)
NAN_BOXED(2128763417,32,FLEN)
NAN_BOXED(4743682,32,FLEN)
NAN_BOXED(1072064102,32,FLEN)
NAN_BOXED(2128763417,32,FLEN)
NAN_BOXED(4743682,32,FLEN)
NAN_BOXED(1072543451,32,FLEN)
NAN_BOXED(2128763417,32,FLEN)
NAN_BOXED(4743682,32,FLEN)
NAN_BOXED(1073741816,32,FLEN)
NAN_BOXED(2128763417,32,FLEN)
NAN_BOXED(4743682,32,FLEN)
NAN_BOXED(1073741820,32,FLEN)
NAN_BOXED(2128763417,32,FLEN)
NAN_BOXED(4743682,32,FLEN)
NAN_BOXED(1073741822,32,FLEN)
NAN_BOXED(2128810846,32,FLEN)
NAN_BOXED(2152212212,32,FLEN)
NAN_BOXED(2793406464,32,FLEN)
NAN_BOXED(2128810846,32,FLEN)
NAN_BOXED(2152212212,32,FLEN)
NAN_BOXED(2793406465,32,FLEN)
NAN_BOXED(2128810846,32,FLEN)
NAN_BOXED(2152212212,32,FLEN)
NAN_BOXED(2793406467,32,FLEN)
NAN_BOXED(2128810846,32,FLEN)
NAN_BOXED(2152212212,32,FLEN)
NAN_BOXED(2793406471,32,FLEN)
NAN_BOXED(2128810846,32,FLEN)
NAN_BOXED(2152212212,32,FLEN)
NAN_BOXED(2793406479,32,FLEN)
NAN_BOXED(2128810846,32,FLEN)
NAN_BOXED(2152212212,32,FLEN)
NAN_BOXED(2793406495,32,FLEN)
NAN_BOXED(2128810846,32,FLEN)
NAN_BOXED(2152212212,32,FLEN)
NAN_BOXED(2793406527,32,FLEN)
NAN_BOXED(2128810846,32,FLEN)
NAN_BOXED(2152212212,32,FLEN)
NAN_BOXED(2793406591,32,FLEN)
NAN_BOXED(2128810846,32,FLEN)
NAN_BOXED(2152212212,32,FLEN)
NAN_BOXED(2793406719,32,FLEN)
NAN_BOXED(2128810846,32,FLEN)
NAN_BOXED(2152212212,32,FLEN)
NAN_BOXED(2793406975,32,FLEN)
NAN_BOXED(2128810846,32,FLEN)
NAN_BOXED(2152212212,32,FLEN)
NAN_BOXED(2793407487,32,FLEN)
NAN_BOXED(2128810846,32,FLEN)
NAN_BOXED(2152212212,32,FLEN)
NAN_BOXED(2793408511,32,FLEN)
NAN_BOXED(2128810846,32,FLEN)
NAN_BOXED(2152212212,32,FLEN)
NAN_BOXED(2793410559,32,FLEN)
NAN_BOXED(2128810846,32,FLEN)
NAN_BOXED(2152212212,32,FLEN)
NAN_BOXED(2793414655,32,FLEN)
NAN_BOXED(2128810846,32,FLEN)
NAN_BOXED(2152212212,32,FLEN)
NAN_BOXED(2793422847,32,FLEN)
NAN_BOXED(2128810846,32,FLEN)
NAN_BOXED(2152212212,32,FLEN)
NAN_BOXED(2793439231,32,FLEN)
NAN_BOXED(2128810846,32,FLEN)
NAN_BOXED(2152212212,32,FLEN)
NAN_BOXED(2793471999,32,FLEN)
NAN_BOXED(2128810846,32,FLEN)
NAN_BOXED(2152212212,32,FLEN)
NAN_BOXED(2793537535,32,FLEN)
NAN_BOXED(2128810846,32,FLEN)
NAN_BOXED(2152212212,32,FLEN)
NAN_BOXED(2793668607,32,FLEN)
NAN_BOXED(2128810846,32,FLEN)
NAN_BOXED(2152212212,32,FLEN)
NAN_BOXED(2793930751,32,FLEN)
NAN_BOXED(2128810846,32,FLEN)
NAN_BOXED(2152212212,32,FLEN)
NAN_BOXED(2794455039,32,FLEN)
NAN_BOXED(2128810846,32,FLEN)
NAN_BOXED(2152212212,32,FLEN)
NAN_BOXED(2795503615,32,FLEN)
NAN_BOXED(2128810846,32,FLEN)
NAN_BOXED(2152212212,32,FLEN)
NAN_BOXED(2797600767,32,FLEN)
NAN_BOXED(2128810846,32,FLEN)
NAN_BOXED(2152212212,32,FLEN)
NAN_BOXED(2797600768,32,FLEN)
NAN_BOXED(2128810846,32,FLEN)
NAN_BOXED(2152212212,32,FLEN)
NAN_BOXED(2799697920,32,FLEN)
NAN_BOXED(2128810846,32,FLEN)
NAN_BOXED(2152212212,32,FLEN)
NAN_BOXED(2800746496,32,FLEN)
NAN_BOXED(2128810846,32,FLEN)
NAN_BOXED(2152212212,32,FLEN)
NAN_BOXED(2801270784,32,FLEN)
NAN_BOXED(2128810846,32,FLEN)
NAN_BOXED(2152212212,32,FLEN)
NAN_BOXED(2801532928,32,FLEN)
NAN_BOXED(2128810846,32,FLEN)
NAN_BOXED(2152212212,32,FLEN)
NAN_BOXED(2801664000,32,FLEN)
NAN_BOXED(2128810846,32,FLEN)
NAN_BOXED(2152212212,32,FLEN)
NAN_BOXED(2801729536,32,FLEN)
NAN_BOXED(2128810846,32,FLEN)
NAN_BOXED(2152212212,32,FLEN)
NAN_BOXED(2801762304,32,FLEN)
NAN_BOXED(2128810846,32,FLEN)
NAN_BOXED(2152212212,32,FLEN)
NAN_BOXED(2801778688,32,FLEN)
NAN_BOXED(2128810846,32,FLEN)
NAN_BOXED(2152212212,32,FLEN)
NAN_BOXED(2801786880,32,FLEN)
NAN_BOXED(2128810846,32,FLEN)
NAN_BOXED(2152212212,32,FLEN)
NAN_BOXED(2801790976,32,FLEN)
NAN_BOXED(2128810846,32,FLEN)
NAN_BOXED(2152212212,32,FLEN)
NAN_BOXED(2801793024,32,FLEN)
NAN_BOXED(2128810846,32,FLEN)
NAN_BOXED(2152212212,32,FLEN)
NAN_BOXED(2801794048,32,FLEN)
NAN_BOXED(2128810846,32,FLEN)
NAN_BOXED(2152212212,32,FLEN)
NAN_BOXED(2801794560,32,FLEN)
NAN_BOXED(2128810846,32,FLEN)
NAN_BOXED(2152212212,32,FLEN)
NAN_BOXED(2801794816,32,FLEN)
NAN_BOXED(2128810846,32,FLEN)
NAN_BOXED(2152212212,32,FLEN)
NAN_BOXED(2801794944,32,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
