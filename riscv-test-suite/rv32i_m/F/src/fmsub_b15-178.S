
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 14:18:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32F/fmsub.s.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.s instruction of the RISC-V RV32F_Zicsr,RV32FD_Zicsr,RV64F_Zicsr,RV64FD_Zicsr extension for the fmsub_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF_Zicsr,RV32IFD_Zicsr,RV64IF_Zicsr,RV64IFD_Zicsr,RV32EF_Zicsr,RV32EFD_Zicsr,RV64EF_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fmsub_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*F.*);def TEST_CASE_1=True;",fmsub_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_22656:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xc1 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x60800001; valaddr_reg:x3; val_offset:67968*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67968*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22657:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xc1 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x60800003; valaddr_reg:x3; val_offset:67971*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67971*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22658:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xc1 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x60800007; valaddr_reg:x3; val_offset:67974*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67974*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22659:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xc1 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x6080000f; valaddr_reg:x3; val_offset:67977*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67977*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22660:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xc1 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x6080001f; valaddr_reg:x3; val_offset:67980*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67980*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22661:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xc1 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x6080003f; valaddr_reg:x3; val_offset:67983*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67983*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22662:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xc1 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x6080007f; valaddr_reg:x3; val_offset:67986*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67986*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22663:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xc1 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x608000ff; valaddr_reg:x3; val_offset:67989*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67989*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22664:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xc1 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x608001ff; valaddr_reg:x3; val_offset:67992*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67992*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22665:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xc1 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x608003ff; valaddr_reg:x3; val_offset:67995*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67995*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22666:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xc1 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x608007ff; valaddr_reg:x3; val_offset:67998*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67998*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22667:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xc1 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x60800fff; valaddr_reg:x3; val_offset:68001*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68001*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22668:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xc1 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x60801fff; valaddr_reg:x3; val_offset:68004*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68004*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22669:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xc1 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x60803fff; valaddr_reg:x3; val_offset:68007*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68007*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22670:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xc1 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x60807fff; valaddr_reg:x3; val_offset:68010*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68010*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22671:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xc1 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x6080ffff; valaddr_reg:x3; val_offset:68013*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68013*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22672:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xc1 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x6081ffff; valaddr_reg:x3; val_offset:68016*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68016*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22673:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xc1 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x6083ffff; valaddr_reg:x3; val_offset:68019*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68019*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22674:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xc1 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x6087ffff; valaddr_reg:x3; val_offset:68022*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68022*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22675:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xc1 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x608fffff; valaddr_reg:x3; val_offset:68025*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68025*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22676:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xc1 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x609fffff; valaddr_reg:x3; val_offset:68028*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68028*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22677:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xc1 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x60bfffff; valaddr_reg:x3; val_offset:68031*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68031*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22678:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xc1 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x60c00000; valaddr_reg:x3; val_offset:68034*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68034*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22679:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xc1 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x60e00000; valaddr_reg:x3; val_offset:68037*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68037*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22680:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xc1 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x60f00000; valaddr_reg:x3; val_offset:68040*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68040*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22681:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xc1 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x60f80000; valaddr_reg:x3; val_offset:68043*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68043*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22682:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xc1 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x60fc0000; valaddr_reg:x3; val_offset:68046*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68046*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22683:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xc1 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x60fe0000; valaddr_reg:x3; val_offset:68049*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68049*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22684:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xc1 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x60ff0000; valaddr_reg:x3; val_offset:68052*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68052*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22685:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xc1 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x60ff8000; valaddr_reg:x3; val_offset:68055*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68055*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22686:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xc1 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x60ffc000; valaddr_reg:x3; val_offset:68058*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68058*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22687:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xc1 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x60ffe000; valaddr_reg:x3; val_offset:68061*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68061*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22688:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xc1 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x60fff000; valaddr_reg:x3; val_offset:68064*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68064*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22689:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xc1 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x60fff800; valaddr_reg:x3; val_offset:68067*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68067*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22690:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xc1 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x60fffc00; valaddr_reg:x3; val_offset:68070*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68070*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22691:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xc1 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x60fffe00; valaddr_reg:x3; val_offset:68073*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68073*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22692:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xc1 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x60ffff00; valaddr_reg:x3; val_offset:68076*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68076*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22693:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xc1 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x60ffff80; valaddr_reg:x3; val_offset:68079*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68079*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22694:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xc1 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x60ffffc0; valaddr_reg:x3; val_offset:68082*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68082*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22695:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xc1 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x60ffffe0; valaddr_reg:x3; val_offset:68085*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68085*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22696:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xc1 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x60fffff0; valaddr_reg:x3; val_offset:68088*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68088*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22697:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xc1 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x60fffff8; valaddr_reg:x3; val_offset:68091*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68091*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22698:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xc1 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x60fffffc; valaddr_reg:x3; val_offset:68094*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68094*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22699:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xc1 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x60fffffe; valaddr_reg:x3; val_offset:68097*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68097*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22700:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xc1 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x60ffffff; valaddr_reg:x3; val_offset:68100*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68100*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22701:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x7f000001; valaddr_reg:x3; val_offset:68103*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68103*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22702:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x7f000003; valaddr_reg:x3; val_offset:68106*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68106*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22703:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x7f000007; valaddr_reg:x3; val_offset:68109*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68109*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22704:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x7f199999; valaddr_reg:x3; val_offset:68112*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68112*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22705:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x7f249249; valaddr_reg:x3; val_offset:68115*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68115*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22706:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x7f333333; valaddr_reg:x3; val_offset:68118*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68118*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22707:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x7f36db6d; valaddr_reg:x3; val_offset:68121*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68121*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22708:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x7f3bbbbb; valaddr_reg:x3; val_offset:68124*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68124*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22709:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x7f444444; valaddr_reg:x3; val_offset:68127*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68127*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22710:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x7f4ccccc; valaddr_reg:x3; val_offset:68130*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68130*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22711:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x7f5b6db6; valaddr_reg:x3; val_offset:68133*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68133*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22712:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x7f666666; valaddr_reg:x3; val_offset:68136*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68136*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22713:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x7f6db6db; valaddr_reg:x3; val_offset:68139*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68139*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22714:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x7f7ffff8; valaddr_reg:x3; val_offset:68142*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68142*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22715:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x7f7ffffc; valaddr_reg:x3; val_offset:68145*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68145*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22716:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x7f7ffffe; valaddr_reg:x3; val_offset:68148*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68148*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22717:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x80800001; valaddr_reg:x3; val_offset:68151*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68151*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22718:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x80800003; valaddr_reg:x3; val_offset:68154*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68154*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22719:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x80800007; valaddr_reg:x3; val_offset:68157*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68157*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22720:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x80999999; valaddr_reg:x3; val_offset:68160*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68160*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22721:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x80a49249; valaddr_reg:x3; val_offset:68163*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68163*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22722:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x80b33333; valaddr_reg:x3; val_offset:68166*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68166*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22723:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x80b6db6d; valaddr_reg:x3; val_offset:68169*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68169*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22724:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x80bbbbbb; valaddr_reg:x3; val_offset:68172*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68172*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22725:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x80c44444; valaddr_reg:x3; val_offset:68175*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68175*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22726:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x80cccccc; valaddr_reg:x3; val_offset:68178*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68178*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22727:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x80db6db6; valaddr_reg:x3; val_offset:68181*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68181*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22728:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x80e66666; valaddr_reg:x3; val_offset:68184*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68184*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22729:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x80edb6db; valaddr_reg:x3; val_offset:68187*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68187*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22730:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x80fffff8; valaddr_reg:x3; val_offset:68190*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68190*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22731:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x80fffffc; valaddr_reg:x3; val_offset:68193*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68193*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22732:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x80fffffe; valaddr_reg:x3; val_offset:68196*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68196*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22733:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x8f000000; valaddr_reg:x3; val_offset:68199*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68199*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22734:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x8f000001; valaddr_reg:x3; val_offset:68202*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68202*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22735:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x8f000003; valaddr_reg:x3; val_offset:68205*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68205*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22736:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x8f000007; valaddr_reg:x3; val_offset:68208*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68208*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22737:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x8f00000f; valaddr_reg:x3; val_offset:68211*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68211*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22738:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x8f00001f; valaddr_reg:x3; val_offset:68214*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68214*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22739:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x8f00003f; valaddr_reg:x3; val_offset:68217*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68217*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22740:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x8f00007f; valaddr_reg:x3; val_offset:68220*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68220*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22741:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x8f0000ff; valaddr_reg:x3; val_offset:68223*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68223*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22742:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x8f0001ff; valaddr_reg:x3; val_offset:68226*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68226*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22743:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x8f0003ff; valaddr_reg:x3; val_offset:68229*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68229*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22744:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x8f0007ff; valaddr_reg:x3; val_offset:68232*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68232*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22745:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x8f000fff; valaddr_reg:x3; val_offset:68235*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68235*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22746:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x8f001fff; valaddr_reg:x3; val_offset:68238*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68238*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22747:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x8f003fff; valaddr_reg:x3; val_offset:68241*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68241*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22748:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x8f007fff; valaddr_reg:x3; val_offset:68244*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68244*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22749:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x8f00ffff; valaddr_reg:x3; val_offset:68247*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68247*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22750:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x8f01ffff; valaddr_reg:x3; val_offset:68250*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68250*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22751:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x8f03ffff; valaddr_reg:x3; val_offset:68253*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68253*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22752:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x8f07ffff; valaddr_reg:x3; val_offset:68256*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68256*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22753:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x8f0fffff; valaddr_reg:x3; val_offset:68259*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68259*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22754:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x8f1fffff; valaddr_reg:x3; val_offset:68262*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68262*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22755:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x8f3fffff; valaddr_reg:x3; val_offset:68265*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68265*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22756:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x8f400000; valaddr_reg:x3; val_offset:68268*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68268*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22757:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x8f600000; valaddr_reg:x3; val_offset:68271*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68271*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22758:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x8f700000; valaddr_reg:x3; val_offset:68274*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68274*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22759:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x8f780000; valaddr_reg:x3; val_offset:68277*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68277*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22760:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x8f7c0000; valaddr_reg:x3; val_offset:68280*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68280*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22761:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x8f7e0000; valaddr_reg:x3; val_offset:68283*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68283*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22762:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x8f7f0000; valaddr_reg:x3; val_offset:68286*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68286*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22763:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x8f7f8000; valaddr_reg:x3; val_offset:68289*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68289*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22764:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x8f7fc000; valaddr_reg:x3; val_offset:68292*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68292*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22765:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x8f7fe000; valaddr_reg:x3; val_offset:68295*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68295*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22766:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x8f7ff000; valaddr_reg:x3; val_offset:68298*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68298*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22767:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x8f7ff800; valaddr_reg:x3; val_offset:68301*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68301*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22768:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x8f7ffc00; valaddr_reg:x3; val_offset:68304*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68304*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22769:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x8f7ffe00; valaddr_reg:x3; val_offset:68307*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68307*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22770:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x8f7fff00; valaddr_reg:x3; val_offset:68310*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68310*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22771:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x8f7fff80; valaddr_reg:x3; val_offset:68313*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68313*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22772:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x8f7fffc0; valaddr_reg:x3; val_offset:68316*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68316*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22773:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x8f7fffe0; valaddr_reg:x3; val_offset:68319*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68319*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22774:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x8f7ffff0; valaddr_reg:x3; val_offset:68322*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68322*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22775:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x8f7ffff8; valaddr_reg:x3; val_offset:68325*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68325*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22776:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x8f7ffffc; valaddr_reg:x3; val_offset:68328*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68328*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22777:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x8f7ffffe; valaddr_reg:x3; val_offset:68331*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68331*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22778:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x8f7fffff; valaddr_reg:x3; val_offset:68334*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68334*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22779:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x80000001; valaddr_reg:x3; val_offset:68337*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68337*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22780:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x80000003; valaddr_reg:x3; val_offset:68340*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68340*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22781:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x80000007; valaddr_reg:x3; val_offset:68343*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68343*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22782:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x80199999; valaddr_reg:x3; val_offset:68346*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68346*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22783:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x80249249; valaddr_reg:x3; val_offset:68349*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68349*0 + 3*177*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(1619001345,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(1619001347,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(1619001351,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(1619001359,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(1619001375,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(1619001407,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(1619001471,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(1619001599,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(1619001855,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(1619002367,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(1619003391,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(1619005439,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(1619009535,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(1619017727,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(1619034111,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(1619066879,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(1619132415,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(1619263487,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(1619525631,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(1620049919,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(1621098495,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(1623195647,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(1623195648,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(1625292800,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(1626341376,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(1626865664,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(1627127808,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(1627258880,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(1627324416,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(1627357184,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(1627373568,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(1627381760,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(1627385856,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(1627387904,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(1627388928,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(1627389440,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(1627389696,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(1627389824,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(1627389888,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(1627389920,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(1627389936,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(1627389944,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(1627389948,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(1627389950,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(1627389951,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(2130706433,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(2130706435,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(2130706439,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(2132384153,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(2133103177,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(2134061875,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(2134301549,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(2134621115,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(2135180356,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(2135739596,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(2136698294,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(2137417318,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(2137896667,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(2139095032,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(2139095036,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(2139095038,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872257,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872259,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872263,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2157549977,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2158269001,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2159227699,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2159467373,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2159786939,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2160346180,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2160905420,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2161864118,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2162583142,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2163062491,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260856,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260860,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260862,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2399141888,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2399141889,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2399141891,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2399141895,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2399141903,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2399141919,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2399141951,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2399142015,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2399142143,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2399142399,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2399142911,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2399143935,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2399145983,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2399150079,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2399158271,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2399174655,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2399207423,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2399272959,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2399404031,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2399666175,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2400190463,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2401239039,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2403336191,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2403336192,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2405433344,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2406481920,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407006208,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407268352,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407399424,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407464960,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407497728,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407514112,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407522304,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407526400,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407528448,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407529472,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407529984,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407530240,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407530368,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407530432,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407530464,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407530480,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407530488,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407530492,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407530494,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407530495,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483651,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483655,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149161369,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149880393,32,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
