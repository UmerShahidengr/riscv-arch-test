
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 14:18:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32F/fmsub.s.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.s instruction of the RISC-V RV32F_Zicsr,RV32FD_Zicsr,RV64F_Zicsr,RV64FD_Zicsr extension for the fmsub_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF_Zicsr,RV32IFD_Zicsr,RV64IF_Zicsr,RV64IFD_Zicsr,RV32EF_Zicsr,RV32EFD_Zicsr,RV64EF_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fmsub_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*F.*);def TEST_CASE_1=True;",fmsub_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_22784:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x80333333; valaddr_reg:x3; val_offset:68352*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68352*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22785:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x8036db6d; valaddr_reg:x3; val_offset:68355*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68355*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22786:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x803bbbbb; valaddr_reg:x3; val_offset:68358*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68358*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22787:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x80444444; valaddr_reg:x3; val_offset:68361*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68361*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22788:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x804ccccc; valaddr_reg:x3; val_offset:68364*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68364*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22789:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x805b6db6; valaddr_reg:x3; val_offset:68367*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68367*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22790:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x80666666; valaddr_reg:x3; val_offset:68370*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68370*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22791:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x806db6db; valaddr_reg:x3; val_offset:68373*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68373*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22792:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x807ffff8; valaddr_reg:x3; val_offset:68376*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68376*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22793:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x807ffffc; valaddr_reg:x3; val_offset:68379*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68379*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22794:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x807ffffe; valaddr_reg:x3; val_offset:68382*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68382*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22795:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x8c000000; valaddr_reg:x3; val_offset:68385*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68385*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22796:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x8c000001; valaddr_reg:x3; val_offset:68388*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68388*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22797:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x8c000003; valaddr_reg:x3; val_offset:68391*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68391*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22798:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x8c000007; valaddr_reg:x3; val_offset:68394*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68394*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22799:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x8c00000f; valaddr_reg:x3; val_offset:68397*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68397*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22800:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x8c00001f; valaddr_reg:x3; val_offset:68400*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68400*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22801:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x8c00003f; valaddr_reg:x3; val_offset:68403*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68403*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22802:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x8c00007f; valaddr_reg:x3; val_offset:68406*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68406*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22803:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x8c0000ff; valaddr_reg:x3; val_offset:68409*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68409*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22804:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x8c0001ff; valaddr_reg:x3; val_offset:68412*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68412*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22805:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x8c0003ff; valaddr_reg:x3; val_offset:68415*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68415*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22806:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x8c0007ff; valaddr_reg:x3; val_offset:68418*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68418*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22807:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x8c000fff; valaddr_reg:x3; val_offset:68421*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68421*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22808:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x8c001fff; valaddr_reg:x3; val_offset:68424*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68424*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22809:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x8c003fff; valaddr_reg:x3; val_offset:68427*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68427*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22810:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x8c007fff; valaddr_reg:x3; val_offset:68430*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68430*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22811:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x8c00ffff; valaddr_reg:x3; val_offset:68433*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68433*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22812:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x8c01ffff; valaddr_reg:x3; val_offset:68436*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68436*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22813:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x8c03ffff; valaddr_reg:x3; val_offset:68439*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68439*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22814:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x8c07ffff; valaddr_reg:x3; val_offset:68442*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68442*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22815:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x8c0fffff; valaddr_reg:x3; val_offset:68445*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68445*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22816:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x8c1fffff; valaddr_reg:x3; val_offset:68448*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68448*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22817:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x8c3fffff; valaddr_reg:x3; val_offset:68451*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68451*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22818:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x8c400000; valaddr_reg:x3; val_offset:68454*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68454*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22819:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x8c600000; valaddr_reg:x3; val_offset:68457*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68457*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22820:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x8c700000; valaddr_reg:x3; val_offset:68460*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68460*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22821:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x8c780000; valaddr_reg:x3; val_offset:68463*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68463*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22822:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x8c7c0000; valaddr_reg:x3; val_offset:68466*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68466*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22823:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x8c7e0000; valaddr_reg:x3; val_offset:68469*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68469*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22824:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x8c7f0000; valaddr_reg:x3; val_offset:68472*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68472*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22825:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x8c7f8000; valaddr_reg:x3; val_offset:68475*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68475*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22826:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x8c7fc000; valaddr_reg:x3; val_offset:68478*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68478*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22827:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x8c7fe000; valaddr_reg:x3; val_offset:68481*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68481*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22828:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x8c7ff000; valaddr_reg:x3; val_offset:68484*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68484*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22829:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x8c7ff800; valaddr_reg:x3; val_offset:68487*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68487*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22830:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x8c7ffc00; valaddr_reg:x3; val_offset:68490*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68490*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22831:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x8c7ffe00; valaddr_reg:x3; val_offset:68493*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68493*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22832:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x8c7fff00; valaddr_reg:x3; val_offset:68496*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68496*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22833:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x8c7fff80; valaddr_reg:x3; val_offset:68499*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68499*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22834:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x8c7fffc0; valaddr_reg:x3; val_offset:68502*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68502*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22835:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x8c7fffe0; valaddr_reg:x3; val_offset:68505*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68505*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22836:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x8c7ffff0; valaddr_reg:x3; val_offset:68508*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68508*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22837:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x8c7ffff8; valaddr_reg:x3; val_offset:68511*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68511*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22838:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x8c7ffffc; valaddr_reg:x3; val_offset:68514*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68514*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22839:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x8c7ffffe; valaddr_reg:x3; val_offset:68517*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68517*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22840:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x8c7fffff; valaddr_reg:x3; val_offset:68520*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68520*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22841:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:68523*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68523*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22842:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:68526*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68526*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22843:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:68529*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68529*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22844:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x199999; valaddr_reg:x3; val_offset:68532*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68532*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22845:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x249249; valaddr_reg:x3; val_offset:68535*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68535*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22846:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x333333; valaddr_reg:x3; val_offset:68538*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68538*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22847:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x36db6d; valaddr_reg:x3; val_offset:68541*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68541*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22848:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x3bbbbb; valaddr_reg:x3; val_offset:68544*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68544*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22849:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x444444; valaddr_reg:x3; val_offset:68547*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68547*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22850:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x4ccccc; valaddr_reg:x3; val_offset:68550*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68550*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22851:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x5b6db6; valaddr_reg:x3; val_offset:68553*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68553*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22852:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x666666; valaddr_reg:x3; val_offset:68556*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68556*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22853:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x6db6db; valaddr_reg:x3; val_offset:68559*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68559*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22854:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x7ffff8; valaddr_reg:x3; val_offset:68562*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68562*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22855:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x7ffffc; valaddr_reg:x3; val_offset:68565*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68565*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22856:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x7ffffe; valaddr_reg:x3; val_offset:68568*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68568*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22857:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x4800000; valaddr_reg:x3; val_offset:68571*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68571*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22858:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x4800001; valaddr_reg:x3; val_offset:68574*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68574*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22859:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x4800003; valaddr_reg:x3; val_offset:68577*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68577*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22860:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x4800007; valaddr_reg:x3; val_offset:68580*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68580*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22861:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x480000f; valaddr_reg:x3; val_offset:68583*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68583*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22862:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x480001f; valaddr_reg:x3; val_offset:68586*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68586*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22863:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x480003f; valaddr_reg:x3; val_offset:68589*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68589*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22864:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x480007f; valaddr_reg:x3; val_offset:68592*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68592*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22865:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x48000ff; valaddr_reg:x3; val_offset:68595*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68595*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22866:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x48001ff; valaddr_reg:x3; val_offset:68598*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68598*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22867:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x48003ff; valaddr_reg:x3; val_offset:68601*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68601*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22868:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x48007ff; valaddr_reg:x3; val_offset:68604*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68604*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22869:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x4800fff; valaddr_reg:x3; val_offset:68607*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68607*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22870:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x4801fff; valaddr_reg:x3; val_offset:68610*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68610*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22871:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x4803fff; valaddr_reg:x3; val_offset:68613*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68613*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22872:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x4807fff; valaddr_reg:x3; val_offset:68616*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68616*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22873:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x480ffff; valaddr_reg:x3; val_offset:68619*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68619*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22874:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x481ffff; valaddr_reg:x3; val_offset:68622*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68622*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22875:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x483ffff; valaddr_reg:x3; val_offset:68625*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68625*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22876:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x487ffff; valaddr_reg:x3; val_offset:68628*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68628*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22877:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x48fffff; valaddr_reg:x3; val_offset:68631*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68631*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22878:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x49fffff; valaddr_reg:x3; val_offset:68634*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68634*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22879:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x4bfffff; valaddr_reg:x3; val_offset:68637*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68637*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22880:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x4c00000; valaddr_reg:x3; val_offset:68640*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68640*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22881:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x4e00000; valaddr_reg:x3; val_offset:68643*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68643*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22882:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x4f00000; valaddr_reg:x3; val_offset:68646*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68646*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22883:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x4f80000; valaddr_reg:x3; val_offset:68649*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68649*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22884:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x4fc0000; valaddr_reg:x3; val_offset:68652*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68652*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22885:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x4fe0000; valaddr_reg:x3; val_offset:68655*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68655*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22886:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x4ff0000; valaddr_reg:x3; val_offset:68658*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68658*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22887:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x4ff8000; valaddr_reg:x3; val_offset:68661*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68661*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22888:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x4ffc000; valaddr_reg:x3; val_offset:68664*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68664*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22889:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x4ffe000; valaddr_reg:x3; val_offset:68667*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68667*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22890:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x4fff000; valaddr_reg:x3; val_offset:68670*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68670*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22891:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x4fff800; valaddr_reg:x3; val_offset:68673*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68673*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22892:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x4fffc00; valaddr_reg:x3; val_offset:68676*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68676*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22893:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x4fffe00; valaddr_reg:x3; val_offset:68679*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68679*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22894:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x4ffff00; valaddr_reg:x3; val_offset:68682*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68682*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22895:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x4ffff80; valaddr_reg:x3; val_offset:68685*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68685*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22896:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x4ffffc0; valaddr_reg:x3; val_offset:68688*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68688*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22897:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x4ffffe0; valaddr_reg:x3; val_offset:68691*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68691*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22898:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x4fffff0; valaddr_reg:x3; val_offset:68694*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68694*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22899:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x4fffff8; valaddr_reg:x3; val_offset:68697*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68697*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22900:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x4fffffc; valaddr_reg:x3; val_offset:68700*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68700*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22901:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x4fffffe; valaddr_reg:x3; val_offset:68703*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68703*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22902:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x4ffffff; valaddr_reg:x3; val_offset:68706*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68706*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22903:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b9b11 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x458a37 and fs3 == 1 and fe3 == 0x66 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb9b11; op2val:0x80458a37;
op3val:0xb3000000; valaddr_reg:x3; val_offset:68709*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68709*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22904:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b9b11 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x458a37 and fs3 == 1 and fe3 == 0x66 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb9b11; op2val:0x80458a37;
op3val:0xb3000001; valaddr_reg:x3; val_offset:68712*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68712*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22905:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b9b11 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x458a37 and fs3 == 1 and fe3 == 0x66 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb9b11; op2val:0x80458a37;
op3val:0xb3000003; valaddr_reg:x3; val_offset:68715*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68715*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22906:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b9b11 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x458a37 and fs3 == 1 and fe3 == 0x66 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb9b11; op2val:0x80458a37;
op3val:0xb3000007; valaddr_reg:x3; val_offset:68718*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68718*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22907:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b9b11 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x458a37 and fs3 == 1 and fe3 == 0x66 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb9b11; op2val:0x80458a37;
op3val:0xb300000f; valaddr_reg:x3; val_offset:68721*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68721*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22908:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b9b11 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x458a37 and fs3 == 1 and fe3 == 0x66 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb9b11; op2val:0x80458a37;
op3val:0xb300001f; valaddr_reg:x3; val_offset:68724*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68724*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22909:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b9b11 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x458a37 and fs3 == 1 and fe3 == 0x66 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb9b11; op2val:0x80458a37;
op3val:0xb300003f; valaddr_reg:x3; val_offset:68727*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68727*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22910:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b9b11 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x458a37 and fs3 == 1 and fe3 == 0x66 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb9b11; op2val:0x80458a37;
op3val:0xb300007f; valaddr_reg:x3; val_offset:68730*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68730*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22911:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b9b11 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x458a37 and fs3 == 1 and fe3 == 0x66 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb9b11; op2val:0x80458a37;
op3val:0xb30000ff; valaddr_reg:x3; val_offset:68733*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68733*0 + 3*178*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2150839091,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151078765,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151398331,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151957572,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2152516812,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2153475510,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154194534,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154673883,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872248,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872252,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872254,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348810240,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348810241,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348810243,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348810247,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348810255,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348810271,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348810303,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348810367,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348810495,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348810751,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348811263,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348812287,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348814335,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348818431,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348826623,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348843007,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348875775,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348941311,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2349072383,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2349334527,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2349858815,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2350907391,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2353004543,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2353004544,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2355101696,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2356150272,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2356674560,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2356936704,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2357067776,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2357133312,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2357166080,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2357182464,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2357190656,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2357194752,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2357196800,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2357197824,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2357198336,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2357198592,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2357198720,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2357198784,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2357198816,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2357198832,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2357198840,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2357198844,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2357198846,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2357198847,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1677721,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2396745,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3355443,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3595117,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3914683,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(4473924,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5033164,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5991862,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(6710886,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7190235,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388600,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388604,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388606,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(75497472,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(75497473,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(75497475,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(75497479,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(75497487,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(75497503,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(75497535,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(75497599,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(75497727,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(75497983,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(75498495,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(75499519,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(75501567,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(75505663,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(75513855,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(75530239,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(75563007,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(75628543,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(75759615,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(76021759,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(76546047,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(77594623,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(79691775,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(79691776,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(81788928,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(82837504,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(83361792,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(83623936,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(83755008,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(83820544,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(83853312,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(83869696,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(83877888,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(83881984,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(83884032,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(83885056,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(83885568,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(83885824,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(83885952,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(83886016,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(83886048,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(83886064,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(83886072,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(83886076,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(83886078,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(83886079,32,FLEN)
NAN_BOXED(2129369873,32,FLEN)
NAN_BOXED(2152041015,32,FLEN)
NAN_BOXED(3003121664,32,FLEN)
NAN_BOXED(2129369873,32,FLEN)
NAN_BOXED(2152041015,32,FLEN)
NAN_BOXED(3003121665,32,FLEN)
NAN_BOXED(2129369873,32,FLEN)
NAN_BOXED(2152041015,32,FLEN)
NAN_BOXED(3003121667,32,FLEN)
NAN_BOXED(2129369873,32,FLEN)
NAN_BOXED(2152041015,32,FLEN)
NAN_BOXED(3003121671,32,FLEN)
NAN_BOXED(2129369873,32,FLEN)
NAN_BOXED(2152041015,32,FLEN)
NAN_BOXED(3003121679,32,FLEN)
NAN_BOXED(2129369873,32,FLEN)
NAN_BOXED(2152041015,32,FLEN)
NAN_BOXED(3003121695,32,FLEN)
NAN_BOXED(2129369873,32,FLEN)
NAN_BOXED(2152041015,32,FLEN)
NAN_BOXED(3003121727,32,FLEN)
NAN_BOXED(2129369873,32,FLEN)
NAN_BOXED(2152041015,32,FLEN)
NAN_BOXED(3003121791,32,FLEN)
NAN_BOXED(2129369873,32,FLEN)
NAN_BOXED(2152041015,32,FLEN)
NAN_BOXED(3003121919,32,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
