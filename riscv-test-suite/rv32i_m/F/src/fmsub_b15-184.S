
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 14:18:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32F/fmsub.s.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.s instruction of the RISC-V RV32F_Zicsr,RV32FD_Zicsr,RV64F_Zicsr,RV64FD_Zicsr extension for the fmsub_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF_Zicsr,RV32IFD_Zicsr,RV64IF_Zicsr,RV64IFD_Zicsr,RV32EF_Zicsr,RV32EFD_Zicsr,RV64EF_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fmsub_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*F.*);def TEST_CASE_1=True;",fmsub_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_23424:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6f94cb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4462d0 and fs3 == 0 and fe3 == 0x99 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eef94cb; op2val:0x4462d0;
op3val:0x4c8001ff; valaddr_reg:x3; val_offset:70272*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70272*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23425:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6f94cb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4462d0 and fs3 == 0 and fe3 == 0x99 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eef94cb; op2val:0x4462d0;
op3val:0x4c8003ff; valaddr_reg:x3; val_offset:70275*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70275*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23426:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6f94cb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4462d0 and fs3 == 0 and fe3 == 0x99 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eef94cb; op2val:0x4462d0;
op3val:0x4c8007ff; valaddr_reg:x3; val_offset:70278*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70278*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23427:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6f94cb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4462d0 and fs3 == 0 and fe3 == 0x99 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eef94cb; op2val:0x4462d0;
op3val:0x4c800fff; valaddr_reg:x3; val_offset:70281*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70281*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23428:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6f94cb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4462d0 and fs3 == 0 and fe3 == 0x99 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eef94cb; op2val:0x4462d0;
op3val:0x4c801fff; valaddr_reg:x3; val_offset:70284*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70284*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23429:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6f94cb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4462d0 and fs3 == 0 and fe3 == 0x99 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eef94cb; op2val:0x4462d0;
op3val:0x4c803fff; valaddr_reg:x3; val_offset:70287*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70287*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23430:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6f94cb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4462d0 and fs3 == 0 and fe3 == 0x99 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eef94cb; op2val:0x4462d0;
op3val:0x4c807fff; valaddr_reg:x3; val_offset:70290*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70290*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23431:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6f94cb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4462d0 and fs3 == 0 and fe3 == 0x99 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eef94cb; op2val:0x4462d0;
op3val:0x4c80ffff; valaddr_reg:x3; val_offset:70293*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70293*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23432:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6f94cb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4462d0 and fs3 == 0 and fe3 == 0x99 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eef94cb; op2val:0x4462d0;
op3val:0x4c81ffff; valaddr_reg:x3; val_offset:70296*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70296*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23433:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6f94cb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4462d0 and fs3 == 0 and fe3 == 0x99 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eef94cb; op2val:0x4462d0;
op3val:0x4c83ffff; valaddr_reg:x3; val_offset:70299*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70299*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23434:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6f94cb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4462d0 and fs3 == 0 and fe3 == 0x99 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eef94cb; op2val:0x4462d0;
op3val:0x4c87ffff; valaddr_reg:x3; val_offset:70302*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70302*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23435:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6f94cb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4462d0 and fs3 == 0 and fe3 == 0x99 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eef94cb; op2val:0x4462d0;
op3val:0x4c8fffff; valaddr_reg:x3; val_offset:70305*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70305*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23436:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6f94cb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4462d0 and fs3 == 0 and fe3 == 0x99 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eef94cb; op2val:0x4462d0;
op3val:0x4c9fffff; valaddr_reg:x3; val_offset:70308*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70308*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23437:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6f94cb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4462d0 and fs3 == 0 and fe3 == 0x99 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eef94cb; op2val:0x4462d0;
op3val:0x4cbfffff; valaddr_reg:x3; val_offset:70311*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70311*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23438:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6f94cb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4462d0 and fs3 == 0 and fe3 == 0x99 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eef94cb; op2val:0x4462d0;
op3val:0x4cc00000; valaddr_reg:x3; val_offset:70314*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70314*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23439:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6f94cb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4462d0 and fs3 == 0 and fe3 == 0x99 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eef94cb; op2val:0x4462d0;
op3val:0x4ce00000; valaddr_reg:x3; val_offset:70317*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70317*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23440:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6f94cb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4462d0 and fs3 == 0 and fe3 == 0x99 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eef94cb; op2val:0x4462d0;
op3val:0x4cf00000; valaddr_reg:x3; val_offset:70320*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70320*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23441:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6f94cb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4462d0 and fs3 == 0 and fe3 == 0x99 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eef94cb; op2val:0x4462d0;
op3val:0x4cf80000; valaddr_reg:x3; val_offset:70323*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70323*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23442:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6f94cb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4462d0 and fs3 == 0 and fe3 == 0x99 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eef94cb; op2val:0x4462d0;
op3val:0x4cfc0000; valaddr_reg:x3; val_offset:70326*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70326*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23443:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6f94cb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4462d0 and fs3 == 0 and fe3 == 0x99 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eef94cb; op2val:0x4462d0;
op3val:0x4cfe0000; valaddr_reg:x3; val_offset:70329*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70329*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23444:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6f94cb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4462d0 and fs3 == 0 and fe3 == 0x99 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eef94cb; op2val:0x4462d0;
op3val:0x4cff0000; valaddr_reg:x3; val_offset:70332*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70332*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23445:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6f94cb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4462d0 and fs3 == 0 and fe3 == 0x99 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eef94cb; op2val:0x4462d0;
op3val:0x4cff8000; valaddr_reg:x3; val_offset:70335*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70335*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23446:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6f94cb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4462d0 and fs3 == 0 and fe3 == 0x99 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eef94cb; op2val:0x4462d0;
op3val:0x4cffc000; valaddr_reg:x3; val_offset:70338*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70338*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23447:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6f94cb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4462d0 and fs3 == 0 and fe3 == 0x99 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eef94cb; op2val:0x4462d0;
op3val:0x4cffe000; valaddr_reg:x3; val_offset:70341*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70341*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23448:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6f94cb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4462d0 and fs3 == 0 and fe3 == 0x99 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eef94cb; op2val:0x4462d0;
op3val:0x4cfff000; valaddr_reg:x3; val_offset:70344*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70344*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23449:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6f94cb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4462d0 and fs3 == 0 and fe3 == 0x99 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eef94cb; op2val:0x4462d0;
op3val:0x4cfff800; valaddr_reg:x3; val_offset:70347*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70347*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23450:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6f94cb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4462d0 and fs3 == 0 and fe3 == 0x99 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eef94cb; op2val:0x4462d0;
op3val:0x4cfffc00; valaddr_reg:x3; val_offset:70350*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70350*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23451:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6f94cb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4462d0 and fs3 == 0 and fe3 == 0x99 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eef94cb; op2val:0x4462d0;
op3val:0x4cfffe00; valaddr_reg:x3; val_offset:70353*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70353*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23452:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6f94cb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4462d0 and fs3 == 0 and fe3 == 0x99 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eef94cb; op2val:0x4462d0;
op3val:0x4cffff00; valaddr_reg:x3; val_offset:70356*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70356*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23453:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6f94cb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4462d0 and fs3 == 0 and fe3 == 0x99 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eef94cb; op2val:0x4462d0;
op3val:0x4cffff80; valaddr_reg:x3; val_offset:70359*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70359*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23454:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6f94cb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4462d0 and fs3 == 0 and fe3 == 0x99 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eef94cb; op2val:0x4462d0;
op3val:0x4cffffc0; valaddr_reg:x3; val_offset:70362*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70362*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23455:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6f94cb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4462d0 and fs3 == 0 and fe3 == 0x99 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eef94cb; op2val:0x4462d0;
op3val:0x4cffffe0; valaddr_reg:x3; val_offset:70365*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70365*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23456:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6f94cb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4462d0 and fs3 == 0 and fe3 == 0x99 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eef94cb; op2val:0x4462d0;
op3val:0x4cfffff0; valaddr_reg:x3; val_offset:70368*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70368*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23457:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6f94cb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4462d0 and fs3 == 0 and fe3 == 0x99 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eef94cb; op2val:0x4462d0;
op3val:0x4cfffff8; valaddr_reg:x3; val_offset:70371*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70371*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23458:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6f94cb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4462d0 and fs3 == 0 and fe3 == 0x99 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eef94cb; op2val:0x4462d0;
op3val:0x4cfffffc; valaddr_reg:x3; val_offset:70374*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70374*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23459:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6f94cb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4462d0 and fs3 == 0 and fe3 == 0x99 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eef94cb; op2val:0x4462d0;
op3val:0x4cfffffe; valaddr_reg:x3; val_offset:70377*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70377*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23460:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6f94cb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4462d0 and fs3 == 0 and fe3 == 0x99 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eef94cb; op2val:0x4462d0;
op3val:0x4cffffff; valaddr_reg:x3; val_offset:70380*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70380*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23461:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x700cfa and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef00cfa; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:70383*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70383*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23462:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x700cfa and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef00cfa; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:70386*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70386*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23463:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x700cfa and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef00cfa; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:70389*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70389*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23464:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x700cfa and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef00cfa; op2val:0x0;
op3val:0x199999; valaddr_reg:x3; val_offset:70392*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70392*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23465:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x700cfa and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef00cfa; op2val:0x0;
op3val:0x249249; valaddr_reg:x3; val_offset:70395*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70395*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23466:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x700cfa and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef00cfa; op2val:0x0;
op3val:0x333333; valaddr_reg:x3; val_offset:70398*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70398*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23467:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x700cfa and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef00cfa; op2val:0x0;
op3val:0x36db6d; valaddr_reg:x3; val_offset:70401*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70401*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23468:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x700cfa and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef00cfa; op2val:0x0;
op3val:0x3bbbbb; valaddr_reg:x3; val_offset:70404*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70404*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23469:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x700cfa and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef00cfa; op2val:0x0;
op3val:0x444444; valaddr_reg:x3; val_offset:70407*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70407*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23470:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x700cfa and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef00cfa; op2val:0x0;
op3val:0x4ccccc; valaddr_reg:x3; val_offset:70410*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70410*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23471:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x700cfa and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef00cfa; op2val:0x0;
op3val:0x5b6db6; valaddr_reg:x3; val_offset:70413*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70413*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23472:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x700cfa and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef00cfa; op2val:0x0;
op3val:0x666666; valaddr_reg:x3; val_offset:70416*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70416*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23473:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x700cfa and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef00cfa; op2val:0x0;
op3val:0x6db6db; valaddr_reg:x3; val_offset:70419*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70419*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23474:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x700cfa and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef00cfa; op2val:0x0;
op3val:0x7ffff8; valaddr_reg:x3; val_offset:70422*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70422*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23475:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x700cfa and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef00cfa; op2val:0x0;
op3val:0x7ffffc; valaddr_reg:x3; val_offset:70425*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70425*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23476:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x700cfa and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef00cfa; op2val:0x0;
op3val:0x7ffffe; valaddr_reg:x3; val_offset:70428*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70428*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23477:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x700cfa and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef00cfa; op2val:0x0;
op3val:0x7800000; valaddr_reg:x3; val_offset:70431*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70431*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23478:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x700cfa and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef00cfa; op2val:0x0;
op3val:0x7800001; valaddr_reg:x3; val_offset:70434*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70434*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23479:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x700cfa and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef00cfa; op2val:0x0;
op3val:0x7800003; valaddr_reg:x3; val_offset:70437*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70437*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23480:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x700cfa and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef00cfa; op2val:0x0;
op3val:0x7800007; valaddr_reg:x3; val_offset:70440*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70440*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23481:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x700cfa and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef00cfa; op2val:0x0;
op3val:0x780000f; valaddr_reg:x3; val_offset:70443*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70443*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23482:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x700cfa and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef00cfa; op2val:0x0;
op3val:0x780001f; valaddr_reg:x3; val_offset:70446*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70446*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23483:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x700cfa and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef00cfa; op2val:0x0;
op3val:0x780003f; valaddr_reg:x3; val_offset:70449*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70449*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23484:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x700cfa and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef00cfa; op2val:0x0;
op3val:0x780007f; valaddr_reg:x3; val_offset:70452*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70452*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23485:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x700cfa and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef00cfa; op2val:0x0;
op3val:0x78000ff; valaddr_reg:x3; val_offset:70455*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70455*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23486:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x700cfa and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef00cfa; op2val:0x0;
op3val:0x78001ff; valaddr_reg:x3; val_offset:70458*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70458*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23487:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x700cfa and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef00cfa; op2val:0x0;
op3val:0x78003ff; valaddr_reg:x3; val_offset:70461*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70461*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23488:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x700cfa and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef00cfa; op2val:0x0;
op3val:0x78007ff; valaddr_reg:x3; val_offset:70464*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70464*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23489:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x700cfa and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef00cfa; op2val:0x0;
op3val:0x7800fff; valaddr_reg:x3; val_offset:70467*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70467*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23490:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x700cfa and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef00cfa; op2val:0x0;
op3val:0x7801fff; valaddr_reg:x3; val_offset:70470*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70470*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23491:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x700cfa and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef00cfa; op2val:0x0;
op3val:0x7803fff; valaddr_reg:x3; val_offset:70473*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70473*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23492:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x700cfa and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef00cfa; op2val:0x0;
op3val:0x7807fff; valaddr_reg:x3; val_offset:70476*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70476*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23493:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x700cfa and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef00cfa; op2val:0x0;
op3val:0x780ffff; valaddr_reg:x3; val_offset:70479*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70479*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23494:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x700cfa and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef00cfa; op2val:0x0;
op3val:0x781ffff; valaddr_reg:x3; val_offset:70482*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70482*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23495:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x700cfa and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef00cfa; op2val:0x0;
op3val:0x783ffff; valaddr_reg:x3; val_offset:70485*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70485*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23496:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x700cfa and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef00cfa; op2val:0x0;
op3val:0x787ffff; valaddr_reg:x3; val_offset:70488*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70488*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23497:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x700cfa and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef00cfa; op2val:0x0;
op3val:0x78fffff; valaddr_reg:x3; val_offset:70491*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70491*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23498:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x700cfa and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef00cfa; op2val:0x0;
op3val:0x79fffff; valaddr_reg:x3; val_offset:70494*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70494*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23499:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x700cfa and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef00cfa; op2val:0x0;
op3val:0x7bfffff; valaddr_reg:x3; val_offset:70497*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70497*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23500:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x700cfa and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef00cfa; op2val:0x0;
op3val:0x7c00000; valaddr_reg:x3; val_offset:70500*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70500*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23501:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x700cfa and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef00cfa; op2val:0x0;
op3val:0x7e00000; valaddr_reg:x3; val_offset:70503*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70503*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23502:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x700cfa and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef00cfa; op2val:0x0;
op3val:0x7f00000; valaddr_reg:x3; val_offset:70506*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70506*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23503:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x700cfa and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef00cfa; op2val:0x0;
op3val:0x7f80000; valaddr_reg:x3; val_offset:70509*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70509*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23504:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x700cfa and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef00cfa; op2val:0x0;
op3val:0x7fc0000; valaddr_reg:x3; val_offset:70512*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70512*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23505:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x700cfa and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef00cfa; op2val:0x0;
op3val:0x7fe0000; valaddr_reg:x3; val_offset:70515*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70515*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23506:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x700cfa and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef00cfa; op2val:0x0;
op3val:0x7ff0000; valaddr_reg:x3; val_offset:70518*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70518*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23507:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x700cfa and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef00cfa; op2val:0x0;
op3val:0x7ff8000; valaddr_reg:x3; val_offset:70521*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70521*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23508:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x700cfa and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef00cfa; op2val:0x0;
op3val:0x7ffc000; valaddr_reg:x3; val_offset:70524*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70524*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23509:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x700cfa and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef00cfa; op2val:0x0;
op3val:0x7ffe000; valaddr_reg:x3; val_offset:70527*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70527*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23510:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x700cfa and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef00cfa; op2val:0x0;
op3val:0x7fff000; valaddr_reg:x3; val_offset:70530*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70530*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23511:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x700cfa and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef00cfa; op2val:0x0;
op3val:0x7fff800; valaddr_reg:x3; val_offset:70533*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70533*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23512:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x700cfa and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef00cfa; op2val:0x0;
op3val:0x7fffc00; valaddr_reg:x3; val_offset:70536*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70536*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23513:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x700cfa and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef00cfa; op2val:0x0;
op3val:0x7fffe00; valaddr_reg:x3; val_offset:70539*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70539*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23514:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x700cfa and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef00cfa; op2val:0x0;
op3val:0x7ffff00; valaddr_reg:x3; val_offset:70542*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70542*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23515:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x700cfa and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef00cfa; op2val:0x0;
op3val:0x7ffff80; valaddr_reg:x3; val_offset:70545*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70545*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23516:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x700cfa and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef00cfa; op2val:0x0;
op3val:0x7ffffc0; valaddr_reg:x3; val_offset:70548*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70548*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23517:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x700cfa and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef00cfa; op2val:0x0;
op3val:0x7ffffe0; valaddr_reg:x3; val_offset:70551*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70551*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23518:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x700cfa and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef00cfa; op2val:0x0;
op3val:0x7fffff0; valaddr_reg:x3; val_offset:70554*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70554*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23519:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x700cfa and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef00cfa; op2val:0x0;
op3val:0x7fffff8; valaddr_reg:x3; val_offset:70557*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70557*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23520:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x700cfa and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef00cfa; op2val:0x0;
op3val:0x7fffffc; valaddr_reg:x3; val_offset:70560*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70560*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23521:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x700cfa and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef00cfa; op2val:0x0;
op3val:0x7fffffe; valaddr_reg:x3; val_offset:70563*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70563*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23522:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x700cfa and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef00cfa; op2val:0x0;
op3val:0x7ffffff; valaddr_reg:x3; val_offset:70566*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70566*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23523:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x710ef3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x43f788 and fs3 == 0 and fe3 == 0x6c and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef10ef3; op2val:0x43f788;
op3val:0x36000000; valaddr_reg:x3; val_offset:70569*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70569*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23524:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x710ef3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x43f788 and fs3 == 0 and fe3 == 0x6c and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef10ef3; op2val:0x43f788;
op3val:0x36000001; valaddr_reg:x3; val_offset:70572*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70572*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23525:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x710ef3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x43f788 and fs3 == 0 and fe3 == 0x6c and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef10ef3; op2val:0x43f788;
op3val:0x36000003; valaddr_reg:x3; val_offset:70575*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70575*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23526:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x710ef3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x43f788 and fs3 == 0 and fe3 == 0x6c and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef10ef3; op2val:0x43f788;
op3val:0x36000007; valaddr_reg:x3; val_offset:70578*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70578*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23527:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x710ef3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x43f788 and fs3 == 0 and fe3 == 0x6c and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef10ef3; op2val:0x43f788;
op3val:0x3600000f; valaddr_reg:x3; val_offset:70581*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70581*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23528:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x710ef3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x43f788 and fs3 == 0 and fe3 == 0x6c and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef10ef3; op2val:0x43f788;
op3val:0x3600001f; valaddr_reg:x3; val_offset:70584*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70584*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23529:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x710ef3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x43f788 and fs3 == 0 and fe3 == 0x6c and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef10ef3; op2val:0x43f788;
op3val:0x3600003f; valaddr_reg:x3; val_offset:70587*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70587*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23530:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x710ef3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x43f788 and fs3 == 0 and fe3 == 0x6c and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef10ef3; op2val:0x43f788;
op3val:0x3600007f; valaddr_reg:x3; val_offset:70590*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70590*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23531:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x710ef3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x43f788 and fs3 == 0 and fe3 == 0x6c and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef10ef3; op2val:0x43f788;
op3val:0x360000ff; valaddr_reg:x3; val_offset:70593*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70593*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23532:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x710ef3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x43f788 and fs3 == 0 and fe3 == 0x6c and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef10ef3; op2val:0x43f788;
op3val:0x360001ff; valaddr_reg:x3; val_offset:70596*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70596*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23533:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x710ef3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x43f788 and fs3 == 0 and fe3 == 0x6c and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef10ef3; op2val:0x43f788;
op3val:0x360003ff; valaddr_reg:x3; val_offset:70599*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70599*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23534:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x710ef3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x43f788 and fs3 == 0 and fe3 == 0x6c and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef10ef3; op2val:0x43f788;
op3val:0x360007ff; valaddr_reg:x3; val_offset:70602*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70602*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23535:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x710ef3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x43f788 and fs3 == 0 and fe3 == 0x6c and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef10ef3; op2val:0x43f788;
op3val:0x36000fff; valaddr_reg:x3; val_offset:70605*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70605*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23536:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x710ef3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x43f788 and fs3 == 0 and fe3 == 0x6c and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef10ef3; op2val:0x43f788;
op3val:0x36001fff; valaddr_reg:x3; val_offset:70608*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70608*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23537:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x710ef3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x43f788 and fs3 == 0 and fe3 == 0x6c and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef10ef3; op2val:0x43f788;
op3val:0x36003fff; valaddr_reg:x3; val_offset:70611*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70611*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23538:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x710ef3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x43f788 and fs3 == 0 and fe3 == 0x6c and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef10ef3; op2val:0x43f788;
op3val:0x36007fff; valaddr_reg:x3; val_offset:70614*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70614*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23539:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x710ef3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x43f788 and fs3 == 0 and fe3 == 0x6c and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef10ef3; op2val:0x43f788;
op3val:0x3600ffff; valaddr_reg:x3; val_offset:70617*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70617*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23540:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x710ef3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x43f788 and fs3 == 0 and fe3 == 0x6c and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef10ef3; op2val:0x43f788;
op3val:0x3601ffff; valaddr_reg:x3; val_offset:70620*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70620*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23541:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x710ef3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x43f788 and fs3 == 0 and fe3 == 0x6c and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef10ef3; op2val:0x43f788;
op3val:0x3603ffff; valaddr_reg:x3; val_offset:70623*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70623*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23542:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x710ef3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x43f788 and fs3 == 0 and fe3 == 0x6c and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef10ef3; op2val:0x43f788;
op3val:0x3607ffff; valaddr_reg:x3; val_offset:70626*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70626*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23543:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x710ef3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x43f788 and fs3 == 0 and fe3 == 0x6c and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef10ef3; op2val:0x43f788;
op3val:0x360fffff; valaddr_reg:x3; val_offset:70629*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70629*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23544:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x710ef3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x43f788 and fs3 == 0 and fe3 == 0x6c and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef10ef3; op2val:0x43f788;
op3val:0x361fffff; valaddr_reg:x3; val_offset:70632*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70632*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23545:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x710ef3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x43f788 and fs3 == 0 and fe3 == 0x6c and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef10ef3; op2val:0x43f788;
op3val:0x363fffff; valaddr_reg:x3; val_offset:70635*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70635*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23546:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x710ef3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x43f788 and fs3 == 0 and fe3 == 0x6c and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef10ef3; op2val:0x43f788;
op3val:0x36400000; valaddr_reg:x3; val_offset:70638*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70638*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23547:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x710ef3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x43f788 and fs3 == 0 and fe3 == 0x6c and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef10ef3; op2val:0x43f788;
op3val:0x36600000; valaddr_reg:x3; val_offset:70641*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70641*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23548:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x710ef3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x43f788 and fs3 == 0 and fe3 == 0x6c and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef10ef3; op2val:0x43f788;
op3val:0x36700000; valaddr_reg:x3; val_offset:70644*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70644*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23549:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x710ef3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x43f788 and fs3 == 0 and fe3 == 0x6c and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef10ef3; op2val:0x43f788;
op3val:0x36780000; valaddr_reg:x3; val_offset:70647*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70647*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23550:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x710ef3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x43f788 and fs3 == 0 and fe3 == 0x6c and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef10ef3; op2val:0x43f788;
op3val:0x367c0000; valaddr_reg:x3; val_offset:70650*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70650*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23551:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x710ef3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x43f788 and fs3 == 0 and fe3 == 0x6c and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef10ef3; op2val:0x43f788;
op3val:0x367e0000; valaddr_reg:x3; val_offset:70653*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 70653*0 + 3*183*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(2129630411,32,FLEN)
NAN_BOXED(4481744,32,FLEN)
NAN_BOXED(1283457535,32,FLEN)
NAN_BOXED(2129630411,32,FLEN)
NAN_BOXED(4481744,32,FLEN)
NAN_BOXED(1283458047,32,FLEN)
NAN_BOXED(2129630411,32,FLEN)
NAN_BOXED(4481744,32,FLEN)
NAN_BOXED(1283459071,32,FLEN)
NAN_BOXED(2129630411,32,FLEN)
NAN_BOXED(4481744,32,FLEN)
NAN_BOXED(1283461119,32,FLEN)
NAN_BOXED(2129630411,32,FLEN)
NAN_BOXED(4481744,32,FLEN)
NAN_BOXED(1283465215,32,FLEN)
NAN_BOXED(2129630411,32,FLEN)
NAN_BOXED(4481744,32,FLEN)
NAN_BOXED(1283473407,32,FLEN)
NAN_BOXED(2129630411,32,FLEN)
NAN_BOXED(4481744,32,FLEN)
NAN_BOXED(1283489791,32,FLEN)
NAN_BOXED(2129630411,32,FLEN)
NAN_BOXED(4481744,32,FLEN)
NAN_BOXED(1283522559,32,FLEN)
NAN_BOXED(2129630411,32,FLEN)
NAN_BOXED(4481744,32,FLEN)
NAN_BOXED(1283588095,32,FLEN)
NAN_BOXED(2129630411,32,FLEN)
NAN_BOXED(4481744,32,FLEN)
NAN_BOXED(1283719167,32,FLEN)
NAN_BOXED(2129630411,32,FLEN)
NAN_BOXED(4481744,32,FLEN)
NAN_BOXED(1283981311,32,FLEN)
NAN_BOXED(2129630411,32,FLEN)
NAN_BOXED(4481744,32,FLEN)
NAN_BOXED(1284505599,32,FLEN)
NAN_BOXED(2129630411,32,FLEN)
NAN_BOXED(4481744,32,FLEN)
NAN_BOXED(1285554175,32,FLEN)
NAN_BOXED(2129630411,32,FLEN)
NAN_BOXED(4481744,32,FLEN)
NAN_BOXED(1287651327,32,FLEN)
NAN_BOXED(2129630411,32,FLEN)
NAN_BOXED(4481744,32,FLEN)
NAN_BOXED(1287651328,32,FLEN)
NAN_BOXED(2129630411,32,FLEN)
NAN_BOXED(4481744,32,FLEN)
NAN_BOXED(1289748480,32,FLEN)
NAN_BOXED(2129630411,32,FLEN)
NAN_BOXED(4481744,32,FLEN)
NAN_BOXED(1290797056,32,FLEN)
NAN_BOXED(2129630411,32,FLEN)
NAN_BOXED(4481744,32,FLEN)
NAN_BOXED(1291321344,32,FLEN)
NAN_BOXED(2129630411,32,FLEN)
NAN_BOXED(4481744,32,FLEN)
NAN_BOXED(1291583488,32,FLEN)
NAN_BOXED(2129630411,32,FLEN)
NAN_BOXED(4481744,32,FLEN)
NAN_BOXED(1291714560,32,FLEN)
NAN_BOXED(2129630411,32,FLEN)
NAN_BOXED(4481744,32,FLEN)
NAN_BOXED(1291780096,32,FLEN)
NAN_BOXED(2129630411,32,FLEN)
NAN_BOXED(4481744,32,FLEN)
NAN_BOXED(1291812864,32,FLEN)
NAN_BOXED(2129630411,32,FLEN)
NAN_BOXED(4481744,32,FLEN)
NAN_BOXED(1291829248,32,FLEN)
NAN_BOXED(2129630411,32,FLEN)
NAN_BOXED(4481744,32,FLEN)
NAN_BOXED(1291837440,32,FLEN)
NAN_BOXED(2129630411,32,FLEN)
NAN_BOXED(4481744,32,FLEN)
NAN_BOXED(1291841536,32,FLEN)
NAN_BOXED(2129630411,32,FLEN)
NAN_BOXED(4481744,32,FLEN)
NAN_BOXED(1291843584,32,FLEN)
NAN_BOXED(2129630411,32,FLEN)
NAN_BOXED(4481744,32,FLEN)
NAN_BOXED(1291844608,32,FLEN)
NAN_BOXED(2129630411,32,FLEN)
NAN_BOXED(4481744,32,FLEN)
NAN_BOXED(1291845120,32,FLEN)
NAN_BOXED(2129630411,32,FLEN)
NAN_BOXED(4481744,32,FLEN)
NAN_BOXED(1291845376,32,FLEN)
NAN_BOXED(2129630411,32,FLEN)
NAN_BOXED(4481744,32,FLEN)
NAN_BOXED(1291845504,32,FLEN)
NAN_BOXED(2129630411,32,FLEN)
NAN_BOXED(4481744,32,FLEN)
NAN_BOXED(1291845568,32,FLEN)
NAN_BOXED(2129630411,32,FLEN)
NAN_BOXED(4481744,32,FLEN)
NAN_BOXED(1291845600,32,FLEN)
NAN_BOXED(2129630411,32,FLEN)
NAN_BOXED(4481744,32,FLEN)
NAN_BOXED(1291845616,32,FLEN)
NAN_BOXED(2129630411,32,FLEN)
NAN_BOXED(4481744,32,FLEN)
NAN_BOXED(1291845624,32,FLEN)
NAN_BOXED(2129630411,32,FLEN)
NAN_BOXED(4481744,32,FLEN)
NAN_BOXED(1291845628,32,FLEN)
NAN_BOXED(2129630411,32,FLEN)
NAN_BOXED(4481744,32,FLEN)
NAN_BOXED(1291845630,32,FLEN)
NAN_BOXED(2129630411,32,FLEN)
NAN_BOXED(4481744,32,FLEN)
NAN_BOXED(1291845631,32,FLEN)
NAN_BOXED(2129661178,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(2129661178,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3,32,FLEN)
NAN_BOXED(2129661178,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7,32,FLEN)
NAN_BOXED(2129661178,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1677721,32,FLEN)
NAN_BOXED(2129661178,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2396745,32,FLEN)
NAN_BOXED(2129661178,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3355443,32,FLEN)
NAN_BOXED(2129661178,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3595117,32,FLEN)
NAN_BOXED(2129661178,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3914683,32,FLEN)
NAN_BOXED(2129661178,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(4473924,32,FLEN)
NAN_BOXED(2129661178,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5033164,32,FLEN)
NAN_BOXED(2129661178,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5991862,32,FLEN)
NAN_BOXED(2129661178,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(6710886,32,FLEN)
NAN_BOXED(2129661178,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7190235,32,FLEN)
NAN_BOXED(2129661178,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388600,32,FLEN)
NAN_BOXED(2129661178,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388604,32,FLEN)
NAN_BOXED(2129661178,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388606,32,FLEN)
NAN_BOXED(2129661178,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(125829120,32,FLEN)
NAN_BOXED(2129661178,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(125829121,32,FLEN)
NAN_BOXED(2129661178,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(125829123,32,FLEN)
NAN_BOXED(2129661178,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(125829127,32,FLEN)
NAN_BOXED(2129661178,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(125829135,32,FLEN)
NAN_BOXED(2129661178,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(125829151,32,FLEN)
NAN_BOXED(2129661178,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(125829183,32,FLEN)
NAN_BOXED(2129661178,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(125829247,32,FLEN)
NAN_BOXED(2129661178,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(125829375,32,FLEN)
NAN_BOXED(2129661178,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(125829631,32,FLEN)
NAN_BOXED(2129661178,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(125830143,32,FLEN)
NAN_BOXED(2129661178,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(125831167,32,FLEN)
NAN_BOXED(2129661178,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(125833215,32,FLEN)
NAN_BOXED(2129661178,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(125837311,32,FLEN)
NAN_BOXED(2129661178,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(125845503,32,FLEN)
NAN_BOXED(2129661178,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(125861887,32,FLEN)
NAN_BOXED(2129661178,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(125894655,32,FLEN)
NAN_BOXED(2129661178,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(125960191,32,FLEN)
NAN_BOXED(2129661178,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(126091263,32,FLEN)
NAN_BOXED(2129661178,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(126353407,32,FLEN)
NAN_BOXED(2129661178,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(126877695,32,FLEN)
NAN_BOXED(2129661178,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(127926271,32,FLEN)
NAN_BOXED(2129661178,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(130023423,32,FLEN)
NAN_BOXED(2129661178,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(130023424,32,FLEN)
NAN_BOXED(2129661178,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(132120576,32,FLEN)
NAN_BOXED(2129661178,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(133169152,32,FLEN)
NAN_BOXED(2129661178,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(133693440,32,FLEN)
NAN_BOXED(2129661178,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(133955584,32,FLEN)
NAN_BOXED(2129661178,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134086656,32,FLEN)
NAN_BOXED(2129661178,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134152192,32,FLEN)
NAN_BOXED(2129661178,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134184960,32,FLEN)
NAN_BOXED(2129661178,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134201344,32,FLEN)
NAN_BOXED(2129661178,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134209536,32,FLEN)
NAN_BOXED(2129661178,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134213632,32,FLEN)
NAN_BOXED(2129661178,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134215680,32,FLEN)
NAN_BOXED(2129661178,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134216704,32,FLEN)
NAN_BOXED(2129661178,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134217216,32,FLEN)
NAN_BOXED(2129661178,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134217472,32,FLEN)
NAN_BOXED(2129661178,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134217600,32,FLEN)
NAN_BOXED(2129661178,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134217664,32,FLEN)
NAN_BOXED(2129661178,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134217696,32,FLEN)
NAN_BOXED(2129661178,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134217712,32,FLEN)
NAN_BOXED(2129661178,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134217720,32,FLEN)
NAN_BOXED(2129661178,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134217724,32,FLEN)
NAN_BOXED(2129661178,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134217726,32,FLEN)
NAN_BOXED(2129661178,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134217727,32,FLEN)
NAN_BOXED(2129727219,32,FLEN)
NAN_BOXED(4454280,32,FLEN)
NAN_BOXED(905969664,32,FLEN)
NAN_BOXED(2129727219,32,FLEN)
NAN_BOXED(4454280,32,FLEN)
NAN_BOXED(905969665,32,FLEN)
NAN_BOXED(2129727219,32,FLEN)
NAN_BOXED(4454280,32,FLEN)
NAN_BOXED(905969667,32,FLEN)
NAN_BOXED(2129727219,32,FLEN)
NAN_BOXED(4454280,32,FLEN)
NAN_BOXED(905969671,32,FLEN)
NAN_BOXED(2129727219,32,FLEN)
NAN_BOXED(4454280,32,FLEN)
NAN_BOXED(905969679,32,FLEN)
NAN_BOXED(2129727219,32,FLEN)
NAN_BOXED(4454280,32,FLEN)
NAN_BOXED(905969695,32,FLEN)
NAN_BOXED(2129727219,32,FLEN)
NAN_BOXED(4454280,32,FLEN)
NAN_BOXED(905969727,32,FLEN)
NAN_BOXED(2129727219,32,FLEN)
NAN_BOXED(4454280,32,FLEN)
NAN_BOXED(905969791,32,FLEN)
NAN_BOXED(2129727219,32,FLEN)
NAN_BOXED(4454280,32,FLEN)
NAN_BOXED(905969919,32,FLEN)
NAN_BOXED(2129727219,32,FLEN)
NAN_BOXED(4454280,32,FLEN)
NAN_BOXED(905970175,32,FLEN)
NAN_BOXED(2129727219,32,FLEN)
NAN_BOXED(4454280,32,FLEN)
NAN_BOXED(905970687,32,FLEN)
NAN_BOXED(2129727219,32,FLEN)
NAN_BOXED(4454280,32,FLEN)
NAN_BOXED(905971711,32,FLEN)
NAN_BOXED(2129727219,32,FLEN)
NAN_BOXED(4454280,32,FLEN)
NAN_BOXED(905973759,32,FLEN)
NAN_BOXED(2129727219,32,FLEN)
NAN_BOXED(4454280,32,FLEN)
NAN_BOXED(905977855,32,FLEN)
NAN_BOXED(2129727219,32,FLEN)
NAN_BOXED(4454280,32,FLEN)
NAN_BOXED(905986047,32,FLEN)
NAN_BOXED(2129727219,32,FLEN)
NAN_BOXED(4454280,32,FLEN)
NAN_BOXED(906002431,32,FLEN)
NAN_BOXED(2129727219,32,FLEN)
NAN_BOXED(4454280,32,FLEN)
NAN_BOXED(906035199,32,FLEN)
NAN_BOXED(2129727219,32,FLEN)
NAN_BOXED(4454280,32,FLEN)
NAN_BOXED(906100735,32,FLEN)
NAN_BOXED(2129727219,32,FLEN)
NAN_BOXED(4454280,32,FLEN)
NAN_BOXED(906231807,32,FLEN)
NAN_BOXED(2129727219,32,FLEN)
NAN_BOXED(4454280,32,FLEN)
NAN_BOXED(906493951,32,FLEN)
NAN_BOXED(2129727219,32,FLEN)
NAN_BOXED(4454280,32,FLEN)
NAN_BOXED(907018239,32,FLEN)
NAN_BOXED(2129727219,32,FLEN)
NAN_BOXED(4454280,32,FLEN)
NAN_BOXED(908066815,32,FLEN)
NAN_BOXED(2129727219,32,FLEN)
NAN_BOXED(4454280,32,FLEN)
NAN_BOXED(910163967,32,FLEN)
NAN_BOXED(2129727219,32,FLEN)
NAN_BOXED(4454280,32,FLEN)
NAN_BOXED(910163968,32,FLEN)
NAN_BOXED(2129727219,32,FLEN)
NAN_BOXED(4454280,32,FLEN)
NAN_BOXED(912261120,32,FLEN)
NAN_BOXED(2129727219,32,FLEN)
NAN_BOXED(4454280,32,FLEN)
NAN_BOXED(913309696,32,FLEN)
NAN_BOXED(2129727219,32,FLEN)
NAN_BOXED(4454280,32,FLEN)
NAN_BOXED(913833984,32,FLEN)
NAN_BOXED(2129727219,32,FLEN)
NAN_BOXED(4454280,32,FLEN)
NAN_BOXED(914096128,32,FLEN)
NAN_BOXED(2129727219,32,FLEN)
NAN_BOXED(4454280,32,FLEN)
NAN_BOXED(914227200,32,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
