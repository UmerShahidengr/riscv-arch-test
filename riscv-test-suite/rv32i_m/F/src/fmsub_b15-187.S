
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 14:18:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32F/fmsub.s.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.s instruction of the RISC-V RV32F_Zicsr,RV32FD_Zicsr,RV64F_Zicsr,RV64FD_Zicsr extension for the fmsub_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF_Zicsr,RV32IFD_Zicsr,RV64IF_Zicsr,RV64IFD_Zicsr,RV32EF_Zicsr,RV32EFD_Zicsr,RV64EF_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fmsub_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*F.*);def TEST_CASE_1=True;",fmsub_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_23808:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x733156 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef33156; op2val:0x80000000;
op3val:0x849fffff; valaddr_reg:x3; val_offset:71424*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71424*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23809:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x733156 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef33156; op2val:0x80000000;
op3val:0x84bfffff; valaddr_reg:x3; val_offset:71427*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71427*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23810:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x733156 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef33156; op2val:0x80000000;
op3val:0x84c00000; valaddr_reg:x3; val_offset:71430*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71430*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23811:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x733156 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef33156; op2val:0x80000000;
op3val:0x84e00000; valaddr_reg:x3; val_offset:71433*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71433*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23812:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x733156 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef33156; op2val:0x80000000;
op3val:0x84f00000; valaddr_reg:x3; val_offset:71436*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71436*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23813:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x733156 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef33156; op2val:0x80000000;
op3val:0x84f80000; valaddr_reg:x3; val_offset:71439*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71439*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23814:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x733156 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef33156; op2val:0x80000000;
op3val:0x84fc0000; valaddr_reg:x3; val_offset:71442*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71442*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23815:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x733156 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef33156; op2val:0x80000000;
op3val:0x84fe0000; valaddr_reg:x3; val_offset:71445*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71445*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23816:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x733156 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef33156; op2val:0x80000000;
op3val:0x84ff0000; valaddr_reg:x3; val_offset:71448*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71448*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23817:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x733156 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef33156; op2val:0x80000000;
op3val:0x84ff8000; valaddr_reg:x3; val_offset:71451*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71451*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23818:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x733156 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef33156; op2val:0x80000000;
op3val:0x84ffc000; valaddr_reg:x3; val_offset:71454*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71454*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23819:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x733156 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef33156; op2val:0x80000000;
op3val:0x84ffe000; valaddr_reg:x3; val_offset:71457*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71457*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23820:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x733156 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef33156; op2val:0x80000000;
op3val:0x84fff000; valaddr_reg:x3; val_offset:71460*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71460*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23821:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x733156 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef33156; op2val:0x80000000;
op3val:0x84fff800; valaddr_reg:x3; val_offset:71463*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71463*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23822:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x733156 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef33156; op2val:0x80000000;
op3val:0x84fffc00; valaddr_reg:x3; val_offset:71466*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71466*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23823:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x733156 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef33156; op2val:0x80000000;
op3val:0x84fffe00; valaddr_reg:x3; val_offset:71469*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71469*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23824:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x733156 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef33156; op2val:0x80000000;
op3val:0x84ffff00; valaddr_reg:x3; val_offset:71472*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71472*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23825:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x733156 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef33156; op2val:0x80000000;
op3val:0x84ffff80; valaddr_reg:x3; val_offset:71475*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71475*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23826:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x733156 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef33156; op2val:0x80000000;
op3val:0x84ffffc0; valaddr_reg:x3; val_offset:71478*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71478*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23827:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x733156 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef33156; op2val:0x80000000;
op3val:0x84ffffe0; valaddr_reg:x3; val_offset:71481*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71481*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23828:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x733156 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef33156; op2val:0x80000000;
op3val:0x84fffff0; valaddr_reg:x3; val_offset:71484*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71484*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23829:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x733156 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef33156; op2val:0x80000000;
op3val:0x84fffff8; valaddr_reg:x3; val_offset:71487*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71487*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23830:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x733156 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef33156; op2val:0x80000000;
op3val:0x84fffffc; valaddr_reg:x3; val_offset:71490*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71490*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23831:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x733156 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef33156; op2val:0x80000000;
op3val:0x84fffffe; valaddr_reg:x3; val_offset:71493*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71493*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23832:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x733156 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef33156; op2val:0x80000000;
op3val:0x84ffffff; valaddr_reg:x3; val_offset:71496*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71496*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23833:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x746607 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x061379 and fs3 == 1 and fe3 == 0xf8 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef46607; op2val:0xc0061379;
op3val:0xfc000000; valaddr_reg:x3; val_offset:71499*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71499*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23834:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x746607 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x061379 and fs3 == 1 and fe3 == 0xf8 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef46607; op2val:0xc0061379;
op3val:0xfc000001; valaddr_reg:x3; val_offset:71502*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71502*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23835:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x746607 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x061379 and fs3 == 1 and fe3 == 0xf8 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef46607; op2val:0xc0061379;
op3val:0xfc000003; valaddr_reg:x3; val_offset:71505*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71505*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23836:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x746607 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x061379 and fs3 == 1 and fe3 == 0xf8 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef46607; op2val:0xc0061379;
op3val:0xfc000007; valaddr_reg:x3; val_offset:71508*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71508*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23837:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x746607 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x061379 and fs3 == 1 and fe3 == 0xf8 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef46607; op2val:0xc0061379;
op3val:0xfc00000f; valaddr_reg:x3; val_offset:71511*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71511*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23838:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x746607 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x061379 and fs3 == 1 and fe3 == 0xf8 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef46607; op2val:0xc0061379;
op3val:0xfc00001f; valaddr_reg:x3; val_offset:71514*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71514*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23839:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x746607 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x061379 and fs3 == 1 and fe3 == 0xf8 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef46607; op2val:0xc0061379;
op3val:0xfc00003f; valaddr_reg:x3; val_offset:71517*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71517*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23840:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x746607 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x061379 and fs3 == 1 and fe3 == 0xf8 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef46607; op2val:0xc0061379;
op3val:0xfc00007f; valaddr_reg:x3; val_offset:71520*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71520*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23841:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x746607 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x061379 and fs3 == 1 and fe3 == 0xf8 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef46607; op2val:0xc0061379;
op3val:0xfc0000ff; valaddr_reg:x3; val_offset:71523*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71523*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23842:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x746607 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x061379 and fs3 == 1 and fe3 == 0xf8 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef46607; op2val:0xc0061379;
op3val:0xfc0001ff; valaddr_reg:x3; val_offset:71526*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71526*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23843:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x746607 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x061379 and fs3 == 1 and fe3 == 0xf8 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef46607; op2val:0xc0061379;
op3val:0xfc0003ff; valaddr_reg:x3; val_offset:71529*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71529*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23844:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x746607 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x061379 and fs3 == 1 and fe3 == 0xf8 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef46607; op2val:0xc0061379;
op3val:0xfc0007ff; valaddr_reg:x3; val_offset:71532*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71532*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23845:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x746607 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x061379 and fs3 == 1 and fe3 == 0xf8 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef46607; op2val:0xc0061379;
op3val:0xfc000fff; valaddr_reg:x3; val_offset:71535*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71535*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23846:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x746607 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x061379 and fs3 == 1 and fe3 == 0xf8 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef46607; op2val:0xc0061379;
op3val:0xfc001fff; valaddr_reg:x3; val_offset:71538*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71538*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23847:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x746607 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x061379 and fs3 == 1 and fe3 == 0xf8 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef46607; op2val:0xc0061379;
op3val:0xfc003fff; valaddr_reg:x3; val_offset:71541*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71541*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23848:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x746607 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x061379 and fs3 == 1 and fe3 == 0xf8 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef46607; op2val:0xc0061379;
op3val:0xfc007fff; valaddr_reg:x3; val_offset:71544*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71544*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23849:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x746607 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x061379 and fs3 == 1 and fe3 == 0xf8 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef46607; op2val:0xc0061379;
op3val:0xfc00ffff; valaddr_reg:x3; val_offset:71547*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71547*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23850:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x746607 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x061379 and fs3 == 1 and fe3 == 0xf8 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef46607; op2val:0xc0061379;
op3val:0xfc01ffff; valaddr_reg:x3; val_offset:71550*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71550*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23851:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x746607 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x061379 and fs3 == 1 and fe3 == 0xf8 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef46607; op2val:0xc0061379;
op3val:0xfc03ffff; valaddr_reg:x3; val_offset:71553*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71553*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23852:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x746607 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x061379 and fs3 == 1 and fe3 == 0xf8 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef46607; op2val:0xc0061379;
op3val:0xfc07ffff; valaddr_reg:x3; val_offset:71556*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71556*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23853:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x746607 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x061379 and fs3 == 1 and fe3 == 0xf8 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef46607; op2val:0xc0061379;
op3val:0xfc0fffff; valaddr_reg:x3; val_offset:71559*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71559*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23854:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x746607 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x061379 and fs3 == 1 and fe3 == 0xf8 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef46607; op2val:0xc0061379;
op3val:0xfc1fffff; valaddr_reg:x3; val_offset:71562*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71562*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23855:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x746607 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x061379 and fs3 == 1 and fe3 == 0xf8 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef46607; op2val:0xc0061379;
op3val:0xfc3fffff; valaddr_reg:x3; val_offset:71565*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71565*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23856:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x746607 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x061379 and fs3 == 1 and fe3 == 0xf8 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef46607; op2val:0xc0061379;
op3val:0xfc400000; valaddr_reg:x3; val_offset:71568*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71568*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23857:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x746607 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x061379 and fs3 == 1 and fe3 == 0xf8 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef46607; op2val:0xc0061379;
op3val:0xfc600000; valaddr_reg:x3; val_offset:71571*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71571*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23858:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x746607 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x061379 and fs3 == 1 and fe3 == 0xf8 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef46607; op2val:0xc0061379;
op3val:0xfc700000; valaddr_reg:x3; val_offset:71574*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71574*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23859:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x746607 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x061379 and fs3 == 1 and fe3 == 0xf8 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef46607; op2val:0xc0061379;
op3val:0xfc780000; valaddr_reg:x3; val_offset:71577*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71577*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23860:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x746607 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x061379 and fs3 == 1 and fe3 == 0xf8 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef46607; op2val:0xc0061379;
op3val:0xfc7c0000; valaddr_reg:x3; val_offset:71580*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71580*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23861:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x746607 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x061379 and fs3 == 1 and fe3 == 0xf8 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef46607; op2val:0xc0061379;
op3val:0xfc7e0000; valaddr_reg:x3; val_offset:71583*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71583*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23862:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x746607 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x061379 and fs3 == 1 and fe3 == 0xf8 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef46607; op2val:0xc0061379;
op3val:0xfc7f0000; valaddr_reg:x3; val_offset:71586*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71586*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23863:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x746607 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x061379 and fs3 == 1 and fe3 == 0xf8 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef46607; op2val:0xc0061379;
op3val:0xfc7f8000; valaddr_reg:x3; val_offset:71589*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71589*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23864:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x746607 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x061379 and fs3 == 1 and fe3 == 0xf8 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef46607; op2val:0xc0061379;
op3val:0xfc7fc000; valaddr_reg:x3; val_offset:71592*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71592*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23865:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x746607 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x061379 and fs3 == 1 and fe3 == 0xf8 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef46607; op2val:0xc0061379;
op3val:0xfc7fe000; valaddr_reg:x3; val_offset:71595*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71595*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23866:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x746607 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x061379 and fs3 == 1 and fe3 == 0xf8 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef46607; op2val:0xc0061379;
op3val:0xfc7ff000; valaddr_reg:x3; val_offset:71598*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71598*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23867:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x746607 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x061379 and fs3 == 1 and fe3 == 0xf8 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef46607; op2val:0xc0061379;
op3val:0xfc7ff800; valaddr_reg:x3; val_offset:71601*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71601*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23868:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x746607 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x061379 and fs3 == 1 and fe3 == 0xf8 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef46607; op2val:0xc0061379;
op3val:0xfc7ffc00; valaddr_reg:x3; val_offset:71604*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71604*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23869:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x746607 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x061379 and fs3 == 1 and fe3 == 0xf8 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef46607; op2val:0xc0061379;
op3val:0xfc7ffe00; valaddr_reg:x3; val_offset:71607*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71607*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23870:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x746607 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x061379 and fs3 == 1 and fe3 == 0xf8 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef46607; op2val:0xc0061379;
op3val:0xfc7fff00; valaddr_reg:x3; val_offset:71610*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71610*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23871:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x746607 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x061379 and fs3 == 1 and fe3 == 0xf8 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef46607; op2val:0xc0061379;
op3val:0xfc7fff80; valaddr_reg:x3; val_offset:71613*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71613*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23872:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x746607 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x061379 and fs3 == 1 and fe3 == 0xf8 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef46607; op2val:0xc0061379;
op3val:0xfc7fffc0; valaddr_reg:x3; val_offset:71616*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71616*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23873:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x746607 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x061379 and fs3 == 1 and fe3 == 0xf8 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef46607; op2val:0xc0061379;
op3val:0xfc7fffe0; valaddr_reg:x3; val_offset:71619*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71619*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23874:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x746607 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x061379 and fs3 == 1 and fe3 == 0xf8 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef46607; op2val:0xc0061379;
op3val:0xfc7ffff0; valaddr_reg:x3; val_offset:71622*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71622*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23875:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x746607 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x061379 and fs3 == 1 and fe3 == 0xf8 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef46607; op2val:0xc0061379;
op3val:0xfc7ffff8; valaddr_reg:x3; val_offset:71625*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71625*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23876:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x746607 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x061379 and fs3 == 1 and fe3 == 0xf8 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef46607; op2val:0xc0061379;
op3val:0xfc7ffffc; valaddr_reg:x3; val_offset:71628*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71628*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23877:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x746607 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x061379 and fs3 == 1 and fe3 == 0xf8 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef46607; op2val:0xc0061379;
op3val:0xfc7ffffe; valaddr_reg:x3; val_offset:71631*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71631*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23878:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x746607 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x061379 and fs3 == 1 and fe3 == 0xf8 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef46607; op2val:0xc0061379;
op3val:0xfc7fffff; valaddr_reg:x3; val_offset:71634*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71634*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23879:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x746607 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x061379 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef46607; op2val:0xc0061379;
op3val:0xff000001; valaddr_reg:x3; val_offset:71637*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71637*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23880:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x746607 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x061379 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef46607; op2val:0xc0061379;
op3val:0xff000003; valaddr_reg:x3; val_offset:71640*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71640*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23881:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x746607 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x061379 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef46607; op2val:0xc0061379;
op3val:0xff000007; valaddr_reg:x3; val_offset:71643*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71643*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23882:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x746607 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x061379 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef46607; op2val:0xc0061379;
op3val:0xff199999; valaddr_reg:x3; val_offset:71646*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71646*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23883:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x746607 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x061379 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef46607; op2val:0xc0061379;
op3val:0xff249249; valaddr_reg:x3; val_offset:71649*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71649*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23884:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x746607 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x061379 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef46607; op2val:0xc0061379;
op3val:0xff333333; valaddr_reg:x3; val_offset:71652*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71652*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23885:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x746607 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x061379 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef46607; op2val:0xc0061379;
op3val:0xff36db6d; valaddr_reg:x3; val_offset:71655*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71655*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23886:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x746607 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x061379 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef46607; op2val:0xc0061379;
op3val:0xff3bbbbb; valaddr_reg:x3; val_offset:71658*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71658*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23887:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x746607 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x061379 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef46607; op2val:0xc0061379;
op3val:0xff444444; valaddr_reg:x3; val_offset:71661*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71661*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23888:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x746607 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x061379 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef46607; op2val:0xc0061379;
op3val:0xff4ccccc; valaddr_reg:x3; val_offset:71664*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71664*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23889:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x746607 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x061379 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef46607; op2val:0xc0061379;
op3val:0xff5b6db6; valaddr_reg:x3; val_offset:71667*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71667*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23890:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x746607 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x061379 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef46607; op2val:0xc0061379;
op3val:0xff666666; valaddr_reg:x3; val_offset:71670*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71670*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23891:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x746607 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x061379 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef46607; op2val:0xc0061379;
op3val:0xff6db6db; valaddr_reg:x3; val_offset:71673*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71673*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23892:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x746607 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x061379 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef46607; op2val:0xc0061379;
op3val:0xff7ffff8; valaddr_reg:x3; val_offset:71676*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71676*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23893:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x746607 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x061379 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef46607; op2val:0xc0061379;
op3val:0xff7ffffc; valaddr_reg:x3; val_offset:71679*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71679*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23894:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x746607 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x061379 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef46607; op2val:0xc0061379;
op3val:0xff7ffffe; valaddr_reg:x3; val_offset:71682*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71682*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23895:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x749afd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef49afd; op2val:0x0;
op3val:0x800001; valaddr_reg:x3; val_offset:71685*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71685*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23896:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x749afd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef49afd; op2val:0x0;
op3val:0x800003; valaddr_reg:x3; val_offset:71688*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71688*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23897:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x749afd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef49afd; op2val:0x0;
op3val:0x800007; valaddr_reg:x3; val_offset:71691*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71691*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23898:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x749afd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef49afd; op2val:0x0;
op3val:0x999999; valaddr_reg:x3; val_offset:71694*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71694*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23899:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x749afd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef49afd; op2val:0x0;
op3val:0xa49249; valaddr_reg:x3; val_offset:71697*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71697*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23900:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x749afd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef49afd; op2val:0x0;
op3val:0xb33333; valaddr_reg:x3; val_offset:71700*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71700*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23901:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x749afd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef49afd; op2val:0x0;
op3val:0xb6db6d; valaddr_reg:x3; val_offset:71703*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71703*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23902:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x749afd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef49afd; op2val:0x0;
op3val:0xbbbbbb; valaddr_reg:x3; val_offset:71706*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71706*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23903:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x749afd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef49afd; op2val:0x0;
op3val:0xc44444; valaddr_reg:x3; val_offset:71709*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71709*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23904:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x749afd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef49afd; op2val:0x0;
op3val:0xcccccc; valaddr_reg:x3; val_offset:71712*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71712*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23905:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x749afd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef49afd; op2val:0x0;
op3val:0xdb6db6; valaddr_reg:x3; val_offset:71715*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71715*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23906:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x749afd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef49afd; op2val:0x0;
op3val:0xe66666; valaddr_reg:x3; val_offset:71718*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71718*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23907:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x749afd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef49afd; op2val:0x0;
op3val:0xedb6db; valaddr_reg:x3; val_offset:71721*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71721*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23908:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x749afd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef49afd; op2val:0x0;
op3val:0xfffff8; valaddr_reg:x3; val_offset:71724*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71724*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23909:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x749afd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef49afd; op2val:0x0;
op3val:0xfffffc; valaddr_reg:x3; val_offset:71727*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71727*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23910:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x749afd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef49afd; op2val:0x0;
op3val:0xfffffe; valaddr_reg:x3; val_offset:71730*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71730*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23911:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x749afd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef49afd; op2val:0x0;
op3val:0xd800000; valaddr_reg:x3; val_offset:71733*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71733*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23912:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x749afd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef49afd; op2val:0x0;
op3val:0xd800001; valaddr_reg:x3; val_offset:71736*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71736*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23913:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x749afd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef49afd; op2val:0x0;
op3val:0xd800003; valaddr_reg:x3; val_offset:71739*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71739*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23914:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x749afd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef49afd; op2val:0x0;
op3val:0xd800007; valaddr_reg:x3; val_offset:71742*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71742*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23915:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x749afd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef49afd; op2val:0x0;
op3val:0xd80000f; valaddr_reg:x3; val_offset:71745*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71745*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23916:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x749afd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef49afd; op2val:0x0;
op3val:0xd80001f; valaddr_reg:x3; val_offset:71748*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71748*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23917:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x749afd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef49afd; op2val:0x0;
op3val:0xd80003f; valaddr_reg:x3; val_offset:71751*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71751*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23918:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x749afd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef49afd; op2val:0x0;
op3val:0xd80007f; valaddr_reg:x3; val_offset:71754*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71754*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23919:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x749afd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef49afd; op2val:0x0;
op3val:0xd8000ff; valaddr_reg:x3; val_offset:71757*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71757*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23920:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x749afd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef49afd; op2val:0x0;
op3val:0xd8001ff; valaddr_reg:x3; val_offset:71760*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71760*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23921:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x749afd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef49afd; op2val:0x0;
op3val:0xd8003ff; valaddr_reg:x3; val_offset:71763*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71763*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23922:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x749afd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef49afd; op2val:0x0;
op3val:0xd8007ff; valaddr_reg:x3; val_offset:71766*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71766*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23923:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x749afd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef49afd; op2val:0x0;
op3val:0xd800fff; valaddr_reg:x3; val_offset:71769*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71769*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23924:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x749afd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef49afd; op2val:0x0;
op3val:0xd801fff; valaddr_reg:x3; val_offset:71772*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71772*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23925:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x749afd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef49afd; op2val:0x0;
op3val:0xd803fff; valaddr_reg:x3; val_offset:71775*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71775*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23926:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x749afd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef49afd; op2val:0x0;
op3val:0xd807fff; valaddr_reg:x3; val_offset:71778*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71778*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23927:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x749afd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef49afd; op2val:0x0;
op3val:0xd80ffff; valaddr_reg:x3; val_offset:71781*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71781*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23928:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x749afd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef49afd; op2val:0x0;
op3val:0xd81ffff; valaddr_reg:x3; val_offset:71784*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71784*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23929:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x749afd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef49afd; op2val:0x0;
op3val:0xd83ffff; valaddr_reg:x3; val_offset:71787*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71787*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23930:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x749afd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef49afd; op2val:0x0;
op3val:0xd87ffff; valaddr_reg:x3; val_offset:71790*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71790*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23931:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x749afd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef49afd; op2val:0x0;
op3val:0xd8fffff; valaddr_reg:x3; val_offset:71793*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71793*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23932:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x749afd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef49afd; op2val:0x0;
op3val:0xd9fffff; valaddr_reg:x3; val_offset:71796*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71796*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23933:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x749afd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef49afd; op2val:0x0;
op3val:0xdbfffff; valaddr_reg:x3; val_offset:71799*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71799*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23934:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x749afd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef49afd; op2val:0x0;
op3val:0xdc00000; valaddr_reg:x3; val_offset:71802*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71802*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23935:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x749afd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef49afd; op2val:0x0;
op3val:0xde00000; valaddr_reg:x3; val_offset:71805*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 71805*0 + 3*186*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(2129867094,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2225078271,32,FLEN)
NAN_BOXED(2129867094,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2227175423,32,FLEN)
NAN_BOXED(2129867094,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2227175424,32,FLEN)
NAN_BOXED(2129867094,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2229272576,32,FLEN)
NAN_BOXED(2129867094,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2230321152,32,FLEN)
NAN_BOXED(2129867094,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2230845440,32,FLEN)
NAN_BOXED(2129867094,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231107584,32,FLEN)
NAN_BOXED(2129867094,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231238656,32,FLEN)
NAN_BOXED(2129867094,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231304192,32,FLEN)
NAN_BOXED(2129867094,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231336960,32,FLEN)
NAN_BOXED(2129867094,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231353344,32,FLEN)
NAN_BOXED(2129867094,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231361536,32,FLEN)
NAN_BOXED(2129867094,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231365632,32,FLEN)
NAN_BOXED(2129867094,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231367680,32,FLEN)
NAN_BOXED(2129867094,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231368704,32,FLEN)
NAN_BOXED(2129867094,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231369216,32,FLEN)
NAN_BOXED(2129867094,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231369472,32,FLEN)
NAN_BOXED(2129867094,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231369600,32,FLEN)
NAN_BOXED(2129867094,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231369664,32,FLEN)
NAN_BOXED(2129867094,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231369696,32,FLEN)
NAN_BOXED(2129867094,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231369712,32,FLEN)
NAN_BOXED(2129867094,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231369720,32,FLEN)
NAN_BOXED(2129867094,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231369724,32,FLEN)
NAN_BOXED(2129867094,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231369726,32,FLEN)
NAN_BOXED(2129867094,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231369727,32,FLEN)
NAN_BOXED(2129946119,32,FLEN)
NAN_BOXED(3221623673,32,FLEN)
NAN_BOXED(4227858432,32,FLEN)
NAN_BOXED(2129946119,32,FLEN)
NAN_BOXED(3221623673,32,FLEN)
NAN_BOXED(4227858433,32,FLEN)
NAN_BOXED(2129946119,32,FLEN)
NAN_BOXED(3221623673,32,FLEN)
NAN_BOXED(4227858435,32,FLEN)
NAN_BOXED(2129946119,32,FLEN)
NAN_BOXED(3221623673,32,FLEN)
NAN_BOXED(4227858439,32,FLEN)
NAN_BOXED(2129946119,32,FLEN)
NAN_BOXED(3221623673,32,FLEN)
NAN_BOXED(4227858447,32,FLEN)
NAN_BOXED(2129946119,32,FLEN)
NAN_BOXED(3221623673,32,FLEN)
NAN_BOXED(4227858463,32,FLEN)
NAN_BOXED(2129946119,32,FLEN)
NAN_BOXED(3221623673,32,FLEN)
NAN_BOXED(4227858495,32,FLEN)
NAN_BOXED(2129946119,32,FLEN)
NAN_BOXED(3221623673,32,FLEN)
NAN_BOXED(4227858559,32,FLEN)
NAN_BOXED(2129946119,32,FLEN)
NAN_BOXED(3221623673,32,FLEN)
NAN_BOXED(4227858687,32,FLEN)
NAN_BOXED(2129946119,32,FLEN)
NAN_BOXED(3221623673,32,FLEN)
NAN_BOXED(4227858943,32,FLEN)
NAN_BOXED(2129946119,32,FLEN)
NAN_BOXED(3221623673,32,FLEN)
NAN_BOXED(4227859455,32,FLEN)
NAN_BOXED(2129946119,32,FLEN)
NAN_BOXED(3221623673,32,FLEN)
NAN_BOXED(4227860479,32,FLEN)
NAN_BOXED(2129946119,32,FLEN)
NAN_BOXED(3221623673,32,FLEN)
NAN_BOXED(4227862527,32,FLEN)
NAN_BOXED(2129946119,32,FLEN)
NAN_BOXED(3221623673,32,FLEN)
NAN_BOXED(4227866623,32,FLEN)
NAN_BOXED(2129946119,32,FLEN)
NAN_BOXED(3221623673,32,FLEN)
NAN_BOXED(4227874815,32,FLEN)
NAN_BOXED(2129946119,32,FLEN)
NAN_BOXED(3221623673,32,FLEN)
NAN_BOXED(4227891199,32,FLEN)
NAN_BOXED(2129946119,32,FLEN)
NAN_BOXED(3221623673,32,FLEN)
NAN_BOXED(4227923967,32,FLEN)
NAN_BOXED(2129946119,32,FLEN)
NAN_BOXED(3221623673,32,FLEN)
NAN_BOXED(4227989503,32,FLEN)
NAN_BOXED(2129946119,32,FLEN)
NAN_BOXED(3221623673,32,FLEN)
NAN_BOXED(4228120575,32,FLEN)
NAN_BOXED(2129946119,32,FLEN)
NAN_BOXED(3221623673,32,FLEN)
NAN_BOXED(4228382719,32,FLEN)
NAN_BOXED(2129946119,32,FLEN)
NAN_BOXED(3221623673,32,FLEN)
NAN_BOXED(4228907007,32,FLEN)
NAN_BOXED(2129946119,32,FLEN)
NAN_BOXED(3221623673,32,FLEN)
NAN_BOXED(4229955583,32,FLEN)
NAN_BOXED(2129946119,32,FLEN)
NAN_BOXED(3221623673,32,FLEN)
NAN_BOXED(4232052735,32,FLEN)
NAN_BOXED(2129946119,32,FLEN)
NAN_BOXED(3221623673,32,FLEN)
NAN_BOXED(4232052736,32,FLEN)
NAN_BOXED(2129946119,32,FLEN)
NAN_BOXED(3221623673,32,FLEN)
NAN_BOXED(4234149888,32,FLEN)
NAN_BOXED(2129946119,32,FLEN)
NAN_BOXED(3221623673,32,FLEN)
NAN_BOXED(4235198464,32,FLEN)
NAN_BOXED(2129946119,32,FLEN)
NAN_BOXED(3221623673,32,FLEN)
NAN_BOXED(4235722752,32,FLEN)
NAN_BOXED(2129946119,32,FLEN)
NAN_BOXED(3221623673,32,FLEN)
NAN_BOXED(4235984896,32,FLEN)
NAN_BOXED(2129946119,32,FLEN)
NAN_BOXED(3221623673,32,FLEN)
NAN_BOXED(4236115968,32,FLEN)
NAN_BOXED(2129946119,32,FLEN)
NAN_BOXED(3221623673,32,FLEN)
NAN_BOXED(4236181504,32,FLEN)
NAN_BOXED(2129946119,32,FLEN)
NAN_BOXED(3221623673,32,FLEN)
NAN_BOXED(4236214272,32,FLEN)
NAN_BOXED(2129946119,32,FLEN)
NAN_BOXED(3221623673,32,FLEN)
NAN_BOXED(4236230656,32,FLEN)
NAN_BOXED(2129946119,32,FLEN)
NAN_BOXED(3221623673,32,FLEN)
NAN_BOXED(4236238848,32,FLEN)
NAN_BOXED(2129946119,32,FLEN)
NAN_BOXED(3221623673,32,FLEN)
NAN_BOXED(4236242944,32,FLEN)
NAN_BOXED(2129946119,32,FLEN)
NAN_BOXED(3221623673,32,FLEN)
NAN_BOXED(4236244992,32,FLEN)
NAN_BOXED(2129946119,32,FLEN)
NAN_BOXED(3221623673,32,FLEN)
NAN_BOXED(4236246016,32,FLEN)
NAN_BOXED(2129946119,32,FLEN)
NAN_BOXED(3221623673,32,FLEN)
NAN_BOXED(4236246528,32,FLEN)
NAN_BOXED(2129946119,32,FLEN)
NAN_BOXED(3221623673,32,FLEN)
NAN_BOXED(4236246784,32,FLEN)
NAN_BOXED(2129946119,32,FLEN)
NAN_BOXED(3221623673,32,FLEN)
NAN_BOXED(4236246912,32,FLEN)
NAN_BOXED(2129946119,32,FLEN)
NAN_BOXED(3221623673,32,FLEN)
NAN_BOXED(4236246976,32,FLEN)
NAN_BOXED(2129946119,32,FLEN)
NAN_BOXED(3221623673,32,FLEN)
NAN_BOXED(4236247008,32,FLEN)
NAN_BOXED(2129946119,32,FLEN)
NAN_BOXED(3221623673,32,FLEN)
NAN_BOXED(4236247024,32,FLEN)
NAN_BOXED(2129946119,32,FLEN)
NAN_BOXED(3221623673,32,FLEN)
NAN_BOXED(4236247032,32,FLEN)
NAN_BOXED(2129946119,32,FLEN)
NAN_BOXED(3221623673,32,FLEN)
NAN_BOXED(4236247036,32,FLEN)
NAN_BOXED(2129946119,32,FLEN)
NAN_BOXED(3221623673,32,FLEN)
NAN_BOXED(4236247038,32,FLEN)
NAN_BOXED(2129946119,32,FLEN)
NAN_BOXED(3221623673,32,FLEN)
NAN_BOXED(4236247039,32,FLEN)
NAN_BOXED(2129946119,32,FLEN)
NAN_BOXED(3221623673,32,FLEN)
NAN_BOXED(4278190081,32,FLEN)
NAN_BOXED(2129946119,32,FLEN)
NAN_BOXED(3221623673,32,FLEN)
NAN_BOXED(4278190083,32,FLEN)
NAN_BOXED(2129946119,32,FLEN)
NAN_BOXED(3221623673,32,FLEN)
NAN_BOXED(4278190087,32,FLEN)
NAN_BOXED(2129946119,32,FLEN)
NAN_BOXED(3221623673,32,FLEN)
NAN_BOXED(4279867801,32,FLEN)
NAN_BOXED(2129946119,32,FLEN)
NAN_BOXED(3221623673,32,FLEN)
NAN_BOXED(4280586825,32,FLEN)
NAN_BOXED(2129946119,32,FLEN)
NAN_BOXED(3221623673,32,FLEN)
NAN_BOXED(4281545523,32,FLEN)
NAN_BOXED(2129946119,32,FLEN)
NAN_BOXED(3221623673,32,FLEN)
NAN_BOXED(4281785197,32,FLEN)
NAN_BOXED(2129946119,32,FLEN)
NAN_BOXED(3221623673,32,FLEN)
NAN_BOXED(4282104763,32,FLEN)
NAN_BOXED(2129946119,32,FLEN)
NAN_BOXED(3221623673,32,FLEN)
NAN_BOXED(4282664004,32,FLEN)
NAN_BOXED(2129946119,32,FLEN)
NAN_BOXED(3221623673,32,FLEN)
NAN_BOXED(4283223244,32,FLEN)
NAN_BOXED(2129946119,32,FLEN)
NAN_BOXED(3221623673,32,FLEN)
NAN_BOXED(4284181942,32,FLEN)
NAN_BOXED(2129946119,32,FLEN)
NAN_BOXED(3221623673,32,FLEN)
NAN_BOXED(4284900966,32,FLEN)
NAN_BOXED(2129946119,32,FLEN)
NAN_BOXED(3221623673,32,FLEN)
NAN_BOXED(4285380315,32,FLEN)
NAN_BOXED(2129946119,32,FLEN)
NAN_BOXED(3221623673,32,FLEN)
NAN_BOXED(4286578680,32,FLEN)
NAN_BOXED(2129946119,32,FLEN)
NAN_BOXED(3221623673,32,FLEN)
NAN_BOXED(4286578684,32,FLEN)
NAN_BOXED(2129946119,32,FLEN)
NAN_BOXED(3221623673,32,FLEN)
NAN_BOXED(4286578686,32,FLEN)
NAN_BOXED(2129959677,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388609,32,FLEN)
NAN_BOXED(2129959677,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388611,32,FLEN)
NAN_BOXED(2129959677,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388615,32,FLEN)
NAN_BOXED(2129959677,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(10066329,32,FLEN)
NAN_BOXED(2129959677,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(10785353,32,FLEN)
NAN_BOXED(2129959677,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(11744051,32,FLEN)
NAN_BOXED(2129959677,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(11983725,32,FLEN)
NAN_BOXED(2129959677,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(12303291,32,FLEN)
NAN_BOXED(2129959677,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(12862532,32,FLEN)
NAN_BOXED(2129959677,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(13421772,32,FLEN)
NAN_BOXED(2129959677,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(14380470,32,FLEN)
NAN_BOXED(2129959677,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(15099494,32,FLEN)
NAN_BOXED(2129959677,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(15578843,32,FLEN)
NAN_BOXED(2129959677,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777208,32,FLEN)
NAN_BOXED(2129959677,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777212,32,FLEN)
NAN_BOXED(2129959677,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777214,32,FLEN)
NAN_BOXED(2129959677,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(226492416,32,FLEN)
NAN_BOXED(2129959677,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(226492417,32,FLEN)
NAN_BOXED(2129959677,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(226492419,32,FLEN)
NAN_BOXED(2129959677,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(226492423,32,FLEN)
NAN_BOXED(2129959677,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(226492431,32,FLEN)
NAN_BOXED(2129959677,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(226492447,32,FLEN)
NAN_BOXED(2129959677,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(226492479,32,FLEN)
NAN_BOXED(2129959677,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(226492543,32,FLEN)
NAN_BOXED(2129959677,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(226492671,32,FLEN)
NAN_BOXED(2129959677,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(226492927,32,FLEN)
NAN_BOXED(2129959677,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(226493439,32,FLEN)
NAN_BOXED(2129959677,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(226494463,32,FLEN)
NAN_BOXED(2129959677,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(226496511,32,FLEN)
NAN_BOXED(2129959677,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(226500607,32,FLEN)
NAN_BOXED(2129959677,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(226508799,32,FLEN)
NAN_BOXED(2129959677,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(226525183,32,FLEN)
NAN_BOXED(2129959677,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(226557951,32,FLEN)
NAN_BOXED(2129959677,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(226623487,32,FLEN)
NAN_BOXED(2129959677,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(226754559,32,FLEN)
NAN_BOXED(2129959677,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(227016703,32,FLEN)
NAN_BOXED(2129959677,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(227540991,32,FLEN)
NAN_BOXED(2129959677,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(228589567,32,FLEN)
NAN_BOXED(2129959677,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(230686719,32,FLEN)
NAN_BOXED(2129959677,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(230686720,32,FLEN)
NAN_BOXED(2129959677,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(232783872,32,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
