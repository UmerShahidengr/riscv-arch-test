
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 14:18:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32F/fmsub.s.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.s instruction of the RISC-V RV32F_Zicsr,RV32FD_Zicsr,RV64F_Zicsr,RV64FD_Zicsr extension for the fmsub_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF_Zicsr,RV32IFD_Zicsr,RV64IF_Zicsr,RV64IFD_Zicsr,RV32EF_Zicsr,RV32EFD_Zicsr,RV64EF_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fmsub_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*F.*);def TEST_CASE_1=True;",fmsub_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_25600:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02ea14 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7a4d0e and fs3 == 0 and fe3 == 0xf1 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02ea14; op2val:0x3ffa4d0e;
op3val:0x78ffff00; valaddr_reg:x3; val_offset:76800*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76800*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25601:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02ea14 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7a4d0e and fs3 == 0 and fe3 == 0xf1 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02ea14; op2val:0x3ffa4d0e;
op3val:0x78ffff80; valaddr_reg:x3; val_offset:76803*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76803*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25602:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02ea14 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7a4d0e and fs3 == 0 and fe3 == 0xf1 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02ea14; op2val:0x3ffa4d0e;
op3val:0x78ffffc0; valaddr_reg:x3; val_offset:76806*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76806*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25603:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02ea14 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7a4d0e and fs3 == 0 and fe3 == 0xf1 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02ea14; op2val:0x3ffa4d0e;
op3val:0x78ffffe0; valaddr_reg:x3; val_offset:76809*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76809*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25604:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02ea14 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7a4d0e and fs3 == 0 and fe3 == 0xf1 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02ea14; op2val:0x3ffa4d0e;
op3val:0x78fffff0; valaddr_reg:x3; val_offset:76812*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76812*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25605:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02ea14 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7a4d0e and fs3 == 0 and fe3 == 0xf1 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02ea14; op2val:0x3ffa4d0e;
op3val:0x78fffff8; valaddr_reg:x3; val_offset:76815*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76815*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25606:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02ea14 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7a4d0e and fs3 == 0 and fe3 == 0xf1 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02ea14; op2val:0x3ffa4d0e;
op3val:0x78fffffc; valaddr_reg:x3; val_offset:76818*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76818*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25607:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02ea14 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7a4d0e and fs3 == 0 and fe3 == 0xf1 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02ea14; op2val:0x3ffa4d0e;
op3val:0x78fffffe; valaddr_reg:x3; val_offset:76821*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76821*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25608:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02ea14 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7a4d0e and fs3 == 0 and fe3 == 0xf1 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02ea14; op2val:0x3ffa4d0e;
op3val:0x78ffffff; valaddr_reg:x3; val_offset:76824*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76824*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25609:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02ea14 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7a4d0e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02ea14; op2val:0x3ffa4d0e;
op3val:0x7f000001; valaddr_reg:x3; val_offset:76827*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76827*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25610:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02ea14 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7a4d0e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02ea14; op2val:0x3ffa4d0e;
op3val:0x7f000003; valaddr_reg:x3; val_offset:76830*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76830*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25611:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02ea14 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7a4d0e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02ea14; op2val:0x3ffa4d0e;
op3val:0x7f000007; valaddr_reg:x3; val_offset:76833*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76833*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25612:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02ea14 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7a4d0e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02ea14; op2val:0x3ffa4d0e;
op3val:0x7f199999; valaddr_reg:x3; val_offset:76836*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76836*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25613:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02ea14 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7a4d0e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02ea14; op2val:0x3ffa4d0e;
op3val:0x7f249249; valaddr_reg:x3; val_offset:76839*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76839*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25614:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02ea14 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7a4d0e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02ea14; op2val:0x3ffa4d0e;
op3val:0x7f333333; valaddr_reg:x3; val_offset:76842*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76842*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25615:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02ea14 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7a4d0e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02ea14; op2val:0x3ffa4d0e;
op3val:0x7f36db6d; valaddr_reg:x3; val_offset:76845*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76845*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25616:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02ea14 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7a4d0e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02ea14; op2val:0x3ffa4d0e;
op3val:0x7f3bbbbb; valaddr_reg:x3; val_offset:76848*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76848*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25617:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02ea14 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7a4d0e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02ea14; op2val:0x3ffa4d0e;
op3val:0x7f444444; valaddr_reg:x3; val_offset:76851*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76851*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25618:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02ea14 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7a4d0e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02ea14; op2val:0x3ffa4d0e;
op3val:0x7f4ccccc; valaddr_reg:x3; val_offset:76854*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76854*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25619:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02ea14 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7a4d0e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02ea14; op2val:0x3ffa4d0e;
op3val:0x7f5b6db6; valaddr_reg:x3; val_offset:76857*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76857*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25620:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02ea14 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7a4d0e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02ea14; op2val:0x3ffa4d0e;
op3val:0x7f666666; valaddr_reg:x3; val_offset:76860*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76860*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25621:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02ea14 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7a4d0e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02ea14; op2val:0x3ffa4d0e;
op3val:0x7f6db6db; valaddr_reg:x3; val_offset:76863*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76863*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25622:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02ea14 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7a4d0e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02ea14; op2val:0x3ffa4d0e;
op3val:0x7f7ffff8; valaddr_reg:x3; val_offset:76866*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76866*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25623:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02ea14 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7a4d0e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02ea14; op2val:0x3ffa4d0e;
op3val:0x7f7ffffc; valaddr_reg:x3; val_offset:76869*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76869*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25624:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02ea14 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7a4d0e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02ea14; op2val:0x3ffa4d0e;
op3val:0x7f7ffffe; valaddr_reg:x3; val_offset:76872*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76872*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25625:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x4e and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x27000000; valaddr_reg:x3; val_offset:76875*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76875*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25626:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x4e and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x27000001; valaddr_reg:x3; val_offset:76878*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76878*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25627:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x4e and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x27000003; valaddr_reg:x3; val_offset:76881*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76881*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25628:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x4e and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x27000007; valaddr_reg:x3; val_offset:76884*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76884*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25629:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x4e and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x2700000f; valaddr_reg:x3; val_offset:76887*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76887*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25630:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x4e and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x2700001f; valaddr_reg:x3; val_offset:76890*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76890*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25631:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x4e and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x2700003f; valaddr_reg:x3; val_offset:76893*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76893*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25632:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x4e and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x2700007f; valaddr_reg:x3; val_offset:76896*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76896*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25633:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x4e and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x270000ff; valaddr_reg:x3; val_offset:76899*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76899*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25634:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x4e and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x270001ff; valaddr_reg:x3; val_offset:76902*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76902*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25635:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x4e and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x270003ff; valaddr_reg:x3; val_offset:76905*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76905*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25636:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x4e and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x270007ff; valaddr_reg:x3; val_offset:76908*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76908*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25637:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x4e and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x27000fff; valaddr_reg:x3; val_offset:76911*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76911*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25638:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x4e and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x27001fff; valaddr_reg:x3; val_offset:76914*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76914*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25639:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x4e and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x27003fff; valaddr_reg:x3; val_offset:76917*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76917*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25640:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x4e and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x27007fff; valaddr_reg:x3; val_offset:76920*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76920*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25641:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x4e and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x2700ffff; valaddr_reg:x3; val_offset:76923*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76923*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25642:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x4e and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x2701ffff; valaddr_reg:x3; val_offset:76926*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76926*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25643:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x4e and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x2703ffff; valaddr_reg:x3; val_offset:76929*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76929*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25644:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x4e and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x2707ffff; valaddr_reg:x3; val_offset:76932*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76932*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25645:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x4e and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x270fffff; valaddr_reg:x3; val_offset:76935*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76935*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25646:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x4e and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x271fffff; valaddr_reg:x3; val_offset:76938*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76938*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25647:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x4e and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x273fffff; valaddr_reg:x3; val_offset:76941*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76941*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25648:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x4e and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x27400000; valaddr_reg:x3; val_offset:76944*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76944*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25649:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x4e and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x27600000; valaddr_reg:x3; val_offset:76947*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76947*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25650:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x4e and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x27700000; valaddr_reg:x3; val_offset:76950*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76950*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25651:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x4e and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x27780000; valaddr_reg:x3; val_offset:76953*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76953*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25652:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x4e and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x277c0000; valaddr_reg:x3; val_offset:76956*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76956*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25653:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x4e and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x277e0000; valaddr_reg:x3; val_offset:76959*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76959*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25654:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x4e and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x277f0000; valaddr_reg:x3; val_offset:76962*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76962*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25655:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x4e and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x277f8000; valaddr_reg:x3; val_offset:76965*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76965*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25656:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x4e and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x277fc000; valaddr_reg:x3; val_offset:76968*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76968*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25657:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x4e and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x277fe000; valaddr_reg:x3; val_offset:76971*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76971*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25658:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x4e and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x277ff000; valaddr_reg:x3; val_offset:76974*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76974*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25659:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x4e and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x277ff800; valaddr_reg:x3; val_offset:76977*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76977*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25660:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x4e and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x277ffc00; valaddr_reg:x3; val_offset:76980*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76980*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25661:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x4e and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x277ffe00; valaddr_reg:x3; val_offset:76983*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76983*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25662:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x4e and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x277fff00; valaddr_reg:x3; val_offset:76986*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76986*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25663:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x4e and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x277fff80; valaddr_reg:x3; val_offset:76989*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76989*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25664:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x4e and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x277fffc0; valaddr_reg:x3; val_offset:76992*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76992*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25665:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x4e and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x277fffe0; valaddr_reg:x3; val_offset:76995*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76995*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25666:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x4e and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x277ffff0; valaddr_reg:x3; val_offset:76998*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76998*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25667:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x4e and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x277ffff8; valaddr_reg:x3; val_offset:77001*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77001*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25668:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x4e and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x277ffffc; valaddr_reg:x3; val_offset:77004*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77004*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25669:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x4e and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x277ffffe; valaddr_reg:x3; val_offset:77007*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77007*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25670:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x4e and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x277fffff; valaddr_reg:x3; val_offset:77010*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77010*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25671:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x3f800001; valaddr_reg:x3; val_offset:77013*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77013*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25672:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x3f800003; valaddr_reg:x3; val_offset:77016*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77016*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25673:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x3f800007; valaddr_reg:x3; val_offset:77019*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77019*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25674:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x3f999999; valaddr_reg:x3; val_offset:77022*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77022*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25675:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x3fa49249; valaddr_reg:x3; val_offset:77025*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77025*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25676:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x3fb33333; valaddr_reg:x3; val_offset:77028*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77028*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25677:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x3fb6db6d; valaddr_reg:x3; val_offset:77031*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77031*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25678:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x3fbbbbbb; valaddr_reg:x3; val_offset:77034*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77034*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25679:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x3fc44444; valaddr_reg:x3; val_offset:77037*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77037*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25680:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x3fcccccc; valaddr_reg:x3; val_offset:77040*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77040*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25681:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x3fdb6db6; valaddr_reg:x3; val_offset:77043*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77043*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25682:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x3fe66666; valaddr_reg:x3; val_offset:77046*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77046*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25683:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x3fedb6db; valaddr_reg:x3; val_offset:77049*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77049*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25684:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x3ffffff8; valaddr_reg:x3; val_offset:77052*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77052*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25685:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x3ffffffc; valaddr_reg:x3; val_offset:77055*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77055*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25686:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x3ffffffe; valaddr_reg:x3; val_offset:77058*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77058*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25687:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x035f5c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e5b66 and fs3 == 0 and fe3 == 0x43 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f035f5c; op2val:0x3e5b66;
op3val:0x21800000; valaddr_reg:x3; val_offset:77061*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77061*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25688:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x035f5c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e5b66 and fs3 == 0 and fe3 == 0x43 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f035f5c; op2val:0x3e5b66;
op3val:0x21800001; valaddr_reg:x3; val_offset:77064*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77064*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25689:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x035f5c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e5b66 and fs3 == 0 and fe3 == 0x43 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f035f5c; op2val:0x3e5b66;
op3val:0x21800003; valaddr_reg:x3; val_offset:77067*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77067*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25690:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x035f5c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e5b66 and fs3 == 0 and fe3 == 0x43 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f035f5c; op2val:0x3e5b66;
op3val:0x21800007; valaddr_reg:x3; val_offset:77070*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77070*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25691:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x035f5c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e5b66 and fs3 == 0 and fe3 == 0x43 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f035f5c; op2val:0x3e5b66;
op3val:0x2180000f; valaddr_reg:x3; val_offset:77073*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77073*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25692:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x035f5c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e5b66 and fs3 == 0 and fe3 == 0x43 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f035f5c; op2val:0x3e5b66;
op3val:0x2180001f; valaddr_reg:x3; val_offset:77076*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77076*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25693:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x035f5c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e5b66 and fs3 == 0 and fe3 == 0x43 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f035f5c; op2val:0x3e5b66;
op3val:0x2180003f; valaddr_reg:x3; val_offset:77079*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77079*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25694:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x035f5c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e5b66 and fs3 == 0 and fe3 == 0x43 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f035f5c; op2val:0x3e5b66;
op3val:0x2180007f; valaddr_reg:x3; val_offset:77082*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77082*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25695:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x035f5c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e5b66 and fs3 == 0 and fe3 == 0x43 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f035f5c; op2val:0x3e5b66;
op3val:0x218000ff; valaddr_reg:x3; val_offset:77085*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77085*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25696:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x035f5c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e5b66 and fs3 == 0 and fe3 == 0x43 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f035f5c; op2val:0x3e5b66;
op3val:0x218001ff; valaddr_reg:x3; val_offset:77088*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77088*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25697:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x035f5c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e5b66 and fs3 == 0 and fe3 == 0x43 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f035f5c; op2val:0x3e5b66;
op3val:0x218003ff; valaddr_reg:x3; val_offset:77091*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77091*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25698:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x035f5c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e5b66 and fs3 == 0 and fe3 == 0x43 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f035f5c; op2val:0x3e5b66;
op3val:0x218007ff; valaddr_reg:x3; val_offset:77094*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77094*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25699:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x035f5c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e5b66 and fs3 == 0 and fe3 == 0x43 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f035f5c; op2val:0x3e5b66;
op3val:0x21800fff; valaddr_reg:x3; val_offset:77097*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77097*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25700:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x035f5c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e5b66 and fs3 == 0 and fe3 == 0x43 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f035f5c; op2val:0x3e5b66;
op3val:0x21801fff; valaddr_reg:x3; val_offset:77100*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77100*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25701:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x035f5c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e5b66 and fs3 == 0 and fe3 == 0x43 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f035f5c; op2val:0x3e5b66;
op3val:0x21803fff; valaddr_reg:x3; val_offset:77103*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77103*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25702:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x035f5c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e5b66 and fs3 == 0 and fe3 == 0x43 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f035f5c; op2val:0x3e5b66;
op3val:0x21807fff; valaddr_reg:x3; val_offset:77106*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77106*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25703:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x035f5c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e5b66 and fs3 == 0 and fe3 == 0x43 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f035f5c; op2val:0x3e5b66;
op3val:0x2180ffff; valaddr_reg:x3; val_offset:77109*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77109*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25704:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x035f5c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e5b66 and fs3 == 0 and fe3 == 0x43 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f035f5c; op2val:0x3e5b66;
op3val:0x2181ffff; valaddr_reg:x3; val_offset:77112*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77112*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25705:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x035f5c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e5b66 and fs3 == 0 and fe3 == 0x43 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f035f5c; op2val:0x3e5b66;
op3val:0x2183ffff; valaddr_reg:x3; val_offset:77115*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77115*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25706:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x035f5c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e5b66 and fs3 == 0 and fe3 == 0x43 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f035f5c; op2val:0x3e5b66;
op3val:0x2187ffff; valaddr_reg:x3; val_offset:77118*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77118*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25707:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x035f5c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e5b66 and fs3 == 0 and fe3 == 0x43 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f035f5c; op2val:0x3e5b66;
op3val:0x218fffff; valaddr_reg:x3; val_offset:77121*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77121*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25708:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x035f5c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e5b66 and fs3 == 0 and fe3 == 0x43 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f035f5c; op2val:0x3e5b66;
op3val:0x219fffff; valaddr_reg:x3; val_offset:77124*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77124*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25709:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x035f5c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e5b66 and fs3 == 0 and fe3 == 0x43 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f035f5c; op2val:0x3e5b66;
op3val:0x21bfffff; valaddr_reg:x3; val_offset:77127*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77127*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25710:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x035f5c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e5b66 and fs3 == 0 and fe3 == 0x43 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f035f5c; op2val:0x3e5b66;
op3val:0x21c00000; valaddr_reg:x3; val_offset:77130*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77130*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25711:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x035f5c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e5b66 and fs3 == 0 and fe3 == 0x43 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f035f5c; op2val:0x3e5b66;
op3val:0x21e00000; valaddr_reg:x3; val_offset:77133*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77133*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25712:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x035f5c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e5b66 and fs3 == 0 and fe3 == 0x43 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f035f5c; op2val:0x3e5b66;
op3val:0x21f00000; valaddr_reg:x3; val_offset:77136*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77136*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25713:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x035f5c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e5b66 and fs3 == 0 and fe3 == 0x43 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f035f5c; op2val:0x3e5b66;
op3val:0x21f80000; valaddr_reg:x3; val_offset:77139*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77139*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25714:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x035f5c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e5b66 and fs3 == 0 and fe3 == 0x43 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f035f5c; op2val:0x3e5b66;
op3val:0x21fc0000; valaddr_reg:x3; val_offset:77142*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77142*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25715:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x035f5c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e5b66 and fs3 == 0 and fe3 == 0x43 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f035f5c; op2val:0x3e5b66;
op3val:0x21fe0000; valaddr_reg:x3; val_offset:77145*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77145*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25716:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x035f5c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e5b66 and fs3 == 0 and fe3 == 0x43 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f035f5c; op2val:0x3e5b66;
op3val:0x21ff0000; valaddr_reg:x3; val_offset:77148*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77148*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25717:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x035f5c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e5b66 and fs3 == 0 and fe3 == 0x43 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f035f5c; op2val:0x3e5b66;
op3val:0x21ff8000; valaddr_reg:x3; val_offset:77151*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77151*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25718:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x035f5c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e5b66 and fs3 == 0 and fe3 == 0x43 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f035f5c; op2val:0x3e5b66;
op3val:0x21ffc000; valaddr_reg:x3; val_offset:77154*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77154*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25719:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x035f5c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e5b66 and fs3 == 0 and fe3 == 0x43 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f035f5c; op2val:0x3e5b66;
op3val:0x21ffe000; valaddr_reg:x3; val_offset:77157*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77157*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25720:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x035f5c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e5b66 and fs3 == 0 and fe3 == 0x43 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f035f5c; op2val:0x3e5b66;
op3val:0x21fff000; valaddr_reg:x3; val_offset:77160*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77160*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25721:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x035f5c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e5b66 and fs3 == 0 and fe3 == 0x43 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f035f5c; op2val:0x3e5b66;
op3val:0x21fff800; valaddr_reg:x3; val_offset:77163*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77163*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25722:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x035f5c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e5b66 and fs3 == 0 and fe3 == 0x43 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f035f5c; op2val:0x3e5b66;
op3val:0x21fffc00; valaddr_reg:x3; val_offset:77166*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77166*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25723:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x035f5c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e5b66 and fs3 == 0 and fe3 == 0x43 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f035f5c; op2val:0x3e5b66;
op3val:0x21fffe00; valaddr_reg:x3; val_offset:77169*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77169*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25724:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x035f5c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e5b66 and fs3 == 0 and fe3 == 0x43 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f035f5c; op2val:0x3e5b66;
op3val:0x21ffff00; valaddr_reg:x3; val_offset:77172*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77172*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25725:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x035f5c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e5b66 and fs3 == 0 and fe3 == 0x43 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f035f5c; op2val:0x3e5b66;
op3val:0x21ffff80; valaddr_reg:x3; val_offset:77175*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77175*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25726:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x035f5c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e5b66 and fs3 == 0 and fe3 == 0x43 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f035f5c; op2val:0x3e5b66;
op3val:0x21ffffc0; valaddr_reg:x3; val_offset:77178*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77178*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25727:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x035f5c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e5b66 and fs3 == 0 and fe3 == 0x43 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f035f5c; op2val:0x3e5b66;
op3val:0x21ffffe0; valaddr_reg:x3; val_offset:77181*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77181*0 + 3*200*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(2130897428,32,FLEN)
NAN_BOXED(1073368334,32,FLEN)
NAN_BOXED(2030042880,32,FLEN)
NAN_BOXED(2130897428,32,FLEN)
NAN_BOXED(1073368334,32,FLEN)
NAN_BOXED(2030043008,32,FLEN)
NAN_BOXED(2130897428,32,FLEN)
NAN_BOXED(1073368334,32,FLEN)
NAN_BOXED(2030043072,32,FLEN)
NAN_BOXED(2130897428,32,FLEN)
NAN_BOXED(1073368334,32,FLEN)
NAN_BOXED(2030043104,32,FLEN)
NAN_BOXED(2130897428,32,FLEN)
NAN_BOXED(1073368334,32,FLEN)
NAN_BOXED(2030043120,32,FLEN)
NAN_BOXED(2130897428,32,FLEN)
NAN_BOXED(1073368334,32,FLEN)
NAN_BOXED(2030043128,32,FLEN)
NAN_BOXED(2130897428,32,FLEN)
NAN_BOXED(1073368334,32,FLEN)
NAN_BOXED(2030043132,32,FLEN)
NAN_BOXED(2130897428,32,FLEN)
NAN_BOXED(1073368334,32,FLEN)
NAN_BOXED(2030043134,32,FLEN)
NAN_BOXED(2130897428,32,FLEN)
NAN_BOXED(1073368334,32,FLEN)
NAN_BOXED(2030043135,32,FLEN)
NAN_BOXED(2130897428,32,FLEN)
NAN_BOXED(1073368334,32,FLEN)
NAN_BOXED(2130706433,32,FLEN)
NAN_BOXED(2130897428,32,FLEN)
NAN_BOXED(1073368334,32,FLEN)
NAN_BOXED(2130706435,32,FLEN)
NAN_BOXED(2130897428,32,FLEN)
NAN_BOXED(1073368334,32,FLEN)
NAN_BOXED(2130706439,32,FLEN)
NAN_BOXED(2130897428,32,FLEN)
NAN_BOXED(1073368334,32,FLEN)
NAN_BOXED(2132384153,32,FLEN)
NAN_BOXED(2130897428,32,FLEN)
NAN_BOXED(1073368334,32,FLEN)
NAN_BOXED(2133103177,32,FLEN)
NAN_BOXED(2130897428,32,FLEN)
NAN_BOXED(1073368334,32,FLEN)
NAN_BOXED(2134061875,32,FLEN)
NAN_BOXED(2130897428,32,FLEN)
NAN_BOXED(1073368334,32,FLEN)
NAN_BOXED(2134301549,32,FLEN)
NAN_BOXED(2130897428,32,FLEN)
NAN_BOXED(1073368334,32,FLEN)
NAN_BOXED(2134621115,32,FLEN)
NAN_BOXED(2130897428,32,FLEN)
NAN_BOXED(1073368334,32,FLEN)
NAN_BOXED(2135180356,32,FLEN)
NAN_BOXED(2130897428,32,FLEN)
NAN_BOXED(1073368334,32,FLEN)
NAN_BOXED(2135739596,32,FLEN)
NAN_BOXED(2130897428,32,FLEN)
NAN_BOXED(1073368334,32,FLEN)
NAN_BOXED(2136698294,32,FLEN)
NAN_BOXED(2130897428,32,FLEN)
NAN_BOXED(1073368334,32,FLEN)
NAN_BOXED(2137417318,32,FLEN)
NAN_BOXED(2130897428,32,FLEN)
NAN_BOXED(1073368334,32,FLEN)
NAN_BOXED(2137896667,32,FLEN)
NAN_BOXED(2130897428,32,FLEN)
NAN_BOXED(1073368334,32,FLEN)
NAN_BOXED(2139095032,32,FLEN)
NAN_BOXED(2130897428,32,FLEN)
NAN_BOXED(1073368334,32,FLEN)
NAN_BOXED(2139095036,32,FLEN)
NAN_BOXED(2130897428,32,FLEN)
NAN_BOXED(1073368334,32,FLEN)
NAN_BOXED(2139095038,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(654311424,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(654311425,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(654311427,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(654311431,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(654311439,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(654311455,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(654311487,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(654311551,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(654311679,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(654311935,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(654312447,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(654313471,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(654315519,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(654319615,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(654327807,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(654344191,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(654376959,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(654442495,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(654573567,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(654835711,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(655359999,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(656408575,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(658505727,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(658505728,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(660602880,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(661651456,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(662175744,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(662437888,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(662568960,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(662634496,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(662667264,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(662683648,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(662691840,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(662695936,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(662697984,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(662699008,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(662699520,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(662699776,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(662699904,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(662699968,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(662700000,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(662700016,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(662700024,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(662700028,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(662700030,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(662700031,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(1065353217,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(1065353219,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(1065353223,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(1067030937,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(1067749961,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(1068708659,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(1068948333,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(1069267899,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(1069827140,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(1070386380,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(1071345078,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(1072064102,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(1072543451,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(1073741816,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(1073741820,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(1073741822,32,FLEN)
NAN_BOXED(2130927452,32,FLEN)
NAN_BOXED(4086630,32,FLEN)
NAN_BOXED(562036736,32,FLEN)
NAN_BOXED(2130927452,32,FLEN)
NAN_BOXED(4086630,32,FLEN)
NAN_BOXED(562036737,32,FLEN)
NAN_BOXED(2130927452,32,FLEN)
NAN_BOXED(4086630,32,FLEN)
NAN_BOXED(562036739,32,FLEN)
NAN_BOXED(2130927452,32,FLEN)
NAN_BOXED(4086630,32,FLEN)
NAN_BOXED(562036743,32,FLEN)
NAN_BOXED(2130927452,32,FLEN)
NAN_BOXED(4086630,32,FLEN)
NAN_BOXED(562036751,32,FLEN)
NAN_BOXED(2130927452,32,FLEN)
NAN_BOXED(4086630,32,FLEN)
NAN_BOXED(562036767,32,FLEN)
NAN_BOXED(2130927452,32,FLEN)
NAN_BOXED(4086630,32,FLEN)
NAN_BOXED(562036799,32,FLEN)
NAN_BOXED(2130927452,32,FLEN)
NAN_BOXED(4086630,32,FLEN)
NAN_BOXED(562036863,32,FLEN)
NAN_BOXED(2130927452,32,FLEN)
NAN_BOXED(4086630,32,FLEN)
NAN_BOXED(562036991,32,FLEN)
NAN_BOXED(2130927452,32,FLEN)
NAN_BOXED(4086630,32,FLEN)
NAN_BOXED(562037247,32,FLEN)
NAN_BOXED(2130927452,32,FLEN)
NAN_BOXED(4086630,32,FLEN)
NAN_BOXED(562037759,32,FLEN)
NAN_BOXED(2130927452,32,FLEN)
NAN_BOXED(4086630,32,FLEN)
NAN_BOXED(562038783,32,FLEN)
NAN_BOXED(2130927452,32,FLEN)
NAN_BOXED(4086630,32,FLEN)
NAN_BOXED(562040831,32,FLEN)
NAN_BOXED(2130927452,32,FLEN)
NAN_BOXED(4086630,32,FLEN)
NAN_BOXED(562044927,32,FLEN)
NAN_BOXED(2130927452,32,FLEN)
NAN_BOXED(4086630,32,FLEN)
NAN_BOXED(562053119,32,FLEN)
NAN_BOXED(2130927452,32,FLEN)
NAN_BOXED(4086630,32,FLEN)
NAN_BOXED(562069503,32,FLEN)
NAN_BOXED(2130927452,32,FLEN)
NAN_BOXED(4086630,32,FLEN)
NAN_BOXED(562102271,32,FLEN)
NAN_BOXED(2130927452,32,FLEN)
NAN_BOXED(4086630,32,FLEN)
NAN_BOXED(562167807,32,FLEN)
NAN_BOXED(2130927452,32,FLEN)
NAN_BOXED(4086630,32,FLEN)
NAN_BOXED(562298879,32,FLEN)
NAN_BOXED(2130927452,32,FLEN)
NAN_BOXED(4086630,32,FLEN)
NAN_BOXED(562561023,32,FLEN)
NAN_BOXED(2130927452,32,FLEN)
NAN_BOXED(4086630,32,FLEN)
NAN_BOXED(563085311,32,FLEN)
NAN_BOXED(2130927452,32,FLEN)
NAN_BOXED(4086630,32,FLEN)
NAN_BOXED(564133887,32,FLEN)
NAN_BOXED(2130927452,32,FLEN)
NAN_BOXED(4086630,32,FLEN)
NAN_BOXED(566231039,32,FLEN)
NAN_BOXED(2130927452,32,FLEN)
NAN_BOXED(4086630,32,FLEN)
NAN_BOXED(566231040,32,FLEN)
NAN_BOXED(2130927452,32,FLEN)
NAN_BOXED(4086630,32,FLEN)
NAN_BOXED(568328192,32,FLEN)
NAN_BOXED(2130927452,32,FLEN)
NAN_BOXED(4086630,32,FLEN)
NAN_BOXED(569376768,32,FLEN)
NAN_BOXED(2130927452,32,FLEN)
NAN_BOXED(4086630,32,FLEN)
NAN_BOXED(569901056,32,FLEN)
NAN_BOXED(2130927452,32,FLEN)
NAN_BOXED(4086630,32,FLEN)
NAN_BOXED(570163200,32,FLEN)
NAN_BOXED(2130927452,32,FLEN)
NAN_BOXED(4086630,32,FLEN)
NAN_BOXED(570294272,32,FLEN)
NAN_BOXED(2130927452,32,FLEN)
NAN_BOXED(4086630,32,FLEN)
NAN_BOXED(570359808,32,FLEN)
NAN_BOXED(2130927452,32,FLEN)
NAN_BOXED(4086630,32,FLEN)
NAN_BOXED(570392576,32,FLEN)
NAN_BOXED(2130927452,32,FLEN)
NAN_BOXED(4086630,32,FLEN)
NAN_BOXED(570408960,32,FLEN)
NAN_BOXED(2130927452,32,FLEN)
NAN_BOXED(4086630,32,FLEN)
NAN_BOXED(570417152,32,FLEN)
NAN_BOXED(2130927452,32,FLEN)
NAN_BOXED(4086630,32,FLEN)
NAN_BOXED(570421248,32,FLEN)
NAN_BOXED(2130927452,32,FLEN)
NAN_BOXED(4086630,32,FLEN)
NAN_BOXED(570423296,32,FLEN)
NAN_BOXED(2130927452,32,FLEN)
NAN_BOXED(4086630,32,FLEN)
NAN_BOXED(570424320,32,FLEN)
NAN_BOXED(2130927452,32,FLEN)
NAN_BOXED(4086630,32,FLEN)
NAN_BOXED(570424832,32,FLEN)
NAN_BOXED(2130927452,32,FLEN)
NAN_BOXED(4086630,32,FLEN)
NAN_BOXED(570425088,32,FLEN)
NAN_BOXED(2130927452,32,FLEN)
NAN_BOXED(4086630,32,FLEN)
NAN_BOXED(570425216,32,FLEN)
NAN_BOXED(2130927452,32,FLEN)
NAN_BOXED(4086630,32,FLEN)
NAN_BOXED(570425280,32,FLEN)
NAN_BOXED(2130927452,32,FLEN)
NAN_BOXED(4086630,32,FLEN)
NAN_BOXED(570425312,32,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
