
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 14:18:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32F/fmsub.s.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.s instruction of the RISC-V RV32F_Zicsr,RV32FD_Zicsr,RV64F_Zicsr,RV64FD_Zicsr extension for the fmsub_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF_Zicsr,RV32IFD_Zicsr,RV64IF_Zicsr,RV64IFD_Zicsr,RV32EF_Zicsr,RV32EFD_Zicsr,RV64EF_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fmsub_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*F.*);def TEST_CASE_1=True;",fmsub_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_26240:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x058f0a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d5617 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f058f0a; op2val:0x803d5617;
op3val:0xbf800003; valaddr_reg:x3; val_offset:78720*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78720*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26241:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x058f0a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d5617 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f058f0a; op2val:0x803d5617;
op3val:0xbf800007; valaddr_reg:x3; val_offset:78723*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78723*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26242:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x058f0a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d5617 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f058f0a; op2val:0x803d5617;
op3val:0xbf999999; valaddr_reg:x3; val_offset:78726*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78726*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26243:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x058f0a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d5617 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f058f0a; op2val:0x803d5617;
op3val:0xbfa49249; valaddr_reg:x3; val_offset:78729*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78729*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26244:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x058f0a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d5617 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f058f0a; op2val:0x803d5617;
op3val:0xbfb33333; valaddr_reg:x3; val_offset:78732*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78732*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26245:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x058f0a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d5617 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f058f0a; op2val:0x803d5617;
op3val:0xbfb6db6d; valaddr_reg:x3; val_offset:78735*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78735*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26246:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x058f0a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d5617 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f058f0a; op2val:0x803d5617;
op3val:0xbfbbbbbb; valaddr_reg:x3; val_offset:78738*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78738*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26247:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x058f0a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d5617 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f058f0a; op2val:0x803d5617;
op3val:0xbfc44444; valaddr_reg:x3; val_offset:78741*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78741*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26248:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x058f0a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d5617 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f058f0a; op2val:0x803d5617;
op3val:0xbfcccccc; valaddr_reg:x3; val_offset:78744*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78744*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26249:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x058f0a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d5617 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f058f0a; op2val:0x803d5617;
op3val:0xbfdb6db6; valaddr_reg:x3; val_offset:78747*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78747*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26250:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x058f0a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d5617 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f058f0a; op2val:0x803d5617;
op3val:0xbfe66666; valaddr_reg:x3; val_offset:78750*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78750*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26251:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x058f0a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d5617 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f058f0a; op2val:0x803d5617;
op3val:0xbfedb6db; valaddr_reg:x3; val_offset:78753*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78753*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26252:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x058f0a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d5617 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f058f0a; op2val:0x803d5617;
op3val:0xbffffff8; valaddr_reg:x3; val_offset:78756*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78756*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26253:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x058f0a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d5617 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f058f0a; op2val:0x803d5617;
op3val:0xbffffffc; valaddr_reg:x3; val_offset:78759*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78759*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26254:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x058f0a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d5617 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f058f0a; op2val:0x803d5617;
op3val:0xbffffffe; valaddr_reg:x3; val_offset:78762*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78762*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26255:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x058f0a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d5617 and fs3 == 1 and fe3 == 0x8d and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f058f0a; op2val:0x803d5617;
op3val:0xc6800000; valaddr_reg:x3; val_offset:78765*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78765*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26256:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x058f0a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d5617 and fs3 == 1 and fe3 == 0x8d and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f058f0a; op2val:0x803d5617;
op3val:0xc6800001; valaddr_reg:x3; val_offset:78768*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78768*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26257:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x058f0a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d5617 and fs3 == 1 and fe3 == 0x8d and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f058f0a; op2val:0x803d5617;
op3val:0xc6800003; valaddr_reg:x3; val_offset:78771*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78771*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26258:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x058f0a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d5617 and fs3 == 1 and fe3 == 0x8d and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f058f0a; op2val:0x803d5617;
op3val:0xc6800007; valaddr_reg:x3; val_offset:78774*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78774*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26259:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x058f0a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d5617 and fs3 == 1 and fe3 == 0x8d and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f058f0a; op2val:0x803d5617;
op3val:0xc680000f; valaddr_reg:x3; val_offset:78777*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78777*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26260:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x058f0a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d5617 and fs3 == 1 and fe3 == 0x8d and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f058f0a; op2val:0x803d5617;
op3val:0xc680001f; valaddr_reg:x3; val_offset:78780*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78780*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26261:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x058f0a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d5617 and fs3 == 1 and fe3 == 0x8d and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f058f0a; op2val:0x803d5617;
op3val:0xc680003f; valaddr_reg:x3; val_offset:78783*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78783*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26262:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x058f0a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d5617 and fs3 == 1 and fe3 == 0x8d and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f058f0a; op2val:0x803d5617;
op3val:0xc680007f; valaddr_reg:x3; val_offset:78786*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78786*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26263:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x058f0a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d5617 and fs3 == 1 and fe3 == 0x8d and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f058f0a; op2val:0x803d5617;
op3val:0xc68000ff; valaddr_reg:x3; val_offset:78789*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78789*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26264:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x058f0a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d5617 and fs3 == 1 and fe3 == 0x8d and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f058f0a; op2val:0x803d5617;
op3val:0xc68001ff; valaddr_reg:x3; val_offset:78792*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78792*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26265:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x058f0a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d5617 and fs3 == 1 and fe3 == 0x8d and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f058f0a; op2val:0x803d5617;
op3val:0xc68003ff; valaddr_reg:x3; val_offset:78795*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78795*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26266:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x058f0a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d5617 and fs3 == 1 and fe3 == 0x8d and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f058f0a; op2val:0x803d5617;
op3val:0xc68007ff; valaddr_reg:x3; val_offset:78798*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78798*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26267:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x058f0a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d5617 and fs3 == 1 and fe3 == 0x8d and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f058f0a; op2val:0x803d5617;
op3val:0xc6800fff; valaddr_reg:x3; val_offset:78801*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78801*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26268:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x058f0a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d5617 and fs3 == 1 and fe3 == 0x8d and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f058f0a; op2val:0x803d5617;
op3val:0xc6801fff; valaddr_reg:x3; val_offset:78804*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78804*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26269:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x058f0a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d5617 and fs3 == 1 and fe3 == 0x8d and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f058f0a; op2val:0x803d5617;
op3val:0xc6803fff; valaddr_reg:x3; val_offset:78807*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78807*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26270:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x058f0a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d5617 and fs3 == 1 and fe3 == 0x8d and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f058f0a; op2val:0x803d5617;
op3val:0xc6807fff; valaddr_reg:x3; val_offset:78810*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78810*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26271:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x058f0a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d5617 and fs3 == 1 and fe3 == 0x8d and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f058f0a; op2val:0x803d5617;
op3val:0xc680ffff; valaddr_reg:x3; val_offset:78813*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78813*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26272:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x058f0a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d5617 and fs3 == 1 and fe3 == 0x8d and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f058f0a; op2val:0x803d5617;
op3val:0xc681ffff; valaddr_reg:x3; val_offset:78816*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78816*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26273:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x058f0a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d5617 and fs3 == 1 and fe3 == 0x8d and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f058f0a; op2val:0x803d5617;
op3val:0xc683ffff; valaddr_reg:x3; val_offset:78819*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78819*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26274:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x058f0a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d5617 and fs3 == 1 and fe3 == 0x8d and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f058f0a; op2val:0x803d5617;
op3val:0xc687ffff; valaddr_reg:x3; val_offset:78822*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78822*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26275:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x058f0a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d5617 and fs3 == 1 and fe3 == 0x8d and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f058f0a; op2val:0x803d5617;
op3val:0xc68fffff; valaddr_reg:x3; val_offset:78825*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78825*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26276:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x058f0a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d5617 and fs3 == 1 and fe3 == 0x8d and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f058f0a; op2val:0x803d5617;
op3val:0xc69fffff; valaddr_reg:x3; val_offset:78828*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78828*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26277:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x058f0a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d5617 and fs3 == 1 and fe3 == 0x8d and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f058f0a; op2val:0x803d5617;
op3val:0xc6bfffff; valaddr_reg:x3; val_offset:78831*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78831*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26278:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x058f0a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d5617 and fs3 == 1 and fe3 == 0x8d and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f058f0a; op2val:0x803d5617;
op3val:0xc6c00000; valaddr_reg:x3; val_offset:78834*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78834*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26279:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x058f0a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d5617 and fs3 == 1 and fe3 == 0x8d and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f058f0a; op2val:0x803d5617;
op3val:0xc6e00000; valaddr_reg:x3; val_offset:78837*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78837*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26280:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x058f0a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d5617 and fs3 == 1 and fe3 == 0x8d and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f058f0a; op2val:0x803d5617;
op3val:0xc6f00000; valaddr_reg:x3; val_offset:78840*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78840*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26281:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x058f0a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d5617 and fs3 == 1 and fe3 == 0x8d and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f058f0a; op2val:0x803d5617;
op3val:0xc6f80000; valaddr_reg:x3; val_offset:78843*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78843*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26282:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x058f0a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d5617 and fs3 == 1 and fe3 == 0x8d and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f058f0a; op2val:0x803d5617;
op3val:0xc6fc0000; valaddr_reg:x3; val_offset:78846*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78846*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26283:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x058f0a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d5617 and fs3 == 1 and fe3 == 0x8d and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f058f0a; op2val:0x803d5617;
op3val:0xc6fe0000; valaddr_reg:x3; val_offset:78849*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78849*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26284:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x058f0a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d5617 and fs3 == 1 and fe3 == 0x8d and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f058f0a; op2val:0x803d5617;
op3val:0xc6ff0000; valaddr_reg:x3; val_offset:78852*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78852*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26285:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x058f0a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d5617 and fs3 == 1 and fe3 == 0x8d and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f058f0a; op2val:0x803d5617;
op3val:0xc6ff8000; valaddr_reg:x3; val_offset:78855*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78855*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26286:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x058f0a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d5617 and fs3 == 1 and fe3 == 0x8d and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f058f0a; op2val:0x803d5617;
op3val:0xc6ffc000; valaddr_reg:x3; val_offset:78858*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78858*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26287:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x058f0a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d5617 and fs3 == 1 and fe3 == 0x8d and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f058f0a; op2val:0x803d5617;
op3val:0xc6ffe000; valaddr_reg:x3; val_offset:78861*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78861*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26288:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x058f0a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d5617 and fs3 == 1 and fe3 == 0x8d and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f058f0a; op2val:0x803d5617;
op3val:0xc6fff000; valaddr_reg:x3; val_offset:78864*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78864*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26289:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x058f0a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d5617 and fs3 == 1 and fe3 == 0x8d and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f058f0a; op2val:0x803d5617;
op3val:0xc6fff800; valaddr_reg:x3; val_offset:78867*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78867*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26290:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x058f0a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d5617 and fs3 == 1 and fe3 == 0x8d and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f058f0a; op2val:0x803d5617;
op3val:0xc6fffc00; valaddr_reg:x3; val_offset:78870*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78870*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26291:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x058f0a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d5617 and fs3 == 1 and fe3 == 0x8d and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f058f0a; op2val:0x803d5617;
op3val:0xc6fffe00; valaddr_reg:x3; val_offset:78873*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78873*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26292:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x058f0a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d5617 and fs3 == 1 and fe3 == 0x8d and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f058f0a; op2val:0x803d5617;
op3val:0xc6ffff00; valaddr_reg:x3; val_offset:78876*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78876*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26293:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x058f0a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d5617 and fs3 == 1 and fe3 == 0x8d and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f058f0a; op2val:0x803d5617;
op3val:0xc6ffff80; valaddr_reg:x3; val_offset:78879*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78879*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26294:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x058f0a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d5617 and fs3 == 1 and fe3 == 0x8d and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f058f0a; op2val:0x803d5617;
op3val:0xc6ffffc0; valaddr_reg:x3; val_offset:78882*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78882*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26295:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x058f0a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d5617 and fs3 == 1 and fe3 == 0x8d and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f058f0a; op2val:0x803d5617;
op3val:0xc6ffffe0; valaddr_reg:x3; val_offset:78885*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78885*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26296:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x058f0a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d5617 and fs3 == 1 and fe3 == 0x8d and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f058f0a; op2val:0x803d5617;
op3val:0xc6fffff0; valaddr_reg:x3; val_offset:78888*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78888*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26297:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x058f0a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d5617 and fs3 == 1 and fe3 == 0x8d and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f058f0a; op2val:0x803d5617;
op3val:0xc6fffff8; valaddr_reg:x3; val_offset:78891*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78891*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26298:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x058f0a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d5617 and fs3 == 1 and fe3 == 0x8d and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f058f0a; op2val:0x803d5617;
op3val:0xc6fffffc; valaddr_reg:x3; val_offset:78894*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78894*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26299:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x058f0a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d5617 and fs3 == 1 and fe3 == 0x8d and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f058f0a; op2val:0x803d5617;
op3val:0xc6fffffe; valaddr_reg:x3; val_offset:78897*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78897*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26300:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x058f0a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d5617 and fs3 == 1 and fe3 == 0x8d and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f058f0a; op2val:0x803d5617;
op3val:0xc6ffffff; valaddr_reg:x3; val_offset:78900*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78900*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26301:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x063f47 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d0592 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f063f47; op2val:0x803d0592;
op3val:0xbf800001; valaddr_reg:x3; val_offset:78903*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78903*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26302:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x063f47 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d0592 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f063f47; op2val:0x803d0592;
op3val:0xbf800003; valaddr_reg:x3; val_offset:78906*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78906*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26303:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x063f47 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d0592 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f063f47; op2val:0x803d0592;
op3val:0xbf800007; valaddr_reg:x3; val_offset:78909*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78909*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26304:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x063f47 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d0592 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f063f47; op2val:0x803d0592;
op3val:0xbf999999; valaddr_reg:x3; val_offset:78912*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78912*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26305:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x063f47 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d0592 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f063f47; op2val:0x803d0592;
op3val:0xbfa49249; valaddr_reg:x3; val_offset:78915*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78915*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26306:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x063f47 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d0592 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f063f47; op2val:0x803d0592;
op3val:0xbfb33333; valaddr_reg:x3; val_offset:78918*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78918*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26307:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x063f47 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d0592 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f063f47; op2val:0x803d0592;
op3val:0xbfb6db6d; valaddr_reg:x3; val_offset:78921*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78921*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26308:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x063f47 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d0592 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f063f47; op2val:0x803d0592;
op3val:0xbfbbbbbb; valaddr_reg:x3; val_offset:78924*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78924*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26309:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x063f47 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d0592 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f063f47; op2val:0x803d0592;
op3val:0xbfc44444; valaddr_reg:x3; val_offset:78927*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78927*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26310:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x063f47 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d0592 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f063f47; op2val:0x803d0592;
op3val:0xbfcccccc; valaddr_reg:x3; val_offset:78930*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78930*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26311:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x063f47 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d0592 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f063f47; op2val:0x803d0592;
op3val:0xbfdb6db6; valaddr_reg:x3; val_offset:78933*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78933*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26312:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x063f47 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d0592 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f063f47; op2val:0x803d0592;
op3val:0xbfe66666; valaddr_reg:x3; val_offset:78936*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78936*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26313:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x063f47 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d0592 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f063f47; op2val:0x803d0592;
op3val:0xbfedb6db; valaddr_reg:x3; val_offset:78939*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78939*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26314:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x063f47 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d0592 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f063f47; op2val:0x803d0592;
op3val:0xbffffff8; valaddr_reg:x3; val_offset:78942*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78942*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26315:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x063f47 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d0592 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f063f47; op2val:0x803d0592;
op3val:0xbffffffc; valaddr_reg:x3; val_offset:78945*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78945*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26316:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x063f47 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d0592 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f063f47; op2val:0x803d0592;
op3val:0xbffffffe; valaddr_reg:x3; val_offset:78948*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78948*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26317:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x063f47 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d0592 and fs3 == 1 and fe3 == 0x8e and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f063f47; op2val:0x803d0592;
op3val:0xc7000000; valaddr_reg:x3; val_offset:78951*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78951*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26318:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x063f47 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d0592 and fs3 == 1 and fe3 == 0x8e and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f063f47; op2val:0x803d0592;
op3val:0xc7000001; valaddr_reg:x3; val_offset:78954*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78954*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26319:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x063f47 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d0592 and fs3 == 1 and fe3 == 0x8e and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f063f47; op2val:0x803d0592;
op3val:0xc7000003; valaddr_reg:x3; val_offset:78957*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78957*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26320:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x063f47 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d0592 and fs3 == 1 and fe3 == 0x8e and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f063f47; op2val:0x803d0592;
op3val:0xc7000007; valaddr_reg:x3; val_offset:78960*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78960*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26321:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x063f47 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d0592 and fs3 == 1 and fe3 == 0x8e and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f063f47; op2val:0x803d0592;
op3val:0xc700000f; valaddr_reg:x3; val_offset:78963*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78963*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26322:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x063f47 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d0592 and fs3 == 1 and fe3 == 0x8e and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f063f47; op2val:0x803d0592;
op3val:0xc700001f; valaddr_reg:x3; val_offset:78966*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78966*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26323:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x063f47 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d0592 and fs3 == 1 and fe3 == 0x8e and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f063f47; op2val:0x803d0592;
op3val:0xc700003f; valaddr_reg:x3; val_offset:78969*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78969*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26324:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x063f47 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d0592 and fs3 == 1 and fe3 == 0x8e and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f063f47; op2val:0x803d0592;
op3val:0xc700007f; valaddr_reg:x3; val_offset:78972*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78972*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26325:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x063f47 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d0592 and fs3 == 1 and fe3 == 0x8e and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f063f47; op2val:0x803d0592;
op3val:0xc70000ff; valaddr_reg:x3; val_offset:78975*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78975*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26326:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x063f47 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d0592 and fs3 == 1 and fe3 == 0x8e and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f063f47; op2val:0x803d0592;
op3val:0xc70001ff; valaddr_reg:x3; val_offset:78978*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78978*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26327:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x063f47 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d0592 and fs3 == 1 and fe3 == 0x8e and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f063f47; op2val:0x803d0592;
op3val:0xc70003ff; valaddr_reg:x3; val_offset:78981*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78981*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26328:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x063f47 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d0592 and fs3 == 1 and fe3 == 0x8e and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f063f47; op2val:0x803d0592;
op3val:0xc70007ff; valaddr_reg:x3; val_offset:78984*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78984*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26329:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x063f47 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d0592 and fs3 == 1 and fe3 == 0x8e and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f063f47; op2val:0x803d0592;
op3val:0xc7000fff; valaddr_reg:x3; val_offset:78987*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78987*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26330:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x063f47 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d0592 and fs3 == 1 and fe3 == 0x8e and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f063f47; op2val:0x803d0592;
op3val:0xc7001fff; valaddr_reg:x3; val_offset:78990*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78990*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26331:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x063f47 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d0592 and fs3 == 1 and fe3 == 0x8e and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f063f47; op2val:0x803d0592;
op3val:0xc7003fff; valaddr_reg:x3; val_offset:78993*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78993*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26332:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x063f47 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d0592 and fs3 == 1 and fe3 == 0x8e and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f063f47; op2val:0x803d0592;
op3val:0xc7007fff; valaddr_reg:x3; val_offset:78996*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78996*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26333:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x063f47 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d0592 and fs3 == 1 and fe3 == 0x8e and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f063f47; op2val:0x803d0592;
op3val:0xc700ffff; valaddr_reg:x3; val_offset:78999*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78999*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26334:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x063f47 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d0592 and fs3 == 1 and fe3 == 0x8e and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f063f47; op2val:0x803d0592;
op3val:0xc701ffff; valaddr_reg:x3; val_offset:79002*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 79002*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26335:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x063f47 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d0592 and fs3 == 1 and fe3 == 0x8e and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f063f47; op2val:0x803d0592;
op3val:0xc703ffff; valaddr_reg:x3; val_offset:79005*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 79005*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26336:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x063f47 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d0592 and fs3 == 1 and fe3 == 0x8e and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f063f47; op2val:0x803d0592;
op3val:0xc707ffff; valaddr_reg:x3; val_offset:79008*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 79008*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26337:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x063f47 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d0592 and fs3 == 1 and fe3 == 0x8e and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f063f47; op2val:0x803d0592;
op3val:0xc70fffff; valaddr_reg:x3; val_offset:79011*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 79011*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26338:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x063f47 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d0592 and fs3 == 1 and fe3 == 0x8e and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f063f47; op2val:0x803d0592;
op3val:0xc71fffff; valaddr_reg:x3; val_offset:79014*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 79014*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26339:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x063f47 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d0592 and fs3 == 1 and fe3 == 0x8e and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f063f47; op2val:0x803d0592;
op3val:0xc73fffff; valaddr_reg:x3; val_offset:79017*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 79017*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26340:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x063f47 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d0592 and fs3 == 1 and fe3 == 0x8e and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f063f47; op2val:0x803d0592;
op3val:0xc7400000; valaddr_reg:x3; val_offset:79020*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 79020*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26341:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x063f47 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d0592 and fs3 == 1 and fe3 == 0x8e and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f063f47; op2val:0x803d0592;
op3val:0xc7600000; valaddr_reg:x3; val_offset:79023*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 79023*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26342:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x063f47 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d0592 and fs3 == 1 and fe3 == 0x8e and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f063f47; op2val:0x803d0592;
op3val:0xc7700000; valaddr_reg:x3; val_offset:79026*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 79026*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26343:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x063f47 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d0592 and fs3 == 1 and fe3 == 0x8e and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f063f47; op2val:0x803d0592;
op3val:0xc7780000; valaddr_reg:x3; val_offset:79029*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 79029*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26344:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x063f47 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d0592 and fs3 == 1 and fe3 == 0x8e and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f063f47; op2val:0x803d0592;
op3val:0xc77c0000; valaddr_reg:x3; val_offset:79032*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 79032*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26345:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x063f47 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d0592 and fs3 == 1 and fe3 == 0x8e and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f063f47; op2val:0x803d0592;
op3val:0xc77e0000; valaddr_reg:x3; val_offset:79035*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 79035*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26346:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x063f47 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d0592 and fs3 == 1 and fe3 == 0x8e and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f063f47; op2val:0x803d0592;
op3val:0xc77f0000; valaddr_reg:x3; val_offset:79038*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 79038*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26347:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x063f47 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d0592 and fs3 == 1 and fe3 == 0x8e and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f063f47; op2val:0x803d0592;
op3val:0xc77f8000; valaddr_reg:x3; val_offset:79041*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 79041*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26348:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x063f47 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d0592 and fs3 == 1 and fe3 == 0x8e and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f063f47; op2val:0x803d0592;
op3val:0xc77fc000; valaddr_reg:x3; val_offset:79044*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 79044*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26349:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x063f47 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d0592 and fs3 == 1 and fe3 == 0x8e and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f063f47; op2val:0x803d0592;
op3val:0xc77fe000; valaddr_reg:x3; val_offset:79047*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 79047*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26350:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x063f47 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d0592 and fs3 == 1 and fe3 == 0x8e and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f063f47; op2val:0x803d0592;
op3val:0xc77ff000; valaddr_reg:x3; val_offset:79050*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 79050*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26351:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x063f47 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d0592 and fs3 == 1 and fe3 == 0x8e and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f063f47; op2val:0x803d0592;
op3val:0xc77ff800; valaddr_reg:x3; val_offset:79053*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 79053*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26352:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x063f47 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d0592 and fs3 == 1 and fe3 == 0x8e and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f063f47; op2val:0x803d0592;
op3val:0xc77ffc00; valaddr_reg:x3; val_offset:79056*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 79056*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26353:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x063f47 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d0592 and fs3 == 1 and fe3 == 0x8e and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f063f47; op2val:0x803d0592;
op3val:0xc77ffe00; valaddr_reg:x3; val_offset:79059*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 79059*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26354:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x063f47 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d0592 and fs3 == 1 and fe3 == 0x8e and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f063f47; op2val:0x803d0592;
op3val:0xc77fff00; valaddr_reg:x3; val_offset:79062*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 79062*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26355:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x063f47 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d0592 and fs3 == 1 and fe3 == 0x8e and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f063f47; op2val:0x803d0592;
op3val:0xc77fff80; valaddr_reg:x3; val_offset:79065*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 79065*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26356:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x063f47 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d0592 and fs3 == 1 and fe3 == 0x8e and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f063f47; op2val:0x803d0592;
op3val:0xc77fffc0; valaddr_reg:x3; val_offset:79068*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 79068*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26357:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x063f47 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d0592 and fs3 == 1 and fe3 == 0x8e and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f063f47; op2val:0x803d0592;
op3val:0xc77fffe0; valaddr_reg:x3; val_offset:79071*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 79071*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26358:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x063f47 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d0592 and fs3 == 1 and fe3 == 0x8e and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f063f47; op2val:0x803d0592;
op3val:0xc77ffff0; valaddr_reg:x3; val_offset:79074*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 79074*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26359:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x063f47 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d0592 and fs3 == 1 and fe3 == 0x8e and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f063f47; op2val:0x803d0592;
op3val:0xc77ffff8; valaddr_reg:x3; val_offset:79077*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 79077*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26360:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x063f47 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d0592 and fs3 == 1 and fe3 == 0x8e and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f063f47; op2val:0x803d0592;
op3val:0xc77ffffc; valaddr_reg:x3; val_offset:79080*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 79080*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26361:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x063f47 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d0592 and fs3 == 1 and fe3 == 0x8e and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f063f47; op2val:0x803d0592;
op3val:0xc77ffffe; valaddr_reg:x3; val_offset:79083*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 79083*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26362:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x063f47 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d0592 and fs3 == 1 and fe3 == 0x8e and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f063f47; op2val:0x803d0592;
op3val:0xc77fffff; valaddr_reg:x3; val_offset:79086*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 79086*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26363:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x064c89 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3cff8c and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f064c89; op2val:0x3cff8c;
op3val:0x3f800001; valaddr_reg:x3; val_offset:79089*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 79089*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26364:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x064c89 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3cff8c and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f064c89; op2val:0x3cff8c;
op3val:0x3f800003; valaddr_reg:x3; val_offset:79092*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 79092*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26365:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x064c89 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3cff8c and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f064c89; op2val:0x3cff8c;
op3val:0x3f800007; valaddr_reg:x3; val_offset:79095*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 79095*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26366:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x064c89 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3cff8c and fs3 == 0 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f064c89; op2val:0x3cff8c;
op3val:0x3f999999; valaddr_reg:x3; val_offset:79098*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 79098*0 + 3*205*FLEN/8, x4, x1, x2)

inst_26367:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x064c89 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3cff8c and fs3 == 0 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f064c89; op2val:0x3cff8c;
op3val:0x3fa49249; valaddr_reg:x3; val_offset:79101*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 79101*0 + 3*205*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(2131070730,32,FLEN)
NAN_BOXED(2151503383,32,FLEN)
NAN_BOXED(3212836867,32,FLEN)
NAN_BOXED(2131070730,32,FLEN)
NAN_BOXED(2151503383,32,FLEN)
NAN_BOXED(3212836871,32,FLEN)
NAN_BOXED(2131070730,32,FLEN)
NAN_BOXED(2151503383,32,FLEN)
NAN_BOXED(3214514585,32,FLEN)
NAN_BOXED(2131070730,32,FLEN)
NAN_BOXED(2151503383,32,FLEN)
NAN_BOXED(3215233609,32,FLEN)
NAN_BOXED(2131070730,32,FLEN)
NAN_BOXED(2151503383,32,FLEN)
NAN_BOXED(3216192307,32,FLEN)
NAN_BOXED(2131070730,32,FLEN)
NAN_BOXED(2151503383,32,FLEN)
NAN_BOXED(3216431981,32,FLEN)
NAN_BOXED(2131070730,32,FLEN)
NAN_BOXED(2151503383,32,FLEN)
NAN_BOXED(3216751547,32,FLEN)
NAN_BOXED(2131070730,32,FLEN)
NAN_BOXED(2151503383,32,FLEN)
NAN_BOXED(3217310788,32,FLEN)
NAN_BOXED(2131070730,32,FLEN)
NAN_BOXED(2151503383,32,FLEN)
NAN_BOXED(3217870028,32,FLEN)
NAN_BOXED(2131070730,32,FLEN)
NAN_BOXED(2151503383,32,FLEN)
NAN_BOXED(3218828726,32,FLEN)
NAN_BOXED(2131070730,32,FLEN)
NAN_BOXED(2151503383,32,FLEN)
NAN_BOXED(3219547750,32,FLEN)
NAN_BOXED(2131070730,32,FLEN)
NAN_BOXED(2151503383,32,FLEN)
NAN_BOXED(3220027099,32,FLEN)
NAN_BOXED(2131070730,32,FLEN)
NAN_BOXED(2151503383,32,FLEN)
NAN_BOXED(3221225464,32,FLEN)
NAN_BOXED(2131070730,32,FLEN)
NAN_BOXED(2151503383,32,FLEN)
NAN_BOXED(3221225468,32,FLEN)
NAN_BOXED(2131070730,32,FLEN)
NAN_BOXED(2151503383,32,FLEN)
NAN_BOXED(3221225470,32,FLEN)
NAN_BOXED(2131070730,32,FLEN)
NAN_BOXED(2151503383,32,FLEN)
NAN_BOXED(3330277376,32,FLEN)
NAN_BOXED(2131070730,32,FLEN)
NAN_BOXED(2151503383,32,FLEN)
NAN_BOXED(3330277377,32,FLEN)
NAN_BOXED(2131070730,32,FLEN)
NAN_BOXED(2151503383,32,FLEN)
NAN_BOXED(3330277379,32,FLEN)
NAN_BOXED(2131070730,32,FLEN)
NAN_BOXED(2151503383,32,FLEN)
NAN_BOXED(3330277383,32,FLEN)
NAN_BOXED(2131070730,32,FLEN)
NAN_BOXED(2151503383,32,FLEN)
NAN_BOXED(3330277391,32,FLEN)
NAN_BOXED(2131070730,32,FLEN)
NAN_BOXED(2151503383,32,FLEN)
NAN_BOXED(3330277407,32,FLEN)
NAN_BOXED(2131070730,32,FLEN)
NAN_BOXED(2151503383,32,FLEN)
NAN_BOXED(3330277439,32,FLEN)
NAN_BOXED(2131070730,32,FLEN)
NAN_BOXED(2151503383,32,FLEN)
NAN_BOXED(3330277503,32,FLEN)
NAN_BOXED(2131070730,32,FLEN)
NAN_BOXED(2151503383,32,FLEN)
NAN_BOXED(3330277631,32,FLEN)
NAN_BOXED(2131070730,32,FLEN)
NAN_BOXED(2151503383,32,FLEN)
NAN_BOXED(3330277887,32,FLEN)
NAN_BOXED(2131070730,32,FLEN)
NAN_BOXED(2151503383,32,FLEN)
NAN_BOXED(3330278399,32,FLEN)
NAN_BOXED(2131070730,32,FLEN)
NAN_BOXED(2151503383,32,FLEN)
NAN_BOXED(3330279423,32,FLEN)
NAN_BOXED(2131070730,32,FLEN)
NAN_BOXED(2151503383,32,FLEN)
NAN_BOXED(3330281471,32,FLEN)
NAN_BOXED(2131070730,32,FLEN)
NAN_BOXED(2151503383,32,FLEN)
NAN_BOXED(3330285567,32,FLEN)
NAN_BOXED(2131070730,32,FLEN)
NAN_BOXED(2151503383,32,FLEN)
NAN_BOXED(3330293759,32,FLEN)
NAN_BOXED(2131070730,32,FLEN)
NAN_BOXED(2151503383,32,FLEN)
NAN_BOXED(3330310143,32,FLEN)
NAN_BOXED(2131070730,32,FLEN)
NAN_BOXED(2151503383,32,FLEN)
NAN_BOXED(3330342911,32,FLEN)
NAN_BOXED(2131070730,32,FLEN)
NAN_BOXED(2151503383,32,FLEN)
NAN_BOXED(3330408447,32,FLEN)
NAN_BOXED(2131070730,32,FLEN)
NAN_BOXED(2151503383,32,FLEN)
NAN_BOXED(3330539519,32,FLEN)
NAN_BOXED(2131070730,32,FLEN)
NAN_BOXED(2151503383,32,FLEN)
NAN_BOXED(3330801663,32,FLEN)
NAN_BOXED(2131070730,32,FLEN)
NAN_BOXED(2151503383,32,FLEN)
NAN_BOXED(3331325951,32,FLEN)
NAN_BOXED(2131070730,32,FLEN)
NAN_BOXED(2151503383,32,FLEN)
NAN_BOXED(3332374527,32,FLEN)
NAN_BOXED(2131070730,32,FLEN)
NAN_BOXED(2151503383,32,FLEN)
NAN_BOXED(3334471679,32,FLEN)
NAN_BOXED(2131070730,32,FLEN)
NAN_BOXED(2151503383,32,FLEN)
NAN_BOXED(3334471680,32,FLEN)
NAN_BOXED(2131070730,32,FLEN)
NAN_BOXED(2151503383,32,FLEN)
NAN_BOXED(3336568832,32,FLEN)
NAN_BOXED(2131070730,32,FLEN)
NAN_BOXED(2151503383,32,FLEN)
NAN_BOXED(3337617408,32,FLEN)
NAN_BOXED(2131070730,32,FLEN)
NAN_BOXED(2151503383,32,FLEN)
NAN_BOXED(3338141696,32,FLEN)
NAN_BOXED(2131070730,32,FLEN)
NAN_BOXED(2151503383,32,FLEN)
NAN_BOXED(3338403840,32,FLEN)
NAN_BOXED(2131070730,32,FLEN)
NAN_BOXED(2151503383,32,FLEN)
NAN_BOXED(3338534912,32,FLEN)
NAN_BOXED(2131070730,32,FLEN)
NAN_BOXED(2151503383,32,FLEN)
NAN_BOXED(3338600448,32,FLEN)
NAN_BOXED(2131070730,32,FLEN)
NAN_BOXED(2151503383,32,FLEN)
NAN_BOXED(3338633216,32,FLEN)
NAN_BOXED(2131070730,32,FLEN)
NAN_BOXED(2151503383,32,FLEN)
NAN_BOXED(3338649600,32,FLEN)
NAN_BOXED(2131070730,32,FLEN)
NAN_BOXED(2151503383,32,FLEN)
NAN_BOXED(3338657792,32,FLEN)
NAN_BOXED(2131070730,32,FLEN)
NAN_BOXED(2151503383,32,FLEN)
NAN_BOXED(3338661888,32,FLEN)
NAN_BOXED(2131070730,32,FLEN)
NAN_BOXED(2151503383,32,FLEN)
NAN_BOXED(3338663936,32,FLEN)
NAN_BOXED(2131070730,32,FLEN)
NAN_BOXED(2151503383,32,FLEN)
NAN_BOXED(3338664960,32,FLEN)
NAN_BOXED(2131070730,32,FLEN)
NAN_BOXED(2151503383,32,FLEN)
NAN_BOXED(3338665472,32,FLEN)
NAN_BOXED(2131070730,32,FLEN)
NAN_BOXED(2151503383,32,FLEN)
NAN_BOXED(3338665728,32,FLEN)
NAN_BOXED(2131070730,32,FLEN)
NAN_BOXED(2151503383,32,FLEN)
NAN_BOXED(3338665856,32,FLEN)
NAN_BOXED(2131070730,32,FLEN)
NAN_BOXED(2151503383,32,FLEN)
NAN_BOXED(3338665920,32,FLEN)
NAN_BOXED(2131070730,32,FLEN)
NAN_BOXED(2151503383,32,FLEN)
NAN_BOXED(3338665952,32,FLEN)
NAN_BOXED(2131070730,32,FLEN)
NAN_BOXED(2151503383,32,FLEN)
NAN_BOXED(3338665968,32,FLEN)
NAN_BOXED(2131070730,32,FLEN)
NAN_BOXED(2151503383,32,FLEN)
NAN_BOXED(3338665976,32,FLEN)
NAN_BOXED(2131070730,32,FLEN)
NAN_BOXED(2151503383,32,FLEN)
NAN_BOXED(3338665980,32,FLEN)
NAN_BOXED(2131070730,32,FLEN)
NAN_BOXED(2151503383,32,FLEN)
NAN_BOXED(3338665982,32,FLEN)
NAN_BOXED(2131070730,32,FLEN)
NAN_BOXED(2151503383,32,FLEN)
NAN_BOXED(3338665983,32,FLEN)
NAN_BOXED(2131115847,32,FLEN)
NAN_BOXED(2151482770,32,FLEN)
NAN_BOXED(3212836865,32,FLEN)
NAN_BOXED(2131115847,32,FLEN)
NAN_BOXED(2151482770,32,FLEN)
NAN_BOXED(3212836867,32,FLEN)
NAN_BOXED(2131115847,32,FLEN)
NAN_BOXED(2151482770,32,FLEN)
NAN_BOXED(3212836871,32,FLEN)
NAN_BOXED(2131115847,32,FLEN)
NAN_BOXED(2151482770,32,FLEN)
NAN_BOXED(3214514585,32,FLEN)
NAN_BOXED(2131115847,32,FLEN)
NAN_BOXED(2151482770,32,FLEN)
NAN_BOXED(3215233609,32,FLEN)
NAN_BOXED(2131115847,32,FLEN)
NAN_BOXED(2151482770,32,FLEN)
NAN_BOXED(3216192307,32,FLEN)
NAN_BOXED(2131115847,32,FLEN)
NAN_BOXED(2151482770,32,FLEN)
NAN_BOXED(3216431981,32,FLEN)
NAN_BOXED(2131115847,32,FLEN)
NAN_BOXED(2151482770,32,FLEN)
NAN_BOXED(3216751547,32,FLEN)
NAN_BOXED(2131115847,32,FLEN)
NAN_BOXED(2151482770,32,FLEN)
NAN_BOXED(3217310788,32,FLEN)
NAN_BOXED(2131115847,32,FLEN)
NAN_BOXED(2151482770,32,FLEN)
NAN_BOXED(3217870028,32,FLEN)
NAN_BOXED(2131115847,32,FLEN)
NAN_BOXED(2151482770,32,FLEN)
NAN_BOXED(3218828726,32,FLEN)
NAN_BOXED(2131115847,32,FLEN)
NAN_BOXED(2151482770,32,FLEN)
NAN_BOXED(3219547750,32,FLEN)
NAN_BOXED(2131115847,32,FLEN)
NAN_BOXED(2151482770,32,FLEN)
NAN_BOXED(3220027099,32,FLEN)
NAN_BOXED(2131115847,32,FLEN)
NAN_BOXED(2151482770,32,FLEN)
NAN_BOXED(3221225464,32,FLEN)
NAN_BOXED(2131115847,32,FLEN)
NAN_BOXED(2151482770,32,FLEN)
NAN_BOXED(3221225468,32,FLEN)
NAN_BOXED(2131115847,32,FLEN)
NAN_BOXED(2151482770,32,FLEN)
NAN_BOXED(3221225470,32,FLEN)
NAN_BOXED(2131115847,32,FLEN)
NAN_BOXED(2151482770,32,FLEN)
NAN_BOXED(3338665984,32,FLEN)
NAN_BOXED(2131115847,32,FLEN)
NAN_BOXED(2151482770,32,FLEN)
NAN_BOXED(3338665985,32,FLEN)
NAN_BOXED(2131115847,32,FLEN)
NAN_BOXED(2151482770,32,FLEN)
NAN_BOXED(3338665987,32,FLEN)
NAN_BOXED(2131115847,32,FLEN)
NAN_BOXED(2151482770,32,FLEN)
NAN_BOXED(3338665991,32,FLEN)
NAN_BOXED(2131115847,32,FLEN)
NAN_BOXED(2151482770,32,FLEN)
NAN_BOXED(3338665999,32,FLEN)
NAN_BOXED(2131115847,32,FLEN)
NAN_BOXED(2151482770,32,FLEN)
NAN_BOXED(3338666015,32,FLEN)
NAN_BOXED(2131115847,32,FLEN)
NAN_BOXED(2151482770,32,FLEN)
NAN_BOXED(3338666047,32,FLEN)
NAN_BOXED(2131115847,32,FLEN)
NAN_BOXED(2151482770,32,FLEN)
NAN_BOXED(3338666111,32,FLEN)
NAN_BOXED(2131115847,32,FLEN)
NAN_BOXED(2151482770,32,FLEN)
NAN_BOXED(3338666239,32,FLEN)
NAN_BOXED(2131115847,32,FLEN)
NAN_BOXED(2151482770,32,FLEN)
NAN_BOXED(3338666495,32,FLEN)
NAN_BOXED(2131115847,32,FLEN)
NAN_BOXED(2151482770,32,FLEN)
NAN_BOXED(3338667007,32,FLEN)
NAN_BOXED(2131115847,32,FLEN)
NAN_BOXED(2151482770,32,FLEN)
NAN_BOXED(3338668031,32,FLEN)
NAN_BOXED(2131115847,32,FLEN)
NAN_BOXED(2151482770,32,FLEN)
NAN_BOXED(3338670079,32,FLEN)
NAN_BOXED(2131115847,32,FLEN)
NAN_BOXED(2151482770,32,FLEN)
NAN_BOXED(3338674175,32,FLEN)
NAN_BOXED(2131115847,32,FLEN)
NAN_BOXED(2151482770,32,FLEN)
NAN_BOXED(3338682367,32,FLEN)
NAN_BOXED(2131115847,32,FLEN)
NAN_BOXED(2151482770,32,FLEN)
NAN_BOXED(3338698751,32,FLEN)
NAN_BOXED(2131115847,32,FLEN)
NAN_BOXED(2151482770,32,FLEN)
NAN_BOXED(3338731519,32,FLEN)
NAN_BOXED(2131115847,32,FLEN)
NAN_BOXED(2151482770,32,FLEN)
NAN_BOXED(3338797055,32,FLEN)
NAN_BOXED(2131115847,32,FLEN)
NAN_BOXED(2151482770,32,FLEN)
NAN_BOXED(3338928127,32,FLEN)
NAN_BOXED(2131115847,32,FLEN)
NAN_BOXED(2151482770,32,FLEN)
NAN_BOXED(3339190271,32,FLEN)
NAN_BOXED(2131115847,32,FLEN)
NAN_BOXED(2151482770,32,FLEN)
NAN_BOXED(3339714559,32,FLEN)
NAN_BOXED(2131115847,32,FLEN)
NAN_BOXED(2151482770,32,FLEN)
NAN_BOXED(3340763135,32,FLEN)
NAN_BOXED(2131115847,32,FLEN)
NAN_BOXED(2151482770,32,FLEN)
NAN_BOXED(3342860287,32,FLEN)
NAN_BOXED(2131115847,32,FLEN)
NAN_BOXED(2151482770,32,FLEN)
NAN_BOXED(3342860288,32,FLEN)
NAN_BOXED(2131115847,32,FLEN)
NAN_BOXED(2151482770,32,FLEN)
NAN_BOXED(3344957440,32,FLEN)
NAN_BOXED(2131115847,32,FLEN)
NAN_BOXED(2151482770,32,FLEN)
NAN_BOXED(3346006016,32,FLEN)
NAN_BOXED(2131115847,32,FLEN)
NAN_BOXED(2151482770,32,FLEN)
NAN_BOXED(3346530304,32,FLEN)
NAN_BOXED(2131115847,32,FLEN)
NAN_BOXED(2151482770,32,FLEN)
NAN_BOXED(3346792448,32,FLEN)
NAN_BOXED(2131115847,32,FLEN)
NAN_BOXED(2151482770,32,FLEN)
NAN_BOXED(3346923520,32,FLEN)
NAN_BOXED(2131115847,32,FLEN)
NAN_BOXED(2151482770,32,FLEN)
NAN_BOXED(3346989056,32,FLEN)
NAN_BOXED(2131115847,32,FLEN)
NAN_BOXED(2151482770,32,FLEN)
NAN_BOXED(3347021824,32,FLEN)
NAN_BOXED(2131115847,32,FLEN)
NAN_BOXED(2151482770,32,FLEN)
NAN_BOXED(3347038208,32,FLEN)
NAN_BOXED(2131115847,32,FLEN)
NAN_BOXED(2151482770,32,FLEN)
NAN_BOXED(3347046400,32,FLEN)
NAN_BOXED(2131115847,32,FLEN)
NAN_BOXED(2151482770,32,FLEN)
NAN_BOXED(3347050496,32,FLEN)
NAN_BOXED(2131115847,32,FLEN)
NAN_BOXED(2151482770,32,FLEN)
NAN_BOXED(3347052544,32,FLEN)
NAN_BOXED(2131115847,32,FLEN)
NAN_BOXED(2151482770,32,FLEN)
NAN_BOXED(3347053568,32,FLEN)
NAN_BOXED(2131115847,32,FLEN)
NAN_BOXED(2151482770,32,FLEN)
NAN_BOXED(3347054080,32,FLEN)
NAN_BOXED(2131115847,32,FLEN)
NAN_BOXED(2151482770,32,FLEN)
NAN_BOXED(3347054336,32,FLEN)
NAN_BOXED(2131115847,32,FLEN)
NAN_BOXED(2151482770,32,FLEN)
NAN_BOXED(3347054464,32,FLEN)
NAN_BOXED(2131115847,32,FLEN)
NAN_BOXED(2151482770,32,FLEN)
NAN_BOXED(3347054528,32,FLEN)
NAN_BOXED(2131115847,32,FLEN)
NAN_BOXED(2151482770,32,FLEN)
NAN_BOXED(3347054560,32,FLEN)
NAN_BOXED(2131115847,32,FLEN)
NAN_BOXED(2151482770,32,FLEN)
NAN_BOXED(3347054576,32,FLEN)
NAN_BOXED(2131115847,32,FLEN)
NAN_BOXED(2151482770,32,FLEN)
NAN_BOXED(3347054584,32,FLEN)
NAN_BOXED(2131115847,32,FLEN)
NAN_BOXED(2151482770,32,FLEN)
NAN_BOXED(3347054588,32,FLEN)
NAN_BOXED(2131115847,32,FLEN)
NAN_BOXED(2151482770,32,FLEN)
NAN_BOXED(3347054590,32,FLEN)
NAN_BOXED(2131115847,32,FLEN)
NAN_BOXED(2151482770,32,FLEN)
NAN_BOXED(3347054591,32,FLEN)
NAN_BOXED(2131119241,32,FLEN)
NAN_BOXED(3997580,32,FLEN)
NAN_BOXED(1065353217,32,FLEN)
NAN_BOXED(2131119241,32,FLEN)
NAN_BOXED(3997580,32,FLEN)
NAN_BOXED(1065353219,32,FLEN)
NAN_BOXED(2131119241,32,FLEN)
NAN_BOXED(3997580,32,FLEN)
NAN_BOXED(1065353223,32,FLEN)
NAN_BOXED(2131119241,32,FLEN)
NAN_BOXED(3997580,32,FLEN)
NAN_BOXED(1067030937,32,FLEN)
NAN_BOXED(2131119241,32,FLEN)
NAN_BOXED(3997580,32,FLEN)
NAN_BOXED(1067749961,32,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
