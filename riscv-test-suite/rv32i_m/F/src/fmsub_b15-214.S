
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 14:18:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32F/fmsub.s.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.s instruction of the RISC-V RV32F_Zicsr,RV32FD_Zicsr,RV64F_Zicsr,RV64FD_Zicsr extension for the fmsub_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF_Zicsr,RV32IFD_Zicsr,RV64IF_Zicsr,RV64IFD_Zicsr,RV32EF_Zicsr,RV32EFD_Zicsr,RV64EF_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fmsub_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*F.*);def TEST_CASE_1=True;",fmsub_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_27264:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x098ac2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f098ac2; op2val:0x0;
op3val:0xc81ffff; valaddr_reg:x3; val_offset:81792*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 81792*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27265:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x098ac2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f098ac2; op2val:0x0;
op3val:0xc83ffff; valaddr_reg:x3; val_offset:81795*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 81795*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27266:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x098ac2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f098ac2; op2val:0x0;
op3val:0xc87ffff; valaddr_reg:x3; val_offset:81798*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 81798*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27267:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x098ac2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f098ac2; op2val:0x0;
op3val:0xc8fffff; valaddr_reg:x3; val_offset:81801*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 81801*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27268:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x098ac2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f098ac2; op2val:0x0;
op3val:0xc9fffff; valaddr_reg:x3; val_offset:81804*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 81804*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27269:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x098ac2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f098ac2; op2val:0x0;
op3val:0xcbfffff; valaddr_reg:x3; val_offset:81807*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 81807*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27270:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x098ac2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f098ac2; op2val:0x0;
op3val:0xcc00000; valaddr_reg:x3; val_offset:81810*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 81810*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27271:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x098ac2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f098ac2; op2val:0x0;
op3val:0xce00000; valaddr_reg:x3; val_offset:81813*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 81813*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27272:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x098ac2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f098ac2; op2val:0x0;
op3val:0xcf00000; valaddr_reg:x3; val_offset:81816*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 81816*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27273:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x098ac2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f098ac2; op2val:0x0;
op3val:0xcf80000; valaddr_reg:x3; val_offset:81819*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 81819*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27274:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x098ac2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f098ac2; op2val:0x0;
op3val:0xcfc0000; valaddr_reg:x3; val_offset:81822*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 81822*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27275:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x098ac2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f098ac2; op2val:0x0;
op3val:0xcfe0000; valaddr_reg:x3; val_offset:81825*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 81825*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27276:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x098ac2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f098ac2; op2val:0x0;
op3val:0xcff0000; valaddr_reg:x3; val_offset:81828*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 81828*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27277:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x098ac2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f098ac2; op2val:0x0;
op3val:0xcff8000; valaddr_reg:x3; val_offset:81831*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 81831*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27278:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x098ac2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f098ac2; op2val:0x0;
op3val:0xcffc000; valaddr_reg:x3; val_offset:81834*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 81834*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27279:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x098ac2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f098ac2; op2val:0x0;
op3val:0xcffe000; valaddr_reg:x3; val_offset:81837*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 81837*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27280:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x098ac2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f098ac2; op2val:0x0;
op3val:0xcfff000; valaddr_reg:x3; val_offset:81840*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 81840*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27281:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x098ac2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f098ac2; op2val:0x0;
op3val:0xcfff800; valaddr_reg:x3; val_offset:81843*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 81843*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27282:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x098ac2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f098ac2; op2val:0x0;
op3val:0xcfffc00; valaddr_reg:x3; val_offset:81846*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 81846*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27283:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x098ac2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f098ac2; op2val:0x0;
op3val:0xcfffe00; valaddr_reg:x3; val_offset:81849*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 81849*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27284:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x098ac2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f098ac2; op2val:0x0;
op3val:0xcffff00; valaddr_reg:x3; val_offset:81852*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 81852*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27285:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x098ac2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f098ac2; op2val:0x0;
op3val:0xcffff80; valaddr_reg:x3; val_offset:81855*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 81855*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27286:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x098ac2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f098ac2; op2val:0x0;
op3val:0xcffffc0; valaddr_reg:x3; val_offset:81858*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 81858*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27287:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x098ac2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f098ac2; op2val:0x0;
op3val:0xcffffe0; valaddr_reg:x3; val_offset:81861*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 81861*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27288:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x098ac2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f098ac2; op2val:0x0;
op3val:0xcfffff0; valaddr_reg:x3; val_offset:81864*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 81864*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27289:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x098ac2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f098ac2; op2val:0x0;
op3val:0xcfffff8; valaddr_reg:x3; val_offset:81867*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 81867*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27290:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x098ac2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f098ac2; op2val:0x0;
op3val:0xcfffffc; valaddr_reg:x3; val_offset:81870*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 81870*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27291:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x098ac2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f098ac2; op2val:0x0;
op3val:0xcfffffe; valaddr_reg:x3; val_offset:81873*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 81873*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27292:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x098ac2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f098ac2; op2val:0x0;
op3val:0xcffffff; valaddr_reg:x3; val_offset:81876*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 81876*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27293:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a272a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3b4bec and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a272a; op2val:0x803b4bec;
op3val:0xbf800001; valaddr_reg:x3; val_offset:81879*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 81879*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27294:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a272a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3b4bec and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a272a; op2val:0x803b4bec;
op3val:0xbf800003; valaddr_reg:x3; val_offset:81882*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 81882*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27295:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a272a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3b4bec and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a272a; op2val:0x803b4bec;
op3val:0xbf800007; valaddr_reg:x3; val_offset:81885*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 81885*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27296:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a272a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3b4bec and fs3 == 1 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a272a; op2val:0x803b4bec;
op3val:0xbf999999; valaddr_reg:x3; val_offset:81888*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 81888*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27297:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a272a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3b4bec and fs3 == 1 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a272a; op2val:0x803b4bec;
op3val:0xbfa49249; valaddr_reg:x3; val_offset:81891*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 81891*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27298:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a272a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3b4bec and fs3 == 1 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a272a; op2val:0x803b4bec;
op3val:0xbfb33333; valaddr_reg:x3; val_offset:81894*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 81894*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27299:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a272a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3b4bec and fs3 == 1 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a272a; op2val:0x803b4bec;
op3val:0xbfb6db6d; valaddr_reg:x3; val_offset:81897*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 81897*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27300:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a272a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3b4bec and fs3 == 1 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a272a; op2val:0x803b4bec;
op3val:0xbfbbbbbb; valaddr_reg:x3; val_offset:81900*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 81900*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27301:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a272a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3b4bec and fs3 == 1 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a272a; op2val:0x803b4bec;
op3val:0xbfc44444; valaddr_reg:x3; val_offset:81903*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 81903*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27302:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a272a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3b4bec and fs3 == 1 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a272a; op2val:0x803b4bec;
op3val:0xbfcccccc; valaddr_reg:x3; val_offset:81906*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 81906*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27303:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a272a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3b4bec and fs3 == 1 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a272a; op2val:0x803b4bec;
op3val:0xbfdb6db6; valaddr_reg:x3; val_offset:81909*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 81909*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27304:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a272a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3b4bec and fs3 == 1 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a272a; op2val:0x803b4bec;
op3val:0xbfe66666; valaddr_reg:x3; val_offset:81912*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 81912*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27305:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a272a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3b4bec and fs3 == 1 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a272a; op2val:0x803b4bec;
op3val:0xbfedb6db; valaddr_reg:x3; val_offset:81915*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 81915*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27306:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a272a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3b4bec and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a272a; op2val:0x803b4bec;
op3val:0xbffffff8; valaddr_reg:x3; val_offset:81918*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 81918*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27307:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a272a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3b4bec and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a272a; op2val:0x803b4bec;
op3val:0xbffffffc; valaddr_reg:x3; val_offset:81921*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 81921*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27308:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a272a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3b4bec and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a272a; op2val:0x803b4bec;
op3val:0xbffffffe; valaddr_reg:x3; val_offset:81924*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 81924*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27309:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a272a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3b4bec and fs3 == 1 and fe3 == 0x84 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a272a; op2val:0x803b4bec;
op3val:0xc2000000; valaddr_reg:x3; val_offset:81927*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 81927*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27310:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a272a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3b4bec and fs3 == 1 and fe3 == 0x84 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a272a; op2val:0x803b4bec;
op3val:0xc2000001; valaddr_reg:x3; val_offset:81930*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 81930*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27311:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a272a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3b4bec and fs3 == 1 and fe3 == 0x84 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a272a; op2val:0x803b4bec;
op3val:0xc2000003; valaddr_reg:x3; val_offset:81933*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 81933*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27312:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a272a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3b4bec and fs3 == 1 and fe3 == 0x84 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a272a; op2val:0x803b4bec;
op3val:0xc2000007; valaddr_reg:x3; val_offset:81936*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 81936*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27313:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a272a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3b4bec and fs3 == 1 and fe3 == 0x84 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a272a; op2val:0x803b4bec;
op3val:0xc200000f; valaddr_reg:x3; val_offset:81939*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 81939*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27314:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a272a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3b4bec and fs3 == 1 and fe3 == 0x84 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a272a; op2val:0x803b4bec;
op3val:0xc200001f; valaddr_reg:x3; val_offset:81942*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 81942*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27315:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a272a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3b4bec and fs3 == 1 and fe3 == 0x84 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a272a; op2val:0x803b4bec;
op3val:0xc200003f; valaddr_reg:x3; val_offset:81945*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 81945*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27316:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a272a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3b4bec and fs3 == 1 and fe3 == 0x84 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a272a; op2val:0x803b4bec;
op3val:0xc200007f; valaddr_reg:x3; val_offset:81948*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 81948*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27317:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a272a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3b4bec and fs3 == 1 and fe3 == 0x84 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a272a; op2val:0x803b4bec;
op3val:0xc20000ff; valaddr_reg:x3; val_offset:81951*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 81951*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27318:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a272a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3b4bec and fs3 == 1 and fe3 == 0x84 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a272a; op2val:0x803b4bec;
op3val:0xc20001ff; valaddr_reg:x3; val_offset:81954*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 81954*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27319:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a272a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3b4bec and fs3 == 1 and fe3 == 0x84 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a272a; op2val:0x803b4bec;
op3val:0xc20003ff; valaddr_reg:x3; val_offset:81957*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 81957*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27320:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a272a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3b4bec and fs3 == 1 and fe3 == 0x84 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a272a; op2val:0x803b4bec;
op3val:0xc20007ff; valaddr_reg:x3; val_offset:81960*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 81960*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27321:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a272a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3b4bec and fs3 == 1 and fe3 == 0x84 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a272a; op2val:0x803b4bec;
op3val:0xc2000fff; valaddr_reg:x3; val_offset:81963*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 81963*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27322:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a272a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3b4bec and fs3 == 1 and fe3 == 0x84 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a272a; op2val:0x803b4bec;
op3val:0xc2001fff; valaddr_reg:x3; val_offset:81966*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 81966*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27323:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a272a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3b4bec and fs3 == 1 and fe3 == 0x84 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a272a; op2val:0x803b4bec;
op3val:0xc2003fff; valaddr_reg:x3; val_offset:81969*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 81969*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27324:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a272a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3b4bec and fs3 == 1 and fe3 == 0x84 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a272a; op2val:0x803b4bec;
op3val:0xc2007fff; valaddr_reg:x3; val_offset:81972*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 81972*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27325:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a272a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3b4bec and fs3 == 1 and fe3 == 0x84 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a272a; op2val:0x803b4bec;
op3val:0xc200ffff; valaddr_reg:x3; val_offset:81975*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 81975*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27326:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a272a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3b4bec and fs3 == 1 and fe3 == 0x84 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a272a; op2val:0x803b4bec;
op3val:0xc201ffff; valaddr_reg:x3; val_offset:81978*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 81978*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27327:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a272a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3b4bec and fs3 == 1 and fe3 == 0x84 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a272a; op2val:0x803b4bec;
op3val:0xc203ffff; valaddr_reg:x3; val_offset:81981*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 81981*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27328:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a272a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3b4bec and fs3 == 1 and fe3 == 0x84 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a272a; op2val:0x803b4bec;
op3val:0xc207ffff; valaddr_reg:x3; val_offset:81984*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 81984*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27329:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a272a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3b4bec and fs3 == 1 and fe3 == 0x84 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a272a; op2val:0x803b4bec;
op3val:0xc20fffff; valaddr_reg:x3; val_offset:81987*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 81987*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27330:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a272a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3b4bec and fs3 == 1 and fe3 == 0x84 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a272a; op2val:0x803b4bec;
op3val:0xc21fffff; valaddr_reg:x3; val_offset:81990*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 81990*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27331:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a272a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3b4bec and fs3 == 1 and fe3 == 0x84 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a272a; op2val:0x803b4bec;
op3val:0xc23fffff; valaddr_reg:x3; val_offset:81993*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 81993*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27332:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a272a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3b4bec and fs3 == 1 and fe3 == 0x84 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a272a; op2val:0x803b4bec;
op3val:0xc2400000; valaddr_reg:x3; val_offset:81996*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 81996*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27333:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a272a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3b4bec and fs3 == 1 and fe3 == 0x84 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a272a; op2val:0x803b4bec;
op3val:0xc2600000; valaddr_reg:x3; val_offset:81999*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 81999*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27334:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a272a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3b4bec and fs3 == 1 and fe3 == 0x84 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a272a; op2val:0x803b4bec;
op3val:0xc2700000; valaddr_reg:x3; val_offset:82002*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82002*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27335:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a272a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3b4bec and fs3 == 1 and fe3 == 0x84 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a272a; op2val:0x803b4bec;
op3val:0xc2780000; valaddr_reg:x3; val_offset:82005*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82005*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27336:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a272a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3b4bec and fs3 == 1 and fe3 == 0x84 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a272a; op2val:0x803b4bec;
op3val:0xc27c0000; valaddr_reg:x3; val_offset:82008*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82008*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27337:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a272a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3b4bec and fs3 == 1 and fe3 == 0x84 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a272a; op2val:0x803b4bec;
op3val:0xc27e0000; valaddr_reg:x3; val_offset:82011*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82011*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27338:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a272a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3b4bec and fs3 == 1 and fe3 == 0x84 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a272a; op2val:0x803b4bec;
op3val:0xc27f0000; valaddr_reg:x3; val_offset:82014*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82014*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27339:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a272a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3b4bec and fs3 == 1 and fe3 == 0x84 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a272a; op2val:0x803b4bec;
op3val:0xc27f8000; valaddr_reg:x3; val_offset:82017*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82017*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27340:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a272a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3b4bec and fs3 == 1 and fe3 == 0x84 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a272a; op2val:0x803b4bec;
op3val:0xc27fc000; valaddr_reg:x3; val_offset:82020*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82020*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27341:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a272a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3b4bec and fs3 == 1 and fe3 == 0x84 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a272a; op2val:0x803b4bec;
op3val:0xc27fe000; valaddr_reg:x3; val_offset:82023*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82023*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27342:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a272a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3b4bec and fs3 == 1 and fe3 == 0x84 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a272a; op2val:0x803b4bec;
op3val:0xc27ff000; valaddr_reg:x3; val_offset:82026*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82026*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27343:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a272a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3b4bec and fs3 == 1 and fe3 == 0x84 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a272a; op2val:0x803b4bec;
op3val:0xc27ff800; valaddr_reg:x3; val_offset:82029*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82029*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27344:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a272a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3b4bec and fs3 == 1 and fe3 == 0x84 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a272a; op2val:0x803b4bec;
op3val:0xc27ffc00; valaddr_reg:x3; val_offset:82032*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82032*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27345:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a272a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3b4bec and fs3 == 1 and fe3 == 0x84 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a272a; op2val:0x803b4bec;
op3val:0xc27ffe00; valaddr_reg:x3; val_offset:82035*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82035*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27346:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a272a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3b4bec and fs3 == 1 and fe3 == 0x84 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a272a; op2val:0x803b4bec;
op3val:0xc27fff00; valaddr_reg:x3; val_offset:82038*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82038*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27347:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a272a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3b4bec and fs3 == 1 and fe3 == 0x84 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a272a; op2val:0x803b4bec;
op3val:0xc27fff80; valaddr_reg:x3; val_offset:82041*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82041*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27348:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a272a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3b4bec and fs3 == 1 and fe3 == 0x84 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a272a; op2val:0x803b4bec;
op3val:0xc27fffc0; valaddr_reg:x3; val_offset:82044*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82044*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27349:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a272a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3b4bec and fs3 == 1 and fe3 == 0x84 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a272a; op2val:0x803b4bec;
op3val:0xc27fffe0; valaddr_reg:x3; val_offset:82047*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82047*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27350:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a272a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3b4bec and fs3 == 1 and fe3 == 0x84 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a272a; op2val:0x803b4bec;
op3val:0xc27ffff0; valaddr_reg:x3; val_offset:82050*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82050*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27351:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a272a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3b4bec and fs3 == 1 and fe3 == 0x84 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a272a; op2val:0x803b4bec;
op3val:0xc27ffff8; valaddr_reg:x3; val_offset:82053*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82053*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27352:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a272a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3b4bec and fs3 == 1 and fe3 == 0x84 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a272a; op2val:0x803b4bec;
op3val:0xc27ffffc; valaddr_reg:x3; val_offset:82056*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82056*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27353:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a272a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3b4bec and fs3 == 1 and fe3 == 0x84 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a272a; op2val:0x803b4bec;
op3val:0xc27ffffe; valaddr_reg:x3; val_offset:82059*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82059*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27354:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a272a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3b4bec and fs3 == 1 and fe3 == 0x84 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a272a; op2val:0x803b4bec;
op3val:0xc27fffff; valaddr_reg:x3; val_offset:82062*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82062*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27355:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a27fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a27fc; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:82065*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82065*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27356:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a27fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a27fc; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:82068*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82068*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27357:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a27fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a27fc; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:82071*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82071*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27358:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a27fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a27fc; op2val:0x0;
op3val:0x199999; valaddr_reg:x3; val_offset:82074*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82074*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27359:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a27fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a27fc; op2val:0x0;
op3val:0x249249; valaddr_reg:x3; val_offset:82077*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82077*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27360:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a27fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a27fc; op2val:0x0;
op3val:0x333333; valaddr_reg:x3; val_offset:82080*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82080*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27361:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a27fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a27fc; op2val:0x0;
op3val:0x36db6d; valaddr_reg:x3; val_offset:82083*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82083*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27362:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a27fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a27fc; op2val:0x0;
op3val:0x3bbbbb; valaddr_reg:x3; val_offset:82086*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82086*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27363:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a27fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a27fc; op2val:0x0;
op3val:0x444444; valaddr_reg:x3; val_offset:82089*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82089*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27364:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a27fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a27fc; op2val:0x0;
op3val:0x4ccccc; valaddr_reg:x3; val_offset:82092*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82092*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27365:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a27fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a27fc; op2val:0x0;
op3val:0x5b6db6; valaddr_reg:x3; val_offset:82095*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82095*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27366:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a27fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a27fc; op2val:0x0;
op3val:0x666666; valaddr_reg:x3; val_offset:82098*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82098*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27367:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a27fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a27fc; op2val:0x0;
op3val:0x6db6db; valaddr_reg:x3; val_offset:82101*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82101*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27368:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a27fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a27fc; op2val:0x0;
op3val:0x7ffff8; valaddr_reg:x3; val_offset:82104*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82104*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27369:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a27fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a27fc; op2val:0x0;
op3val:0x7ffffc; valaddr_reg:x3; val_offset:82107*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82107*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27370:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a27fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a27fc; op2val:0x0;
op3val:0x7ffffe; valaddr_reg:x3; val_offset:82110*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82110*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27371:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a27fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a27fc; op2val:0x0;
op3val:0x8800000; valaddr_reg:x3; val_offset:82113*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82113*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27372:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a27fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a27fc; op2val:0x0;
op3val:0x8800001; valaddr_reg:x3; val_offset:82116*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82116*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27373:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a27fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a27fc; op2val:0x0;
op3val:0x8800003; valaddr_reg:x3; val_offset:82119*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82119*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27374:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a27fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a27fc; op2val:0x0;
op3val:0x8800007; valaddr_reg:x3; val_offset:82122*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82122*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27375:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a27fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a27fc; op2val:0x0;
op3val:0x880000f; valaddr_reg:x3; val_offset:82125*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82125*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27376:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a27fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a27fc; op2val:0x0;
op3val:0x880001f; valaddr_reg:x3; val_offset:82128*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82128*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27377:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a27fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a27fc; op2val:0x0;
op3val:0x880003f; valaddr_reg:x3; val_offset:82131*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82131*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27378:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a27fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a27fc; op2val:0x0;
op3val:0x880007f; valaddr_reg:x3; val_offset:82134*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82134*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27379:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a27fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a27fc; op2val:0x0;
op3val:0x88000ff; valaddr_reg:x3; val_offset:82137*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82137*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27380:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a27fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a27fc; op2val:0x0;
op3val:0x88001ff; valaddr_reg:x3; val_offset:82140*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82140*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27381:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a27fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a27fc; op2val:0x0;
op3val:0x88003ff; valaddr_reg:x3; val_offset:82143*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82143*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27382:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a27fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a27fc; op2val:0x0;
op3val:0x88007ff; valaddr_reg:x3; val_offset:82146*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82146*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27383:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a27fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a27fc; op2val:0x0;
op3val:0x8800fff; valaddr_reg:x3; val_offset:82149*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82149*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27384:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a27fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a27fc; op2val:0x0;
op3val:0x8801fff; valaddr_reg:x3; val_offset:82152*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82152*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27385:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a27fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a27fc; op2val:0x0;
op3val:0x8803fff; valaddr_reg:x3; val_offset:82155*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82155*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27386:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a27fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a27fc; op2val:0x0;
op3val:0x8807fff; valaddr_reg:x3; val_offset:82158*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82158*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27387:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a27fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a27fc; op2val:0x0;
op3val:0x880ffff; valaddr_reg:x3; val_offset:82161*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82161*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27388:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a27fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a27fc; op2val:0x0;
op3val:0x881ffff; valaddr_reg:x3; val_offset:82164*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82164*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27389:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a27fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a27fc; op2val:0x0;
op3val:0x883ffff; valaddr_reg:x3; val_offset:82167*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82167*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27390:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a27fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a27fc; op2val:0x0;
op3val:0x887ffff; valaddr_reg:x3; val_offset:82170*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82170*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27391:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a27fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a27fc; op2val:0x0;
op3val:0x88fffff; valaddr_reg:x3; val_offset:82173*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82173*0 + 3*213*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(2131331778,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(209846271,32,FLEN)
NAN_BOXED(2131331778,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(209977343,32,FLEN)
NAN_BOXED(2131331778,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(210239487,32,FLEN)
NAN_BOXED(2131331778,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(210763775,32,FLEN)
NAN_BOXED(2131331778,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(211812351,32,FLEN)
NAN_BOXED(2131331778,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(213909503,32,FLEN)
NAN_BOXED(2131331778,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(213909504,32,FLEN)
NAN_BOXED(2131331778,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(216006656,32,FLEN)
NAN_BOXED(2131331778,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(217055232,32,FLEN)
NAN_BOXED(2131331778,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(217579520,32,FLEN)
NAN_BOXED(2131331778,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(217841664,32,FLEN)
NAN_BOXED(2131331778,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(217972736,32,FLEN)
NAN_BOXED(2131331778,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(218038272,32,FLEN)
NAN_BOXED(2131331778,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(218071040,32,FLEN)
NAN_BOXED(2131331778,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(218087424,32,FLEN)
NAN_BOXED(2131331778,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(218095616,32,FLEN)
NAN_BOXED(2131331778,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(218099712,32,FLEN)
NAN_BOXED(2131331778,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(218101760,32,FLEN)
NAN_BOXED(2131331778,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(218102784,32,FLEN)
NAN_BOXED(2131331778,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(218103296,32,FLEN)
NAN_BOXED(2131331778,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(218103552,32,FLEN)
NAN_BOXED(2131331778,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(218103680,32,FLEN)
NAN_BOXED(2131331778,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(218103744,32,FLEN)
NAN_BOXED(2131331778,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(218103776,32,FLEN)
NAN_BOXED(2131331778,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(218103792,32,FLEN)
NAN_BOXED(2131331778,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(218103800,32,FLEN)
NAN_BOXED(2131331778,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(218103804,32,FLEN)
NAN_BOXED(2131331778,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(218103806,32,FLEN)
NAN_BOXED(2131331778,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(218103807,32,FLEN)
NAN_BOXED(2131371818,32,FLEN)
NAN_BOXED(2151369708,32,FLEN)
NAN_BOXED(3212836865,32,FLEN)
NAN_BOXED(2131371818,32,FLEN)
NAN_BOXED(2151369708,32,FLEN)
NAN_BOXED(3212836867,32,FLEN)
NAN_BOXED(2131371818,32,FLEN)
NAN_BOXED(2151369708,32,FLEN)
NAN_BOXED(3212836871,32,FLEN)
NAN_BOXED(2131371818,32,FLEN)
NAN_BOXED(2151369708,32,FLEN)
NAN_BOXED(3214514585,32,FLEN)
NAN_BOXED(2131371818,32,FLEN)
NAN_BOXED(2151369708,32,FLEN)
NAN_BOXED(3215233609,32,FLEN)
NAN_BOXED(2131371818,32,FLEN)
NAN_BOXED(2151369708,32,FLEN)
NAN_BOXED(3216192307,32,FLEN)
NAN_BOXED(2131371818,32,FLEN)
NAN_BOXED(2151369708,32,FLEN)
NAN_BOXED(3216431981,32,FLEN)
NAN_BOXED(2131371818,32,FLEN)
NAN_BOXED(2151369708,32,FLEN)
NAN_BOXED(3216751547,32,FLEN)
NAN_BOXED(2131371818,32,FLEN)
NAN_BOXED(2151369708,32,FLEN)
NAN_BOXED(3217310788,32,FLEN)
NAN_BOXED(2131371818,32,FLEN)
NAN_BOXED(2151369708,32,FLEN)
NAN_BOXED(3217870028,32,FLEN)
NAN_BOXED(2131371818,32,FLEN)
NAN_BOXED(2151369708,32,FLEN)
NAN_BOXED(3218828726,32,FLEN)
NAN_BOXED(2131371818,32,FLEN)
NAN_BOXED(2151369708,32,FLEN)
NAN_BOXED(3219547750,32,FLEN)
NAN_BOXED(2131371818,32,FLEN)
NAN_BOXED(2151369708,32,FLEN)
NAN_BOXED(3220027099,32,FLEN)
NAN_BOXED(2131371818,32,FLEN)
NAN_BOXED(2151369708,32,FLEN)
NAN_BOXED(3221225464,32,FLEN)
NAN_BOXED(2131371818,32,FLEN)
NAN_BOXED(2151369708,32,FLEN)
NAN_BOXED(3221225468,32,FLEN)
NAN_BOXED(2131371818,32,FLEN)
NAN_BOXED(2151369708,32,FLEN)
NAN_BOXED(3221225470,32,FLEN)
NAN_BOXED(2131371818,32,FLEN)
NAN_BOXED(2151369708,32,FLEN)
NAN_BOXED(3254779904,32,FLEN)
NAN_BOXED(2131371818,32,FLEN)
NAN_BOXED(2151369708,32,FLEN)
NAN_BOXED(3254779905,32,FLEN)
NAN_BOXED(2131371818,32,FLEN)
NAN_BOXED(2151369708,32,FLEN)
NAN_BOXED(3254779907,32,FLEN)
NAN_BOXED(2131371818,32,FLEN)
NAN_BOXED(2151369708,32,FLEN)
NAN_BOXED(3254779911,32,FLEN)
NAN_BOXED(2131371818,32,FLEN)
NAN_BOXED(2151369708,32,FLEN)
NAN_BOXED(3254779919,32,FLEN)
NAN_BOXED(2131371818,32,FLEN)
NAN_BOXED(2151369708,32,FLEN)
NAN_BOXED(3254779935,32,FLEN)
NAN_BOXED(2131371818,32,FLEN)
NAN_BOXED(2151369708,32,FLEN)
NAN_BOXED(3254779967,32,FLEN)
NAN_BOXED(2131371818,32,FLEN)
NAN_BOXED(2151369708,32,FLEN)
NAN_BOXED(3254780031,32,FLEN)
NAN_BOXED(2131371818,32,FLEN)
NAN_BOXED(2151369708,32,FLEN)
NAN_BOXED(3254780159,32,FLEN)
NAN_BOXED(2131371818,32,FLEN)
NAN_BOXED(2151369708,32,FLEN)
NAN_BOXED(3254780415,32,FLEN)
NAN_BOXED(2131371818,32,FLEN)
NAN_BOXED(2151369708,32,FLEN)
NAN_BOXED(3254780927,32,FLEN)
NAN_BOXED(2131371818,32,FLEN)
NAN_BOXED(2151369708,32,FLEN)
NAN_BOXED(3254781951,32,FLEN)
NAN_BOXED(2131371818,32,FLEN)
NAN_BOXED(2151369708,32,FLEN)
NAN_BOXED(3254783999,32,FLEN)
NAN_BOXED(2131371818,32,FLEN)
NAN_BOXED(2151369708,32,FLEN)
NAN_BOXED(3254788095,32,FLEN)
NAN_BOXED(2131371818,32,FLEN)
NAN_BOXED(2151369708,32,FLEN)
NAN_BOXED(3254796287,32,FLEN)
NAN_BOXED(2131371818,32,FLEN)
NAN_BOXED(2151369708,32,FLEN)
NAN_BOXED(3254812671,32,FLEN)
NAN_BOXED(2131371818,32,FLEN)
NAN_BOXED(2151369708,32,FLEN)
NAN_BOXED(3254845439,32,FLEN)
NAN_BOXED(2131371818,32,FLEN)
NAN_BOXED(2151369708,32,FLEN)
NAN_BOXED(3254910975,32,FLEN)
NAN_BOXED(2131371818,32,FLEN)
NAN_BOXED(2151369708,32,FLEN)
NAN_BOXED(3255042047,32,FLEN)
NAN_BOXED(2131371818,32,FLEN)
NAN_BOXED(2151369708,32,FLEN)
NAN_BOXED(3255304191,32,FLEN)
NAN_BOXED(2131371818,32,FLEN)
NAN_BOXED(2151369708,32,FLEN)
NAN_BOXED(3255828479,32,FLEN)
NAN_BOXED(2131371818,32,FLEN)
NAN_BOXED(2151369708,32,FLEN)
NAN_BOXED(3256877055,32,FLEN)
NAN_BOXED(2131371818,32,FLEN)
NAN_BOXED(2151369708,32,FLEN)
NAN_BOXED(3258974207,32,FLEN)
NAN_BOXED(2131371818,32,FLEN)
NAN_BOXED(2151369708,32,FLEN)
NAN_BOXED(3258974208,32,FLEN)
NAN_BOXED(2131371818,32,FLEN)
NAN_BOXED(2151369708,32,FLEN)
NAN_BOXED(3261071360,32,FLEN)
NAN_BOXED(2131371818,32,FLEN)
NAN_BOXED(2151369708,32,FLEN)
NAN_BOXED(3262119936,32,FLEN)
NAN_BOXED(2131371818,32,FLEN)
NAN_BOXED(2151369708,32,FLEN)
NAN_BOXED(3262644224,32,FLEN)
NAN_BOXED(2131371818,32,FLEN)
NAN_BOXED(2151369708,32,FLEN)
NAN_BOXED(3262906368,32,FLEN)
NAN_BOXED(2131371818,32,FLEN)
NAN_BOXED(2151369708,32,FLEN)
NAN_BOXED(3263037440,32,FLEN)
NAN_BOXED(2131371818,32,FLEN)
NAN_BOXED(2151369708,32,FLEN)
NAN_BOXED(3263102976,32,FLEN)
NAN_BOXED(2131371818,32,FLEN)
NAN_BOXED(2151369708,32,FLEN)
NAN_BOXED(3263135744,32,FLEN)
NAN_BOXED(2131371818,32,FLEN)
NAN_BOXED(2151369708,32,FLEN)
NAN_BOXED(3263152128,32,FLEN)
NAN_BOXED(2131371818,32,FLEN)
NAN_BOXED(2151369708,32,FLEN)
NAN_BOXED(3263160320,32,FLEN)
NAN_BOXED(2131371818,32,FLEN)
NAN_BOXED(2151369708,32,FLEN)
NAN_BOXED(3263164416,32,FLEN)
NAN_BOXED(2131371818,32,FLEN)
NAN_BOXED(2151369708,32,FLEN)
NAN_BOXED(3263166464,32,FLEN)
NAN_BOXED(2131371818,32,FLEN)
NAN_BOXED(2151369708,32,FLEN)
NAN_BOXED(3263167488,32,FLEN)
NAN_BOXED(2131371818,32,FLEN)
NAN_BOXED(2151369708,32,FLEN)
NAN_BOXED(3263168000,32,FLEN)
NAN_BOXED(2131371818,32,FLEN)
NAN_BOXED(2151369708,32,FLEN)
NAN_BOXED(3263168256,32,FLEN)
NAN_BOXED(2131371818,32,FLEN)
NAN_BOXED(2151369708,32,FLEN)
NAN_BOXED(3263168384,32,FLEN)
NAN_BOXED(2131371818,32,FLEN)
NAN_BOXED(2151369708,32,FLEN)
NAN_BOXED(3263168448,32,FLEN)
NAN_BOXED(2131371818,32,FLEN)
NAN_BOXED(2151369708,32,FLEN)
NAN_BOXED(3263168480,32,FLEN)
NAN_BOXED(2131371818,32,FLEN)
NAN_BOXED(2151369708,32,FLEN)
NAN_BOXED(3263168496,32,FLEN)
NAN_BOXED(2131371818,32,FLEN)
NAN_BOXED(2151369708,32,FLEN)
NAN_BOXED(3263168504,32,FLEN)
NAN_BOXED(2131371818,32,FLEN)
NAN_BOXED(2151369708,32,FLEN)
NAN_BOXED(3263168508,32,FLEN)
NAN_BOXED(2131371818,32,FLEN)
NAN_BOXED(2151369708,32,FLEN)
NAN_BOXED(3263168510,32,FLEN)
NAN_BOXED(2131371818,32,FLEN)
NAN_BOXED(2151369708,32,FLEN)
NAN_BOXED(3263168511,32,FLEN)
NAN_BOXED(2131372028,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(2131372028,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3,32,FLEN)
NAN_BOXED(2131372028,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7,32,FLEN)
NAN_BOXED(2131372028,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1677721,32,FLEN)
NAN_BOXED(2131372028,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2396745,32,FLEN)
NAN_BOXED(2131372028,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3355443,32,FLEN)
NAN_BOXED(2131372028,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3595117,32,FLEN)
NAN_BOXED(2131372028,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3914683,32,FLEN)
NAN_BOXED(2131372028,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(4473924,32,FLEN)
NAN_BOXED(2131372028,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5033164,32,FLEN)
NAN_BOXED(2131372028,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5991862,32,FLEN)
NAN_BOXED(2131372028,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(6710886,32,FLEN)
NAN_BOXED(2131372028,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7190235,32,FLEN)
NAN_BOXED(2131372028,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388600,32,FLEN)
NAN_BOXED(2131372028,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388604,32,FLEN)
NAN_BOXED(2131372028,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388606,32,FLEN)
NAN_BOXED(2131372028,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(142606336,32,FLEN)
NAN_BOXED(2131372028,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(142606337,32,FLEN)
NAN_BOXED(2131372028,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(142606339,32,FLEN)
NAN_BOXED(2131372028,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(142606343,32,FLEN)
NAN_BOXED(2131372028,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(142606351,32,FLEN)
NAN_BOXED(2131372028,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(142606367,32,FLEN)
NAN_BOXED(2131372028,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(142606399,32,FLEN)
NAN_BOXED(2131372028,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(142606463,32,FLEN)
NAN_BOXED(2131372028,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(142606591,32,FLEN)
NAN_BOXED(2131372028,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(142606847,32,FLEN)
NAN_BOXED(2131372028,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(142607359,32,FLEN)
NAN_BOXED(2131372028,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(142608383,32,FLEN)
NAN_BOXED(2131372028,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(142610431,32,FLEN)
NAN_BOXED(2131372028,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(142614527,32,FLEN)
NAN_BOXED(2131372028,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(142622719,32,FLEN)
NAN_BOXED(2131372028,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(142639103,32,FLEN)
NAN_BOXED(2131372028,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(142671871,32,FLEN)
NAN_BOXED(2131372028,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(142737407,32,FLEN)
NAN_BOXED(2131372028,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(142868479,32,FLEN)
NAN_BOXED(2131372028,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(143130623,32,FLEN)
NAN_BOXED(2131372028,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(143654911,32,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
