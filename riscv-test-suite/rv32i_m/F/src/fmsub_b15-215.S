
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 14:18:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32F/fmsub.s.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.s instruction of the RISC-V RV32F_Zicsr,RV32FD_Zicsr,RV64F_Zicsr,RV64FD_Zicsr extension for the fmsub_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF_Zicsr,RV32IFD_Zicsr,RV64IF_Zicsr,RV64IFD_Zicsr,RV32EF_Zicsr,RV32EFD_Zicsr,RV64EF_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fmsub_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*F.*);def TEST_CASE_1=True;",fmsub_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_27392:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a27fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a27fc; op2val:0x0;
op3val:0x89fffff; valaddr_reg:x3; val_offset:82176*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82176*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27393:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a27fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a27fc; op2val:0x0;
op3val:0x8bfffff; valaddr_reg:x3; val_offset:82179*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82179*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27394:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a27fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a27fc; op2val:0x0;
op3val:0x8c00000; valaddr_reg:x3; val_offset:82182*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82182*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27395:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a27fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a27fc; op2val:0x0;
op3val:0x8e00000; valaddr_reg:x3; val_offset:82185*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82185*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27396:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a27fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a27fc; op2val:0x0;
op3val:0x8f00000; valaddr_reg:x3; val_offset:82188*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82188*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27397:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a27fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a27fc; op2val:0x0;
op3val:0x8f80000; valaddr_reg:x3; val_offset:82191*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82191*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27398:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a27fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a27fc; op2val:0x0;
op3val:0x8fc0000; valaddr_reg:x3; val_offset:82194*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82194*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27399:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a27fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a27fc; op2val:0x0;
op3val:0x8fe0000; valaddr_reg:x3; val_offset:82197*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82197*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27400:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a27fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a27fc; op2val:0x0;
op3val:0x8ff0000; valaddr_reg:x3; val_offset:82200*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82200*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27401:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a27fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a27fc; op2val:0x0;
op3val:0x8ff8000; valaddr_reg:x3; val_offset:82203*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82203*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27402:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a27fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a27fc; op2val:0x0;
op3val:0x8ffc000; valaddr_reg:x3; val_offset:82206*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82206*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27403:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a27fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a27fc; op2val:0x0;
op3val:0x8ffe000; valaddr_reg:x3; val_offset:82209*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82209*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27404:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a27fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a27fc; op2val:0x0;
op3val:0x8fff000; valaddr_reg:x3; val_offset:82212*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82212*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27405:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a27fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a27fc; op2val:0x0;
op3val:0x8fff800; valaddr_reg:x3; val_offset:82215*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82215*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27406:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a27fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a27fc; op2val:0x0;
op3val:0x8fffc00; valaddr_reg:x3; val_offset:82218*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82218*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27407:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a27fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a27fc; op2val:0x0;
op3val:0x8fffe00; valaddr_reg:x3; val_offset:82221*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82221*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27408:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a27fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a27fc; op2val:0x0;
op3val:0x8ffff00; valaddr_reg:x3; val_offset:82224*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82224*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27409:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a27fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a27fc; op2val:0x0;
op3val:0x8ffff80; valaddr_reg:x3; val_offset:82227*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82227*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27410:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a27fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a27fc; op2val:0x0;
op3val:0x8ffffc0; valaddr_reg:x3; val_offset:82230*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82230*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27411:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a27fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a27fc; op2val:0x0;
op3val:0x8ffffe0; valaddr_reg:x3; val_offset:82233*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82233*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27412:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a27fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a27fc; op2val:0x0;
op3val:0x8fffff0; valaddr_reg:x3; val_offset:82236*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82236*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27413:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a27fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a27fc; op2val:0x0;
op3val:0x8fffff8; valaddr_reg:x3; val_offset:82239*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82239*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27414:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a27fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a27fc; op2val:0x0;
op3val:0x8fffffc; valaddr_reg:x3; val_offset:82242*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82242*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27415:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a27fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a27fc; op2val:0x0;
op3val:0x8fffffe; valaddr_reg:x3; val_offset:82245*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82245*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27416:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a27fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a27fc; op2val:0x0;
op3val:0x8ffffff; valaddr_reg:x3; val_offset:82248*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82248*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27417:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a40d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a40d6; op2val:0x0;
op3val:0x800001; valaddr_reg:x3; val_offset:82251*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82251*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27418:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a40d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a40d6; op2val:0x0;
op3val:0x800003; valaddr_reg:x3; val_offset:82254*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82254*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27419:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a40d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a40d6; op2val:0x0;
op3val:0x800007; valaddr_reg:x3; val_offset:82257*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82257*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27420:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a40d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a40d6; op2val:0x0;
op3val:0x999999; valaddr_reg:x3; val_offset:82260*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82260*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27421:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a40d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a40d6; op2val:0x0;
op3val:0xa49249; valaddr_reg:x3; val_offset:82263*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82263*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27422:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a40d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a40d6; op2val:0x0;
op3val:0xb33333; valaddr_reg:x3; val_offset:82266*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82266*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27423:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a40d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a40d6; op2val:0x0;
op3val:0xb6db6d; valaddr_reg:x3; val_offset:82269*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82269*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27424:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a40d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a40d6; op2val:0x0;
op3val:0xbbbbbb; valaddr_reg:x3; val_offset:82272*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82272*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27425:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a40d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a40d6; op2val:0x0;
op3val:0xc44444; valaddr_reg:x3; val_offset:82275*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82275*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27426:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a40d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a40d6; op2val:0x0;
op3val:0xcccccc; valaddr_reg:x3; val_offset:82278*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82278*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27427:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a40d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a40d6; op2val:0x0;
op3val:0xdb6db6; valaddr_reg:x3; val_offset:82281*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82281*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27428:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a40d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a40d6; op2val:0x0;
op3val:0xe66666; valaddr_reg:x3; val_offset:82284*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82284*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27429:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a40d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a40d6; op2val:0x0;
op3val:0xedb6db; valaddr_reg:x3; val_offset:82287*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82287*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27430:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a40d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a40d6; op2val:0x0;
op3val:0xfffff8; valaddr_reg:x3; val_offset:82290*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82290*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27431:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a40d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a40d6; op2val:0x0;
op3val:0xfffffc; valaddr_reg:x3; val_offset:82293*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82293*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27432:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a40d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a40d6; op2val:0x0;
op3val:0xfffffe; valaddr_reg:x3; val_offset:82296*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82296*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27433:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a40d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a40d6; op2val:0x0;
op3val:0x7800000; valaddr_reg:x3; val_offset:82299*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82299*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27434:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a40d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a40d6; op2val:0x0;
op3val:0x7800001; valaddr_reg:x3; val_offset:82302*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82302*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27435:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a40d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a40d6; op2val:0x0;
op3val:0x7800003; valaddr_reg:x3; val_offset:82305*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82305*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27436:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a40d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a40d6; op2val:0x0;
op3val:0x7800007; valaddr_reg:x3; val_offset:82308*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82308*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27437:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a40d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a40d6; op2val:0x0;
op3val:0x780000f; valaddr_reg:x3; val_offset:82311*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82311*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27438:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a40d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a40d6; op2val:0x0;
op3val:0x780001f; valaddr_reg:x3; val_offset:82314*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82314*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27439:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a40d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a40d6; op2val:0x0;
op3val:0x780003f; valaddr_reg:x3; val_offset:82317*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82317*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27440:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a40d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a40d6; op2val:0x0;
op3val:0x780007f; valaddr_reg:x3; val_offset:82320*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82320*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27441:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a40d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a40d6; op2val:0x0;
op3val:0x78000ff; valaddr_reg:x3; val_offset:82323*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82323*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27442:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a40d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a40d6; op2val:0x0;
op3val:0x78001ff; valaddr_reg:x3; val_offset:82326*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82326*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27443:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a40d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a40d6; op2val:0x0;
op3val:0x78003ff; valaddr_reg:x3; val_offset:82329*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82329*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27444:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a40d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a40d6; op2val:0x0;
op3val:0x78007ff; valaddr_reg:x3; val_offset:82332*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82332*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27445:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a40d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a40d6; op2val:0x0;
op3val:0x7800fff; valaddr_reg:x3; val_offset:82335*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82335*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27446:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a40d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a40d6; op2val:0x0;
op3val:0x7801fff; valaddr_reg:x3; val_offset:82338*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82338*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27447:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a40d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a40d6; op2val:0x0;
op3val:0x7803fff; valaddr_reg:x3; val_offset:82341*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82341*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27448:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a40d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a40d6; op2val:0x0;
op3val:0x7807fff; valaddr_reg:x3; val_offset:82344*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82344*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27449:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a40d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a40d6; op2val:0x0;
op3val:0x780ffff; valaddr_reg:x3; val_offset:82347*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82347*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27450:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a40d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a40d6; op2val:0x0;
op3val:0x781ffff; valaddr_reg:x3; val_offset:82350*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82350*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27451:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a40d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a40d6; op2val:0x0;
op3val:0x783ffff; valaddr_reg:x3; val_offset:82353*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82353*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27452:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a40d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a40d6; op2val:0x0;
op3val:0x787ffff; valaddr_reg:x3; val_offset:82356*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82356*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27453:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a40d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a40d6; op2val:0x0;
op3val:0x78fffff; valaddr_reg:x3; val_offset:82359*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82359*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27454:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a40d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a40d6; op2val:0x0;
op3val:0x79fffff; valaddr_reg:x3; val_offset:82362*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82362*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27455:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a40d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a40d6; op2val:0x0;
op3val:0x7bfffff; valaddr_reg:x3; val_offset:82365*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82365*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27456:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a40d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a40d6; op2val:0x0;
op3val:0x7c00000; valaddr_reg:x3; val_offset:82368*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82368*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27457:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a40d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a40d6; op2val:0x0;
op3val:0x7e00000; valaddr_reg:x3; val_offset:82371*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82371*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27458:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a40d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a40d6; op2val:0x0;
op3val:0x7f00000; valaddr_reg:x3; val_offset:82374*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82374*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27459:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a40d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a40d6; op2val:0x0;
op3val:0x7f80000; valaddr_reg:x3; val_offset:82377*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82377*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27460:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a40d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a40d6; op2val:0x0;
op3val:0x7fc0000; valaddr_reg:x3; val_offset:82380*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82380*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27461:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a40d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a40d6; op2val:0x0;
op3val:0x7fe0000; valaddr_reg:x3; val_offset:82383*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82383*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27462:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a40d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a40d6; op2val:0x0;
op3val:0x7ff0000; valaddr_reg:x3; val_offset:82386*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82386*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27463:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a40d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a40d6; op2val:0x0;
op3val:0x7ff8000; valaddr_reg:x3; val_offset:82389*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82389*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27464:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a40d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a40d6; op2val:0x0;
op3val:0x7ffc000; valaddr_reg:x3; val_offset:82392*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82392*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27465:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a40d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a40d6; op2val:0x0;
op3val:0x7ffe000; valaddr_reg:x3; val_offset:82395*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82395*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27466:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a40d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a40d6; op2val:0x0;
op3val:0x7fff000; valaddr_reg:x3; val_offset:82398*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82398*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27467:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a40d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a40d6; op2val:0x0;
op3val:0x7fff800; valaddr_reg:x3; val_offset:82401*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82401*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27468:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a40d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a40d6; op2val:0x0;
op3val:0x7fffc00; valaddr_reg:x3; val_offset:82404*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82404*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27469:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a40d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a40d6; op2val:0x0;
op3val:0x7fffe00; valaddr_reg:x3; val_offset:82407*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82407*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27470:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a40d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a40d6; op2val:0x0;
op3val:0x7ffff00; valaddr_reg:x3; val_offset:82410*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82410*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27471:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a40d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a40d6; op2val:0x0;
op3val:0x7ffff80; valaddr_reg:x3; val_offset:82413*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82413*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27472:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a40d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a40d6; op2val:0x0;
op3val:0x7ffffc0; valaddr_reg:x3; val_offset:82416*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82416*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27473:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a40d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a40d6; op2val:0x0;
op3val:0x7ffffe0; valaddr_reg:x3; val_offset:82419*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82419*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27474:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a40d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a40d6; op2val:0x0;
op3val:0x7fffff0; valaddr_reg:x3; val_offset:82422*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82422*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27475:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a40d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a40d6; op2val:0x0;
op3val:0x7fffff8; valaddr_reg:x3; val_offset:82425*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82425*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27476:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a40d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a40d6; op2val:0x0;
op3val:0x7fffffc; valaddr_reg:x3; val_offset:82428*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82428*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27477:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a40d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a40d6; op2val:0x0;
op3val:0x7fffffe; valaddr_reg:x3; val_offset:82431*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82431*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27478:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a40d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a40d6; op2val:0x0;
op3val:0x7ffffff; valaddr_reg:x3; val_offset:82434*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82434*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27479:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a96d6 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6c7093 and fs3 == 1 and fe3 == 0xdb and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a96d6; op2val:0xbfec7093;
op3val:0xed800000; valaddr_reg:x3; val_offset:82437*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82437*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27480:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a96d6 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6c7093 and fs3 == 1 and fe3 == 0xdb and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a96d6; op2val:0xbfec7093;
op3val:0xed800001; valaddr_reg:x3; val_offset:82440*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82440*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27481:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a96d6 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6c7093 and fs3 == 1 and fe3 == 0xdb and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a96d6; op2val:0xbfec7093;
op3val:0xed800003; valaddr_reg:x3; val_offset:82443*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82443*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27482:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a96d6 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6c7093 and fs3 == 1 and fe3 == 0xdb and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a96d6; op2val:0xbfec7093;
op3val:0xed800007; valaddr_reg:x3; val_offset:82446*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82446*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27483:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a96d6 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6c7093 and fs3 == 1 and fe3 == 0xdb and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a96d6; op2val:0xbfec7093;
op3val:0xed80000f; valaddr_reg:x3; val_offset:82449*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82449*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27484:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a96d6 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6c7093 and fs3 == 1 and fe3 == 0xdb and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a96d6; op2val:0xbfec7093;
op3val:0xed80001f; valaddr_reg:x3; val_offset:82452*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82452*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27485:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a96d6 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6c7093 and fs3 == 1 and fe3 == 0xdb and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a96d6; op2val:0xbfec7093;
op3val:0xed80003f; valaddr_reg:x3; val_offset:82455*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82455*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27486:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a96d6 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6c7093 and fs3 == 1 and fe3 == 0xdb and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a96d6; op2val:0xbfec7093;
op3val:0xed80007f; valaddr_reg:x3; val_offset:82458*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82458*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27487:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a96d6 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6c7093 and fs3 == 1 and fe3 == 0xdb and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a96d6; op2val:0xbfec7093;
op3val:0xed8000ff; valaddr_reg:x3; val_offset:82461*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82461*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27488:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a96d6 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6c7093 and fs3 == 1 and fe3 == 0xdb and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a96d6; op2val:0xbfec7093;
op3val:0xed8001ff; valaddr_reg:x3; val_offset:82464*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82464*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27489:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a96d6 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6c7093 and fs3 == 1 and fe3 == 0xdb and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a96d6; op2val:0xbfec7093;
op3val:0xed8003ff; valaddr_reg:x3; val_offset:82467*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82467*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27490:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a96d6 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6c7093 and fs3 == 1 and fe3 == 0xdb and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a96d6; op2val:0xbfec7093;
op3val:0xed8007ff; valaddr_reg:x3; val_offset:82470*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82470*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27491:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a96d6 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6c7093 and fs3 == 1 and fe3 == 0xdb and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a96d6; op2val:0xbfec7093;
op3val:0xed800fff; valaddr_reg:x3; val_offset:82473*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82473*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27492:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a96d6 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6c7093 and fs3 == 1 and fe3 == 0xdb and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a96d6; op2val:0xbfec7093;
op3val:0xed801fff; valaddr_reg:x3; val_offset:82476*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82476*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27493:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a96d6 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6c7093 and fs3 == 1 and fe3 == 0xdb and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a96d6; op2val:0xbfec7093;
op3val:0xed803fff; valaddr_reg:x3; val_offset:82479*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82479*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27494:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a96d6 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6c7093 and fs3 == 1 and fe3 == 0xdb and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a96d6; op2val:0xbfec7093;
op3val:0xed807fff; valaddr_reg:x3; val_offset:82482*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82482*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27495:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a96d6 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6c7093 and fs3 == 1 and fe3 == 0xdb and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a96d6; op2val:0xbfec7093;
op3val:0xed80ffff; valaddr_reg:x3; val_offset:82485*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82485*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27496:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a96d6 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6c7093 and fs3 == 1 and fe3 == 0xdb and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a96d6; op2val:0xbfec7093;
op3val:0xed81ffff; valaddr_reg:x3; val_offset:82488*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82488*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27497:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a96d6 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6c7093 and fs3 == 1 and fe3 == 0xdb and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a96d6; op2val:0xbfec7093;
op3val:0xed83ffff; valaddr_reg:x3; val_offset:82491*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82491*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27498:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a96d6 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6c7093 and fs3 == 1 and fe3 == 0xdb and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a96d6; op2val:0xbfec7093;
op3val:0xed87ffff; valaddr_reg:x3; val_offset:82494*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82494*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27499:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a96d6 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6c7093 and fs3 == 1 and fe3 == 0xdb and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a96d6; op2val:0xbfec7093;
op3val:0xed8fffff; valaddr_reg:x3; val_offset:82497*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82497*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27500:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a96d6 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6c7093 and fs3 == 1 and fe3 == 0xdb and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a96d6; op2val:0xbfec7093;
op3val:0xed9fffff; valaddr_reg:x3; val_offset:82500*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82500*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27501:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a96d6 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6c7093 and fs3 == 1 and fe3 == 0xdb and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a96d6; op2val:0xbfec7093;
op3val:0xedbfffff; valaddr_reg:x3; val_offset:82503*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82503*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27502:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a96d6 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6c7093 and fs3 == 1 and fe3 == 0xdb and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a96d6; op2val:0xbfec7093;
op3val:0xedc00000; valaddr_reg:x3; val_offset:82506*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82506*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27503:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a96d6 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6c7093 and fs3 == 1 and fe3 == 0xdb and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a96d6; op2val:0xbfec7093;
op3val:0xede00000; valaddr_reg:x3; val_offset:82509*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82509*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27504:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a96d6 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6c7093 and fs3 == 1 and fe3 == 0xdb and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a96d6; op2val:0xbfec7093;
op3val:0xedf00000; valaddr_reg:x3; val_offset:82512*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82512*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27505:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a96d6 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6c7093 and fs3 == 1 and fe3 == 0xdb and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a96d6; op2val:0xbfec7093;
op3val:0xedf80000; valaddr_reg:x3; val_offset:82515*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82515*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27506:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a96d6 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6c7093 and fs3 == 1 and fe3 == 0xdb and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a96d6; op2val:0xbfec7093;
op3val:0xedfc0000; valaddr_reg:x3; val_offset:82518*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82518*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27507:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a96d6 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6c7093 and fs3 == 1 and fe3 == 0xdb and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a96d6; op2val:0xbfec7093;
op3val:0xedfe0000; valaddr_reg:x3; val_offset:82521*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82521*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27508:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a96d6 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6c7093 and fs3 == 1 and fe3 == 0xdb and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a96d6; op2val:0xbfec7093;
op3val:0xedff0000; valaddr_reg:x3; val_offset:82524*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82524*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27509:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a96d6 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6c7093 and fs3 == 1 and fe3 == 0xdb and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a96d6; op2val:0xbfec7093;
op3val:0xedff8000; valaddr_reg:x3; val_offset:82527*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82527*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27510:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a96d6 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6c7093 and fs3 == 1 and fe3 == 0xdb and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a96d6; op2val:0xbfec7093;
op3val:0xedffc000; valaddr_reg:x3; val_offset:82530*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82530*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27511:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a96d6 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6c7093 and fs3 == 1 and fe3 == 0xdb and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a96d6; op2val:0xbfec7093;
op3val:0xedffe000; valaddr_reg:x3; val_offset:82533*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82533*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27512:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a96d6 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6c7093 and fs3 == 1 and fe3 == 0xdb and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a96d6; op2val:0xbfec7093;
op3val:0xedfff000; valaddr_reg:x3; val_offset:82536*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82536*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27513:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a96d6 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6c7093 and fs3 == 1 and fe3 == 0xdb and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a96d6; op2val:0xbfec7093;
op3val:0xedfff800; valaddr_reg:x3; val_offset:82539*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82539*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27514:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a96d6 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6c7093 and fs3 == 1 and fe3 == 0xdb and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a96d6; op2val:0xbfec7093;
op3val:0xedfffc00; valaddr_reg:x3; val_offset:82542*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82542*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27515:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a96d6 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6c7093 and fs3 == 1 and fe3 == 0xdb and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a96d6; op2val:0xbfec7093;
op3val:0xedfffe00; valaddr_reg:x3; val_offset:82545*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82545*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27516:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a96d6 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6c7093 and fs3 == 1 and fe3 == 0xdb and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a96d6; op2val:0xbfec7093;
op3val:0xedffff00; valaddr_reg:x3; val_offset:82548*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82548*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27517:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a96d6 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6c7093 and fs3 == 1 and fe3 == 0xdb and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a96d6; op2val:0xbfec7093;
op3val:0xedffff80; valaddr_reg:x3; val_offset:82551*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82551*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27518:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a96d6 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6c7093 and fs3 == 1 and fe3 == 0xdb and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a96d6; op2val:0xbfec7093;
op3val:0xedffffc0; valaddr_reg:x3; val_offset:82554*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82554*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27519:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a96d6 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6c7093 and fs3 == 1 and fe3 == 0xdb and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0a96d6; op2val:0xbfec7093;
op3val:0xedffffe0; valaddr_reg:x3; val_offset:82557*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82557*0 + 3*214*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(2131372028,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(144703487,32,FLEN)
NAN_BOXED(2131372028,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(146800639,32,FLEN)
NAN_BOXED(2131372028,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(146800640,32,FLEN)
NAN_BOXED(2131372028,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(148897792,32,FLEN)
NAN_BOXED(2131372028,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(149946368,32,FLEN)
NAN_BOXED(2131372028,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(150470656,32,FLEN)
NAN_BOXED(2131372028,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(150732800,32,FLEN)
NAN_BOXED(2131372028,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(150863872,32,FLEN)
NAN_BOXED(2131372028,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(150929408,32,FLEN)
NAN_BOXED(2131372028,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(150962176,32,FLEN)
NAN_BOXED(2131372028,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(150978560,32,FLEN)
NAN_BOXED(2131372028,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(150986752,32,FLEN)
NAN_BOXED(2131372028,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(150990848,32,FLEN)
NAN_BOXED(2131372028,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(150992896,32,FLEN)
NAN_BOXED(2131372028,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(150993920,32,FLEN)
NAN_BOXED(2131372028,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(150994432,32,FLEN)
NAN_BOXED(2131372028,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(150994688,32,FLEN)
NAN_BOXED(2131372028,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(150994816,32,FLEN)
NAN_BOXED(2131372028,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(150994880,32,FLEN)
NAN_BOXED(2131372028,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(150994912,32,FLEN)
NAN_BOXED(2131372028,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(150994928,32,FLEN)
NAN_BOXED(2131372028,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(150994936,32,FLEN)
NAN_BOXED(2131372028,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(150994940,32,FLEN)
NAN_BOXED(2131372028,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(150994942,32,FLEN)
NAN_BOXED(2131372028,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(150994943,32,FLEN)
NAN_BOXED(2131378390,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388609,32,FLEN)
NAN_BOXED(2131378390,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388611,32,FLEN)
NAN_BOXED(2131378390,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388615,32,FLEN)
NAN_BOXED(2131378390,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(10066329,32,FLEN)
NAN_BOXED(2131378390,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(10785353,32,FLEN)
NAN_BOXED(2131378390,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(11744051,32,FLEN)
NAN_BOXED(2131378390,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(11983725,32,FLEN)
NAN_BOXED(2131378390,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(12303291,32,FLEN)
NAN_BOXED(2131378390,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(12862532,32,FLEN)
NAN_BOXED(2131378390,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(13421772,32,FLEN)
NAN_BOXED(2131378390,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(14380470,32,FLEN)
NAN_BOXED(2131378390,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(15099494,32,FLEN)
NAN_BOXED(2131378390,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(15578843,32,FLEN)
NAN_BOXED(2131378390,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777208,32,FLEN)
NAN_BOXED(2131378390,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777212,32,FLEN)
NAN_BOXED(2131378390,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777214,32,FLEN)
NAN_BOXED(2131378390,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(125829120,32,FLEN)
NAN_BOXED(2131378390,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(125829121,32,FLEN)
NAN_BOXED(2131378390,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(125829123,32,FLEN)
NAN_BOXED(2131378390,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(125829127,32,FLEN)
NAN_BOXED(2131378390,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(125829135,32,FLEN)
NAN_BOXED(2131378390,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(125829151,32,FLEN)
NAN_BOXED(2131378390,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(125829183,32,FLEN)
NAN_BOXED(2131378390,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(125829247,32,FLEN)
NAN_BOXED(2131378390,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(125829375,32,FLEN)
NAN_BOXED(2131378390,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(125829631,32,FLEN)
NAN_BOXED(2131378390,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(125830143,32,FLEN)
NAN_BOXED(2131378390,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(125831167,32,FLEN)
NAN_BOXED(2131378390,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(125833215,32,FLEN)
NAN_BOXED(2131378390,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(125837311,32,FLEN)
NAN_BOXED(2131378390,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(125845503,32,FLEN)
NAN_BOXED(2131378390,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(125861887,32,FLEN)
NAN_BOXED(2131378390,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(125894655,32,FLEN)
NAN_BOXED(2131378390,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(125960191,32,FLEN)
NAN_BOXED(2131378390,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(126091263,32,FLEN)
NAN_BOXED(2131378390,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(126353407,32,FLEN)
NAN_BOXED(2131378390,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(126877695,32,FLEN)
NAN_BOXED(2131378390,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(127926271,32,FLEN)
NAN_BOXED(2131378390,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(130023423,32,FLEN)
NAN_BOXED(2131378390,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(130023424,32,FLEN)
NAN_BOXED(2131378390,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(132120576,32,FLEN)
NAN_BOXED(2131378390,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(133169152,32,FLEN)
NAN_BOXED(2131378390,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(133693440,32,FLEN)
NAN_BOXED(2131378390,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(133955584,32,FLEN)
NAN_BOXED(2131378390,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134086656,32,FLEN)
NAN_BOXED(2131378390,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134152192,32,FLEN)
NAN_BOXED(2131378390,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134184960,32,FLEN)
NAN_BOXED(2131378390,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134201344,32,FLEN)
NAN_BOXED(2131378390,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134209536,32,FLEN)
NAN_BOXED(2131378390,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134213632,32,FLEN)
NAN_BOXED(2131378390,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134215680,32,FLEN)
NAN_BOXED(2131378390,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134216704,32,FLEN)
NAN_BOXED(2131378390,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134217216,32,FLEN)
NAN_BOXED(2131378390,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134217472,32,FLEN)
NAN_BOXED(2131378390,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134217600,32,FLEN)
NAN_BOXED(2131378390,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134217664,32,FLEN)
NAN_BOXED(2131378390,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134217696,32,FLEN)
NAN_BOXED(2131378390,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134217712,32,FLEN)
NAN_BOXED(2131378390,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134217720,32,FLEN)
NAN_BOXED(2131378390,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134217724,32,FLEN)
NAN_BOXED(2131378390,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134217726,32,FLEN)
NAN_BOXED(2131378390,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134217727,32,FLEN)
NAN_BOXED(2131400406,32,FLEN)
NAN_BOXED(3219943571,32,FLEN)
NAN_BOXED(3984588800,32,FLEN)
NAN_BOXED(2131400406,32,FLEN)
NAN_BOXED(3219943571,32,FLEN)
NAN_BOXED(3984588801,32,FLEN)
NAN_BOXED(2131400406,32,FLEN)
NAN_BOXED(3219943571,32,FLEN)
NAN_BOXED(3984588803,32,FLEN)
NAN_BOXED(2131400406,32,FLEN)
NAN_BOXED(3219943571,32,FLEN)
NAN_BOXED(3984588807,32,FLEN)
NAN_BOXED(2131400406,32,FLEN)
NAN_BOXED(3219943571,32,FLEN)
NAN_BOXED(3984588815,32,FLEN)
NAN_BOXED(2131400406,32,FLEN)
NAN_BOXED(3219943571,32,FLEN)
NAN_BOXED(3984588831,32,FLEN)
NAN_BOXED(2131400406,32,FLEN)
NAN_BOXED(3219943571,32,FLEN)
NAN_BOXED(3984588863,32,FLEN)
NAN_BOXED(2131400406,32,FLEN)
NAN_BOXED(3219943571,32,FLEN)
NAN_BOXED(3984588927,32,FLEN)
NAN_BOXED(2131400406,32,FLEN)
NAN_BOXED(3219943571,32,FLEN)
NAN_BOXED(3984589055,32,FLEN)
NAN_BOXED(2131400406,32,FLEN)
NAN_BOXED(3219943571,32,FLEN)
NAN_BOXED(3984589311,32,FLEN)
NAN_BOXED(2131400406,32,FLEN)
NAN_BOXED(3219943571,32,FLEN)
NAN_BOXED(3984589823,32,FLEN)
NAN_BOXED(2131400406,32,FLEN)
NAN_BOXED(3219943571,32,FLEN)
NAN_BOXED(3984590847,32,FLEN)
NAN_BOXED(2131400406,32,FLEN)
NAN_BOXED(3219943571,32,FLEN)
NAN_BOXED(3984592895,32,FLEN)
NAN_BOXED(2131400406,32,FLEN)
NAN_BOXED(3219943571,32,FLEN)
NAN_BOXED(3984596991,32,FLEN)
NAN_BOXED(2131400406,32,FLEN)
NAN_BOXED(3219943571,32,FLEN)
NAN_BOXED(3984605183,32,FLEN)
NAN_BOXED(2131400406,32,FLEN)
NAN_BOXED(3219943571,32,FLEN)
NAN_BOXED(3984621567,32,FLEN)
NAN_BOXED(2131400406,32,FLEN)
NAN_BOXED(3219943571,32,FLEN)
NAN_BOXED(3984654335,32,FLEN)
NAN_BOXED(2131400406,32,FLEN)
NAN_BOXED(3219943571,32,FLEN)
NAN_BOXED(3984719871,32,FLEN)
NAN_BOXED(2131400406,32,FLEN)
NAN_BOXED(3219943571,32,FLEN)
NAN_BOXED(3984850943,32,FLEN)
NAN_BOXED(2131400406,32,FLEN)
NAN_BOXED(3219943571,32,FLEN)
NAN_BOXED(3985113087,32,FLEN)
NAN_BOXED(2131400406,32,FLEN)
NAN_BOXED(3219943571,32,FLEN)
NAN_BOXED(3985637375,32,FLEN)
NAN_BOXED(2131400406,32,FLEN)
NAN_BOXED(3219943571,32,FLEN)
NAN_BOXED(3986685951,32,FLEN)
NAN_BOXED(2131400406,32,FLEN)
NAN_BOXED(3219943571,32,FLEN)
NAN_BOXED(3988783103,32,FLEN)
NAN_BOXED(2131400406,32,FLEN)
NAN_BOXED(3219943571,32,FLEN)
NAN_BOXED(3988783104,32,FLEN)
NAN_BOXED(2131400406,32,FLEN)
NAN_BOXED(3219943571,32,FLEN)
NAN_BOXED(3990880256,32,FLEN)
NAN_BOXED(2131400406,32,FLEN)
NAN_BOXED(3219943571,32,FLEN)
NAN_BOXED(3991928832,32,FLEN)
NAN_BOXED(2131400406,32,FLEN)
NAN_BOXED(3219943571,32,FLEN)
NAN_BOXED(3992453120,32,FLEN)
NAN_BOXED(2131400406,32,FLEN)
NAN_BOXED(3219943571,32,FLEN)
NAN_BOXED(3992715264,32,FLEN)
NAN_BOXED(2131400406,32,FLEN)
NAN_BOXED(3219943571,32,FLEN)
NAN_BOXED(3992846336,32,FLEN)
NAN_BOXED(2131400406,32,FLEN)
NAN_BOXED(3219943571,32,FLEN)
NAN_BOXED(3992911872,32,FLEN)
NAN_BOXED(2131400406,32,FLEN)
NAN_BOXED(3219943571,32,FLEN)
NAN_BOXED(3992944640,32,FLEN)
NAN_BOXED(2131400406,32,FLEN)
NAN_BOXED(3219943571,32,FLEN)
NAN_BOXED(3992961024,32,FLEN)
NAN_BOXED(2131400406,32,FLEN)
NAN_BOXED(3219943571,32,FLEN)
NAN_BOXED(3992969216,32,FLEN)
NAN_BOXED(2131400406,32,FLEN)
NAN_BOXED(3219943571,32,FLEN)
NAN_BOXED(3992973312,32,FLEN)
NAN_BOXED(2131400406,32,FLEN)
NAN_BOXED(3219943571,32,FLEN)
NAN_BOXED(3992975360,32,FLEN)
NAN_BOXED(2131400406,32,FLEN)
NAN_BOXED(3219943571,32,FLEN)
NAN_BOXED(3992976384,32,FLEN)
NAN_BOXED(2131400406,32,FLEN)
NAN_BOXED(3219943571,32,FLEN)
NAN_BOXED(3992976896,32,FLEN)
NAN_BOXED(2131400406,32,FLEN)
NAN_BOXED(3219943571,32,FLEN)
NAN_BOXED(3992977152,32,FLEN)
NAN_BOXED(2131400406,32,FLEN)
NAN_BOXED(3219943571,32,FLEN)
NAN_BOXED(3992977280,32,FLEN)
NAN_BOXED(2131400406,32,FLEN)
NAN_BOXED(3219943571,32,FLEN)
NAN_BOXED(3992977344,32,FLEN)
NAN_BOXED(2131400406,32,FLEN)
NAN_BOXED(3219943571,32,FLEN)
NAN_BOXED(3992977376,32,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
