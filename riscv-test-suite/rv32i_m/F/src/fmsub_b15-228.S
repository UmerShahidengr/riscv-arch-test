
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 14:18:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32F/fmsub.s.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.s instruction of the RISC-V RV32F_Zicsr,RV32FD_Zicsr,RV64F_Zicsr,RV64FD_Zicsr extension for the fmsub_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF_Zicsr,RV32IFD_Zicsr,RV64IF_Zicsr,RV64IFD_Zicsr,RV32EF_Zicsr,RV32EFD_Zicsr,RV64EF_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fmsub_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*F.*);def TEST_CASE_1=True;",fmsub_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_29056:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11ce79 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x382f1d and fs3 == 0 and fe3 == 0x57 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11ce79; op2val:0x382f1d;
op3val:0x2bfff000; valaddr_reg:x3; val_offset:87168*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87168*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29057:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11ce79 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x382f1d and fs3 == 0 and fe3 == 0x57 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11ce79; op2val:0x382f1d;
op3val:0x2bfff800; valaddr_reg:x3; val_offset:87171*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87171*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29058:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11ce79 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x382f1d and fs3 == 0 and fe3 == 0x57 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11ce79; op2val:0x382f1d;
op3val:0x2bfffc00; valaddr_reg:x3; val_offset:87174*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87174*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29059:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11ce79 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x382f1d and fs3 == 0 and fe3 == 0x57 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11ce79; op2val:0x382f1d;
op3val:0x2bfffe00; valaddr_reg:x3; val_offset:87177*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87177*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29060:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11ce79 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x382f1d and fs3 == 0 and fe3 == 0x57 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11ce79; op2val:0x382f1d;
op3val:0x2bffff00; valaddr_reg:x3; val_offset:87180*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87180*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29061:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11ce79 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x382f1d and fs3 == 0 and fe3 == 0x57 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11ce79; op2val:0x382f1d;
op3val:0x2bffff80; valaddr_reg:x3; val_offset:87183*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87183*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29062:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11ce79 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x382f1d and fs3 == 0 and fe3 == 0x57 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11ce79; op2val:0x382f1d;
op3val:0x2bffffc0; valaddr_reg:x3; val_offset:87186*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87186*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29063:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11ce79 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x382f1d and fs3 == 0 and fe3 == 0x57 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11ce79; op2val:0x382f1d;
op3val:0x2bffffe0; valaddr_reg:x3; val_offset:87189*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87189*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29064:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11ce79 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x382f1d and fs3 == 0 and fe3 == 0x57 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11ce79; op2val:0x382f1d;
op3val:0x2bfffff0; valaddr_reg:x3; val_offset:87192*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87192*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29065:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11ce79 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x382f1d and fs3 == 0 and fe3 == 0x57 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11ce79; op2val:0x382f1d;
op3val:0x2bfffff8; valaddr_reg:x3; val_offset:87195*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87195*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29066:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11ce79 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x382f1d and fs3 == 0 and fe3 == 0x57 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11ce79; op2val:0x382f1d;
op3val:0x2bfffffc; valaddr_reg:x3; val_offset:87198*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87198*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29067:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11ce79 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x382f1d and fs3 == 0 and fe3 == 0x57 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11ce79; op2val:0x382f1d;
op3val:0x2bfffffe; valaddr_reg:x3; val_offset:87201*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87201*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29068:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11ce79 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x382f1d and fs3 == 0 and fe3 == 0x57 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11ce79; op2val:0x382f1d;
op3val:0x2bffffff; valaddr_reg:x3; val_offset:87204*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87204*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29069:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11ce79 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x382f1d and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11ce79; op2val:0x382f1d;
op3val:0x3f800001; valaddr_reg:x3; val_offset:87207*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87207*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29070:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11ce79 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x382f1d and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11ce79; op2val:0x382f1d;
op3val:0x3f800003; valaddr_reg:x3; val_offset:87210*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87210*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29071:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11ce79 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x382f1d and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11ce79; op2val:0x382f1d;
op3val:0x3f800007; valaddr_reg:x3; val_offset:87213*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87213*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29072:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11ce79 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x382f1d and fs3 == 0 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11ce79; op2val:0x382f1d;
op3val:0x3f999999; valaddr_reg:x3; val_offset:87216*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87216*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29073:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11ce79 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x382f1d and fs3 == 0 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11ce79; op2val:0x382f1d;
op3val:0x3fa49249; valaddr_reg:x3; val_offset:87219*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87219*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29074:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11ce79 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x382f1d and fs3 == 0 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11ce79; op2val:0x382f1d;
op3val:0x3fb33333; valaddr_reg:x3; val_offset:87222*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87222*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29075:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11ce79 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x382f1d and fs3 == 0 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11ce79; op2val:0x382f1d;
op3val:0x3fb6db6d; valaddr_reg:x3; val_offset:87225*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87225*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29076:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11ce79 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x382f1d and fs3 == 0 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11ce79; op2val:0x382f1d;
op3val:0x3fbbbbbb; valaddr_reg:x3; val_offset:87228*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87228*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29077:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11ce79 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x382f1d and fs3 == 0 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11ce79; op2val:0x382f1d;
op3val:0x3fc44444; valaddr_reg:x3; val_offset:87231*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87231*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29078:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11ce79 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x382f1d and fs3 == 0 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11ce79; op2val:0x382f1d;
op3val:0x3fcccccc; valaddr_reg:x3; val_offset:87234*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87234*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29079:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11ce79 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x382f1d and fs3 == 0 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11ce79; op2val:0x382f1d;
op3val:0x3fdb6db6; valaddr_reg:x3; val_offset:87237*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87237*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29080:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11ce79 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x382f1d and fs3 == 0 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11ce79; op2val:0x382f1d;
op3val:0x3fe66666; valaddr_reg:x3; val_offset:87240*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87240*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29081:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11ce79 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x382f1d and fs3 == 0 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11ce79; op2val:0x382f1d;
op3val:0x3fedb6db; valaddr_reg:x3; val_offset:87243*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87243*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29082:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11ce79 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x382f1d and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11ce79; op2val:0x382f1d;
op3val:0x3ffffff8; valaddr_reg:x3; val_offset:87246*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87246*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29083:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11ce79 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x382f1d and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11ce79; op2val:0x382f1d;
op3val:0x3ffffffc; valaddr_reg:x3; val_offset:87249*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87249*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29084:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11ce79 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x382f1d and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11ce79; op2val:0x382f1d;
op3val:0x3ffffffe; valaddr_reg:x3; val_offset:87252*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87252*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29085:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11d90b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11d90b; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:87255*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87255*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29086:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11d90b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11d90b; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:87258*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87258*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29087:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11d90b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11d90b; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:87261*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87261*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29088:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11d90b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11d90b; op2val:0x0;
op3val:0x199999; valaddr_reg:x3; val_offset:87264*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87264*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29089:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11d90b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11d90b; op2val:0x0;
op3val:0x249249; valaddr_reg:x3; val_offset:87267*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87267*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29090:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11d90b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11d90b; op2val:0x0;
op3val:0x333333; valaddr_reg:x3; val_offset:87270*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87270*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29091:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11d90b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11d90b; op2val:0x0;
op3val:0x36db6d; valaddr_reg:x3; val_offset:87273*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87273*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29092:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11d90b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11d90b; op2val:0x0;
op3val:0x3bbbbb; valaddr_reg:x3; val_offset:87276*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87276*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29093:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11d90b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11d90b; op2val:0x0;
op3val:0x444444; valaddr_reg:x3; val_offset:87279*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87279*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29094:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11d90b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11d90b; op2val:0x0;
op3val:0x4ccccc; valaddr_reg:x3; val_offset:87282*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87282*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29095:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11d90b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11d90b; op2val:0x0;
op3val:0x5b6db6; valaddr_reg:x3; val_offset:87285*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87285*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29096:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11d90b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11d90b; op2val:0x0;
op3val:0x666666; valaddr_reg:x3; val_offset:87288*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87288*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29097:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11d90b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11d90b; op2val:0x0;
op3val:0x6db6db; valaddr_reg:x3; val_offset:87291*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87291*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29098:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11d90b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11d90b; op2val:0x0;
op3val:0x7ffff8; valaddr_reg:x3; val_offset:87294*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87294*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29099:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11d90b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11d90b; op2val:0x0;
op3val:0x7ffffc; valaddr_reg:x3; val_offset:87297*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87297*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29100:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11d90b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11d90b; op2val:0x0;
op3val:0x7ffffe; valaddr_reg:x3; val_offset:87300*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87300*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29101:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11d90b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0b and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11d90b; op2val:0x0;
op3val:0x5800000; valaddr_reg:x3; val_offset:87303*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87303*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29102:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11d90b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0b and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11d90b; op2val:0x0;
op3val:0x5800001; valaddr_reg:x3; val_offset:87306*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87306*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29103:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11d90b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0b and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11d90b; op2val:0x0;
op3val:0x5800003; valaddr_reg:x3; val_offset:87309*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87309*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29104:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11d90b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0b and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11d90b; op2val:0x0;
op3val:0x5800007; valaddr_reg:x3; val_offset:87312*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87312*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29105:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11d90b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0b and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11d90b; op2val:0x0;
op3val:0x580000f; valaddr_reg:x3; val_offset:87315*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87315*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29106:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11d90b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0b and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11d90b; op2val:0x0;
op3val:0x580001f; valaddr_reg:x3; val_offset:87318*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87318*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29107:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11d90b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0b and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11d90b; op2val:0x0;
op3val:0x580003f; valaddr_reg:x3; val_offset:87321*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87321*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29108:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11d90b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0b and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11d90b; op2val:0x0;
op3val:0x580007f; valaddr_reg:x3; val_offset:87324*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87324*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29109:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11d90b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0b and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11d90b; op2val:0x0;
op3val:0x58000ff; valaddr_reg:x3; val_offset:87327*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87327*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29110:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11d90b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0b and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11d90b; op2val:0x0;
op3val:0x58001ff; valaddr_reg:x3; val_offset:87330*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87330*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29111:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11d90b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0b and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11d90b; op2val:0x0;
op3val:0x58003ff; valaddr_reg:x3; val_offset:87333*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87333*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29112:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11d90b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0b and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11d90b; op2val:0x0;
op3val:0x58007ff; valaddr_reg:x3; val_offset:87336*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87336*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29113:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11d90b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0b and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11d90b; op2val:0x0;
op3val:0x5800fff; valaddr_reg:x3; val_offset:87339*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87339*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29114:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11d90b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0b and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11d90b; op2val:0x0;
op3val:0x5801fff; valaddr_reg:x3; val_offset:87342*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87342*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29115:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11d90b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0b and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11d90b; op2val:0x0;
op3val:0x5803fff; valaddr_reg:x3; val_offset:87345*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87345*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29116:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11d90b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0b and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11d90b; op2val:0x0;
op3val:0x5807fff; valaddr_reg:x3; val_offset:87348*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87348*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29117:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11d90b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0b and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11d90b; op2val:0x0;
op3val:0x580ffff; valaddr_reg:x3; val_offset:87351*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87351*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29118:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11d90b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0b and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11d90b; op2val:0x0;
op3val:0x581ffff; valaddr_reg:x3; val_offset:87354*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87354*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29119:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11d90b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0b and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11d90b; op2val:0x0;
op3val:0x583ffff; valaddr_reg:x3; val_offset:87357*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87357*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29120:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11d90b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0b and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11d90b; op2val:0x0;
op3val:0x587ffff; valaddr_reg:x3; val_offset:87360*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87360*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29121:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11d90b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0b and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11d90b; op2val:0x0;
op3val:0x58fffff; valaddr_reg:x3; val_offset:87363*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87363*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29122:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11d90b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0b and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11d90b; op2val:0x0;
op3val:0x59fffff; valaddr_reg:x3; val_offset:87366*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87366*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29123:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11d90b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0b and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11d90b; op2val:0x0;
op3val:0x5bfffff; valaddr_reg:x3; val_offset:87369*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87369*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29124:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11d90b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0b and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11d90b; op2val:0x0;
op3val:0x5c00000; valaddr_reg:x3; val_offset:87372*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87372*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29125:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11d90b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0b and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11d90b; op2val:0x0;
op3val:0x5e00000; valaddr_reg:x3; val_offset:87375*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87375*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29126:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11d90b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0b and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11d90b; op2val:0x0;
op3val:0x5f00000; valaddr_reg:x3; val_offset:87378*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87378*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29127:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11d90b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0b and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11d90b; op2val:0x0;
op3val:0x5f80000; valaddr_reg:x3; val_offset:87381*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87381*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29128:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11d90b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0b and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11d90b; op2val:0x0;
op3val:0x5fc0000; valaddr_reg:x3; val_offset:87384*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87384*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29129:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11d90b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0b and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11d90b; op2val:0x0;
op3val:0x5fe0000; valaddr_reg:x3; val_offset:87387*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87387*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29130:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11d90b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0b and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11d90b; op2val:0x0;
op3val:0x5ff0000; valaddr_reg:x3; val_offset:87390*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87390*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29131:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11d90b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0b and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11d90b; op2val:0x0;
op3val:0x5ff8000; valaddr_reg:x3; val_offset:87393*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87393*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29132:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11d90b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0b and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11d90b; op2val:0x0;
op3val:0x5ffc000; valaddr_reg:x3; val_offset:87396*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87396*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29133:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11d90b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0b and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11d90b; op2val:0x0;
op3val:0x5ffe000; valaddr_reg:x3; val_offset:87399*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87399*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29134:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11d90b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0b and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11d90b; op2val:0x0;
op3val:0x5fff000; valaddr_reg:x3; val_offset:87402*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87402*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29135:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11d90b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0b and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11d90b; op2val:0x0;
op3val:0x5fff800; valaddr_reg:x3; val_offset:87405*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87405*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29136:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11d90b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0b and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11d90b; op2val:0x0;
op3val:0x5fffc00; valaddr_reg:x3; val_offset:87408*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87408*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29137:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11d90b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0b and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11d90b; op2val:0x0;
op3val:0x5fffe00; valaddr_reg:x3; val_offset:87411*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87411*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29138:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11d90b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0b and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11d90b; op2val:0x0;
op3val:0x5ffff00; valaddr_reg:x3; val_offset:87414*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87414*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29139:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11d90b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0b and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11d90b; op2val:0x0;
op3val:0x5ffff80; valaddr_reg:x3; val_offset:87417*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87417*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29140:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11d90b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0b and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11d90b; op2val:0x0;
op3val:0x5ffffc0; valaddr_reg:x3; val_offset:87420*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87420*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29141:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11d90b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0b and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11d90b; op2val:0x0;
op3val:0x5ffffe0; valaddr_reg:x3; val_offset:87423*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87423*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29142:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11d90b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0b and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11d90b; op2val:0x0;
op3val:0x5fffff0; valaddr_reg:x3; val_offset:87426*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87426*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29143:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11d90b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0b and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11d90b; op2val:0x0;
op3val:0x5fffff8; valaddr_reg:x3; val_offset:87429*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87429*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29144:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11d90b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0b and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11d90b; op2val:0x0;
op3val:0x5fffffc; valaddr_reg:x3; val_offset:87432*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87432*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29145:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11d90b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0b and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11d90b; op2val:0x0;
op3val:0x5fffffe; valaddr_reg:x3; val_offset:87435*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87435*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29146:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11d90b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0b and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11d90b; op2val:0x0;
op3val:0x5ffffff; valaddr_reg:x3; val_offset:87438*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87438*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29147:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11f35a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11f35a; op2val:0x80000000;
op3val:0x80000001; valaddr_reg:x3; val_offset:87441*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87441*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29148:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11f35a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11f35a; op2val:0x80000000;
op3val:0x80000003; valaddr_reg:x3; val_offset:87444*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87444*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29149:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11f35a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11f35a; op2val:0x80000000;
op3val:0x80000007; valaddr_reg:x3; val_offset:87447*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87447*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29150:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11f35a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11f35a; op2val:0x80000000;
op3val:0x80199999; valaddr_reg:x3; val_offset:87450*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87450*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29151:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11f35a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11f35a; op2val:0x80000000;
op3val:0x80249249; valaddr_reg:x3; val_offset:87453*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87453*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29152:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11f35a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11f35a; op2val:0x80000000;
op3val:0x80333333; valaddr_reg:x3; val_offset:87456*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87456*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29153:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11f35a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11f35a; op2val:0x80000000;
op3val:0x8036db6d; valaddr_reg:x3; val_offset:87459*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87459*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29154:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11f35a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11f35a; op2val:0x80000000;
op3val:0x803bbbbb; valaddr_reg:x3; val_offset:87462*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87462*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29155:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11f35a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11f35a; op2val:0x80000000;
op3val:0x80444444; valaddr_reg:x3; val_offset:87465*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87465*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29156:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11f35a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11f35a; op2val:0x80000000;
op3val:0x804ccccc; valaddr_reg:x3; val_offset:87468*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87468*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29157:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11f35a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11f35a; op2val:0x80000000;
op3val:0x805b6db6; valaddr_reg:x3; val_offset:87471*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87471*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29158:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11f35a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11f35a; op2val:0x80000000;
op3val:0x80666666; valaddr_reg:x3; val_offset:87474*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87474*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29159:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11f35a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11f35a; op2val:0x80000000;
op3val:0x806db6db; valaddr_reg:x3; val_offset:87477*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87477*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29160:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11f35a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11f35a; op2val:0x80000000;
op3val:0x807ffff8; valaddr_reg:x3; val_offset:87480*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87480*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29161:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11f35a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11f35a; op2val:0x80000000;
op3val:0x807ffffc; valaddr_reg:x3; val_offset:87483*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87483*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29162:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11f35a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11f35a; op2val:0x80000000;
op3val:0x807ffffe; valaddr_reg:x3; val_offset:87486*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87486*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29163:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11f35a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11f35a; op2val:0x80000000;
op3val:0x90000000; valaddr_reg:x3; val_offset:87489*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87489*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29164:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11f35a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11f35a; op2val:0x80000000;
op3val:0x90000001; valaddr_reg:x3; val_offset:87492*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87492*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29165:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11f35a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11f35a; op2val:0x80000000;
op3val:0x90000003; valaddr_reg:x3; val_offset:87495*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87495*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29166:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11f35a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11f35a; op2val:0x80000000;
op3val:0x90000007; valaddr_reg:x3; val_offset:87498*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87498*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29167:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11f35a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11f35a; op2val:0x80000000;
op3val:0x9000000f; valaddr_reg:x3; val_offset:87501*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87501*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29168:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11f35a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11f35a; op2val:0x80000000;
op3val:0x9000001f; valaddr_reg:x3; val_offset:87504*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87504*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29169:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11f35a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11f35a; op2val:0x80000000;
op3val:0x9000003f; valaddr_reg:x3; val_offset:87507*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87507*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29170:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11f35a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11f35a; op2val:0x80000000;
op3val:0x9000007f; valaddr_reg:x3; val_offset:87510*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87510*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29171:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11f35a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11f35a; op2val:0x80000000;
op3val:0x900000ff; valaddr_reg:x3; val_offset:87513*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87513*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29172:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11f35a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11f35a; op2val:0x80000000;
op3val:0x900001ff; valaddr_reg:x3; val_offset:87516*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87516*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29173:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11f35a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11f35a; op2val:0x80000000;
op3val:0x900003ff; valaddr_reg:x3; val_offset:87519*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87519*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29174:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11f35a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11f35a; op2val:0x80000000;
op3val:0x900007ff; valaddr_reg:x3; val_offset:87522*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87522*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29175:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11f35a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11f35a; op2val:0x80000000;
op3val:0x90000fff; valaddr_reg:x3; val_offset:87525*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87525*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29176:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11f35a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11f35a; op2val:0x80000000;
op3val:0x90001fff; valaddr_reg:x3; val_offset:87528*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87528*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29177:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11f35a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11f35a; op2val:0x80000000;
op3val:0x90003fff; valaddr_reg:x3; val_offset:87531*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87531*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29178:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11f35a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11f35a; op2val:0x80000000;
op3val:0x90007fff; valaddr_reg:x3; val_offset:87534*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87534*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29179:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11f35a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11f35a; op2val:0x80000000;
op3val:0x9000ffff; valaddr_reg:x3; val_offset:87537*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87537*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29180:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11f35a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11f35a; op2val:0x80000000;
op3val:0x9001ffff; valaddr_reg:x3; val_offset:87540*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87540*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29181:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11f35a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11f35a; op2val:0x80000000;
op3val:0x9003ffff; valaddr_reg:x3; val_offset:87543*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87543*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29182:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11f35a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11f35a; op2val:0x80000000;
op3val:0x9007ffff; valaddr_reg:x3; val_offset:87546*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87546*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29183:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11f35a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11f35a; op2val:0x80000000;
op3val:0x900fffff; valaddr_reg:x3; val_offset:87549*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87549*0 + 3*227*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(2131873401,32,FLEN)
NAN_BOXED(3682077,32,FLEN)
NAN_BOXED(738193408,32,FLEN)
NAN_BOXED(2131873401,32,FLEN)
NAN_BOXED(3682077,32,FLEN)
NAN_BOXED(738195456,32,FLEN)
NAN_BOXED(2131873401,32,FLEN)
NAN_BOXED(3682077,32,FLEN)
NAN_BOXED(738196480,32,FLEN)
NAN_BOXED(2131873401,32,FLEN)
NAN_BOXED(3682077,32,FLEN)
NAN_BOXED(738196992,32,FLEN)
NAN_BOXED(2131873401,32,FLEN)
NAN_BOXED(3682077,32,FLEN)
NAN_BOXED(738197248,32,FLEN)
NAN_BOXED(2131873401,32,FLEN)
NAN_BOXED(3682077,32,FLEN)
NAN_BOXED(738197376,32,FLEN)
NAN_BOXED(2131873401,32,FLEN)
NAN_BOXED(3682077,32,FLEN)
NAN_BOXED(738197440,32,FLEN)
NAN_BOXED(2131873401,32,FLEN)
NAN_BOXED(3682077,32,FLEN)
NAN_BOXED(738197472,32,FLEN)
NAN_BOXED(2131873401,32,FLEN)
NAN_BOXED(3682077,32,FLEN)
NAN_BOXED(738197488,32,FLEN)
NAN_BOXED(2131873401,32,FLEN)
NAN_BOXED(3682077,32,FLEN)
NAN_BOXED(738197496,32,FLEN)
NAN_BOXED(2131873401,32,FLEN)
NAN_BOXED(3682077,32,FLEN)
NAN_BOXED(738197500,32,FLEN)
NAN_BOXED(2131873401,32,FLEN)
NAN_BOXED(3682077,32,FLEN)
NAN_BOXED(738197502,32,FLEN)
NAN_BOXED(2131873401,32,FLEN)
NAN_BOXED(3682077,32,FLEN)
NAN_BOXED(738197503,32,FLEN)
NAN_BOXED(2131873401,32,FLEN)
NAN_BOXED(3682077,32,FLEN)
NAN_BOXED(1065353217,32,FLEN)
NAN_BOXED(2131873401,32,FLEN)
NAN_BOXED(3682077,32,FLEN)
NAN_BOXED(1065353219,32,FLEN)
NAN_BOXED(2131873401,32,FLEN)
NAN_BOXED(3682077,32,FLEN)
NAN_BOXED(1065353223,32,FLEN)
NAN_BOXED(2131873401,32,FLEN)
NAN_BOXED(3682077,32,FLEN)
NAN_BOXED(1067030937,32,FLEN)
NAN_BOXED(2131873401,32,FLEN)
NAN_BOXED(3682077,32,FLEN)
NAN_BOXED(1067749961,32,FLEN)
NAN_BOXED(2131873401,32,FLEN)
NAN_BOXED(3682077,32,FLEN)
NAN_BOXED(1068708659,32,FLEN)
NAN_BOXED(2131873401,32,FLEN)
NAN_BOXED(3682077,32,FLEN)
NAN_BOXED(1068948333,32,FLEN)
NAN_BOXED(2131873401,32,FLEN)
NAN_BOXED(3682077,32,FLEN)
NAN_BOXED(1069267899,32,FLEN)
NAN_BOXED(2131873401,32,FLEN)
NAN_BOXED(3682077,32,FLEN)
NAN_BOXED(1069827140,32,FLEN)
NAN_BOXED(2131873401,32,FLEN)
NAN_BOXED(3682077,32,FLEN)
NAN_BOXED(1070386380,32,FLEN)
NAN_BOXED(2131873401,32,FLEN)
NAN_BOXED(3682077,32,FLEN)
NAN_BOXED(1071345078,32,FLEN)
NAN_BOXED(2131873401,32,FLEN)
NAN_BOXED(3682077,32,FLEN)
NAN_BOXED(1072064102,32,FLEN)
NAN_BOXED(2131873401,32,FLEN)
NAN_BOXED(3682077,32,FLEN)
NAN_BOXED(1072543451,32,FLEN)
NAN_BOXED(2131873401,32,FLEN)
NAN_BOXED(3682077,32,FLEN)
NAN_BOXED(1073741816,32,FLEN)
NAN_BOXED(2131873401,32,FLEN)
NAN_BOXED(3682077,32,FLEN)
NAN_BOXED(1073741820,32,FLEN)
NAN_BOXED(2131873401,32,FLEN)
NAN_BOXED(3682077,32,FLEN)
NAN_BOXED(1073741822,32,FLEN)
NAN_BOXED(2131876107,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(2131876107,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3,32,FLEN)
NAN_BOXED(2131876107,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7,32,FLEN)
NAN_BOXED(2131876107,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1677721,32,FLEN)
NAN_BOXED(2131876107,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2396745,32,FLEN)
NAN_BOXED(2131876107,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3355443,32,FLEN)
NAN_BOXED(2131876107,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3595117,32,FLEN)
NAN_BOXED(2131876107,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3914683,32,FLEN)
NAN_BOXED(2131876107,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(4473924,32,FLEN)
NAN_BOXED(2131876107,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5033164,32,FLEN)
NAN_BOXED(2131876107,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5991862,32,FLEN)
NAN_BOXED(2131876107,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(6710886,32,FLEN)
NAN_BOXED(2131876107,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7190235,32,FLEN)
NAN_BOXED(2131876107,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388600,32,FLEN)
NAN_BOXED(2131876107,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388604,32,FLEN)
NAN_BOXED(2131876107,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388606,32,FLEN)
NAN_BOXED(2131876107,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(92274688,32,FLEN)
NAN_BOXED(2131876107,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(92274689,32,FLEN)
NAN_BOXED(2131876107,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(92274691,32,FLEN)
NAN_BOXED(2131876107,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(92274695,32,FLEN)
NAN_BOXED(2131876107,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(92274703,32,FLEN)
NAN_BOXED(2131876107,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(92274719,32,FLEN)
NAN_BOXED(2131876107,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(92274751,32,FLEN)
NAN_BOXED(2131876107,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(92274815,32,FLEN)
NAN_BOXED(2131876107,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(92274943,32,FLEN)
NAN_BOXED(2131876107,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(92275199,32,FLEN)
NAN_BOXED(2131876107,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(92275711,32,FLEN)
NAN_BOXED(2131876107,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(92276735,32,FLEN)
NAN_BOXED(2131876107,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(92278783,32,FLEN)
NAN_BOXED(2131876107,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(92282879,32,FLEN)
NAN_BOXED(2131876107,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(92291071,32,FLEN)
NAN_BOXED(2131876107,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(92307455,32,FLEN)
NAN_BOXED(2131876107,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(92340223,32,FLEN)
NAN_BOXED(2131876107,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(92405759,32,FLEN)
NAN_BOXED(2131876107,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(92536831,32,FLEN)
NAN_BOXED(2131876107,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(92798975,32,FLEN)
NAN_BOXED(2131876107,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(93323263,32,FLEN)
NAN_BOXED(2131876107,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(94371839,32,FLEN)
NAN_BOXED(2131876107,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(96468991,32,FLEN)
NAN_BOXED(2131876107,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(96468992,32,FLEN)
NAN_BOXED(2131876107,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(98566144,32,FLEN)
NAN_BOXED(2131876107,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(99614720,32,FLEN)
NAN_BOXED(2131876107,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(100139008,32,FLEN)
NAN_BOXED(2131876107,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(100401152,32,FLEN)
NAN_BOXED(2131876107,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(100532224,32,FLEN)
NAN_BOXED(2131876107,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(100597760,32,FLEN)
NAN_BOXED(2131876107,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(100630528,32,FLEN)
NAN_BOXED(2131876107,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(100646912,32,FLEN)
NAN_BOXED(2131876107,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(100655104,32,FLEN)
NAN_BOXED(2131876107,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(100659200,32,FLEN)
NAN_BOXED(2131876107,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(100661248,32,FLEN)
NAN_BOXED(2131876107,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(100662272,32,FLEN)
NAN_BOXED(2131876107,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(100662784,32,FLEN)
NAN_BOXED(2131876107,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(100663040,32,FLEN)
NAN_BOXED(2131876107,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(100663168,32,FLEN)
NAN_BOXED(2131876107,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(100663232,32,FLEN)
NAN_BOXED(2131876107,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(100663264,32,FLEN)
NAN_BOXED(2131876107,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(100663280,32,FLEN)
NAN_BOXED(2131876107,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(100663288,32,FLEN)
NAN_BOXED(2131876107,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(100663292,32,FLEN)
NAN_BOXED(2131876107,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(100663294,32,FLEN)
NAN_BOXED(2131876107,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(100663295,32,FLEN)
NAN_BOXED(2131882842,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2131882842,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483651,32,FLEN)
NAN_BOXED(2131882842,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483655,32,FLEN)
NAN_BOXED(2131882842,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149161369,32,FLEN)
NAN_BOXED(2131882842,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149880393,32,FLEN)
NAN_BOXED(2131882842,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2150839091,32,FLEN)
NAN_BOXED(2131882842,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151078765,32,FLEN)
NAN_BOXED(2131882842,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151398331,32,FLEN)
NAN_BOXED(2131882842,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151957572,32,FLEN)
NAN_BOXED(2131882842,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2152516812,32,FLEN)
NAN_BOXED(2131882842,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2153475510,32,FLEN)
NAN_BOXED(2131882842,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154194534,32,FLEN)
NAN_BOXED(2131882842,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154673883,32,FLEN)
NAN_BOXED(2131882842,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872248,32,FLEN)
NAN_BOXED(2131882842,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872252,32,FLEN)
NAN_BOXED(2131882842,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872254,32,FLEN)
NAN_BOXED(2131882842,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415919104,32,FLEN)
NAN_BOXED(2131882842,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415919105,32,FLEN)
NAN_BOXED(2131882842,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415919107,32,FLEN)
NAN_BOXED(2131882842,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415919111,32,FLEN)
NAN_BOXED(2131882842,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415919119,32,FLEN)
NAN_BOXED(2131882842,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415919135,32,FLEN)
NAN_BOXED(2131882842,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415919167,32,FLEN)
NAN_BOXED(2131882842,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415919231,32,FLEN)
NAN_BOXED(2131882842,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415919359,32,FLEN)
NAN_BOXED(2131882842,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415919615,32,FLEN)
NAN_BOXED(2131882842,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415920127,32,FLEN)
NAN_BOXED(2131882842,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415921151,32,FLEN)
NAN_BOXED(2131882842,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415923199,32,FLEN)
NAN_BOXED(2131882842,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415927295,32,FLEN)
NAN_BOXED(2131882842,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415935487,32,FLEN)
NAN_BOXED(2131882842,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415951871,32,FLEN)
NAN_BOXED(2131882842,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415984639,32,FLEN)
NAN_BOXED(2131882842,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2416050175,32,FLEN)
NAN_BOXED(2131882842,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2416181247,32,FLEN)
NAN_BOXED(2131882842,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2416443391,32,FLEN)
NAN_BOXED(2131882842,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2416967679,32,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
