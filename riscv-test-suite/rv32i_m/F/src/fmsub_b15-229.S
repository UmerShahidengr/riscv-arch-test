
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 14:18:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32F/fmsub.s.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.s instruction of the RISC-V RV32F_Zicsr,RV32FD_Zicsr,RV64F_Zicsr,RV64FD_Zicsr extension for the fmsub_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF_Zicsr,RV32IFD_Zicsr,RV64IF_Zicsr,RV64IFD_Zicsr,RV32EF_Zicsr,RV32EFD_Zicsr,RV64EF_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fmsub_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*F.*);def TEST_CASE_1=True;",fmsub_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_29184:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11f35a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11f35a; op2val:0x80000000;
op3val:0x901fffff; valaddr_reg:x3; val_offset:87552*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87552*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29185:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11f35a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11f35a; op2val:0x80000000;
op3val:0x903fffff; valaddr_reg:x3; val_offset:87555*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87555*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29186:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11f35a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11f35a; op2val:0x80000000;
op3val:0x90400000; valaddr_reg:x3; val_offset:87558*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87558*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29187:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11f35a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11f35a; op2val:0x80000000;
op3val:0x90600000; valaddr_reg:x3; val_offset:87561*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87561*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29188:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11f35a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11f35a; op2val:0x80000000;
op3val:0x90700000; valaddr_reg:x3; val_offset:87564*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87564*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29189:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11f35a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11f35a; op2val:0x80000000;
op3val:0x90780000; valaddr_reg:x3; val_offset:87567*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87567*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29190:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11f35a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11f35a; op2val:0x80000000;
op3val:0x907c0000; valaddr_reg:x3; val_offset:87570*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87570*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29191:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11f35a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11f35a; op2val:0x80000000;
op3val:0x907e0000; valaddr_reg:x3; val_offset:87573*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87573*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29192:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11f35a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11f35a; op2val:0x80000000;
op3val:0x907f0000; valaddr_reg:x3; val_offset:87576*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87576*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29193:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11f35a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11f35a; op2val:0x80000000;
op3val:0x907f8000; valaddr_reg:x3; val_offset:87579*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87579*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29194:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11f35a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11f35a; op2val:0x80000000;
op3val:0x907fc000; valaddr_reg:x3; val_offset:87582*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87582*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29195:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11f35a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11f35a; op2val:0x80000000;
op3val:0x907fe000; valaddr_reg:x3; val_offset:87585*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87585*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29196:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11f35a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11f35a; op2val:0x80000000;
op3val:0x907ff000; valaddr_reg:x3; val_offset:87588*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87588*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29197:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11f35a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11f35a; op2val:0x80000000;
op3val:0x907ff800; valaddr_reg:x3; val_offset:87591*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87591*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29198:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11f35a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11f35a; op2val:0x80000000;
op3val:0x907ffc00; valaddr_reg:x3; val_offset:87594*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87594*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29199:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11f35a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11f35a; op2val:0x80000000;
op3val:0x907ffe00; valaddr_reg:x3; val_offset:87597*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87597*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29200:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11f35a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11f35a; op2val:0x80000000;
op3val:0x907fff00; valaddr_reg:x3; val_offset:87600*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87600*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29201:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11f35a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11f35a; op2val:0x80000000;
op3val:0x907fff80; valaddr_reg:x3; val_offset:87603*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87603*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29202:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11f35a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11f35a; op2val:0x80000000;
op3val:0x907fffc0; valaddr_reg:x3; val_offset:87606*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87606*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29203:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11f35a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11f35a; op2val:0x80000000;
op3val:0x907fffe0; valaddr_reg:x3; val_offset:87609*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87609*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29204:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11f35a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11f35a; op2val:0x80000000;
op3val:0x907ffff0; valaddr_reg:x3; val_offset:87612*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87612*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29205:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11f35a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11f35a; op2val:0x80000000;
op3val:0x907ffff8; valaddr_reg:x3; val_offset:87615*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87615*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29206:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11f35a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11f35a; op2val:0x80000000;
op3val:0x907ffffc; valaddr_reg:x3; val_offset:87618*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87618*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29207:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11f35a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11f35a; op2val:0x80000000;
op3val:0x907ffffe; valaddr_reg:x3; val_offset:87621*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87621*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29208:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11f35a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11f35a; op2val:0x80000000;
op3val:0x907fffff; valaddr_reg:x3; val_offset:87624*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87624*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29209:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x120551 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x381a02 and fs3 == 1 and fe3 == 0x48 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f120551; op2val:0x80381a02;
op3val:0xa4000000; valaddr_reg:x3; val_offset:87627*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87627*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29210:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x120551 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x381a02 and fs3 == 1 and fe3 == 0x48 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f120551; op2val:0x80381a02;
op3val:0xa4000001; valaddr_reg:x3; val_offset:87630*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87630*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29211:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x120551 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x381a02 and fs3 == 1 and fe3 == 0x48 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f120551; op2val:0x80381a02;
op3val:0xa4000003; valaddr_reg:x3; val_offset:87633*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87633*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29212:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x120551 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x381a02 and fs3 == 1 and fe3 == 0x48 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f120551; op2val:0x80381a02;
op3val:0xa4000007; valaddr_reg:x3; val_offset:87636*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87636*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29213:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x120551 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x381a02 and fs3 == 1 and fe3 == 0x48 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f120551; op2val:0x80381a02;
op3val:0xa400000f; valaddr_reg:x3; val_offset:87639*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87639*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29214:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x120551 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x381a02 and fs3 == 1 and fe3 == 0x48 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f120551; op2val:0x80381a02;
op3val:0xa400001f; valaddr_reg:x3; val_offset:87642*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87642*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29215:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x120551 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x381a02 and fs3 == 1 and fe3 == 0x48 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f120551; op2val:0x80381a02;
op3val:0xa400003f; valaddr_reg:x3; val_offset:87645*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87645*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29216:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x120551 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x381a02 and fs3 == 1 and fe3 == 0x48 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f120551; op2val:0x80381a02;
op3val:0xa400007f; valaddr_reg:x3; val_offset:87648*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87648*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29217:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x120551 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x381a02 and fs3 == 1 and fe3 == 0x48 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f120551; op2val:0x80381a02;
op3val:0xa40000ff; valaddr_reg:x3; val_offset:87651*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87651*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29218:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x120551 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x381a02 and fs3 == 1 and fe3 == 0x48 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f120551; op2val:0x80381a02;
op3val:0xa40001ff; valaddr_reg:x3; val_offset:87654*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87654*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29219:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x120551 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x381a02 and fs3 == 1 and fe3 == 0x48 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f120551; op2val:0x80381a02;
op3val:0xa40003ff; valaddr_reg:x3; val_offset:87657*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87657*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29220:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x120551 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x381a02 and fs3 == 1 and fe3 == 0x48 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f120551; op2val:0x80381a02;
op3val:0xa40007ff; valaddr_reg:x3; val_offset:87660*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87660*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29221:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x120551 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x381a02 and fs3 == 1 and fe3 == 0x48 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f120551; op2val:0x80381a02;
op3val:0xa4000fff; valaddr_reg:x3; val_offset:87663*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87663*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29222:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x120551 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x381a02 and fs3 == 1 and fe3 == 0x48 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f120551; op2val:0x80381a02;
op3val:0xa4001fff; valaddr_reg:x3; val_offset:87666*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87666*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29223:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x120551 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x381a02 and fs3 == 1 and fe3 == 0x48 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f120551; op2val:0x80381a02;
op3val:0xa4003fff; valaddr_reg:x3; val_offset:87669*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87669*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29224:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x120551 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x381a02 and fs3 == 1 and fe3 == 0x48 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f120551; op2val:0x80381a02;
op3val:0xa4007fff; valaddr_reg:x3; val_offset:87672*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87672*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29225:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x120551 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x381a02 and fs3 == 1 and fe3 == 0x48 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f120551; op2val:0x80381a02;
op3val:0xa400ffff; valaddr_reg:x3; val_offset:87675*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87675*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29226:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x120551 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x381a02 and fs3 == 1 and fe3 == 0x48 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f120551; op2val:0x80381a02;
op3val:0xa401ffff; valaddr_reg:x3; val_offset:87678*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87678*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29227:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x120551 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x381a02 and fs3 == 1 and fe3 == 0x48 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f120551; op2val:0x80381a02;
op3val:0xa403ffff; valaddr_reg:x3; val_offset:87681*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87681*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29228:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x120551 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x381a02 and fs3 == 1 and fe3 == 0x48 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f120551; op2val:0x80381a02;
op3val:0xa407ffff; valaddr_reg:x3; val_offset:87684*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87684*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29229:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x120551 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x381a02 and fs3 == 1 and fe3 == 0x48 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f120551; op2val:0x80381a02;
op3val:0xa40fffff; valaddr_reg:x3; val_offset:87687*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87687*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29230:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x120551 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x381a02 and fs3 == 1 and fe3 == 0x48 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f120551; op2val:0x80381a02;
op3val:0xa41fffff; valaddr_reg:x3; val_offset:87690*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87690*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29231:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x120551 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x381a02 and fs3 == 1 and fe3 == 0x48 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f120551; op2val:0x80381a02;
op3val:0xa43fffff; valaddr_reg:x3; val_offset:87693*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87693*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29232:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x120551 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x381a02 and fs3 == 1 and fe3 == 0x48 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f120551; op2val:0x80381a02;
op3val:0xa4400000; valaddr_reg:x3; val_offset:87696*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87696*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29233:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x120551 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x381a02 and fs3 == 1 and fe3 == 0x48 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f120551; op2val:0x80381a02;
op3val:0xa4600000; valaddr_reg:x3; val_offset:87699*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87699*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29234:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x120551 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x381a02 and fs3 == 1 and fe3 == 0x48 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f120551; op2val:0x80381a02;
op3val:0xa4700000; valaddr_reg:x3; val_offset:87702*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87702*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29235:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x120551 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x381a02 and fs3 == 1 and fe3 == 0x48 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f120551; op2val:0x80381a02;
op3val:0xa4780000; valaddr_reg:x3; val_offset:87705*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87705*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29236:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x120551 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x381a02 and fs3 == 1 and fe3 == 0x48 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f120551; op2val:0x80381a02;
op3val:0xa47c0000; valaddr_reg:x3; val_offset:87708*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87708*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29237:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x120551 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x381a02 and fs3 == 1 and fe3 == 0x48 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f120551; op2val:0x80381a02;
op3val:0xa47e0000; valaddr_reg:x3; val_offset:87711*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87711*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29238:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x120551 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x381a02 and fs3 == 1 and fe3 == 0x48 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f120551; op2val:0x80381a02;
op3val:0xa47f0000; valaddr_reg:x3; val_offset:87714*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87714*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29239:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x120551 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x381a02 and fs3 == 1 and fe3 == 0x48 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f120551; op2val:0x80381a02;
op3val:0xa47f8000; valaddr_reg:x3; val_offset:87717*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87717*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29240:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x120551 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x381a02 and fs3 == 1 and fe3 == 0x48 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f120551; op2val:0x80381a02;
op3val:0xa47fc000; valaddr_reg:x3; val_offset:87720*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87720*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29241:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x120551 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x381a02 and fs3 == 1 and fe3 == 0x48 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f120551; op2val:0x80381a02;
op3val:0xa47fe000; valaddr_reg:x3; val_offset:87723*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87723*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29242:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x120551 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x381a02 and fs3 == 1 and fe3 == 0x48 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f120551; op2val:0x80381a02;
op3val:0xa47ff000; valaddr_reg:x3; val_offset:87726*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87726*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29243:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x120551 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x381a02 and fs3 == 1 and fe3 == 0x48 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f120551; op2val:0x80381a02;
op3val:0xa47ff800; valaddr_reg:x3; val_offset:87729*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87729*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29244:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x120551 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x381a02 and fs3 == 1 and fe3 == 0x48 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f120551; op2val:0x80381a02;
op3val:0xa47ffc00; valaddr_reg:x3; val_offset:87732*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87732*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29245:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x120551 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x381a02 and fs3 == 1 and fe3 == 0x48 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f120551; op2val:0x80381a02;
op3val:0xa47ffe00; valaddr_reg:x3; val_offset:87735*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87735*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29246:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x120551 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x381a02 and fs3 == 1 and fe3 == 0x48 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f120551; op2val:0x80381a02;
op3val:0xa47fff00; valaddr_reg:x3; val_offset:87738*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87738*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29247:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x120551 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x381a02 and fs3 == 1 and fe3 == 0x48 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f120551; op2val:0x80381a02;
op3val:0xa47fff80; valaddr_reg:x3; val_offset:87741*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87741*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29248:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x120551 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x381a02 and fs3 == 1 and fe3 == 0x48 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f120551; op2val:0x80381a02;
op3val:0xa47fffc0; valaddr_reg:x3; val_offset:87744*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87744*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29249:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x120551 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x381a02 and fs3 == 1 and fe3 == 0x48 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f120551; op2val:0x80381a02;
op3val:0xa47fffe0; valaddr_reg:x3; val_offset:87747*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87747*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29250:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x120551 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x381a02 and fs3 == 1 and fe3 == 0x48 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f120551; op2val:0x80381a02;
op3val:0xa47ffff0; valaddr_reg:x3; val_offset:87750*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87750*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29251:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x120551 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x381a02 and fs3 == 1 and fe3 == 0x48 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f120551; op2val:0x80381a02;
op3val:0xa47ffff8; valaddr_reg:x3; val_offset:87753*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87753*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29252:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x120551 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x381a02 and fs3 == 1 and fe3 == 0x48 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f120551; op2val:0x80381a02;
op3val:0xa47ffffc; valaddr_reg:x3; val_offset:87756*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87756*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29253:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x120551 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x381a02 and fs3 == 1 and fe3 == 0x48 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f120551; op2val:0x80381a02;
op3val:0xa47ffffe; valaddr_reg:x3; val_offset:87759*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87759*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29254:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x120551 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x381a02 and fs3 == 1 and fe3 == 0x48 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f120551; op2val:0x80381a02;
op3val:0xa47fffff; valaddr_reg:x3; val_offset:87762*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87762*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29255:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x120551 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x381a02 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f120551; op2val:0x80381a02;
op3val:0xbf800001; valaddr_reg:x3; val_offset:87765*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87765*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29256:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x120551 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x381a02 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f120551; op2val:0x80381a02;
op3val:0xbf800003; valaddr_reg:x3; val_offset:87768*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87768*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29257:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x120551 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x381a02 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f120551; op2val:0x80381a02;
op3val:0xbf800007; valaddr_reg:x3; val_offset:87771*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87771*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29258:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x120551 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x381a02 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f120551; op2val:0x80381a02;
op3val:0xbf999999; valaddr_reg:x3; val_offset:87774*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87774*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29259:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x120551 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x381a02 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f120551; op2val:0x80381a02;
op3val:0xbfa49249; valaddr_reg:x3; val_offset:87777*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87777*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29260:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x120551 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x381a02 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f120551; op2val:0x80381a02;
op3val:0xbfb33333; valaddr_reg:x3; val_offset:87780*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87780*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29261:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x120551 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x381a02 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f120551; op2val:0x80381a02;
op3val:0xbfb6db6d; valaddr_reg:x3; val_offset:87783*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87783*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29262:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x120551 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x381a02 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f120551; op2val:0x80381a02;
op3val:0xbfbbbbbb; valaddr_reg:x3; val_offset:87786*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87786*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29263:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x120551 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x381a02 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f120551; op2val:0x80381a02;
op3val:0xbfc44444; valaddr_reg:x3; val_offset:87789*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87789*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29264:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x120551 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x381a02 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f120551; op2val:0x80381a02;
op3val:0xbfcccccc; valaddr_reg:x3; val_offset:87792*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87792*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29265:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x120551 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x381a02 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f120551; op2val:0x80381a02;
op3val:0xbfdb6db6; valaddr_reg:x3; val_offset:87795*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87795*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29266:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x120551 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x381a02 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f120551; op2val:0x80381a02;
op3val:0xbfe66666; valaddr_reg:x3; val_offset:87798*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87798*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29267:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x120551 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x381a02 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f120551; op2val:0x80381a02;
op3val:0xbfedb6db; valaddr_reg:x3; val_offset:87801*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87801*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29268:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x120551 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x381a02 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f120551; op2val:0x80381a02;
op3val:0xbffffff8; valaddr_reg:x3; val_offset:87804*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87804*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29269:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x120551 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x381a02 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f120551; op2val:0x80381a02;
op3val:0xbffffffc; valaddr_reg:x3; val_offset:87807*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87807*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29270:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x120551 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x381a02 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f120551; op2val:0x80381a02;
op3val:0xbffffffe; valaddr_reg:x3; val_offset:87810*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87810*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29271:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x123a99 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f123a99; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:87813*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87813*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29272:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x123a99 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f123a99; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:87816*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87816*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29273:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x123a99 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f123a99; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:87819*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87819*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29274:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x123a99 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f123a99; op2val:0x0;
op3val:0x199999; valaddr_reg:x3; val_offset:87822*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87822*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29275:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x123a99 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f123a99; op2val:0x0;
op3val:0x249249; valaddr_reg:x3; val_offset:87825*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87825*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29276:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x123a99 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f123a99; op2val:0x0;
op3val:0x333333; valaddr_reg:x3; val_offset:87828*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87828*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29277:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x123a99 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f123a99; op2val:0x0;
op3val:0x36db6d; valaddr_reg:x3; val_offset:87831*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87831*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29278:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x123a99 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f123a99; op2val:0x0;
op3val:0x3bbbbb; valaddr_reg:x3; val_offset:87834*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87834*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29279:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x123a99 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f123a99; op2val:0x0;
op3val:0x444444; valaddr_reg:x3; val_offset:87837*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87837*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29280:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x123a99 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f123a99; op2val:0x0;
op3val:0x4ccccc; valaddr_reg:x3; val_offset:87840*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87840*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29281:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x123a99 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f123a99; op2val:0x0;
op3val:0x5b6db6; valaddr_reg:x3; val_offset:87843*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87843*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29282:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x123a99 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f123a99; op2val:0x0;
op3val:0x666666; valaddr_reg:x3; val_offset:87846*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87846*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29283:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x123a99 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f123a99; op2val:0x0;
op3val:0x6db6db; valaddr_reg:x3; val_offset:87849*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87849*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29284:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x123a99 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f123a99; op2val:0x0;
op3val:0x7ffff8; valaddr_reg:x3; val_offset:87852*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87852*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29285:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x123a99 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f123a99; op2val:0x0;
op3val:0x7ffffc; valaddr_reg:x3; val_offset:87855*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87855*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29286:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x123a99 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f123a99; op2val:0x0;
op3val:0x7ffffe; valaddr_reg:x3; val_offset:87858*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87858*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29287:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x123a99 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x20 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f123a99; op2val:0x0;
op3val:0x10000000; valaddr_reg:x3; val_offset:87861*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87861*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29288:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x123a99 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x20 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f123a99; op2val:0x0;
op3val:0x10000001; valaddr_reg:x3; val_offset:87864*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87864*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29289:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x123a99 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x20 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f123a99; op2val:0x0;
op3val:0x10000003; valaddr_reg:x3; val_offset:87867*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87867*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29290:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x123a99 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x20 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f123a99; op2val:0x0;
op3val:0x10000007; valaddr_reg:x3; val_offset:87870*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87870*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29291:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x123a99 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x20 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f123a99; op2val:0x0;
op3val:0x1000000f; valaddr_reg:x3; val_offset:87873*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87873*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29292:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x123a99 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x20 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f123a99; op2val:0x0;
op3val:0x1000001f; valaddr_reg:x3; val_offset:87876*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87876*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29293:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x123a99 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x20 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f123a99; op2val:0x0;
op3val:0x1000003f; valaddr_reg:x3; val_offset:87879*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87879*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29294:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x123a99 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x20 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f123a99; op2val:0x0;
op3val:0x1000007f; valaddr_reg:x3; val_offset:87882*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87882*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29295:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x123a99 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x20 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f123a99; op2val:0x0;
op3val:0x100000ff; valaddr_reg:x3; val_offset:87885*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87885*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29296:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x123a99 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x20 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f123a99; op2val:0x0;
op3val:0x100001ff; valaddr_reg:x3; val_offset:87888*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87888*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29297:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x123a99 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x20 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f123a99; op2val:0x0;
op3val:0x100003ff; valaddr_reg:x3; val_offset:87891*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87891*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29298:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x123a99 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x20 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f123a99; op2val:0x0;
op3val:0x100007ff; valaddr_reg:x3; val_offset:87894*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87894*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29299:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x123a99 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x20 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f123a99; op2val:0x0;
op3val:0x10000fff; valaddr_reg:x3; val_offset:87897*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87897*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29300:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x123a99 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x20 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f123a99; op2val:0x0;
op3val:0x10001fff; valaddr_reg:x3; val_offset:87900*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87900*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29301:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x123a99 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x20 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f123a99; op2val:0x0;
op3val:0x10003fff; valaddr_reg:x3; val_offset:87903*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87903*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29302:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x123a99 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x20 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f123a99; op2val:0x0;
op3val:0x10007fff; valaddr_reg:x3; val_offset:87906*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87906*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29303:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x123a99 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x20 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f123a99; op2val:0x0;
op3val:0x1000ffff; valaddr_reg:x3; val_offset:87909*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87909*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29304:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x123a99 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x20 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f123a99; op2val:0x0;
op3val:0x1001ffff; valaddr_reg:x3; val_offset:87912*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87912*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29305:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x123a99 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x20 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f123a99; op2val:0x0;
op3val:0x1003ffff; valaddr_reg:x3; val_offset:87915*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87915*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29306:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x123a99 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x20 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f123a99; op2val:0x0;
op3val:0x1007ffff; valaddr_reg:x3; val_offset:87918*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87918*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29307:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x123a99 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x20 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f123a99; op2val:0x0;
op3val:0x100fffff; valaddr_reg:x3; val_offset:87921*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87921*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29308:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x123a99 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x20 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f123a99; op2val:0x0;
op3val:0x101fffff; valaddr_reg:x3; val_offset:87924*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87924*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29309:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x123a99 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x20 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f123a99; op2val:0x0;
op3val:0x103fffff; valaddr_reg:x3; val_offset:87927*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87927*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29310:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x123a99 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x20 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f123a99; op2val:0x0;
op3val:0x10400000; valaddr_reg:x3; val_offset:87930*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87930*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29311:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x123a99 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x20 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f123a99; op2val:0x0;
op3val:0x10600000; valaddr_reg:x3; val_offset:87933*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87933*0 + 3*228*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(2131882842,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2418016255,32,FLEN)
NAN_BOXED(2131882842,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2420113407,32,FLEN)
NAN_BOXED(2131882842,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2420113408,32,FLEN)
NAN_BOXED(2131882842,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2422210560,32,FLEN)
NAN_BOXED(2131882842,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2423259136,32,FLEN)
NAN_BOXED(2131882842,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2423783424,32,FLEN)
NAN_BOXED(2131882842,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424045568,32,FLEN)
NAN_BOXED(2131882842,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424176640,32,FLEN)
NAN_BOXED(2131882842,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424242176,32,FLEN)
NAN_BOXED(2131882842,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424274944,32,FLEN)
NAN_BOXED(2131882842,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424291328,32,FLEN)
NAN_BOXED(2131882842,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424299520,32,FLEN)
NAN_BOXED(2131882842,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424303616,32,FLEN)
NAN_BOXED(2131882842,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424305664,32,FLEN)
NAN_BOXED(2131882842,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424306688,32,FLEN)
NAN_BOXED(2131882842,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424307200,32,FLEN)
NAN_BOXED(2131882842,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424307456,32,FLEN)
NAN_BOXED(2131882842,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424307584,32,FLEN)
NAN_BOXED(2131882842,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424307648,32,FLEN)
NAN_BOXED(2131882842,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424307680,32,FLEN)
NAN_BOXED(2131882842,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424307696,32,FLEN)
NAN_BOXED(2131882842,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424307704,32,FLEN)
NAN_BOXED(2131882842,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424307708,32,FLEN)
NAN_BOXED(2131882842,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424307710,32,FLEN)
NAN_BOXED(2131882842,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424307711,32,FLEN)
NAN_BOXED(2131887441,32,FLEN)
NAN_BOXED(2151160322,32,FLEN)
NAN_BOXED(2751463424,32,FLEN)
NAN_BOXED(2131887441,32,FLEN)
NAN_BOXED(2151160322,32,FLEN)
NAN_BOXED(2751463425,32,FLEN)
NAN_BOXED(2131887441,32,FLEN)
NAN_BOXED(2151160322,32,FLEN)
NAN_BOXED(2751463427,32,FLEN)
NAN_BOXED(2131887441,32,FLEN)
NAN_BOXED(2151160322,32,FLEN)
NAN_BOXED(2751463431,32,FLEN)
NAN_BOXED(2131887441,32,FLEN)
NAN_BOXED(2151160322,32,FLEN)
NAN_BOXED(2751463439,32,FLEN)
NAN_BOXED(2131887441,32,FLEN)
NAN_BOXED(2151160322,32,FLEN)
NAN_BOXED(2751463455,32,FLEN)
NAN_BOXED(2131887441,32,FLEN)
NAN_BOXED(2151160322,32,FLEN)
NAN_BOXED(2751463487,32,FLEN)
NAN_BOXED(2131887441,32,FLEN)
NAN_BOXED(2151160322,32,FLEN)
NAN_BOXED(2751463551,32,FLEN)
NAN_BOXED(2131887441,32,FLEN)
NAN_BOXED(2151160322,32,FLEN)
NAN_BOXED(2751463679,32,FLEN)
NAN_BOXED(2131887441,32,FLEN)
NAN_BOXED(2151160322,32,FLEN)
NAN_BOXED(2751463935,32,FLEN)
NAN_BOXED(2131887441,32,FLEN)
NAN_BOXED(2151160322,32,FLEN)
NAN_BOXED(2751464447,32,FLEN)
NAN_BOXED(2131887441,32,FLEN)
NAN_BOXED(2151160322,32,FLEN)
NAN_BOXED(2751465471,32,FLEN)
NAN_BOXED(2131887441,32,FLEN)
NAN_BOXED(2151160322,32,FLEN)
NAN_BOXED(2751467519,32,FLEN)
NAN_BOXED(2131887441,32,FLEN)
NAN_BOXED(2151160322,32,FLEN)
NAN_BOXED(2751471615,32,FLEN)
NAN_BOXED(2131887441,32,FLEN)
NAN_BOXED(2151160322,32,FLEN)
NAN_BOXED(2751479807,32,FLEN)
NAN_BOXED(2131887441,32,FLEN)
NAN_BOXED(2151160322,32,FLEN)
NAN_BOXED(2751496191,32,FLEN)
NAN_BOXED(2131887441,32,FLEN)
NAN_BOXED(2151160322,32,FLEN)
NAN_BOXED(2751528959,32,FLEN)
NAN_BOXED(2131887441,32,FLEN)
NAN_BOXED(2151160322,32,FLEN)
NAN_BOXED(2751594495,32,FLEN)
NAN_BOXED(2131887441,32,FLEN)
NAN_BOXED(2151160322,32,FLEN)
NAN_BOXED(2751725567,32,FLEN)
NAN_BOXED(2131887441,32,FLEN)
NAN_BOXED(2151160322,32,FLEN)
NAN_BOXED(2751987711,32,FLEN)
NAN_BOXED(2131887441,32,FLEN)
NAN_BOXED(2151160322,32,FLEN)
NAN_BOXED(2752511999,32,FLEN)
NAN_BOXED(2131887441,32,FLEN)
NAN_BOXED(2151160322,32,FLEN)
NAN_BOXED(2753560575,32,FLEN)
NAN_BOXED(2131887441,32,FLEN)
NAN_BOXED(2151160322,32,FLEN)
NAN_BOXED(2755657727,32,FLEN)
NAN_BOXED(2131887441,32,FLEN)
NAN_BOXED(2151160322,32,FLEN)
NAN_BOXED(2755657728,32,FLEN)
NAN_BOXED(2131887441,32,FLEN)
NAN_BOXED(2151160322,32,FLEN)
NAN_BOXED(2757754880,32,FLEN)
NAN_BOXED(2131887441,32,FLEN)
NAN_BOXED(2151160322,32,FLEN)
NAN_BOXED(2758803456,32,FLEN)
NAN_BOXED(2131887441,32,FLEN)
NAN_BOXED(2151160322,32,FLEN)
NAN_BOXED(2759327744,32,FLEN)
NAN_BOXED(2131887441,32,FLEN)
NAN_BOXED(2151160322,32,FLEN)
NAN_BOXED(2759589888,32,FLEN)
NAN_BOXED(2131887441,32,FLEN)
NAN_BOXED(2151160322,32,FLEN)
NAN_BOXED(2759720960,32,FLEN)
NAN_BOXED(2131887441,32,FLEN)
NAN_BOXED(2151160322,32,FLEN)
NAN_BOXED(2759786496,32,FLEN)
NAN_BOXED(2131887441,32,FLEN)
NAN_BOXED(2151160322,32,FLEN)
NAN_BOXED(2759819264,32,FLEN)
NAN_BOXED(2131887441,32,FLEN)
NAN_BOXED(2151160322,32,FLEN)
NAN_BOXED(2759835648,32,FLEN)
NAN_BOXED(2131887441,32,FLEN)
NAN_BOXED(2151160322,32,FLEN)
NAN_BOXED(2759843840,32,FLEN)
NAN_BOXED(2131887441,32,FLEN)
NAN_BOXED(2151160322,32,FLEN)
NAN_BOXED(2759847936,32,FLEN)
NAN_BOXED(2131887441,32,FLEN)
NAN_BOXED(2151160322,32,FLEN)
NAN_BOXED(2759849984,32,FLEN)
NAN_BOXED(2131887441,32,FLEN)
NAN_BOXED(2151160322,32,FLEN)
NAN_BOXED(2759851008,32,FLEN)
NAN_BOXED(2131887441,32,FLEN)
NAN_BOXED(2151160322,32,FLEN)
NAN_BOXED(2759851520,32,FLEN)
NAN_BOXED(2131887441,32,FLEN)
NAN_BOXED(2151160322,32,FLEN)
NAN_BOXED(2759851776,32,FLEN)
NAN_BOXED(2131887441,32,FLEN)
NAN_BOXED(2151160322,32,FLEN)
NAN_BOXED(2759851904,32,FLEN)
NAN_BOXED(2131887441,32,FLEN)
NAN_BOXED(2151160322,32,FLEN)
NAN_BOXED(2759851968,32,FLEN)
NAN_BOXED(2131887441,32,FLEN)
NAN_BOXED(2151160322,32,FLEN)
NAN_BOXED(2759852000,32,FLEN)
NAN_BOXED(2131887441,32,FLEN)
NAN_BOXED(2151160322,32,FLEN)
NAN_BOXED(2759852016,32,FLEN)
NAN_BOXED(2131887441,32,FLEN)
NAN_BOXED(2151160322,32,FLEN)
NAN_BOXED(2759852024,32,FLEN)
NAN_BOXED(2131887441,32,FLEN)
NAN_BOXED(2151160322,32,FLEN)
NAN_BOXED(2759852028,32,FLEN)
NAN_BOXED(2131887441,32,FLEN)
NAN_BOXED(2151160322,32,FLEN)
NAN_BOXED(2759852030,32,FLEN)
NAN_BOXED(2131887441,32,FLEN)
NAN_BOXED(2151160322,32,FLEN)
NAN_BOXED(2759852031,32,FLEN)
NAN_BOXED(2131887441,32,FLEN)
NAN_BOXED(2151160322,32,FLEN)
NAN_BOXED(3212836865,32,FLEN)
NAN_BOXED(2131887441,32,FLEN)
NAN_BOXED(2151160322,32,FLEN)
NAN_BOXED(3212836867,32,FLEN)
NAN_BOXED(2131887441,32,FLEN)
NAN_BOXED(2151160322,32,FLEN)
NAN_BOXED(3212836871,32,FLEN)
NAN_BOXED(2131887441,32,FLEN)
NAN_BOXED(2151160322,32,FLEN)
NAN_BOXED(3214514585,32,FLEN)
NAN_BOXED(2131887441,32,FLEN)
NAN_BOXED(2151160322,32,FLEN)
NAN_BOXED(3215233609,32,FLEN)
NAN_BOXED(2131887441,32,FLEN)
NAN_BOXED(2151160322,32,FLEN)
NAN_BOXED(3216192307,32,FLEN)
NAN_BOXED(2131887441,32,FLEN)
NAN_BOXED(2151160322,32,FLEN)
NAN_BOXED(3216431981,32,FLEN)
NAN_BOXED(2131887441,32,FLEN)
NAN_BOXED(2151160322,32,FLEN)
NAN_BOXED(3216751547,32,FLEN)
NAN_BOXED(2131887441,32,FLEN)
NAN_BOXED(2151160322,32,FLEN)
NAN_BOXED(3217310788,32,FLEN)
NAN_BOXED(2131887441,32,FLEN)
NAN_BOXED(2151160322,32,FLEN)
NAN_BOXED(3217870028,32,FLEN)
NAN_BOXED(2131887441,32,FLEN)
NAN_BOXED(2151160322,32,FLEN)
NAN_BOXED(3218828726,32,FLEN)
NAN_BOXED(2131887441,32,FLEN)
NAN_BOXED(2151160322,32,FLEN)
NAN_BOXED(3219547750,32,FLEN)
NAN_BOXED(2131887441,32,FLEN)
NAN_BOXED(2151160322,32,FLEN)
NAN_BOXED(3220027099,32,FLEN)
NAN_BOXED(2131887441,32,FLEN)
NAN_BOXED(2151160322,32,FLEN)
NAN_BOXED(3221225464,32,FLEN)
NAN_BOXED(2131887441,32,FLEN)
NAN_BOXED(2151160322,32,FLEN)
NAN_BOXED(3221225468,32,FLEN)
NAN_BOXED(2131887441,32,FLEN)
NAN_BOXED(2151160322,32,FLEN)
NAN_BOXED(3221225470,32,FLEN)
NAN_BOXED(2131901081,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(2131901081,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3,32,FLEN)
NAN_BOXED(2131901081,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7,32,FLEN)
NAN_BOXED(2131901081,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1677721,32,FLEN)
NAN_BOXED(2131901081,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2396745,32,FLEN)
NAN_BOXED(2131901081,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3355443,32,FLEN)
NAN_BOXED(2131901081,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3595117,32,FLEN)
NAN_BOXED(2131901081,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3914683,32,FLEN)
NAN_BOXED(2131901081,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(4473924,32,FLEN)
NAN_BOXED(2131901081,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5033164,32,FLEN)
NAN_BOXED(2131901081,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5991862,32,FLEN)
NAN_BOXED(2131901081,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(6710886,32,FLEN)
NAN_BOXED(2131901081,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7190235,32,FLEN)
NAN_BOXED(2131901081,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388600,32,FLEN)
NAN_BOXED(2131901081,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388604,32,FLEN)
NAN_BOXED(2131901081,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388606,32,FLEN)
NAN_BOXED(2131901081,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(268435456,32,FLEN)
NAN_BOXED(2131901081,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(268435457,32,FLEN)
NAN_BOXED(2131901081,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(268435459,32,FLEN)
NAN_BOXED(2131901081,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(268435463,32,FLEN)
NAN_BOXED(2131901081,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(268435471,32,FLEN)
NAN_BOXED(2131901081,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(268435487,32,FLEN)
NAN_BOXED(2131901081,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(268435519,32,FLEN)
NAN_BOXED(2131901081,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(268435583,32,FLEN)
NAN_BOXED(2131901081,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(268435711,32,FLEN)
NAN_BOXED(2131901081,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(268435967,32,FLEN)
NAN_BOXED(2131901081,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(268436479,32,FLEN)
NAN_BOXED(2131901081,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(268437503,32,FLEN)
NAN_BOXED(2131901081,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(268439551,32,FLEN)
NAN_BOXED(2131901081,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(268443647,32,FLEN)
NAN_BOXED(2131901081,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(268451839,32,FLEN)
NAN_BOXED(2131901081,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(268468223,32,FLEN)
NAN_BOXED(2131901081,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(268500991,32,FLEN)
NAN_BOXED(2131901081,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(268566527,32,FLEN)
NAN_BOXED(2131901081,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(268697599,32,FLEN)
NAN_BOXED(2131901081,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(268959743,32,FLEN)
NAN_BOXED(2131901081,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(269484031,32,FLEN)
NAN_BOXED(2131901081,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(270532607,32,FLEN)
NAN_BOXED(2131901081,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(272629759,32,FLEN)
NAN_BOXED(2131901081,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(272629760,32,FLEN)
NAN_BOXED(2131901081,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(274726912,32,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
