
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 14:18:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32F/fmsub.s.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.s instruction of the RISC-V RV32F_Zicsr,RV32FD_Zicsr,RV64F_Zicsr,RV64FD_Zicsr extension for the fmsub_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF_Zicsr,RV32IFD_Zicsr,RV64IF_Zicsr,RV64IFD_Zicsr,RV32EF_Zicsr,RV32EFD_Zicsr,RV64EF_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fmsub_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*F.*);def TEST_CASE_1=True;",fmsub_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_29952:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x175fe4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x361e0e and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f175fe4; op2val:0x361e0e;
op3val:0x3efffffe; valaddr_reg:x3; val_offset:89856*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89856*0 + 3*234*FLEN/8, x4, x1, x2)

inst_29953:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x175fe4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x361e0e and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f175fe4; op2val:0x361e0e;
op3val:0x3effffff; valaddr_reg:x3; val_offset:89859*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89859*0 + 3*234*FLEN/8, x4, x1, x2)

inst_29954:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x175fe4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x361e0e and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f175fe4; op2val:0x361e0e;
op3val:0x3f800001; valaddr_reg:x3; val_offset:89862*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89862*0 + 3*234*FLEN/8, x4, x1, x2)

inst_29955:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x175fe4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x361e0e and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f175fe4; op2val:0x361e0e;
op3val:0x3f800003; valaddr_reg:x3; val_offset:89865*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89865*0 + 3*234*FLEN/8, x4, x1, x2)

inst_29956:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x175fe4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x361e0e and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f175fe4; op2val:0x361e0e;
op3val:0x3f800007; valaddr_reg:x3; val_offset:89868*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89868*0 + 3*234*FLEN/8, x4, x1, x2)

inst_29957:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x175fe4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x361e0e and fs3 == 0 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f175fe4; op2val:0x361e0e;
op3val:0x3f999999; valaddr_reg:x3; val_offset:89871*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89871*0 + 3*234*FLEN/8, x4, x1, x2)

inst_29958:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x175fe4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x361e0e and fs3 == 0 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f175fe4; op2val:0x361e0e;
op3val:0x3fa49249; valaddr_reg:x3; val_offset:89874*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89874*0 + 3*234*FLEN/8, x4, x1, x2)

inst_29959:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x175fe4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x361e0e and fs3 == 0 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f175fe4; op2val:0x361e0e;
op3val:0x3fb33333; valaddr_reg:x3; val_offset:89877*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89877*0 + 3*234*FLEN/8, x4, x1, x2)

inst_29960:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x175fe4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x361e0e and fs3 == 0 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f175fe4; op2val:0x361e0e;
op3val:0x3fb6db6d; valaddr_reg:x3; val_offset:89880*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89880*0 + 3*234*FLEN/8, x4, x1, x2)

inst_29961:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x175fe4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x361e0e and fs3 == 0 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f175fe4; op2val:0x361e0e;
op3val:0x3fbbbbbb; valaddr_reg:x3; val_offset:89883*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89883*0 + 3*234*FLEN/8, x4, x1, x2)

inst_29962:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x175fe4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x361e0e and fs3 == 0 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f175fe4; op2val:0x361e0e;
op3val:0x3fc44444; valaddr_reg:x3; val_offset:89886*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89886*0 + 3*234*FLEN/8, x4, x1, x2)

inst_29963:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x175fe4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x361e0e and fs3 == 0 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f175fe4; op2val:0x361e0e;
op3val:0x3fcccccc; valaddr_reg:x3; val_offset:89889*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89889*0 + 3*234*FLEN/8, x4, x1, x2)

inst_29964:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x175fe4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x361e0e and fs3 == 0 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f175fe4; op2val:0x361e0e;
op3val:0x3fdb6db6; valaddr_reg:x3; val_offset:89892*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89892*0 + 3*234*FLEN/8, x4, x1, x2)

inst_29965:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x175fe4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x361e0e and fs3 == 0 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f175fe4; op2val:0x361e0e;
op3val:0x3fe66666; valaddr_reg:x3; val_offset:89895*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89895*0 + 3*234*FLEN/8, x4, x1, x2)

inst_29966:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x175fe4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x361e0e and fs3 == 0 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f175fe4; op2val:0x361e0e;
op3val:0x3fedb6db; valaddr_reg:x3; val_offset:89898*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89898*0 + 3*234*FLEN/8, x4, x1, x2)

inst_29967:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x175fe4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x361e0e and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f175fe4; op2val:0x361e0e;
op3val:0x3ffffff8; valaddr_reg:x3; val_offset:89901*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89901*0 + 3*234*FLEN/8, x4, x1, x2)

inst_29968:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x175fe4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x361e0e and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f175fe4; op2val:0x361e0e;
op3val:0x3ffffffc; valaddr_reg:x3; val_offset:89904*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89904*0 + 3*234*FLEN/8, x4, x1, x2)

inst_29969:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x175fe4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x361e0e and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f175fe4; op2val:0x361e0e;
op3val:0x3ffffffe; valaddr_reg:x3; val_offset:89907*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89907*0 + 3*234*FLEN/8, x4, x1, x2)

inst_29970:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x3f800001; valaddr_reg:x3; val_offset:89910*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89910*0 + 3*234*FLEN/8, x4, x1, x2)

inst_29971:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x3f800003; valaddr_reg:x3; val_offset:89913*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89913*0 + 3*234*FLEN/8, x4, x1, x2)

inst_29972:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x3f800007; valaddr_reg:x3; val_offset:89916*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89916*0 + 3*234*FLEN/8, x4, x1, x2)

inst_29973:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x3f999999; valaddr_reg:x3; val_offset:89919*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89919*0 + 3*234*FLEN/8, x4, x1, x2)

inst_29974:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x3fa49249; valaddr_reg:x3; val_offset:89922*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89922*0 + 3*234*FLEN/8, x4, x1, x2)

inst_29975:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x3fb33333; valaddr_reg:x3; val_offset:89925*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89925*0 + 3*234*FLEN/8, x4, x1, x2)

inst_29976:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x3fb6db6d; valaddr_reg:x3; val_offset:89928*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89928*0 + 3*234*FLEN/8, x4, x1, x2)

inst_29977:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x3fbbbbbb; valaddr_reg:x3; val_offset:89931*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89931*0 + 3*234*FLEN/8, x4, x1, x2)

inst_29978:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x3fc44444; valaddr_reg:x3; val_offset:89934*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89934*0 + 3*234*FLEN/8, x4, x1, x2)

inst_29979:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x3fcccccc; valaddr_reg:x3; val_offset:89937*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89937*0 + 3*234*FLEN/8, x4, x1, x2)

inst_29980:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x3fdb6db6; valaddr_reg:x3; val_offset:89940*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89940*0 + 3*234*FLEN/8, x4, x1, x2)

inst_29981:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x3fe66666; valaddr_reg:x3; val_offset:89943*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89943*0 + 3*234*FLEN/8, x4, x1, x2)

inst_29982:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x3fedb6db; valaddr_reg:x3; val_offset:89946*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89946*0 + 3*234*FLEN/8, x4, x1, x2)

inst_29983:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x3ffffff8; valaddr_reg:x3; val_offset:89949*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89949*0 + 3*234*FLEN/8, x4, x1, x2)

inst_29984:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x3ffffffc; valaddr_reg:x3; val_offset:89952*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89952*0 + 3*234*FLEN/8, x4, x1, x2)

inst_29985:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x3ffffffe; valaddr_reg:x3; val_offset:89955*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89955*0 + 3*234*FLEN/8, x4, x1, x2)

inst_29986:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x98 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x4c000000; valaddr_reg:x3; val_offset:89958*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89958*0 + 3*234*FLEN/8, x4, x1, x2)

inst_29987:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x98 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x4c000001; valaddr_reg:x3; val_offset:89961*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89961*0 + 3*234*FLEN/8, x4, x1, x2)

inst_29988:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x98 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x4c000003; valaddr_reg:x3; val_offset:89964*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89964*0 + 3*234*FLEN/8, x4, x1, x2)

inst_29989:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x98 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x4c000007; valaddr_reg:x3; val_offset:89967*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89967*0 + 3*234*FLEN/8, x4, x1, x2)

inst_29990:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x98 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x4c00000f; valaddr_reg:x3; val_offset:89970*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89970*0 + 3*234*FLEN/8, x4, x1, x2)

inst_29991:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x98 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x4c00001f; valaddr_reg:x3; val_offset:89973*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89973*0 + 3*234*FLEN/8, x4, x1, x2)

inst_29992:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x98 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x4c00003f; valaddr_reg:x3; val_offset:89976*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89976*0 + 3*234*FLEN/8, x4, x1, x2)

inst_29993:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x98 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x4c00007f; valaddr_reg:x3; val_offset:89979*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89979*0 + 3*234*FLEN/8, x4, x1, x2)

inst_29994:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x98 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x4c0000ff; valaddr_reg:x3; val_offset:89982*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89982*0 + 3*234*FLEN/8, x4, x1, x2)

inst_29995:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x98 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x4c0001ff; valaddr_reg:x3; val_offset:89985*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89985*0 + 3*234*FLEN/8, x4, x1, x2)

inst_29996:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x98 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x4c0003ff; valaddr_reg:x3; val_offset:89988*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89988*0 + 3*234*FLEN/8, x4, x1, x2)

inst_29997:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x98 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x4c0007ff; valaddr_reg:x3; val_offset:89991*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89991*0 + 3*234*FLEN/8, x4, x1, x2)

inst_29998:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x98 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x4c000fff; valaddr_reg:x3; val_offset:89994*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89994*0 + 3*234*FLEN/8, x4, x1, x2)

inst_29999:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x98 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x4c001fff; valaddr_reg:x3; val_offset:89997*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89997*0 + 3*234*FLEN/8, x4, x1, x2)

inst_30000:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x98 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x4c003fff; valaddr_reg:x3; val_offset:90000*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90000*0 + 3*234*FLEN/8, x4, x1, x2)

inst_30001:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x98 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x4c007fff; valaddr_reg:x3; val_offset:90003*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90003*0 + 3*234*FLEN/8, x4, x1, x2)

inst_30002:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x98 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x4c00ffff; valaddr_reg:x3; val_offset:90006*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90006*0 + 3*234*FLEN/8, x4, x1, x2)

inst_30003:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x98 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x4c01ffff; valaddr_reg:x3; val_offset:90009*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90009*0 + 3*234*FLEN/8, x4, x1, x2)

inst_30004:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x98 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x4c03ffff; valaddr_reg:x3; val_offset:90012*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90012*0 + 3*234*FLEN/8, x4, x1, x2)

inst_30005:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x98 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x4c07ffff; valaddr_reg:x3; val_offset:90015*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90015*0 + 3*234*FLEN/8, x4, x1, x2)

inst_30006:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x98 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x4c0fffff; valaddr_reg:x3; val_offset:90018*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90018*0 + 3*234*FLEN/8, x4, x1, x2)

inst_30007:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x98 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x4c1fffff; valaddr_reg:x3; val_offset:90021*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90021*0 + 3*234*FLEN/8, x4, x1, x2)

inst_30008:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x98 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x4c3fffff; valaddr_reg:x3; val_offset:90024*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90024*0 + 3*234*FLEN/8, x4, x1, x2)

inst_30009:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x98 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x4c400000; valaddr_reg:x3; val_offset:90027*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90027*0 + 3*234*FLEN/8, x4, x1, x2)

inst_30010:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x98 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x4c600000; valaddr_reg:x3; val_offset:90030*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90030*0 + 3*234*FLEN/8, x4, x1, x2)

inst_30011:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x98 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x4c700000; valaddr_reg:x3; val_offset:90033*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90033*0 + 3*234*FLEN/8, x4, x1, x2)

inst_30012:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x98 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x4c780000; valaddr_reg:x3; val_offset:90036*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90036*0 + 3*234*FLEN/8, x4, x1, x2)

inst_30013:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x98 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x4c7c0000; valaddr_reg:x3; val_offset:90039*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90039*0 + 3*234*FLEN/8, x4, x1, x2)

inst_30014:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x98 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x4c7e0000; valaddr_reg:x3; val_offset:90042*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90042*0 + 3*234*FLEN/8, x4, x1, x2)

inst_30015:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x98 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x4c7f0000; valaddr_reg:x3; val_offset:90045*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90045*0 + 3*234*FLEN/8, x4, x1, x2)

inst_30016:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x98 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x4c7f8000; valaddr_reg:x3; val_offset:90048*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90048*0 + 3*234*FLEN/8, x4, x1, x2)

inst_30017:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x98 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x4c7fc000; valaddr_reg:x3; val_offset:90051*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90051*0 + 3*234*FLEN/8, x4, x1, x2)

inst_30018:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x98 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x4c7fe000; valaddr_reg:x3; val_offset:90054*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90054*0 + 3*234*FLEN/8, x4, x1, x2)

inst_30019:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x98 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x4c7ff000; valaddr_reg:x3; val_offset:90057*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90057*0 + 3*234*FLEN/8, x4, x1, x2)

inst_30020:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x98 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x4c7ff800; valaddr_reg:x3; val_offset:90060*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90060*0 + 3*234*FLEN/8, x4, x1, x2)

inst_30021:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x98 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x4c7ffc00; valaddr_reg:x3; val_offset:90063*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90063*0 + 3*234*FLEN/8, x4, x1, x2)

inst_30022:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x98 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x4c7ffe00; valaddr_reg:x3; val_offset:90066*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90066*0 + 3*234*FLEN/8, x4, x1, x2)

inst_30023:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x98 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x4c7fff00; valaddr_reg:x3; val_offset:90069*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90069*0 + 3*234*FLEN/8, x4, x1, x2)

inst_30024:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x98 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x4c7fff80; valaddr_reg:x3; val_offset:90072*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90072*0 + 3*234*FLEN/8, x4, x1, x2)

inst_30025:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x98 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x4c7fffc0; valaddr_reg:x3; val_offset:90075*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90075*0 + 3*234*FLEN/8, x4, x1, x2)

inst_30026:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x98 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x4c7fffe0; valaddr_reg:x3; val_offset:90078*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90078*0 + 3*234*FLEN/8, x4, x1, x2)

inst_30027:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x98 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x4c7ffff0; valaddr_reg:x3; val_offset:90081*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90081*0 + 3*234*FLEN/8, x4, x1, x2)

inst_30028:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x98 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x4c7ffff8; valaddr_reg:x3; val_offset:90084*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90084*0 + 3*234*FLEN/8, x4, x1, x2)

inst_30029:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x98 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x4c7ffffc; valaddr_reg:x3; val_offset:90087*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90087*0 + 3*234*FLEN/8, x4, x1, x2)

inst_30030:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x98 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x4c7ffffe; valaddr_reg:x3; val_offset:90090*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90090*0 + 3*234*FLEN/8, x4, x1, x2)

inst_30031:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x98 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x4c7fffff; valaddr_reg:x3; val_offset:90093*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90093*0 + 3*234*FLEN/8, x4, x1, x2)

inst_30032:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x187a72 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35b9c5 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f187a72; op2val:0x35b9c5;
op3val:0x33800000; valaddr_reg:x3; val_offset:90096*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90096*0 + 3*234*FLEN/8, x4, x1, x2)

inst_30033:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x187a72 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35b9c5 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f187a72; op2val:0x35b9c5;
op3val:0x33800001; valaddr_reg:x3; val_offset:90099*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90099*0 + 3*234*FLEN/8, x4, x1, x2)

inst_30034:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x187a72 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35b9c5 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f187a72; op2val:0x35b9c5;
op3val:0x33800003; valaddr_reg:x3; val_offset:90102*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90102*0 + 3*234*FLEN/8, x4, x1, x2)

inst_30035:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x187a72 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35b9c5 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f187a72; op2val:0x35b9c5;
op3val:0x33800007; valaddr_reg:x3; val_offset:90105*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90105*0 + 3*234*FLEN/8, x4, x1, x2)

inst_30036:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x187a72 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35b9c5 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f187a72; op2val:0x35b9c5;
op3val:0x3380000f; valaddr_reg:x3; val_offset:90108*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90108*0 + 3*234*FLEN/8, x4, x1, x2)

inst_30037:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x187a72 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35b9c5 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f187a72; op2val:0x35b9c5;
op3val:0x3380001f; valaddr_reg:x3; val_offset:90111*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90111*0 + 3*234*FLEN/8, x4, x1, x2)

inst_30038:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x187a72 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35b9c5 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f187a72; op2val:0x35b9c5;
op3val:0x3380003f; valaddr_reg:x3; val_offset:90114*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90114*0 + 3*234*FLEN/8, x4, x1, x2)

inst_30039:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x187a72 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35b9c5 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f187a72; op2val:0x35b9c5;
op3val:0x3380007f; valaddr_reg:x3; val_offset:90117*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90117*0 + 3*234*FLEN/8, x4, x1, x2)

inst_30040:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x187a72 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35b9c5 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f187a72; op2val:0x35b9c5;
op3val:0x338000ff; valaddr_reg:x3; val_offset:90120*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90120*0 + 3*234*FLEN/8, x4, x1, x2)

inst_30041:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x187a72 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35b9c5 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f187a72; op2val:0x35b9c5;
op3val:0x338001ff; valaddr_reg:x3; val_offset:90123*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90123*0 + 3*234*FLEN/8, x4, x1, x2)

inst_30042:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x187a72 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35b9c5 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f187a72; op2val:0x35b9c5;
op3val:0x338003ff; valaddr_reg:x3; val_offset:90126*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90126*0 + 3*234*FLEN/8, x4, x1, x2)

inst_30043:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x187a72 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35b9c5 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f187a72; op2val:0x35b9c5;
op3val:0x338007ff; valaddr_reg:x3; val_offset:90129*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90129*0 + 3*234*FLEN/8, x4, x1, x2)

inst_30044:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x187a72 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35b9c5 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f187a72; op2val:0x35b9c5;
op3val:0x33800fff; valaddr_reg:x3; val_offset:90132*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90132*0 + 3*234*FLEN/8, x4, x1, x2)

inst_30045:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x187a72 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35b9c5 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f187a72; op2val:0x35b9c5;
op3val:0x33801fff; valaddr_reg:x3; val_offset:90135*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90135*0 + 3*234*FLEN/8, x4, x1, x2)

inst_30046:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x187a72 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35b9c5 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f187a72; op2val:0x35b9c5;
op3val:0x33803fff; valaddr_reg:x3; val_offset:90138*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90138*0 + 3*234*FLEN/8, x4, x1, x2)

inst_30047:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x187a72 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35b9c5 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f187a72; op2val:0x35b9c5;
op3val:0x33807fff; valaddr_reg:x3; val_offset:90141*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90141*0 + 3*234*FLEN/8, x4, x1, x2)

inst_30048:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x187a72 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35b9c5 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f187a72; op2val:0x35b9c5;
op3val:0x3380ffff; valaddr_reg:x3; val_offset:90144*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90144*0 + 3*234*FLEN/8, x4, x1, x2)

inst_30049:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x187a72 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35b9c5 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f187a72; op2val:0x35b9c5;
op3val:0x3381ffff; valaddr_reg:x3; val_offset:90147*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90147*0 + 3*234*FLEN/8, x4, x1, x2)

inst_30050:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x187a72 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35b9c5 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f187a72; op2val:0x35b9c5;
op3val:0x3383ffff; valaddr_reg:x3; val_offset:90150*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90150*0 + 3*234*FLEN/8, x4, x1, x2)

inst_30051:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x187a72 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35b9c5 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f187a72; op2val:0x35b9c5;
op3val:0x3387ffff; valaddr_reg:x3; val_offset:90153*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90153*0 + 3*234*FLEN/8, x4, x1, x2)

inst_30052:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x187a72 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35b9c5 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f187a72; op2val:0x35b9c5;
op3val:0x338fffff; valaddr_reg:x3; val_offset:90156*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90156*0 + 3*234*FLEN/8, x4, x1, x2)

inst_30053:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x187a72 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35b9c5 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f187a72; op2val:0x35b9c5;
op3val:0x339fffff; valaddr_reg:x3; val_offset:90159*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90159*0 + 3*234*FLEN/8, x4, x1, x2)

inst_30054:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x187a72 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35b9c5 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f187a72; op2val:0x35b9c5;
op3val:0x33bfffff; valaddr_reg:x3; val_offset:90162*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90162*0 + 3*234*FLEN/8, x4, x1, x2)

inst_30055:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x187a72 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35b9c5 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f187a72; op2val:0x35b9c5;
op3val:0x33c00000; valaddr_reg:x3; val_offset:90165*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90165*0 + 3*234*FLEN/8, x4, x1, x2)

inst_30056:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x187a72 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35b9c5 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f187a72; op2val:0x35b9c5;
op3val:0x33e00000; valaddr_reg:x3; val_offset:90168*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90168*0 + 3*234*FLEN/8, x4, x1, x2)

inst_30057:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x187a72 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35b9c5 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f187a72; op2val:0x35b9c5;
op3val:0x33f00000; valaddr_reg:x3; val_offset:90171*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90171*0 + 3*234*FLEN/8, x4, x1, x2)

inst_30058:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x187a72 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35b9c5 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f187a72; op2val:0x35b9c5;
op3val:0x33f80000; valaddr_reg:x3; val_offset:90174*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90174*0 + 3*234*FLEN/8, x4, x1, x2)

inst_30059:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x187a72 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35b9c5 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f187a72; op2val:0x35b9c5;
op3val:0x33fc0000; valaddr_reg:x3; val_offset:90177*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90177*0 + 3*234*FLEN/8, x4, x1, x2)

inst_30060:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x187a72 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35b9c5 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f187a72; op2val:0x35b9c5;
op3val:0x33fe0000; valaddr_reg:x3; val_offset:90180*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90180*0 + 3*234*FLEN/8, x4, x1, x2)

inst_30061:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x187a72 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35b9c5 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f187a72; op2val:0x35b9c5;
op3val:0x33ff0000; valaddr_reg:x3; val_offset:90183*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90183*0 + 3*234*FLEN/8, x4, x1, x2)

inst_30062:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x187a72 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35b9c5 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f187a72; op2val:0x35b9c5;
op3val:0x33ff8000; valaddr_reg:x3; val_offset:90186*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90186*0 + 3*234*FLEN/8, x4, x1, x2)

inst_30063:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x187a72 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35b9c5 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f187a72; op2val:0x35b9c5;
op3val:0x33ffc000; valaddr_reg:x3; val_offset:90189*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90189*0 + 3*234*FLEN/8, x4, x1, x2)

inst_30064:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x187a72 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35b9c5 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f187a72; op2val:0x35b9c5;
op3val:0x33ffe000; valaddr_reg:x3; val_offset:90192*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90192*0 + 3*234*FLEN/8, x4, x1, x2)

inst_30065:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x187a72 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35b9c5 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f187a72; op2val:0x35b9c5;
op3val:0x33fff000; valaddr_reg:x3; val_offset:90195*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90195*0 + 3*234*FLEN/8, x4, x1, x2)

inst_30066:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x187a72 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35b9c5 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f187a72; op2val:0x35b9c5;
op3val:0x33fff800; valaddr_reg:x3; val_offset:90198*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90198*0 + 3*234*FLEN/8, x4, x1, x2)

inst_30067:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x187a72 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35b9c5 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f187a72; op2val:0x35b9c5;
op3val:0x33fffc00; valaddr_reg:x3; val_offset:90201*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90201*0 + 3*234*FLEN/8, x4, x1, x2)

inst_30068:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x187a72 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35b9c5 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f187a72; op2val:0x35b9c5;
op3val:0x33fffe00; valaddr_reg:x3; val_offset:90204*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90204*0 + 3*234*FLEN/8, x4, x1, x2)

inst_30069:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x187a72 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35b9c5 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f187a72; op2val:0x35b9c5;
op3val:0x33ffff00; valaddr_reg:x3; val_offset:90207*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90207*0 + 3*234*FLEN/8, x4, x1, x2)

inst_30070:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x187a72 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35b9c5 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f187a72; op2val:0x35b9c5;
op3val:0x33ffff80; valaddr_reg:x3; val_offset:90210*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90210*0 + 3*234*FLEN/8, x4, x1, x2)

inst_30071:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x187a72 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35b9c5 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f187a72; op2val:0x35b9c5;
op3val:0x33ffffc0; valaddr_reg:x3; val_offset:90213*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90213*0 + 3*234*FLEN/8, x4, x1, x2)

inst_30072:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x187a72 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35b9c5 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f187a72; op2val:0x35b9c5;
op3val:0x33ffffe0; valaddr_reg:x3; val_offset:90216*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90216*0 + 3*234*FLEN/8, x4, x1, x2)

inst_30073:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x187a72 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35b9c5 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f187a72; op2val:0x35b9c5;
op3val:0x33fffff0; valaddr_reg:x3; val_offset:90219*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90219*0 + 3*234*FLEN/8, x4, x1, x2)

inst_30074:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x187a72 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35b9c5 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f187a72; op2val:0x35b9c5;
op3val:0x33fffff8; valaddr_reg:x3; val_offset:90222*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90222*0 + 3*234*FLEN/8, x4, x1, x2)

inst_30075:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x187a72 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35b9c5 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f187a72; op2val:0x35b9c5;
op3val:0x33fffffc; valaddr_reg:x3; val_offset:90225*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90225*0 + 3*234*FLEN/8, x4, x1, x2)

inst_30076:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x187a72 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35b9c5 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f187a72; op2val:0x35b9c5;
op3val:0x33fffffe; valaddr_reg:x3; val_offset:90228*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90228*0 + 3*234*FLEN/8, x4, x1, x2)

inst_30077:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x187a72 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35b9c5 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f187a72; op2val:0x35b9c5;
op3val:0x33ffffff; valaddr_reg:x3; val_offset:90231*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90231*0 + 3*234*FLEN/8, x4, x1, x2)

inst_30078:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x187a72 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35b9c5 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f187a72; op2val:0x35b9c5;
op3val:0x3f800001; valaddr_reg:x3; val_offset:90234*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90234*0 + 3*234*FLEN/8, x4, x1, x2)

inst_30079:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x187a72 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35b9c5 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f187a72; op2val:0x35b9c5;
op3val:0x3f800003; valaddr_reg:x3; val_offset:90237*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90237*0 + 3*234*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(2132238308,32,FLEN)
NAN_BOXED(3546638,32,FLEN)
NAN_BOXED(1056964606,32,FLEN)
NAN_BOXED(2132238308,32,FLEN)
NAN_BOXED(3546638,32,FLEN)
NAN_BOXED(1056964607,32,FLEN)
NAN_BOXED(2132238308,32,FLEN)
NAN_BOXED(3546638,32,FLEN)
NAN_BOXED(1065353217,32,FLEN)
NAN_BOXED(2132238308,32,FLEN)
NAN_BOXED(3546638,32,FLEN)
NAN_BOXED(1065353219,32,FLEN)
NAN_BOXED(2132238308,32,FLEN)
NAN_BOXED(3546638,32,FLEN)
NAN_BOXED(1065353223,32,FLEN)
NAN_BOXED(2132238308,32,FLEN)
NAN_BOXED(3546638,32,FLEN)
NAN_BOXED(1067030937,32,FLEN)
NAN_BOXED(2132238308,32,FLEN)
NAN_BOXED(3546638,32,FLEN)
NAN_BOXED(1067749961,32,FLEN)
NAN_BOXED(2132238308,32,FLEN)
NAN_BOXED(3546638,32,FLEN)
NAN_BOXED(1068708659,32,FLEN)
NAN_BOXED(2132238308,32,FLEN)
NAN_BOXED(3546638,32,FLEN)
NAN_BOXED(1068948333,32,FLEN)
NAN_BOXED(2132238308,32,FLEN)
NAN_BOXED(3546638,32,FLEN)
NAN_BOXED(1069267899,32,FLEN)
NAN_BOXED(2132238308,32,FLEN)
NAN_BOXED(3546638,32,FLEN)
NAN_BOXED(1069827140,32,FLEN)
NAN_BOXED(2132238308,32,FLEN)
NAN_BOXED(3546638,32,FLEN)
NAN_BOXED(1070386380,32,FLEN)
NAN_BOXED(2132238308,32,FLEN)
NAN_BOXED(3546638,32,FLEN)
NAN_BOXED(1071345078,32,FLEN)
NAN_BOXED(2132238308,32,FLEN)
NAN_BOXED(3546638,32,FLEN)
NAN_BOXED(1072064102,32,FLEN)
NAN_BOXED(2132238308,32,FLEN)
NAN_BOXED(3546638,32,FLEN)
NAN_BOXED(1072543451,32,FLEN)
NAN_BOXED(2132238308,32,FLEN)
NAN_BOXED(3546638,32,FLEN)
NAN_BOXED(1073741816,32,FLEN)
NAN_BOXED(2132238308,32,FLEN)
NAN_BOXED(3546638,32,FLEN)
NAN_BOXED(1073741820,32,FLEN)
NAN_BOXED(2132238308,32,FLEN)
NAN_BOXED(3546638,32,FLEN)
NAN_BOXED(1073741822,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1065353217,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1065353219,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1065353223,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1067030937,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1067749961,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1068708659,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1068948333,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1069267899,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1069827140,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1070386380,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1071345078,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1072064102,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1072543451,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1073741816,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1073741820,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1073741822,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1275068416,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1275068417,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1275068419,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1275068423,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1275068431,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1275068447,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1275068479,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1275068543,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1275068671,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1275068927,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1275069439,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1275070463,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1275072511,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1275076607,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1275084799,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1275101183,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1275133951,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1275199487,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1275330559,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1275592703,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1276116991,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1277165567,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1279262719,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1279262720,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1281359872,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1282408448,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1282932736,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1283194880,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1283325952,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1283391488,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1283424256,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1283440640,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1283448832,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1283452928,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1283454976,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1283456000,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1283456512,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1283456768,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1283456896,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1283456960,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1283456992,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1283457008,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1283457016,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1283457020,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1283457022,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1283457023,32,FLEN)
NAN_BOXED(2132310642,32,FLEN)
NAN_BOXED(3520965,32,FLEN)
NAN_BOXED(864026624,32,FLEN)
NAN_BOXED(2132310642,32,FLEN)
NAN_BOXED(3520965,32,FLEN)
NAN_BOXED(864026625,32,FLEN)
NAN_BOXED(2132310642,32,FLEN)
NAN_BOXED(3520965,32,FLEN)
NAN_BOXED(864026627,32,FLEN)
NAN_BOXED(2132310642,32,FLEN)
NAN_BOXED(3520965,32,FLEN)
NAN_BOXED(864026631,32,FLEN)
NAN_BOXED(2132310642,32,FLEN)
NAN_BOXED(3520965,32,FLEN)
NAN_BOXED(864026639,32,FLEN)
NAN_BOXED(2132310642,32,FLEN)
NAN_BOXED(3520965,32,FLEN)
NAN_BOXED(864026655,32,FLEN)
NAN_BOXED(2132310642,32,FLEN)
NAN_BOXED(3520965,32,FLEN)
NAN_BOXED(864026687,32,FLEN)
NAN_BOXED(2132310642,32,FLEN)
NAN_BOXED(3520965,32,FLEN)
NAN_BOXED(864026751,32,FLEN)
NAN_BOXED(2132310642,32,FLEN)
NAN_BOXED(3520965,32,FLEN)
NAN_BOXED(864026879,32,FLEN)
NAN_BOXED(2132310642,32,FLEN)
NAN_BOXED(3520965,32,FLEN)
NAN_BOXED(864027135,32,FLEN)
NAN_BOXED(2132310642,32,FLEN)
NAN_BOXED(3520965,32,FLEN)
NAN_BOXED(864027647,32,FLEN)
NAN_BOXED(2132310642,32,FLEN)
NAN_BOXED(3520965,32,FLEN)
NAN_BOXED(864028671,32,FLEN)
NAN_BOXED(2132310642,32,FLEN)
NAN_BOXED(3520965,32,FLEN)
NAN_BOXED(864030719,32,FLEN)
NAN_BOXED(2132310642,32,FLEN)
NAN_BOXED(3520965,32,FLEN)
NAN_BOXED(864034815,32,FLEN)
NAN_BOXED(2132310642,32,FLEN)
NAN_BOXED(3520965,32,FLEN)
NAN_BOXED(864043007,32,FLEN)
NAN_BOXED(2132310642,32,FLEN)
NAN_BOXED(3520965,32,FLEN)
NAN_BOXED(864059391,32,FLEN)
NAN_BOXED(2132310642,32,FLEN)
NAN_BOXED(3520965,32,FLEN)
NAN_BOXED(864092159,32,FLEN)
NAN_BOXED(2132310642,32,FLEN)
NAN_BOXED(3520965,32,FLEN)
NAN_BOXED(864157695,32,FLEN)
NAN_BOXED(2132310642,32,FLEN)
NAN_BOXED(3520965,32,FLEN)
NAN_BOXED(864288767,32,FLEN)
NAN_BOXED(2132310642,32,FLEN)
NAN_BOXED(3520965,32,FLEN)
NAN_BOXED(864550911,32,FLEN)
NAN_BOXED(2132310642,32,FLEN)
NAN_BOXED(3520965,32,FLEN)
NAN_BOXED(865075199,32,FLEN)
NAN_BOXED(2132310642,32,FLEN)
NAN_BOXED(3520965,32,FLEN)
NAN_BOXED(866123775,32,FLEN)
NAN_BOXED(2132310642,32,FLEN)
NAN_BOXED(3520965,32,FLEN)
NAN_BOXED(868220927,32,FLEN)
NAN_BOXED(2132310642,32,FLEN)
NAN_BOXED(3520965,32,FLEN)
NAN_BOXED(868220928,32,FLEN)
NAN_BOXED(2132310642,32,FLEN)
NAN_BOXED(3520965,32,FLEN)
NAN_BOXED(870318080,32,FLEN)
NAN_BOXED(2132310642,32,FLEN)
NAN_BOXED(3520965,32,FLEN)
NAN_BOXED(871366656,32,FLEN)
NAN_BOXED(2132310642,32,FLEN)
NAN_BOXED(3520965,32,FLEN)
NAN_BOXED(871890944,32,FLEN)
NAN_BOXED(2132310642,32,FLEN)
NAN_BOXED(3520965,32,FLEN)
NAN_BOXED(872153088,32,FLEN)
NAN_BOXED(2132310642,32,FLEN)
NAN_BOXED(3520965,32,FLEN)
NAN_BOXED(872284160,32,FLEN)
NAN_BOXED(2132310642,32,FLEN)
NAN_BOXED(3520965,32,FLEN)
NAN_BOXED(872349696,32,FLEN)
NAN_BOXED(2132310642,32,FLEN)
NAN_BOXED(3520965,32,FLEN)
NAN_BOXED(872382464,32,FLEN)
NAN_BOXED(2132310642,32,FLEN)
NAN_BOXED(3520965,32,FLEN)
NAN_BOXED(872398848,32,FLEN)
NAN_BOXED(2132310642,32,FLEN)
NAN_BOXED(3520965,32,FLEN)
NAN_BOXED(872407040,32,FLEN)
NAN_BOXED(2132310642,32,FLEN)
NAN_BOXED(3520965,32,FLEN)
NAN_BOXED(872411136,32,FLEN)
NAN_BOXED(2132310642,32,FLEN)
NAN_BOXED(3520965,32,FLEN)
NAN_BOXED(872413184,32,FLEN)
NAN_BOXED(2132310642,32,FLEN)
NAN_BOXED(3520965,32,FLEN)
NAN_BOXED(872414208,32,FLEN)
NAN_BOXED(2132310642,32,FLEN)
NAN_BOXED(3520965,32,FLEN)
NAN_BOXED(872414720,32,FLEN)
NAN_BOXED(2132310642,32,FLEN)
NAN_BOXED(3520965,32,FLEN)
NAN_BOXED(872414976,32,FLEN)
NAN_BOXED(2132310642,32,FLEN)
NAN_BOXED(3520965,32,FLEN)
NAN_BOXED(872415104,32,FLEN)
NAN_BOXED(2132310642,32,FLEN)
NAN_BOXED(3520965,32,FLEN)
NAN_BOXED(872415168,32,FLEN)
NAN_BOXED(2132310642,32,FLEN)
NAN_BOXED(3520965,32,FLEN)
NAN_BOXED(872415200,32,FLEN)
NAN_BOXED(2132310642,32,FLEN)
NAN_BOXED(3520965,32,FLEN)
NAN_BOXED(872415216,32,FLEN)
NAN_BOXED(2132310642,32,FLEN)
NAN_BOXED(3520965,32,FLEN)
NAN_BOXED(872415224,32,FLEN)
NAN_BOXED(2132310642,32,FLEN)
NAN_BOXED(3520965,32,FLEN)
NAN_BOXED(872415228,32,FLEN)
NAN_BOXED(2132310642,32,FLEN)
NAN_BOXED(3520965,32,FLEN)
NAN_BOXED(872415230,32,FLEN)
NAN_BOXED(2132310642,32,FLEN)
NAN_BOXED(3520965,32,FLEN)
NAN_BOXED(872415231,32,FLEN)
NAN_BOXED(2132310642,32,FLEN)
NAN_BOXED(3520965,32,FLEN)
NAN_BOXED(1065353217,32,FLEN)
NAN_BOXED(2132310642,32,FLEN)
NAN_BOXED(3520965,32,FLEN)
NAN_BOXED(1065353219,32,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
