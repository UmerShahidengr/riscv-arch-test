
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 14:18:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32F/fmsub.s.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.s instruction of the RISC-V RV32F_Zicsr,RV32FD_Zicsr,RV64F_Zicsr,RV64FD_Zicsr extension for the fmsub_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF_Zicsr,RV32IFD_Zicsr,RV64IF_Zicsr,RV64IFD_Zicsr,RV32EF_Zicsr,RV32EFD_Zicsr,RV64EF_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fmsub_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*F.*);def TEST_CASE_1=True;",fmsub_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_35456:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3307a6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2dc1fa and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3307a6; op2val:0x802dc1fa;
op3val:0xbf800007; valaddr_reg:x3; val_offset:106368*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106368*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35457:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3307a6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2dc1fa and fs3 == 1 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3307a6; op2val:0x802dc1fa;
op3val:0xbf999999; valaddr_reg:x3; val_offset:106371*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106371*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35458:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3307a6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2dc1fa and fs3 == 1 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3307a6; op2val:0x802dc1fa;
op3val:0xbfa49249; valaddr_reg:x3; val_offset:106374*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106374*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35459:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3307a6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2dc1fa and fs3 == 1 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3307a6; op2val:0x802dc1fa;
op3val:0xbfb33333; valaddr_reg:x3; val_offset:106377*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106377*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35460:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3307a6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2dc1fa and fs3 == 1 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3307a6; op2val:0x802dc1fa;
op3val:0xbfb6db6d; valaddr_reg:x3; val_offset:106380*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106380*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35461:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3307a6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2dc1fa and fs3 == 1 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3307a6; op2val:0x802dc1fa;
op3val:0xbfbbbbbb; valaddr_reg:x3; val_offset:106383*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106383*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35462:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3307a6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2dc1fa and fs3 == 1 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3307a6; op2val:0x802dc1fa;
op3val:0xbfc44444; valaddr_reg:x3; val_offset:106386*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106386*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35463:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3307a6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2dc1fa and fs3 == 1 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3307a6; op2val:0x802dc1fa;
op3val:0xbfcccccc; valaddr_reg:x3; val_offset:106389*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106389*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35464:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3307a6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2dc1fa and fs3 == 1 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3307a6; op2val:0x802dc1fa;
op3val:0xbfdb6db6; valaddr_reg:x3; val_offset:106392*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106392*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35465:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3307a6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2dc1fa and fs3 == 1 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3307a6; op2val:0x802dc1fa;
op3val:0xbfe66666; valaddr_reg:x3; val_offset:106395*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106395*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35466:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3307a6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2dc1fa and fs3 == 1 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3307a6; op2val:0x802dc1fa;
op3val:0xbfedb6db; valaddr_reg:x3; val_offset:106398*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106398*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35467:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3307a6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2dc1fa and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3307a6; op2val:0x802dc1fa;
op3val:0xbffffff8; valaddr_reg:x3; val_offset:106401*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106401*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35468:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3307a6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2dc1fa and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3307a6; op2val:0x802dc1fa;
op3val:0xbffffffc; valaddr_reg:x3; val_offset:106404*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106404*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35469:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3307a6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2dc1fa and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3307a6; op2val:0x802dc1fa;
op3val:0xbffffffe; valaddr_reg:x3; val_offset:106407*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106407*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35470:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33b490 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2d95f2 and fs3 == 0 and fe3 == 0x62 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33b490; op2val:0x2d95f2;
op3val:0x31000000; valaddr_reg:x3; val_offset:106410*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106410*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35471:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33b490 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2d95f2 and fs3 == 0 and fe3 == 0x62 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33b490; op2val:0x2d95f2;
op3val:0x31000001; valaddr_reg:x3; val_offset:106413*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106413*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35472:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33b490 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2d95f2 and fs3 == 0 and fe3 == 0x62 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33b490; op2val:0x2d95f2;
op3val:0x31000003; valaddr_reg:x3; val_offset:106416*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106416*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35473:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33b490 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2d95f2 and fs3 == 0 and fe3 == 0x62 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33b490; op2val:0x2d95f2;
op3val:0x31000007; valaddr_reg:x3; val_offset:106419*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106419*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35474:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33b490 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2d95f2 and fs3 == 0 and fe3 == 0x62 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33b490; op2val:0x2d95f2;
op3val:0x3100000f; valaddr_reg:x3; val_offset:106422*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106422*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35475:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33b490 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2d95f2 and fs3 == 0 and fe3 == 0x62 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33b490; op2val:0x2d95f2;
op3val:0x3100001f; valaddr_reg:x3; val_offset:106425*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106425*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35476:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33b490 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2d95f2 and fs3 == 0 and fe3 == 0x62 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33b490; op2val:0x2d95f2;
op3val:0x3100003f; valaddr_reg:x3; val_offset:106428*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106428*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35477:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33b490 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2d95f2 and fs3 == 0 and fe3 == 0x62 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33b490; op2val:0x2d95f2;
op3val:0x3100007f; valaddr_reg:x3; val_offset:106431*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106431*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35478:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33b490 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2d95f2 and fs3 == 0 and fe3 == 0x62 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33b490; op2val:0x2d95f2;
op3val:0x310000ff; valaddr_reg:x3; val_offset:106434*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106434*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35479:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33b490 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2d95f2 and fs3 == 0 and fe3 == 0x62 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33b490; op2val:0x2d95f2;
op3val:0x310001ff; valaddr_reg:x3; val_offset:106437*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106437*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35480:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33b490 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2d95f2 and fs3 == 0 and fe3 == 0x62 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33b490; op2val:0x2d95f2;
op3val:0x310003ff; valaddr_reg:x3; val_offset:106440*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106440*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35481:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33b490 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2d95f2 and fs3 == 0 and fe3 == 0x62 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33b490; op2val:0x2d95f2;
op3val:0x310007ff; valaddr_reg:x3; val_offset:106443*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106443*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35482:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33b490 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2d95f2 and fs3 == 0 and fe3 == 0x62 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33b490; op2val:0x2d95f2;
op3val:0x31000fff; valaddr_reg:x3; val_offset:106446*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106446*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35483:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33b490 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2d95f2 and fs3 == 0 and fe3 == 0x62 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33b490; op2val:0x2d95f2;
op3val:0x31001fff; valaddr_reg:x3; val_offset:106449*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106449*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35484:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33b490 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2d95f2 and fs3 == 0 and fe3 == 0x62 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33b490; op2val:0x2d95f2;
op3val:0x31003fff; valaddr_reg:x3; val_offset:106452*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106452*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35485:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33b490 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2d95f2 and fs3 == 0 and fe3 == 0x62 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33b490; op2val:0x2d95f2;
op3val:0x31007fff; valaddr_reg:x3; val_offset:106455*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106455*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35486:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33b490 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2d95f2 and fs3 == 0 and fe3 == 0x62 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33b490; op2val:0x2d95f2;
op3val:0x3100ffff; valaddr_reg:x3; val_offset:106458*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106458*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35487:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33b490 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2d95f2 and fs3 == 0 and fe3 == 0x62 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33b490; op2val:0x2d95f2;
op3val:0x3101ffff; valaddr_reg:x3; val_offset:106461*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106461*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35488:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33b490 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2d95f2 and fs3 == 0 and fe3 == 0x62 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33b490; op2val:0x2d95f2;
op3val:0x3103ffff; valaddr_reg:x3; val_offset:106464*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106464*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35489:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33b490 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2d95f2 and fs3 == 0 and fe3 == 0x62 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33b490; op2val:0x2d95f2;
op3val:0x3107ffff; valaddr_reg:x3; val_offset:106467*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106467*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35490:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33b490 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2d95f2 and fs3 == 0 and fe3 == 0x62 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33b490; op2val:0x2d95f2;
op3val:0x310fffff; valaddr_reg:x3; val_offset:106470*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106470*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35491:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33b490 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2d95f2 and fs3 == 0 and fe3 == 0x62 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33b490; op2val:0x2d95f2;
op3val:0x311fffff; valaddr_reg:x3; val_offset:106473*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106473*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35492:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33b490 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2d95f2 and fs3 == 0 and fe3 == 0x62 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33b490; op2val:0x2d95f2;
op3val:0x313fffff; valaddr_reg:x3; val_offset:106476*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106476*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35493:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33b490 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2d95f2 and fs3 == 0 and fe3 == 0x62 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33b490; op2val:0x2d95f2;
op3val:0x31400000; valaddr_reg:x3; val_offset:106479*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106479*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35494:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33b490 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2d95f2 and fs3 == 0 and fe3 == 0x62 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33b490; op2val:0x2d95f2;
op3val:0x31600000; valaddr_reg:x3; val_offset:106482*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106482*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35495:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33b490 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2d95f2 and fs3 == 0 and fe3 == 0x62 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33b490; op2val:0x2d95f2;
op3val:0x31700000; valaddr_reg:x3; val_offset:106485*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106485*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35496:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33b490 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2d95f2 and fs3 == 0 and fe3 == 0x62 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33b490; op2val:0x2d95f2;
op3val:0x31780000; valaddr_reg:x3; val_offset:106488*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106488*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35497:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33b490 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2d95f2 and fs3 == 0 and fe3 == 0x62 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33b490; op2val:0x2d95f2;
op3val:0x317c0000; valaddr_reg:x3; val_offset:106491*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106491*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35498:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33b490 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2d95f2 and fs3 == 0 and fe3 == 0x62 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33b490; op2val:0x2d95f2;
op3val:0x317e0000; valaddr_reg:x3; val_offset:106494*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106494*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35499:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33b490 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2d95f2 and fs3 == 0 and fe3 == 0x62 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33b490; op2val:0x2d95f2;
op3val:0x317f0000; valaddr_reg:x3; val_offset:106497*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106497*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35500:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33b490 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2d95f2 and fs3 == 0 and fe3 == 0x62 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33b490; op2val:0x2d95f2;
op3val:0x317f8000; valaddr_reg:x3; val_offset:106500*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106500*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35501:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33b490 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2d95f2 and fs3 == 0 and fe3 == 0x62 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33b490; op2val:0x2d95f2;
op3val:0x317fc000; valaddr_reg:x3; val_offset:106503*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106503*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35502:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33b490 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2d95f2 and fs3 == 0 and fe3 == 0x62 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33b490; op2val:0x2d95f2;
op3val:0x317fe000; valaddr_reg:x3; val_offset:106506*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106506*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35503:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33b490 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2d95f2 and fs3 == 0 and fe3 == 0x62 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33b490; op2val:0x2d95f2;
op3val:0x317ff000; valaddr_reg:x3; val_offset:106509*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106509*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35504:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33b490 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2d95f2 and fs3 == 0 and fe3 == 0x62 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33b490; op2val:0x2d95f2;
op3val:0x317ff800; valaddr_reg:x3; val_offset:106512*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106512*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35505:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33b490 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2d95f2 and fs3 == 0 and fe3 == 0x62 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33b490; op2val:0x2d95f2;
op3val:0x317ffc00; valaddr_reg:x3; val_offset:106515*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106515*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35506:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33b490 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2d95f2 and fs3 == 0 and fe3 == 0x62 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33b490; op2val:0x2d95f2;
op3val:0x317ffe00; valaddr_reg:x3; val_offset:106518*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106518*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35507:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33b490 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2d95f2 and fs3 == 0 and fe3 == 0x62 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33b490; op2val:0x2d95f2;
op3val:0x317fff00; valaddr_reg:x3; val_offset:106521*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106521*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35508:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33b490 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2d95f2 and fs3 == 0 and fe3 == 0x62 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33b490; op2val:0x2d95f2;
op3val:0x317fff80; valaddr_reg:x3; val_offset:106524*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106524*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35509:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33b490 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2d95f2 and fs3 == 0 and fe3 == 0x62 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33b490; op2val:0x2d95f2;
op3val:0x317fffc0; valaddr_reg:x3; val_offset:106527*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106527*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35510:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33b490 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2d95f2 and fs3 == 0 and fe3 == 0x62 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33b490; op2val:0x2d95f2;
op3val:0x317fffe0; valaddr_reg:x3; val_offset:106530*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106530*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35511:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33b490 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2d95f2 and fs3 == 0 and fe3 == 0x62 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33b490; op2val:0x2d95f2;
op3val:0x317ffff0; valaddr_reg:x3; val_offset:106533*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106533*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35512:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33b490 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2d95f2 and fs3 == 0 and fe3 == 0x62 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33b490; op2val:0x2d95f2;
op3val:0x317ffff8; valaddr_reg:x3; val_offset:106536*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106536*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35513:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33b490 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2d95f2 and fs3 == 0 and fe3 == 0x62 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33b490; op2val:0x2d95f2;
op3val:0x317ffffc; valaddr_reg:x3; val_offset:106539*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106539*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35514:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33b490 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2d95f2 and fs3 == 0 and fe3 == 0x62 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33b490; op2val:0x2d95f2;
op3val:0x317ffffe; valaddr_reg:x3; val_offset:106542*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106542*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35515:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33b490 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2d95f2 and fs3 == 0 and fe3 == 0x62 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33b490; op2val:0x2d95f2;
op3val:0x317fffff; valaddr_reg:x3; val_offset:106545*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106545*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35516:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33b490 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2d95f2 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33b490; op2val:0x2d95f2;
op3val:0x3f800001; valaddr_reg:x3; val_offset:106548*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106548*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35517:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33b490 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2d95f2 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33b490; op2val:0x2d95f2;
op3val:0x3f800003; valaddr_reg:x3; val_offset:106551*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106551*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35518:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33b490 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2d95f2 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33b490; op2val:0x2d95f2;
op3val:0x3f800007; valaddr_reg:x3; val_offset:106554*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106554*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35519:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33b490 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2d95f2 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33b490; op2val:0x2d95f2;
op3val:0x3f999999; valaddr_reg:x3; val_offset:106557*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106557*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35520:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33b490 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2d95f2 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33b490; op2val:0x2d95f2;
op3val:0x3fa49249; valaddr_reg:x3; val_offset:106560*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106560*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35521:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33b490 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2d95f2 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33b490; op2val:0x2d95f2;
op3val:0x3fb33333; valaddr_reg:x3; val_offset:106563*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106563*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35522:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33b490 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2d95f2 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33b490; op2val:0x2d95f2;
op3val:0x3fb6db6d; valaddr_reg:x3; val_offset:106566*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106566*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35523:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33b490 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2d95f2 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33b490; op2val:0x2d95f2;
op3val:0x3fbbbbbb; valaddr_reg:x3; val_offset:106569*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106569*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35524:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33b490 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2d95f2 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33b490; op2val:0x2d95f2;
op3val:0x3fc44444; valaddr_reg:x3; val_offset:106572*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106572*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35525:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33b490 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2d95f2 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33b490; op2val:0x2d95f2;
op3val:0x3fcccccc; valaddr_reg:x3; val_offset:106575*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106575*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35526:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33b490 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2d95f2 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33b490; op2val:0x2d95f2;
op3val:0x3fdb6db6; valaddr_reg:x3; val_offset:106578*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106578*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35527:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33b490 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2d95f2 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33b490; op2val:0x2d95f2;
op3val:0x3fe66666; valaddr_reg:x3; val_offset:106581*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106581*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35528:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33b490 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2d95f2 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33b490; op2val:0x2d95f2;
op3val:0x3fedb6db; valaddr_reg:x3; val_offset:106584*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106584*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35529:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33b490 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2d95f2 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33b490; op2val:0x2d95f2;
op3val:0x3ffffff8; valaddr_reg:x3; val_offset:106587*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106587*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35530:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33b490 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2d95f2 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33b490; op2val:0x2d95f2;
op3val:0x3ffffffc; valaddr_reg:x3; val_offset:106590*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106590*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35531:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33b490 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2d95f2 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33b490; op2val:0x2d95f2;
op3val:0x3ffffffe; valaddr_reg:x3; val_offset:106593*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106593*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35532:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33d732 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33d732; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:106596*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106596*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35533:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33d732 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33d732; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:106599*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106599*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35534:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33d732 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33d732; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:106602*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106602*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35535:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33d732 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33d732; op2val:0x0;
op3val:0x199999; valaddr_reg:x3; val_offset:106605*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106605*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35536:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33d732 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33d732; op2val:0x0;
op3val:0x249249; valaddr_reg:x3; val_offset:106608*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106608*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35537:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33d732 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33d732; op2val:0x0;
op3val:0x333333; valaddr_reg:x3; val_offset:106611*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106611*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35538:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33d732 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33d732; op2val:0x0;
op3val:0x36db6d; valaddr_reg:x3; val_offset:106614*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106614*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35539:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33d732 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33d732; op2val:0x0;
op3val:0x3bbbbb; valaddr_reg:x3; val_offset:106617*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106617*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35540:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33d732 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33d732; op2val:0x0;
op3val:0x444444; valaddr_reg:x3; val_offset:106620*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106620*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35541:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33d732 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33d732; op2val:0x0;
op3val:0x4ccccc; valaddr_reg:x3; val_offset:106623*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106623*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35542:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33d732 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33d732; op2val:0x0;
op3val:0x5b6db6; valaddr_reg:x3; val_offset:106626*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106626*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35543:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33d732 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33d732; op2val:0x0;
op3val:0x666666; valaddr_reg:x3; val_offset:106629*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106629*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35544:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33d732 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33d732; op2val:0x0;
op3val:0x6db6db; valaddr_reg:x3; val_offset:106632*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106632*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35545:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33d732 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33d732; op2val:0x0;
op3val:0x7ffff8; valaddr_reg:x3; val_offset:106635*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106635*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35546:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33d732 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33d732; op2val:0x0;
op3val:0x7ffffc; valaddr_reg:x3; val_offset:106638*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106638*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35547:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33d732 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33d732; op2val:0x0;
op3val:0x7ffffe; valaddr_reg:x3; val_offset:106641*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106641*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35548:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33d732 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33d732; op2val:0x0;
op3val:0xc800000; valaddr_reg:x3; val_offset:106644*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106644*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35549:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33d732 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33d732; op2val:0x0;
op3val:0xc800001; valaddr_reg:x3; val_offset:106647*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106647*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35550:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33d732 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33d732; op2val:0x0;
op3val:0xc800003; valaddr_reg:x3; val_offset:106650*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106650*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35551:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33d732 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33d732; op2val:0x0;
op3val:0xc800007; valaddr_reg:x3; val_offset:106653*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106653*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35552:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33d732 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33d732; op2val:0x0;
op3val:0xc80000f; valaddr_reg:x3; val_offset:106656*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106656*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35553:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33d732 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33d732; op2val:0x0;
op3val:0xc80001f; valaddr_reg:x3; val_offset:106659*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106659*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35554:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33d732 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33d732; op2val:0x0;
op3val:0xc80003f; valaddr_reg:x3; val_offset:106662*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106662*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35555:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33d732 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33d732; op2val:0x0;
op3val:0xc80007f; valaddr_reg:x3; val_offset:106665*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106665*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35556:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33d732 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33d732; op2val:0x0;
op3val:0xc8000ff; valaddr_reg:x3; val_offset:106668*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106668*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35557:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33d732 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33d732; op2val:0x0;
op3val:0xc8001ff; valaddr_reg:x3; val_offset:106671*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106671*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35558:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33d732 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33d732; op2val:0x0;
op3val:0xc8003ff; valaddr_reg:x3; val_offset:106674*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106674*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35559:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33d732 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33d732; op2val:0x0;
op3val:0xc8007ff; valaddr_reg:x3; val_offset:106677*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106677*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35560:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33d732 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33d732; op2val:0x0;
op3val:0xc800fff; valaddr_reg:x3; val_offset:106680*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106680*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35561:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33d732 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33d732; op2val:0x0;
op3val:0xc801fff; valaddr_reg:x3; val_offset:106683*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106683*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35562:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33d732 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33d732; op2val:0x0;
op3val:0xc803fff; valaddr_reg:x3; val_offset:106686*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106686*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35563:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33d732 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33d732; op2val:0x0;
op3val:0xc807fff; valaddr_reg:x3; val_offset:106689*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106689*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35564:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33d732 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33d732; op2val:0x0;
op3val:0xc80ffff; valaddr_reg:x3; val_offset:106692*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106692*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35565:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33d732 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33d732; op2val:0x0;
op3val:0xc81ffff; valaddr_reg:x3; val_offset:106695*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106695*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35566:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33d732 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33d732; op2val:0x0;
op3val:0xc83ffff; valaddr_reg:x3; val_offset:106698*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106698*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35567:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33d732 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33d732; op2val:0x0;
op3val:0xc87ffff; valaddr_reg:x3; val_offset:106701*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106701*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35568:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33d732 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33d732; op2val:0x0;
op3val:0xc8fffff; valaddr_reg:x3; val_offset:106704*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106704*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35569:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33d732 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33d732; op2val:0x0;
op3val:0xc9fffff; valaddr_reg:x3; val_offset:106707*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106707*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35570:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33d732 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33d732; op2val:0x0;
op3val:0xcbfffff; valaddr_reg:x3; val_offset:106710*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106710*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35571:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33d732 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33d732; op2val:0x0;
op3val:0xcc00000; valaddr_reg:x3; val_offset:106713*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106713*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35572:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33d732 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33d732; op2val:0x0;
op3val:0xce00000; valaddr_reg:x3; val_offset:106716*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106716*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35573:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33d732 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33d732; op2val:0x0;
op3val:0xcf00000; valaddr_reg:x3; val_offset:106719*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106719*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35574:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33d732 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33d732; op2val:0x0;
op3val:0xcf80000; valaddr_reg:x3; val_offset:106722*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106722*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35575:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33d732 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33d732; op2val:0x0;
op3val:0xcfc0000; valaddr_reg:x3; val_offset:106725*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106725*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35576:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33d732 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33d732; op2val:0x0;
op3val:0xcfe0000; valaddr_reg:x3; val_offset:106728*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106728*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35577:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33d732 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33d732; op2val:0x0;
op3val:0xcff0000; valaddr_reg:x3; val_offset:106731*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106731*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35578:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33d732 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33d732; op2val:0x0;
op3val:0xcff8000; valaddr_reg:x3; val_offset:106734*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106734*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35579:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33d732 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33d732; op2val:0x0;
op3val:0xcffc000; valaddr_reg:x3; val_offset:106737*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106737*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35580:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33d732 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33d732; op2val:0x0;
op3val:0xcffe000; valaddr_reg:x3; val_offset:106740*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106740*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35581:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33d732 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33d732; op2val:0x0;
op3val:0xcfff000; valaddr_reg:x3; val_offset:106743*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106743*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35582:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33d732 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33d732; op2val:0x0;
op3val:0xcfff800; valaddr_reg:x3; val_offset:106746*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106746*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35583:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33d732 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33d732; op2val:0x0;
op3val:0xcfffc00; valaddr_reg:x3; val_offset:106749*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106749*0 + 3*277*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(2134050726,32,FLEN)
NAN_BOXED(2150482426,32,FLEN)
NAN_BOXED(3212836871,32,FLEN)
NAN_BOXED(2134050726,32,FLEN)
NAN_BOXED(2150482426,32,FLEN)
NAN_BOXED(3214514585,32,FLEN)
NAN_BOXED(2134050726,32,FLEN)
NAN_BOXED(2150482426,32,FLEN)
NAN_BOXED(3215233609,32,FLEN)
NAN_BOXED(2134050726,32,FLEN)
NAN_BOXED(2150482426,32,FLEN)
NAN_BOXED(3216192307,32,FLEN)
NAN_BOXED(2134050726,32,FLEN)
NAN_BOXED(2150482426,32,FLEN)
NAN_BOXED(3216431981,32,FLEN)
NAN_BOXED(2134050726,32,FLEN)
NAN_BOXED(2150482426,32,FLEN)
NAN_BOXED(3216751547,32,FLEN)
NAN_BOXED(2134050726,32,FLEN)
NAN_BOXED(2150482426,32,FLEN)
NAN_BOXED(3217310788,32,FLEN)
NAN_BOXED(2134050726,32,FLEN)
NAN_BOXED(2150482426,32,FLEN)
NAN_BOXED(3217870028,32,FLEN)
NAN_BOXED(2134050726,32,FLEN)
NAN_BOXED(2150482426,32,FLEN)
NAN_BOXED(3218828726,32,FLEN)
NAN_BOXED(2134050726,32,FLEN)
NAN_BOXED(2150482426,32,FLEN)
NAN_BOXED(3219547750,32,FLEN)
NAN_BOXED(2134050726,32,FLEN)
NAN_BOXED(2150482426,32,FLEN)
NAN_BOXED(3220027099,32,FLEN)
NAN_BOXED(2134050726,32,FLEN)
NAN_BOXED(2150482426,32,FLEN)
NAN_BOXED(3221225464,32,FLEN)
NAN_BOXED(2134050726,32,FLEN)
NAN_BOXED(2150482426,32,FLEN)
NAN_BOXED(3221225468,32,FLEN)
NAN_BOXED(2134050726,32,FLEN)
NAN_BOXED(2150482426,32,FLEN)
NAN_BOXED(3221225470,32,FLEN)
NAN_BOXED(2134094992,32,FLEN)
NAN_BOXED(2987506,32,FLEN)
NAN_BOXED(822083584,32,FLEN)
NAN_BOXED(2134094992,32,FLEN)
NAN_BOXED(2987506,32,FLEN)
NAN_BOXED(822083585,32,FLEN)
NAN_BOXED(2134094992,32,FLEN)
NAN_BOXED(2987506,32,FLEN)
NAN_BOXED(822083587,32,FLEN)
NAN_BOXED(2134094992,32,FLEN)
NAN_BOXED(2987506,32,FLEN)
NAN_BOXED(822083591,32,FLEN)
NAN_BOXED(2134094992,32,FLEN)
NAN_BOXED(2987506,32,FLEN)
NAN_BOXED(822083599,32,FLEN)
NAN_BOXED(2134094992,32,FLEN)
NAN_BOXED(2987506,32,FLEN)
NAN_BOXED(822083615,32,FLEN)
NAN_BOXED(2134094992,32,FLEN)
NAN_BOXED(2987506,32,FLEN)
NAN_BOXED(822083647,32,FLEN)
NAN_BOXED(2134094992,32,FLEN)
NAN_BOXED(2987506,32,FLEN)
NAN_BOXED(822083711,32,FLEN)
NAN_BOXED(2134094992,32,FLEN)
NAN_BOXED(2987506,32,FLEN)
NAN_BOXED(822083839,32,FLEN)
NAN_BOXED(2134094992,32,FLEN)
NAN_BOXED(2987506,32,FLEN)
NAN_BOXED(822084095,32,FLEN)
NAN_BOXED(2134094992,32,FLEN)
NAN_BOXED(2987506,32,FLEN)
NAN_BOXED(822084607,32,FLEN)
NAN_BOXED(2134094992,32,FLEN)
NAN_BOXED(2987506,32,FLEN)
NAN_BOXED(822085631,32,FLEN)
NAN_BOXED(2134094992,32,FLEN)
NAN_BOXED(2987506,32,FLEN)
NAN_BOXED(822087679,32,FLEN)
NAN_BOXED(2134094992,32,FLEN)
NAN_BOXED(2987506,32,FLEN)
NAN_BOXED(822091775,32,FLEN)
NAN_BOXED(2134094992,32,FLEN)
NAN_BOXED(2987506,32,FLEN)
NAN_BOXED(822099967,32,FLEN)
NAN_BOXED(2134094992,32,FLEN)
NAN_BOXED(2987506,32,FLEN)
NAN_BOXED(822116351,32,FLEN)
NAN_BOXED(2134094992,32,FLEN)
NAN_BOXED(2987506,32,FLEN)
NAN_BOXED(822149119,32,FLEN)
NAN_BOXED(2134094992,32,FLEN)
NAN_BOXED(2987506,32,FLEN)
NAN_BOXED(822214655,32,FLEN)
NAN_BOXED(2134094992,32,FLEN)
NAN_BOXED(2987506,32,FLEN)
NAN_BOXED(822345727,32,FLEN)
NAN_BOXED(2134094992,32,FLEN)
NAN_BOXED(2987506,32,FLEN)
NAN_BOXED(822607871,32,FLEN)
NAN_BOXED(2134094992,32,FLEN)
NAN_BOXED(2987506,32,FLEN)
NAN_BOXED(823132159,32,FLEN)
NAN_BOXED(2134094992,32,FLEN)
NAN_BOXED(2987506,32,FLEN)
NAN_BOXED(824180735,32,FLEN)
NAN_BOXED(2134094992,32,FLEN)
NAN_BOXED(2987506,32,FLEN)
NAN_BOXED(826277887,32,FLEN)
NAN_BOXED(2134094992,32,FLEN)
NAN_BOXED(2987506,32,FLEN)
NAN_BOXED(826277888,32,FLEN)
NAN_BOXED(2134094992,32,FLEN)
NAN_BOXED(2987506,32,FLEN)
NAN_BOXED(828375040,32,FLEN)
NAN_BOXED(2134094992,32,FLEN)
NAN_BOXED(2987506,32,FLEN)
NAN_BOXED(829423616,32,FLEN)
NAN_BOXED(2134094992,32,FLEN)
NAN_BOXED(2987506,32,FLEN)
NAN_BOXED(829947904,32,FLEN)
NAN_BOXED(2134094992,32,FLEN)
NAN_BOXED(2987506,32,FLEN)
NAN_BOXED(830210048,32,FLEN)
NAN_BOXED(2134094992,32,FLEN)
NAN_BOXED(2987506,32,FLEN)
NAN_BOXED(830341120,32,FLEN)
NAN_BOXED(2134094992,32,FLEN)
NAN_BOXED(2987506,32,FLEN)
NAN_BOXED(830406656,32,FLEN)
NAN_BOXED(2134094992,32,FLEN)
NAN_BOXED(2987506,32,FLEN)
NAN_BOXED(830439424,32,FLEN)
NAN_BOXED(2134094992,32,FLEN)
NAN_BOXED(2987506,32,FLEN)
NAN_BOXED(830455808,32,FLEN)
NAN_BOXED(2134094992,32,FLEN)
NAN_BOXED(2987506,32,FLEN)
NAN_BOXED(830464000,32,FLEN)
NAN_BOXED(2134094992,32,FLEN)
NAN_BOXED(2987506,32,FLEN)
NAN_BOXED(830468096,32,FLEN)
NAN_BOXED(2134094992,32,FLEN)
NAN_BOXED(2987506,32,FLEN)
NAN_BOXED(830470144,32,FLEN)
NAN_BOXED(2134094992,32,FLEN)
NAN_BOXED(2987506,32,FLEN)
NAN_BOXED(830471168,32,FLEN)
NAN_BOXED(2134094992,32,FLEN)
NAN_BOXED(2987506,32,FLEN)
NAN_BOXED(830471680,32,FLEN)
NAN_BOXED(2134094992,32,FLEN)
NAN_BOXED(2987506,32,FLEN)
NAN_BOXED(830471936,32,FLEN)
NAN_BOXED(2134094992,32,FLEN)
NAN_BOXED(2987506,32,FLEN)
NAN_BOXED(830472064,32,FLEN)
NAN_BOXED(2134094992,32,FLEN)
NAN_BOXED(2987506,32,FLEN)
NAN_BOXED(830472128,32,FLEN)
NAN_BOXED(2134094992,32,FLEN)
NAN_BOXED(2987506,32,FLEN)
NAN_BOXED(830472160,32,FLEN)
NAN_BOXED(2134094992,32,FLEN)
NAN_BOXED(2987506,32,FLEN)
NAN_BOXED(830472176,32,FLEN)
NAN_BOXED(2134094992,32,FLEN)
NAN_BOXED(2987506,32,FLEN)
NAN_BOXED(830472184,32,FLEN)
NAN_BOXED(2134094992,32,FLEN)
NAN_BOXED(2987506,32,FLEN)
NAN_BOXED(830472188,32,FLEN)
NAN_BOXED(2134094992,32,FLEN)
NAN_BOXED(2987506,32,FLEN)
NAN_BOXED(830472190,32,FLEN)
NAN_BOXED(2134094992,32,FLEN)
NAN_BOXED(2987506,32,FLEN)
NAN_BOXED(830472191,32,FLEN)
NAN_BOXED(2134094992,32,FLEN)
NAN_BOXED(2987506,32,FLEN)
NAN_BOXED(1065353217,32,FLEN)
NAN_BOXED(2134094992,32,FLEN)
NAN_BOXED(2987506,32,FLEN)
NAN_BOXED(1065353219,32,FLEN)
NAN_BOXED(2134094992,32,FLEN)
NAN_BOXED(2987506,32,FLEN)
NAN_BOXED(1065353223,32,FLEN)
NAN_BOXED(2134094992,32,FLEN)
NAN_BOXED(2987506,32,FLEN)
NAN_BOXED(1067030937,32,FLEN)
NAN_BOXED(2134094992,32,FLEN)
NAN_BOXED(2987506,32,FLEN)
NAN_BOXED(1067749961,32,FLEN)
NAN_BOXED(2134094992,32,FLEN)
NAN_BOXED(2987506,32,FLEN)
NAN_BOXED(1068708659,32,FLEN)
NAN_BOXED(2134094992,32,FLEN)
NAN_BOXED(2987506,32,FLEN)
NAN_BOXED(1068948333,32,FLEN)
NAN_BOXED(2134094992,32,FLEN)
NAN_BOXED(2987506,32,FLEN)
NAN_BOXED(1069267899,32,FLEN)
NAN_BOXED(2134094992,32,FLEN)
NAN_BOXED(2987506,32,FLEN)
NAN_BOXED(1069827140,32,FLEN)
NAN_BOXED(2134094992,32,FLEN)
NAN_BOXED(2987506,32,FLEN)
NAN_BOXED(1070386380,32,FLEN)
NAN_BOXED(2134094992,32,FLEN)
NAN_BOXED(2987506,32,FLEN)
NAN_BOXED(1071345078,32,FLEN)
NAN_BOXED(2134094992,32,FLEN)
NAN_BOXED(2987506,32,FLEN)
NAN_BOXED(1072064102,32,FLEN)
NAN_BOXED(2134094992,32,FLEN)
NAN_BOXED(2987506,32,FLEN)
NAN_BOXED(1072543451,32,FLEN)
NAN_BOXED(2134094992,32,FLEN)
NAN_BOXED(2987506,32,FLEN)
NAN_BOXED(1073741816,32,FLEN)
NAN_BOXED(2134094992,32,FLEN)
NAN_BOXED(2987506,32,FLEN)
NAN_BOXED(1073741820,32,FLEN)
NAN_BOXED(2134094992,32,FLEN)
NAN_BOXED(2987506,32,FLEN)
NAN_BOXED(1073741822,32,FLEN)
NAN_BOXED(2134103858,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(2134103858,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3,32,FLEN)
NAN_BOXED(2134103858,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7,32,FLEN)
NAN_BOXED(2134103858,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1677721,32,FLEN)
NAN_BOXED(2134103858,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2396745,32,FLEN)
NAN_BOXED(2134103858,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3355443,32,FLEN)
NAN_BOXED(2134103858,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3595117,32,FLEN)
NAN_BOXED(2134103858,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3914683,32,FLEN)
NAN_BOXED(2134103858,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(4473924,32,FLEN)
NAN_BOXED(2134103858,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5033164,32,FLEN)
NAN_BOXED(2134103858,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5991862,32,FLEN)
NAN_BOXED(2134103858,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(6710886,32,FLEN)
NAN_BOXED(2134103858,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7190235,32,FLEN)
NAN_BOXED(2134103858,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388600,32,FLEN)
NAN_BOXED(2134103858,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388604,32,FLEN)
NAN_BOXED(2134103858,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388606,32,FLEN)
NAN_BOXED(2134103858,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(209715200,32,FLEN)
NAN_BOXED(2134103858,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(209715201,32,FLEN)
NAN_BOXED(2134103858,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(209715203,32,FLEN)
NAN_BOXED(2134103858,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(209715207,32,FLEN)
NAN_BOXED(2134103858,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(209715215,32,FLEN)
NAN_BOXED(2134103858,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(209715231,32,FLEN)
NAN_BOXED(2134103858,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(209715263,32,FLEN)
NAN_BOXED(2134103858,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(209715327,32,FLEN)
NAN_BOXED(2134103858,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(209715455,32,FLEN)
NAN_BOXED(2134103858,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(209715711,32,FLEN)
NAN_BOXED(2134103858,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(209716223,32,FLEN)
NAN_BOXED(2134103858,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(209717247,32,FLEN)
NAN_BOXED(2134103858,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(209719295,32,FLEN)
NAN_BOXED(2134103858,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(209723391,32,FLEN)
NAN_BOXED(2134103858,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(209731583,32,FLEN)
NAN_BOXED(2134103858,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(209747967,32,FLEN)
NAN_BOXED(2134103858,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(209780735,32,FLEN)
NAN_BOXED(2134103858,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(209846271,32,FLEN)
NAN_BOXED(2134103858,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(209977343,32,FLEN)
NAN_BOXED(2134103858,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(210239487,32,FLEN)
NAN_BOXED(2134103858,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(210763775,32,FLEN)
NAN_BOXED(2134103858,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(211812351,32,FLEN)
NAN_BOXED(2134103858,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(213909503,32,FLEN)
NAN_BOXED(2134103858,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(213909504,32,FLEN)
NAN_BOXED(2134103858,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(216006656,32,FLEN)
NAN_BOXED(2134103858,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(217055232,32,FLEN)
NAN_BOXED(2134103858,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(217579520,32,FLEN)
NAN_BOXED(2134103858,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(217841664,32,FLEN)
NAN_BOXED(2134103858,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(217972736,32,FLEN)
NAN_BOXED(2134103858,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(218038272,32,FLEN)
NAN_BOXED(2134103858,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(218071040,32,FLEN)
NAN_BOXED(2134103858,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(218087424,32,FLEN)
NAN_BOXED(2134103858,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(218095616,32,FLEN)
NAN_BOXED(2134103858,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(218099712,32,FLEN)
NAN_BOXED(2134103858,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(218101760,32,FLEN)
NAN_BOXED(2134103858,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(218102784,32,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
