
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 14:18:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32F/fmsub.s.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.s instruction of the RISC-V RV32F_Zicsr,RV32FD_Zicsr,RV64F_Zicsr,RV64FD_Zicsr extension for the fmsub_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF_Zicsr,RV32IFD_Zicsr,RV64IF_Zicsr,RV64IFD_Zicsr,RV32EF_Zicsr,RV32EFD_Zicsr,RV64EF_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fmsub_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*F.*);def TEST_CASE_1=True;",fmsub_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_37376:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d1b74 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2d46fe and fs3 == 0 and fe3 == 0xcc and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d1b74; op2val:0x3fad46fe;
op3val:0x66000003; valaddr_reg:x3; val_offset:112128*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112128*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37377:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d1b74 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2d46fe and fs3 == 0 and fe3 == 0xcc and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d1b74; op2val:0x3fad46fe;
op3val:0x66000007; valaddr_reg:x3; val_offset:112131*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112131*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37378:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d1b74 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2d46fe and fs3 == 0 and fe3 == 0xcc and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d1b74; op2val:0x3fad46fe;
op3val:0x6600000f; valaddr_reg:x3; val_offset:112134*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112134*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37379:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d1b74 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2d46fe and fs3 == 0 and fe3 == 0xcc and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d1b74; op2val:0x3fad46fe;
op3val:0x6600001f; valaddr_reg:x3; val_offset:112137*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112137*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37380:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d1b74 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2d46fe and fs3 == 0 and fe3 == 0xcc and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d1b74; op2val:0x3fad46fe;
op3val:0x6600003f; valaddr_reg:x3; val_offset:112140*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112140*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37381:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d1b74 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2d46fe and fs3 == 0 and fe3 == 0xcc and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d1b74; op2val:0x3fad46fe;
op3val:0x6600007f; valaddr_reg:x3; val_offset:112143*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112143*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37382:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d1b74 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2d46fe and fs3 == 0 and fe3 == 0xcc and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d1b74; op2val:0x3fad46fe;
op3val:0x660000ff; valaddr_reg:x3; val_offset:112146*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112146*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37383:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d1b74 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2d46fe and fs3 == 0 and fe3 == 0xcc and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d1b74; op2val:0x3fad46fe;
op3val:0x660001ff; valaddr_reg:x3; val_offset:112149*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112149*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37384:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d1b74 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2d46fe and fs3 == 0 and fe3 == 0xcc and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d1b74; op2val:0x3fad46fe;
op3val:0x660003ff; valaddr_reg:x3; val_offset:112152*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112152*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37385:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d1b74 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2d46fe and fs3 == 0 and fe3 == 0xcc and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d1b74; op2val:0x3fad46fe;
op3val:0x660007ff; valaddr_reg:x3; val_offset:112155*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112155*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37386:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d1b74 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2d46fe and fs3 == 0 and fe3 == 0xcc and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d1b74; op2val:0x3fad46fe;
op3val:0x66000fff; valaddr_reg:x3; val_offset:112158*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112158*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37387:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d1b74 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2d46fe and fs3 == 0 and fe3 == 0xcc and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d1b74; op2val:0x3fad46fe;
op3val:0x66001fff; valaddr_reg:x3; val_offset:112161*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112161*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37388:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d1b74 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2d46fe and fs3 == 0 and fe3 == 0xcc and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d1b74; op2val:0x3fad46fe;
op3val:0x66003fff; valaddr_reg:x3; val_offset:112164*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112164*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37389:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d1b74 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2d46fe and fs3 == 0 and fe3 == 0xcc and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d1b74; op2val:0x3fad46fe;
op3val:0x66007fff; valaddr_reg:x3; val_offset:112167*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112167*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37390:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d1b74 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2d46fe and fs3 == 0 and fe3 == 0xcc and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d1b74; op2val:0x3fad46fe;
op3val:0x6600ffff; valaddr_reg:x3; val_offset:112170*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112170*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37391:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d1b74 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2d46fe and fs3 == 0 and fe3 == 0xcc and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d1b74; op2val:0x3fad46fe;
op3val:0x6601ffff; valaddr_reg:x3; val_offset:112173*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112173*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37392:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d1b74 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2d46fe and fs3 == 0 and fe3 == 0xcc and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d1b74; op2val:0x3fad46fe;
op3val:0x6603ffff; valaddr_reg:x3; val_offset:112176*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112176*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37393:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d1b74 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2d46fe and fs3 == 0 and fe3 == 0xcc and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d1b74; op2val:0x3fad46fe;
op3val:0x6607ffff; valaddr_reg:x3; val_offset:112179*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112179*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37394:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d1b74 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2d46fe and fs3 == 0 and fe3 == 0xcc and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d1b74; op2val:0x3fad46fe;
op3val:0x660fffff; valaddr_reg:x3; val_offset:112182*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112182*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37395:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d1b74 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2d46fe and fs3 == 0 and fe3 == 0xcc and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d1b74; op2val:0x3fad46fe;
op3val:0x661fffff; valaddr_reg:x3; val_offset:112185*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112185*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37396:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d1b74 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2d46fe and fs3 == 0 and fe3 == 0xcc and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d1b74; op2val:0x3fad46fe;
op3val:0x663fffff; valaddr_reg:x3; val_offset:112188*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112188*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37397:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d1b74 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2d46fe and fs3 == 0 and fe3 == 0xcc and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d1b74; op2val:0x3fad46fe;
op3val:0x66400000; valaddr_reg:x3; val_offset:112191*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112191*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37398:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d1b74 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2d46fe and fs3 == 0 and fe3 == 0xcc and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d1b74; op2val:0x3fad46fe;
op3val:0x66600000; valaddr_reg:x3; val_offset:112194*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112194*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37399:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d1b74 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2d46fe and fs3 == 0 and fe3 == 0xcc and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d1b74; op2val:0x3fad46fe;
op3val:0x66700000; valaddr_reg:x3; val_offset:112197*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112197*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37400:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d1b74 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2d46fe and fs3 == 0 and fe3 == 0xcc and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d1b74; op2val:0x3fad46fe;
op3val:0x66780000; valaddr_reg:x3; val_offset:112200*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112200*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37401:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d1b74 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2d46fe and fs3 == 0 and fe3 == 0xcc and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d1b74; op2val:0x3fad46fe;
op3val:0x667c0000; valaddr_reg:x3; val_offset:112203*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112203*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37402:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d1b74 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2d46fe and fs3 == 0 and fe3 == 0xcc and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d1b74; op2val:0x3fad46fe;
op3val:0x667e0000; valaddr_reg:x3; val_offset:112206*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112206*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37403:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d1b74 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2d46fe and fs3 == 0 and fe3 == 0xcc and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d1b74; op2val:0x3fad46fe;
op3val:0x667f0000; valaddr_reg:x3; val_offset:112209*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112209*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37404:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d1b74 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2d46fe and fs3 == 0 and fe3 == 0xcc and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d1b74; op2val:0x3fad46fe;
op3val:0x667f8000; valaddr_reg:x3; val_offset:112212*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112212*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37405:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d1b74 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2d46fe and fs3 == 0 and fe3 == 0xcc and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d1b74; op2val:0x3fad46fe;
op3val:0x667fc000; valaddr_reg:x3; val_offset:112215*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112215*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37406:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d1b74 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2d46fe and fs3 == 0 and fe3 == 0xcc and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d1b74; op2val:0x3fad46fe;
op3val:0x667fe000; valaddr_reg:x3; val_offset:112218*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112218*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37407:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d1b74 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2d46fe and fs3 == 0 and fe3 == 0xcc and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d1b74; op2val:0x3fad46fe;
op3val:0x667ff000; valaddr_reg:x3; val_offset:112221*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112221*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37408:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d1b74 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2d46fe and fs3 == 0 and fe3 == 0xcc and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d1b74; op2val:0x3fad46fe;
op3val:0x667ff800; valaddr_reg:x3; val_offset:112224*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112224*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37409:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d1b74 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2d46fe and fs3 == 0 and fe3 == 0xcc and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d1b74; op2val:0x3fad46fe;
op3val:0x667ffc00; valaddr_reg:x3; val_offset:112227*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112227*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37410:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d1b74 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2d46fe and fs3 == 0 and fe3 == 0xcc and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d1b74; op2val:0x3fad46fe;
op3val:0x667ffe00; valaddr_reg:x3; val_offset:112230*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112230*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37411:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d1b74 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2d46fe and fs3 == 0 and fe3 == 0xcc and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d1b74; op2val:0x3fad46fe;
op3val:0x667fff00; valaddr_reg:x3; val_offset:112233*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112233*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37412:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d1b74 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2d46fe and fs3 == 0 and fe3 == 0xcc and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d1b74; op2val:0x3fad46fe;
op3val:0x667fff80; valaddr_reg:x3; val_offset:112236*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112236*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37413:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d1b74 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2d46fe and fs3 == 0 and fe3 == 0xcc and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d1b74; op2val:0x3fad46fe;
op3val:0x667fffc0; valaddr_reg:x3; val_offset:112239*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112239*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37414:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d1b74 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2d46fe and fs3 == 0 and fe3 == 0xcc and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d1b74; op2val:0x3fad46fe;
op3val:0x667fffe0; valaddr_reg:x3; val_offset:112242*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112242*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37415:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d1b74 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2d46fe and fs3 == 0 and fe3 == 0xcc and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d1b74; op2val:0x3fad46fe;
op3val:0x667ffff0; valaddr_reg:x3; val_offset:112245*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112245*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37416:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d1b74 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2d46fe and fs3 == 0 and fe3 == 0xcc and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d1b74; op2val:0x3fad46fe;
op3val:0x667ffff8; valaddr_reg:x3; val_offset:112248*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112248*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37417:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d1b74 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2d46fe and fs3 == 0 and fe3 == 0xcc and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d1b74; op2val:0x3fad46fe;
op3val:0x667ffffc; valaddr_reg:x3; val_offset:112251*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112251*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37418:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d1b74 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2d46fe and fs3 == 0 and fe3 == 0xcc and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d1b74; op2val:0x3fad46fe;
op3val:0x667ffffe; valaddr_reg:x3; val_offset:112254*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112254*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37419:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d1b74 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2d46fe and fs3 == 0 and fe3 == 0xcc and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d1b74; op2val:0x3fad46fe;
op3val:0x667fffff; valaddr_reg:x3; val_offset:112257*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112257*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37420:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d1b74 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2d46fe and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d1b74; op2val:0x3fad46fe;
op3val:0x7f000001; valaddr_reg:x3; val_offset:112260*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112260*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37421:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d1b74 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2d46fe and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d1b74; op2val:0x3fad46fe;
op3val:0x7f000003; valaddr_reg:x3; val_offset:112263*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112263*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37422:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d1b74 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2d46fe and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d1b74; op2val:0x3fad46fe;
op3val:0x7f000007; valaddr_reg:x3; val_offset:112266*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112266*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37423:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d1b74 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2d46fe and fs3 == 0 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d1b74; op2val:0x3fad46fe;
op3val:0x7f199999; valaddr_reg:x3; val_offset:112269*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112269*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37424:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d1b74 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2d46fe and fs3 == 0 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d1b74; op2val:0x3fad46fe;
op3val:0x7f249249; valaddr_reg:x3; val_offset:112272*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112272*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37425:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d1b74 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2d46fe and fs3 == 0 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d1b74; op2val:0x3fad46fe;
op3val:0x7f333333; valaddr_reg:x3; val_offset:112275*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112275*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37426:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d1b74 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2d46fe and fs3 == 0 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d1b74; op2val:0x3fad46fe;
op3val:0x7f36db6d; valaddr_reg:x3; val_offset:112278*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112278*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37427:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d1b74 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2d46fe and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d1b74; op2val:0x3fad46fe;
op3val:0x7f3bbbbb; valaddr_reg:x3; val_offset:112281*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112281*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37428:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d1b74 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2d46fe and fs3 == 0 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d1b74; op2val:0x3fad46fe;
op3val:0x7f444444; valaddr_reg:x3; val_offset:112284*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112284*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37429:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d1b74 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2d46fe and fs3 == 0 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d1b74; op2val:0x3fad46fe;
op3val:0x7f4ccccc; valaddr_reg:x3; val_offset:112287*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112287*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37430:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d1b74 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2d46fe and fs3 == 0 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d1b74; op2val:0x3fad46fe;
op3val:0x7f5b6db6; valaddr_reg:x3; val_offset:112290*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112290*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37431:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d1b74 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2d46fe and fs3 == 0 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d1b74; op2val:0x3fad46fe;
op3val:0x7f666666; valaddr_reg:x3; val_offset:112293*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112293*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37432:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d1b74 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2d46fe and fs3 == 0 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d1b74; op2val:0x3fad46fe;
op3val:0x7f6db6db; valaddr_reg:x3; val_offset:112296*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112296*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37433:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d1b74 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2d46fe and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d1b74; op2val:0x3fad46fe;
op3val:0x7f7ffff8; valaddr_reg:x3; val_offset:112299*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112299*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37434:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d1b74 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2d46fe and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d1b74; op2val:0x3fad46fe;
op3val:0x7f7ffffc; valaddr_reg:x3; val_offset:112302*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112302*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37435:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d1b74 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2d46fe and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d1b74; op2val:0x3fad46fe;
op3val:0x7f7ffffe; valaddr_reg:x3; val_offset:112305*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112305*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37436:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d854b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d854b; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:112308*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112308*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37437:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d854b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d854b; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:112311*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112311*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37438:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d854b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d854b; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:112314*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112314*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37439:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d854b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d854b; op2val:0x0;
op3val:0x199999; valaddr_reg:x3; val_offset:112317*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112317*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37440:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d854b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d854b; op2val:0x0;
op3val:0x249249; valaddr_reg:x3; val_offset:112320*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112320*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37441:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d854b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d854b; op2val:0x0;
op3val:0x333333; valaddr_reg:x3; val_offset:112323*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112323*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37442:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d854b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d854b; op2val:0x0;
op3val:0x36db6d; valaddr_reg:x3; val_offset:112326*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112326*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37443:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d854b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d854b; op2val:0x0;
op3val:0x3bbbbb; valaddr_reg:x3; val_offset:112329*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112329*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37444:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d854b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d854b; op2val:0x0;
op3val:0x444444; valaddr_reg:x3; val_offset:112332*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112332*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37445:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d854b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d854b; op2val:0x0;
op3val:0x4ccccc; valaddr_reg:x3; val_offset:112335*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112335*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37446:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d854b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d854b; op2val:0x0;
op3val:0x5b6db6; valaddr_reg:x3; val_offset:112338*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112338*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37447:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d854b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d854b; op2val:0x0;
op3val:0x666666; valaddr_reg:x3; val_offset:112341*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112341*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37448:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d854b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d854b; op2val:0x0;
op3val:0x6db6db; valaddr_reg:x3; val_offset:112344*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112344*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37449:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d854b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d854b; op2val:0x0;
op3val:0x7ffff8; valaddr_reg:x3; val_offset:112347*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112347*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37450:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d854b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d854b; op2val:0x0;
op3val:0x7ffffc; valaddr_reg:x3; val_offset:112350*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112350*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37451:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d854b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d854b; op2val:0x0;
op3val:0x7ffffe; valaddr_reg:x3; val_offset:112353*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112353*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37452:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d854b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x08 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d854b; op2val:0x0;
op3val:0x4000000; valaddr_reg:x3; val_offset:112356*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112356*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37453:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d854b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x08 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d854b; op2val:0x0;
op3val:0x4000001; valaddr_reg:x3; val_offset:112359*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112359*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37454:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d854b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x08 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d854b; op2val:0x0;
op3val:0x4000003; valaddr_reg:x3; val_offset:112362*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112362*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37455:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d854b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x08 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d854b; op2val:0x0;
op3val:0x4000007; valaddr_reg:x3; val_offset:112365*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112365*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37456:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d854b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x08 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d854b; op2val:0x0;
op3val:0x400000f; valaddr_reg:x3; val_offset:112368*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112368*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37457:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d854b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x08 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d854b; op2val:0x0;
op3val:0x400001f; valaddr_reg:x3; val_offset:112371*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112371*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37458:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d854b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x08 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d854b; op2val:0x0;
op3val:0x400003f; valaddr_reg:x3; val_offset:112374*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112374*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37459:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d854b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x08 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d854b; op2val:0x0;
op3val:0x400007f; valaddr_reg:x3; val_offset:112377*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112377*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37460:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d854b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x08 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d854b; op2val:0x0;
op3val:0x40000ff; valaddr_reg:x3; val_offset:112380*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112380*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37461:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d854b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x08 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d854b; op2val:0x0;
op3val:0x40001ff; valaddr_reg:x3; val_offset:112383*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112383*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37462:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d854b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x08 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d854b; op2val:0x0;
op3val:0x40003ff; valaddr_reg:x3; val_offset:112386*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112386*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37463:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d854b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x08 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d854b; op2val:0x0;
op3val:0x40007ff; valaddr_reg:x3; val_offset:112389*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112389*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37464:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d854b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x08 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d854b; op2val:0x0;
op3val:0x4000fff; valaddr_reg:x3; val_offset:112392*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112392*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37465:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d854b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x08 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d854b; op2val:0x0;
op3val:0x4001fff; valaddr_reg:x3; val_offset:112395*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112395*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37466:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d854b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x08 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d854b; op2val:0x0;
op3val:0x4003fff; valaddr_reg:x3; val_offset:112398*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112398*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37467:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d854b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x08 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d854b; op2val:0x0;
op3val:0x4007fff; valaddr_reg:x3; val_offset:112401*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112401*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37468:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d854b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x08 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d854b; op2val:0x0;
op3val:0x400ffff; valaddr_reg:x3; val_offset:112404*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112404*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37469:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d854b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x08 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d854b; op2val:0x0;
op3val:0x401ffff; valaddr_reg:x3; val_offset:112407*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112407*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37470:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d854b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x08 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d854b; op2val:0x0;
op3val:0x403ffff; valaddr_reg:x3; val_offset:112410*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112410*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37471:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d854b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x08 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d854b; op2val:0x0;
op3val:0x407ffff; valaddr_reg:x3; val_offset:112413*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112413*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37472:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d854b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x08 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d854b; op2val:0x0;
op3val:0x40fffff; valaddr_reg:x3; val_offset:112416*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112416*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37473:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d854b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x08 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d854b; op2val:0x0;
op3val:0x41fffff; valaddr_reg:x3; val_offset:112419*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112419*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37474:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d854b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x08 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d854b; op2val:0x0;
op3val:0x43fffff; valaddr_reg:x3; val_offset:112422*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112422*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37475:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d854b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x08 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d854b; op2val:0x0;
op3val:0x4400000; valaddr_reg:x3; val_offset:112425*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112425*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37476:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d854b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x08 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d854b; op2val:0x0;
op3val:0x4600000; valaddr_reg:x3; val_offset:112428*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112428*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37477:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d854b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x08 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d854b; op2val:0x0;
op3val:0x4700000; valaddr_reg:x3; val_offset:112431*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112431*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37478:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d854b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x08 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d854b; op2val:0x0;
op3val:0x4780000; valaddr_reg:x3; val_offset:112434*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112434*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37479:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d854b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x08 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d854b; op2val:0x0;
op3val:0x47c0000; valaddr_reg:x3; val_offset:112437*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112437*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37480:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d854b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x08 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d854b; op2val:0x0;
op3val:0x47e0000; valaddr_reg:x3; val_offset:112440*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112440*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37481:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d854b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x08 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d854b; op2val:0x0;
op3val:0x47f0000; valaddr_reg:x3; val_offset:112443*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112443*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37482:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d854b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x08 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d854b; op2val:0x0;
op3val:0x47f8000; valaddr_reg:x3; val_offset:112446*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112446*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37483:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d854b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x08 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d854b; op2val:0x0;
op3val:0x47fc000; valaddr_reg:x3; val_offset:112449*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112449*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37484:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d854b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x08 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d854b; op2val:0x0;
op3val:0x47fe000; valaddr_reg:x3; val_offset:112452*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112452*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37485:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d854b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x08 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d854b; op2val:0x0;
op3val:0x47ff000; valaddr_reg:x3; val_offset:112455*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112455*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37486:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d854b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x08 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d854b; op2val:0x0;
op3val:0x47ff800; valaddr_reg:x3; val_offset:112458*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112458*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37487:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d854b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x08 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d854b; op2val:0x0;
op3val:0x47ffc00; valaddr_reg:x3; val_offset:112461*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112461*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37488:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d854b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x08 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d854b; op2val:0x0;
op3val:0x47ffe00; valaddr_reg:x3; val_offset:112464*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112464*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37489:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d854b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x08 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d854b; op2val:0x0;
op3val:0x47fff00; valaddr_reg:x3; val_offset:112467*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112467*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37490:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d854b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x08 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d854b; op2val:0x0;
op3val:0x47fff80; valaddr_reg:x3; val_offset:112470*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112470*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37491:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d854b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x08 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d854b; op2val:0x0;
op3val:0x47fffc0; valaddr_reg:x3; val_offset:112473*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112473*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37492:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d854b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x08 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d854b; op2val:0x0;
op3val:0x47fffe0; valaddr_reg:x3; val_offset:112476*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112476*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37493:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d854b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x08 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d854b; op2val:0x0;
op3val:0x47ffff0; valaddr_reg:x3; val_offset:112479*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112479*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37494:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d854b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x08 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d854b; op2val:0x0;
op3val:0x47ffff8; valaddr_reg:x3; val_offset:112482*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112482*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37495:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d854b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x08 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d854b; op2val:0x0;
op3val:0x47ffffc; valaddr_reg:x3; val_offset:112485*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112485*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37496:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d854b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x08 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d854b; op2val:0x0;
op3val:0x47ffffe; valaddr_reg:x3; val_offset:112488*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112488*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37497:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d854b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x08 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d854b; op2val:0x0;
op3val:0x47fffff; valaddr_reg:x3; val_offset:112491*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112491*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37498:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3ddfe3 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2c93bb and fs3 == 0 and fe3 == 0xcd and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3ddfe3; op2val:0x3fac93bb;
op3val:0x66800000; valaddr_reg:x3; val_offset:112494*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112494*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37499:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3ddfe3 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2c93bb and fs3 == 0 and fe3 == 0xcd and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3ddfe3; op2val:0x3fac93bb;
op3val:0x66800001; valaddr_reg:x3; val_offset:112497*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112497*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37500:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3ddfe3 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2c93bb and fs3 == 0 and fe3 == 0xcd and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3ddfe3; op2val:0x3fac93bb;
op3val:0x66800003; valaddr_reg:x3; val_offset:112500*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112500*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37501:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3ddfe3 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2c93bb and fs3 == 0 and fe3 == 0xcd and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3ddfe3; op2val:0x3fac93bb;
op3val:0x66800007; valaddr_reg:x3; val_offset:112503*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112503*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37502:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3ddfe3 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2c93bb and fs3 == 0 and fe3 == 0xcd and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3ddfe3; op2val:0x3fac93bb;
op3val:0x6680000f; valaddr_reg:x3; val_offset:112506*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112506*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37503:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3ddfe3 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2c93bb and fs3 == 0 and fe3 == 0xcd and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3ddfe3; op2val:0x3fac93bb;
op3val:0x6680001f; valaddr_reg:x3; val_offset:112509*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 112509*0 + 3*292*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(2134711156,32,FLEN)
NAN_BOXED(1068320510,32,FLEN)
NAN_BOXED(1711276035,32,FLEN)
NAN_BOXED(2134711156,32,FLEN)
NAN_BOXED(1068320510,32,FLEN)
NAN_BOXED(1711276039,32,FLEN)
NAN_BOXED(2134711156,32,FLEN)
NAN_BOXED(1068320510,32,FLEN)
NAN_BOXED(1711276047,32,FLEN)
NAN_BOXED(2134711156,32,FLEN)
NAN_BOXED(1068320510,32,FLEN)
NAN_BOXED(1711276063,32,FLEN)
NAN_BOXED(2134711156,32,FLEN)
NAN_BOXED(1068320510,32,FLEN)
NAN_BOXED(1711276095,32,FLEN)
NAN_BOXED(2134711156,32,FLEN)
NAN_BOXED(1068320510,32,FLEN)
NAN_BOXED(1711276159,32,FLEN)
NAN_BOXED(2134711156,32,FLEN)
NAN_BOXED(1068320510,32,FLEN)
NAN_BOXED(1711276287,32,FLEN)
NAN_BOXED(2134711156,32,FLEN)
NAN_BOXED(1068320510,32,FLEN)
NAN_BOXED(1711276543,32,FLEN)
NAN_BOXED(2134711156,32,FLEN)
NAN_BOXED(1068320510,32,FLEN)
NAN_BOXED(1711277055,32,FLEN)
NAN_BOXED(2134711156,32,FLEN)
NAN_BOXED(1068320510,32,FLEN)
NAN_BOXED(1711278079,32,FLEN)
NAN_BOXED(2134711156,32,FLEN)
NAN_BOXED(1068320510,32,FLEN)
NAN_BOXED(1711280127,32,FLEN)
NAN_BOXED(2134711156,32,FLEN)
NAN_BOXED(1068320510,32,FLEN)
NAN_BOXED(1711284223,32,FLEN)
NAN_BOXED(2134711156,32,FLEN)
NAN_BOXED(1068320510,32,FLEN)
NAN_BOXED(1711292415,32,FLEN)
NAN_BOXED(2134711156,32,FLEN)
NAN_BOXED(1068320510,32,FLEN)
NAN_BOXED(1711308799,32,FLEN)
NAN_BOXED(2134711156,32,FLEN)
NAN_BOXED(1068320510,32,FLEN)
NAN_BOXED(1711341567,32,FLEN)
NAN_BOXED(2134711156,32,FLEN)
NAN_BOXED(1068320510,32,FLEN)
NAN_BOXED(1711407103,32,FLEN)
NAN_BOXED(2134711156,32,FLEN)
NAN_BOXED(1068320510,32,FLEN)
NAN_BOXED(1711538175,32,FLEN)
NAN_BOXED(2134711156,32,FLEN)
NAN_BOXED(1068320510,32,FLEN)
NAN_BOXED(1711800319,32,FLEN)
NAN_BOXED(2134711156,32,FLEN)
NAN_BOXED(1068320510,32,FLEN)
NAN_BOXED(1712324607,32,FLEN)
NAN_BOXED(2134711156,32,FLEN)
NAN_BOXED(1068320510,32,FLEN)
NAN_BOXED(1713373183,32,FLEN)
NAN_BOXED(2134711156,32,FLEN)
NAN_BOXED(1068320510,32,FLEN)
NAN_BOXED(1715470335,32,FLEN)
NAN_BOXED(2134711156,32,FLEN)
NAN_BOXED(1068320510,32,FLEN)
NAN_BOXED(1715470336,32,FLEN)
NAN_BOXED(2134711156,32,FLEN)
NAN_BOXED(1068320510,32,FLEN)
NAN_BOXED(1717567488,32,FLEN)
NAN_BOXED(2134711156,32,FLEN)
NAN_BOXED(1068320510,32,FLEN)
NAN_BOXED(1718616064,32,FLEN)
NAN_BOXED(2134711156,32,FLEN)
NAN_BOXED(1068320510,32,FLEN)
NAN_BOXED(1719140352,32,FLEN)
NAN_BOXED(2134711156,32,FLEN)
NAN_BOXED(1068320510,32,FLEN)
NAN_BOXED(1719402496,32,FLEN)
NAN_BOXED(2134711156,32,FLEN)
NAN_BOXED(1068320510,32,FLEN)
NAN_BOXED(1719533568,32,FLEN)
NAN_BOXED(2134711156,32,FLEN)
NAN_BOXED(1068320510,32,FLEN)
NAN_BOXED(1719599104,32,FLEN)
NAN_BOXED(2134711156,32,FLEN)
NAN_BOXED(1068320510,32,FLEN)
NAN_BOXED(1719631872,32,FLEN)
NAN_BOXED(2134711156,32,FLEN)
NAN_BOXED(1068320510,32,FLEN)
NAN_BOXED(1719648256,32,FLEN)
NAN_BOXED(2134711156,32,FLEN)
NAN_BOXED(1068320510,32,FLEN)
NAN_BOXED(1719656448,32,FLEN)
NAN_BOXED(2134711156,32,FLEN)
NAN_BOXED(1068320510,32,FLEN)
NAN_BOXED(1719660544,32,FLEN)
NAN_BOXED(2134711156,32,FLEN)
NAN_BOXED(1068320510,32,FLEN)
NAN_BOXED(1719662592,32,FLEN)
NAN_BOXED(2134711156,32,FLEN)
NAN_BOXED(1068320510,32,FLEN)
NAN_BOXED(1719663616,32,FLEN)
NAN_BOXED(2134711156,32,FLEN)
NAN_BOXED(1068320510,32,FLEN)
NAN_BOXED(1719664128,32,FLEN)
NAN_BOXED(2134711156,32,FLEN)
NAN_BOXED(1068320510,32,FLEN)
NAN_BOXED(1719664384,32,FLEN)
NAN_BOXED(2134711156,32,FLEN)
NAN_BOXED(1068320510,32,FLEN)
NAN_BOXED(1719664512,32,FLEN)
NAN_BOXED(2134711156,32,FLEN)
NAN_BOXED(1068320510,32,FLEN)
NAN_BOXED(1719664576,32,FLEN)
NAN_BOXED(2134711156,32,FLEN)
NAN_BOXED(1068320510,32,FLEN)
NAN_BOXED(1719664608,32,FLEN)
NAN_BOXED(2134711156,32,FLEN)
NAN_BOXED(1068320510,32,FLEN)
NAN_BOXED(1719664624,32,FLEN)
NAN_BOXED(2134711156,32,FLEN)
NAN_BOXED(1068320510,32,FLEN)
NAN_BOXED(1719664632,32,FLEN)
NAN_BOXED(2134711156,32,FLEN)
NAN_BOXED(1068320510,32,FLEN)
NAN_BOXED(1719664636,32,FLEN)
NAN_BOXED(2134711156,32,FLEN)
NAN_BOXED(1068320510,32,FLEN)
NAN_BOXED(1719664638,32,FLEN)
NAN_BOXED(2134711156,32,FLEN)
NAN_BOXED(1068320510,32,FLEN)
NAN_BOXED(1719664639,32,FLEN)
NAN_BOXED(2134711156,32,FLEN)
NAN_BOXED(1068320510,32,FLEN)
NAN_BOXED(2130706433,32,FLEN)
NAN_BOXED(2134711156,32,FLEN)
NAN_BOXED(1068320510,32,FLEN)
NAN_BOXED(2130706435,32,FLEN)
NAN_BOXED(2134711156,32,FLEN)
NAN_BOXED(1068320510,32,FLEN)
NAN_BOXED(2130706439,32,FLEN)
NAN_BOXED(2134711156,32,FLEN)
NAN_BOXED(1068320510,32,FLEN)
NAN_BOXED(2132384153,32,FLEN)
NAN_BOXED(2134711156,32,FLEN)
NAN_BOXED(1068320510,32,FLEN)
NAN_BOXED(2133103177,32,FLEN)
NAN_BOXED(2134711156,32,FLEN)
NAN_BOXED(1068320510,32,FLEN)
NAN_BOXED(2134061875,32,FLEN)
NAN_BOXED(2134711156,32,FLEN)
NAN_BOXED(1068320510,32,FLEN)
NAN_BOXED(2134301549,32,FLEN)
NAN_BOXED(2134711156,32,FLEN)
NAN_BOXED(1068320510,32,FLEN)
NAN_BOXED(2134621115,32,FLEN)
NAN_BOXED(2134711156,32,FLEN)
NAN_BOXED(1068320510,32,FLEN)
NAN_BOXED(2135180356,32,FLEN)
NAN_BOXED(2134711156,32,FLEN)
NAN_BOXED(1068320510,32,FLEN)
NAN_BOXED(2135739596,32,FLEN)
NAN_BOXED(2134711156,32,FLEN)
NAN_BOXED(1068320510,32,FLEN)
NAN_BOXED(2136698294,32,FLEN)
NAN_BOXED(2134711156,32,FLEN)
NAN_BOXED(1068320510,32,FLEN)
NAN_BOXED(2137417318,32,FLEN)
NAN_BOXED(2134711156,32,FLEN)
NAN_BOXED(1068320510,32,FLEN)
NAN_BOXED(2137896667,32,FLEN)
NAN_BOXED(2134711156,32,FLEN)
NAN_BOXED(1068320510,32,FLEN)
NAN_BOXED(2139095032,32,FLEN)
NAN_BOXED(2134711156,32,FLEN)
NAN_BOXED(1068320510,32,FLEN)
NAN_BOXED(2139095036,32,FLEN)
NAN_BOXED(2134711156,32,FLEN)
NAN_BOXED(1068320510,32,FLEN)
NAN_BOXED(2139095038,32,FLEN)
NAN_BOXED(2134738251,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(2134738251,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3,32,FLEN)
NAN_BOXED(2134738251,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7,32,FLEN)
NAN_BOXED(2134738251,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1677721,32,FLEN)
NAN_BOXED(2134738251,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2396745,32,FLEN)
NAN_BOXED(2134738251,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3355443,32,FLEN)
NAN_BOXED(2134738251,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3595117,32,FLEN)
NAN_BOXED(2134738251,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3914683,32,FLEN)
NAN_BOXED(2134738251,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(4473924,32,FLEN)
NAN_BOXED(2134738251,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5033164,32,FLEN)
NAN_BOXED(2134738251,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5991862,32,FLEN)
NAN_BOXED(2134738251,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(6710886,32,FLEN)
NAN_BOXED(2134738251,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7190235,32,FLEN)
NAN_BOXED(2134738251,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388600,32,FLEN)
NAN_BOXED(2134738251,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388604,32,FLEN)
NAN_BOXED(2134738251,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388606,32,FLEN)
NAN_BOXED(2134738251,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(67108864,32,FLEN)
NAN_BOXED(2134738251,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(67108865,32,FLEN)
NAN_BOXED(2134738251,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(67108867,32,FLEN)
NAN_BOXED(2134738251,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(67108871,32,FLEN)
NAN_BOXED(2134738251,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(67108879,32,FLEN)
NAN_BOXED(2134738251,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(67108895,32,FLEN)
NAN_BOXED(2134738251,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(67108927,32,FLEN)
NAN_BOXED(2134738251,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(67108991,32,FLEN)
NAN_BOXED(2134738251,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(67109119,32,FLEN)
NAN_BOXED(2134738251,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(67109375,32,FLEN)
NAN_BOXED(2134738251,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(67109887,32,FLEN)
NAN_BOXED(2134738251,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(67110911,32,FLEN)
NAN_BOXED(2134738251,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(67112959,32,FLEN)
NAN_BOXED(2134738251,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(67117055,32,FLEN)
NAN_BOXED(2134738251,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(67125247,32,FLEN)
NAN_BOXED(2134738251,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(67141631,32,FLEN)
NAN_BOXED(2134738251,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(67174399,32,FLEN)
NAN_BOXED(2134738251,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(67239935,32,FLEN)
NAN_BOXED(2134738251,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(67371007,32,FLEN)
NAN_BOXED(2134738251,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(67633151,32,FLEN)
NAN_BOXED(2134738251,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(68157439,32,FLEN)
NAN_BOXED(2134738251,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(69206015,32,FLEN)
NAN_BOXED(2134738251,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(71303167,32,FLEN)
NAN_BOXED(2134738251,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(71303168,32,FLEN)
NAN_BOXED(2134738251,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(73400320,32,FLEN)
NAN_BOXED(2134738251,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(74448896,32,FLEN)
NAN_BOXED(2134738251,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(74973184,32,FLEN)
NAN_BOXED(2134738251,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(75235328,32,FLEN)
NAN_BOXED(2134738251,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(75366400,32,FLEN)
NAN_BOXED(2134738251,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(75431936,32,FLEN)
NAN_BOXED(2134738251,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(75464704,32,FLEN)
NAN_BOXED(2134738251,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(75481088,32,FLEN)
NAN_BOXED(2134738251,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(75489280,32,FLEN)
NAN_BOXED(2134738251,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(75493376,32,FLEN)
NAN_BOXED(2134738251,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(75495424,32,FLEN)
NAN_BOXED(2134738251,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(75496448,32,FLEN)
NAN_BOXED(2134738251,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(75496960,32,FLEN)
NAN_BOXED(2134738251,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(75497216,32,FLEN)
NAN_BOXED(2134738251,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(75497344,32,FLEN)
NAN_BOXED(2134738251,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(75497408,32,FLEN)
NAN_BOXED(2134738251,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(75497440,32,FLEN)
NAN_BOXED(2134738251,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(75497456,32,FLEN)
NAN_BOXED(2134738251,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(75497464,32,FLEN)
NAN_BOXED(2134738251,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(75497468,32,FLEN)
NAN_BOXED(2134738251,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(75497470,32,FLEN)
NAN_BOXED(2134738251,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(75497471,32,FLEN)
NAN_BOXED(2134761443,32,FLEN)
NAN_BOXED(1068274619,32,FLEN)
NAN_BOXED(1719664640,32,FLEN)
NAN_BOXED(2134761443,32,FLEN)
NAN_BOXED(1068274619,32,FLEN)
NAN_BOXED(1719664641,32,FLEN)
NAN_BOXED(2134761443,32,FLEN)
NAN_BOXED(1068274619,32,FLEN)
NAN_BOXED(1719664643,32,FLEN)
NAN_BOXED(2134761443,32,FLEN)
NAN_BOXED(1068274619,32,FLEN)
NAN_BOXED(1719664647,32,FLEN)
NAN_BOXED(2134761443,32,FLEN)
NAN_BOXED(1068274619,32,FLEN)
NAN_BOXED(1719664655,32,FLEN)
NAN_BOXED(2134761443,32,FLEN)
NAN_BOXED(1068274619,32,FLEN)
NAN_BOXED(1719664671,32,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
