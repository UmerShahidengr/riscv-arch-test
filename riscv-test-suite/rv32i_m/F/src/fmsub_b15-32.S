
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 14:18:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32F/fmsub.s.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.s instruction of the RISC-V RV32F_Zicsr,RV32FD_Zicsr,RV64F_Zicsr,RV64FD_Zicsr extension for the fmsub_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF_Zicsr,RV32IFD_Zicsr,RV64IF_Zicsr,RV64IFD_Zicsr,RV32EF_Zicsr,RV32EFD_Zicsr,RV64EF_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fmsub_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*F.*);def TEST_CASE_1=True;",fmsub_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_3968:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1988c3 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x556cb9 and fs3 == 1 and fe3 == 0xca and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9988c3; op2val:0xc1556cb9;
op3val:0xe5000fff; valaddr_reg:x3; val_offset:11904*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11904*0 + 3*31*FLEN/8, x4, x1, x2)

inst_3969:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1988c3 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x556cb9 and fs3 == 1 and fe3 == 0xca and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9988c3; op2val:0xc1556cb9;
op3val:0xe5001fff; valaddr_reg:x3; val_offset:11907*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11907*0 + 3*31*FLEN/8, x4, x1, x2)

inst_3970:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1988c3 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x556cb9 and fs3 == 1 and fe3 == 0xca and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9988c3; op2val:0xc1556cb9;
op3val:0xe5003fff; valaddr_reg:x3; val_offset:11910*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11910*0 + 3*31*FLEN/8, x4, x1, x2)

inst_3971:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1988c3 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x556cb9 and fs3 == 1 and fe3 == 0xca and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9988c3; op2val:0xc1556cb9;
op3val:0xe5007fff; valaddr_reg:x3; val_offset:11913*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11913*0 + 3*31*FLEN/8, x4, x1, x2)

inst_3972:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1988c3 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x556cb9 and fs3 == 1 and fe3 == 0xca and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9988c3; op2val:0xc1556cb9;
op3val:0xe500ffff; valaddr_reg:x3; val_offset:11916*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11916*0 + 3*31*FLEN/8, x4, x1, x2)

inst_3973:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1988c3 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x556cb9 and fs3 == 1 and fe3 == 0xca and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9988c3; op2val:0xc1556cb9;
op3val:0xe501ffff; valaddr_reg:x3; val_offset:11919*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11919*0 + 3*31*FLEN/8, x4, x1, x2)

inst_3974:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1988c3 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x556cb9 and fs3 == 1 and fe3 == 0xca and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9988c3; op2val:0xc1556cb9;
op3val:0xe503ffff; valaddr_reg:x3; val_offset:11922*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11922*0 + 3*31*FLEN/8, x4, x1, x2)

inst_3975:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1988c3 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x556cb9 and fs3 == 1 and fe3 == 0xca and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9988c3; op2val:0xc1556cb9;
op3val:0xe507ffff; valaddr_reg:x3; val_offset:11925*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11925*0 + 3*31*FLEN/8, x4, x1, x2)

inst_3976:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1988c3 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x556cb9 and fs3 == 1 and fe3 == 0xca and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9988c3; op2val:0xc1556cb9;
op3val:0xe50fffff; valaddr_reg:x3; val_offset:11928*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11928*0 + 3*31*FLEN/8, x4, x1, x2)

inst_3977:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1988c3 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x556cb9 and fs3 == 1 and fe3 == 0xca and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9988c3; op2val:0xc1556cb9;
op3val:0xe51fffff; valaddr_reg:x3; val_offset:11931*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11931*0 + 3*31*FLEN/8, x4, x1, x2)

inst_3978:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1988c3 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x556cb9 and fs3 == 1 and fe3 == 0xca and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9988c3; op2val:0xc1556cb9;
op3val:0xe53fffff; valaddr_reg:x3; val_offset:11934*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11934*0 + 3*31*FLEN/8, x4, x1, x2)

inst_3979:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1988c3 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x556cb9 and fs3 == 1 and fe3 == 0xca and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9988c3; op2val:0xc1556cb9;
op3val:0xe5400000; valaddr_reg:x3; val_offset:11937*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11937*0 + 3*31*FLEN/8, x4, x1, x2)

inst_3980:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1988c3 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x556cb9 and fs3 == 1 and fe3 == 0xca and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9988c3; op2val:0xc1556cb9;
op3val:0xe5600000; valaddr_reg:x3; val_offset:11940*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11940*0 + 3*31*FLEN/8, x4, x1, x2)

inst_3981:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1988c3 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x556cb9 and fs3 == 1 and fe3 == 0xca and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9988c3; op2val:0xc1556cb9;
op3val:0xe5700000; valaddr_reg:x3; val_offset:11943*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11943*0 + 3*31*FLEN/8, x4, x1, x2)

inst_3982:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1988c3 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x556cb9 and fs3 == 1 and fe3 == 0xca and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9988c3; op2val:0xc1556cb9;
op3val:0xe5780000; valaddr_reg:x3; val_offset:11946*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11946*0 + 3*31*FLEN/8, x4, x1, x2)

inst_3983:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1988c3 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x556cb9 and fs3 == 1 and fe3 == 0xca and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9988c3; op2val:0xc1556cb9;
op3val:0xe57c0000; valaddr_reg:x3; val_offset:11949*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11949*0 + 3*31*FLEN/8, x4, x1, x2)

inst_3984:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1988c3 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x556cb9 and fs3 == 1 and fe3 == 0xca and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9988c3; op2val:0xc1556cb9;
op3val:0xe57e0000; valaddr_reg:x3; val_offset:11952*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11952*0 + 3*31*FLEN/8, x4, x1, x2)

inst_3985:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1988c3 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x556cb9 and fs3 == 1 and fe3 == 0xca and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9988c3; op2val:0xc1556cb9;
op3val:0xe57f0000; valaddr_reg:x3; val_offset:11955*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11955*0 + 3*31*FLEN/8, x4, x1, x2)

inst_3986:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1988c3 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x556cb9 and fs3 == 1 and fe3 == 0xca and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9988c3; op2val:0xc1556cb9;
op3val:0xe57f8000; valaddr_reg:x3; val_offset:11958*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11958*0 + 3*31*FLEN/8, x4, x1, x2)

inst_3987:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1988c3 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x556cb9 and fs3 == 1 and fe3 == 0xca and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9988c3; op2val:0xc1556cb9;
op3val:0xe57fc000; valaddr_reg:x3; val_offset:11961*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11961*0 + 3*31*FLEN/8, x4, x1, x2)

inst_3988:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1988c3 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x556cb9 and fs3 == 1 and fe3 == 0xca and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9988c3; op2val:0xc1556cb9;
op3val:0xe57fe000; valaddr_reg:x3; val_offset:11964*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11964*0 + 3*31*FLEN/8, x4, x1, x2)

inst_3989:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1988c3 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x556cb9 and fs3 == 1 and fe3 == 0xca and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9988c3; op2val:0xc1556cb9;
op3val:0xe57ff000; valaddr_reg:x3; val_offset:11967*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11967*0 + 3*31*FLEN/8, x4, x1, x2)

inst_3990:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1988c3 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x556cb9 and fs3 == 1 and fe3 == 0xca and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9988c3; op2val:0xc1556cb9;
op3val:0xe57ff800; valaddr_reg:x3; val_offset:11970*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11970*0 + 3*31*FLEN/8, x4, x1, x2)

inst_3991:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1988c3 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x556cb9 and fs3 == 1 and fe3 == 0xca and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9988c3; op2val:0xc1556cb9;
op3val:0xe57ffc00; valaddr_reg:x3; val_offset:11973*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11973*0 + 3*31*FLEN/8, x4, x1, x2)

inst_3992:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1988c3 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x556cb9 and fs3 == 1 and fe3 == 0xca and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9988c3; op2val:0xc1556cb9;
op3val:0xe57ffe00; valaddr_reg:x3; val_offset:11976*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11976*0 + 3*31*FLEN/8, x4, x1, x2)

inst_3993:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1988c3 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x556cb9 and fs3 == 1 and fe3 == 0xca and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9988c3; op2val:0xc1556cb9;
op3val:0xe57fff00; valaddr_reg:x3; val_offset:11979*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11979*0 + 3*31*FLEN/8, x4, x1, x2)

inst_3994:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1988c3 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x556cb9 and fs3 == 1 and fe3 == 0xca and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9988c3; op2val:0xc1556cb9;
op3val:0xe57fff80; valaddr_reg:x3; val_offset:11982*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11982*0 + 3*31*FLEN/8, x4, x1, x2)

inst_3995:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1988c3 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x556cb9 and fs3 == 1 and fe3 == 0xca and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9988c3; op2val:0xc1556cb9;
op3val:0xe57fffc0; valaddr_reg:x3; val_offset:11985*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11985*0 + 3*31*FLEN/8, x4, x1, x2)

inst_3996:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1988c3 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x556cb9 and fs3 == 1 and fe3 == 0xca and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9988c3; op2val:0xc1556cb9;
op3val:0xe57fffe0; valaddr_reg:x3; val_offset:11988*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11988*0 + 3*31*FLEN/8, x4, x1, x2)

inst_3997:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1988c3 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x556cb9 and fs3 == 1 and fe3 == 0xca and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9988c3; op2val:0xc1556cb9;
op3val:0xe57ffff0; valaddr_reg:x3; val_offset:11991*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11991*0 + 3*31*FLEN/8, x4, x1, x2)

inst_3998:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1988c3 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x556cb9 and fs3 == 1 and fe3 == 0xca and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9988c3; op2val:0xc1556cb9;
op3val:0xe57ffff8; valaddr_reg:x3; val_offset:11994*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11994*0 + 3*31*FLEN/8, x4, x1, x2)

inst_3999:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1988c3 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x556cb9 and fs3 == 1 and fe3 == 0xca and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9988c3; op2val:0xc1556cb9;
op3val:0xe57ffffc; valaddr_reg:x3; val_offset:11997*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11997*0 + 3*31*FLEN/8, x4, x1, x2)

inst_4000:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1988c3 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x556cb9 and fs3 == 1 and fe3 == 0xca and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9988c3; op2val:0xc1556cb9;
op3val:0xe57ffffe; valaddr_reg:x3; val_offset:12000*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12000*0 + 3*31*FLEN/8, x4, x1, x2)

inst_4001:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1988c3 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x556cb9 and fs3 == 1 and fe3 == 0xca and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9988c3; op2val:0xc1556cb9;
op3val:0xe57fffff; valaddr_reg:x3; val_offset:12003*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12003*0 + 3*31*FLEN/8, x4, x1, x2)

inst_4002:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1988c3 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x556cb9 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9988c3; op2val:0xc1556cb9;
op3val:0xff000001; valaddr_reg:x3; val_offset:12006*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12006*0 + 3*31*FLEN/8, x4, x1, x2)

inst_4003:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1988c3 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x556cb9 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9988c3; op2val:0xc1556cb9;
op3val:0xff000003; valaddr_reg:x3; val_offset:12009*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12009*0 + 3*31*FLEN/8, x4, x1, x2)

inst_4004:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1988c3 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x556cb9 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9988c3; op2val:0xc1556cb9;
op3val:0xff000007; valaddr_reg:x3; val_offset:12012*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12012*0 + 3*31*FLEN/8, x4, x1, x2)

inst_4005:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1988c3 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x556cb9 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9988c3; op2val:0xc1556cb9;
op3val:0xff199999; valaddr_reg:x3; val_offset:12015*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12015*0 + 3*31*FLEN/8, x4, x1, x2)

inst_4006:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1988c3 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x556cb9 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9988c3; op2val:0xc1556cb9;
op3val:0xff249249; valaddr_reg:x3; val_offset:12018*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12018*0 + 3*31*FLEN/8, x4, x1, x2)

inst_4007:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1988c3 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x556cb9 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9988c3; op2val:0xc1556cb9;
op3val:0xff333333; valaddr_reg:x3; val_offset:12021*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12021*0 + 3*31*FLEN/8, x4, x1, x2)

inst_4008:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1988c3 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x556cb9 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9988c3; op2val:0xc1556cb9;
op3val:0xff36db6d; valaddr_reg:x3; val_offset:12024*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12024*0 + 3*31*FLEN/8, x4, x1, x2)

inst_4009:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1988c3 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x556cb9 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9988c3; op2val:0xc1556cb9;
op3val:0xff3bbbbb; valaddr_reg:x3; val_offset:12027*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12027*0 + 3*31*FLEN/8, x4, x1, x2)

inst_4010:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1988c3 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x556cb9 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9988c3; op2val:0xc1556cb9;
op3val:0xff444444; valaddr_reg:x3; val_offset:12030*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12030*0 + 3*31*FLEN/8, x4, x1, x2)

inst_4011:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1988c3 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x556cb9 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9988c3; op2val:0xc1556cb9;
op3val:0xff4ccccc; valaddr_reg:x3; val_offset:12033*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12033*0 + 3*31*FLEN/8, x4, x1, x2)

inst_4012:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1988c3 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x556cb9 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9988c3; op2val:0xc1556cb9;
op3val:0xff5b6db6; valaddr_reg:x3; val_offset:12036*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12036*0 + 3*31*FLEN/8, x4, x1, x2)

inst_4013:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1988c3 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x556cb9 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9988c3; op2val:0xc1556cb9;
op3val:0xff666666; valaddr_reg:x3; val_offset:12039*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12039*0 + 3*31*FLEN/8, x4, x1, x2)

inst_4014:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1988c3 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x556cb9 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9988c3; op2val:0xc1556cb9;
op3val:0xff6db6db; valaddr_reg:x3; val_offset:12042*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12042*0 + 3*31*FLEN/8, x4, x1, x2)

inst_4015:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1988c3 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x556cb9 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9988c3; op2val:0xc1556cb9;
op3val:0xff7ffff8; valaddr_reg:x3; val_offset:12045*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12045*0 + 3*31*FLEN/8, x4, x1, x2)

inst_4016:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1988c3 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x556cb9 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9988c3; op2val:0xc1556cb9;
op3val:0xff7ffffc; valaddr_reg:x3; val_offset:12048*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12048*0 + 3*31*FLEN/8, x4, x1, x2)

inst_4017:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1988c3 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x556cb9 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9988c3; op2val:0xc1556cb9;
op3val:0xff7ffffe; valaddr_reg:x3; val_offset:12051*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12051*0 + 3*31*FLEN/8, x4, x1, x2)

inst_4018:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1c8920 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x51551e and fs3 == 1 and fe3 == 0x3e and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9c8920; op2val:0x8151551e;
op3val:0x9f000000; valaddr_reg:x3; val_offset:12054*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12054*0 + 3*31*FLEN/8, x4, x1, x2)

inst_4019:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1c8920 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x51551e and fs3 == 1 and fe3 == 0x3e and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9c8920; op2val:0x8151551e;
op3val:0x9f000001; valaddr_reg:x3; val_offset:12057*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12057*0 + 3*31*FLEN/8, x4, x1, x2)

inst_4020:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1c8920 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x51551e and fs3 == 1 and fe3 == 0x3e and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9c8920; op2val:0x8151551e;
op3val:0x9f000003; valaddr_reg:x3; val_offset:12060*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12060*0 + 3*31*FLEN/8, x4, x1, x2)

inst_4021:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1c8920 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x51551e and fs3 == 1 and fe3 == 0x3e and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9c8920; op2val:0x8151551e;
op3val:0x9f000007; valaddr_reg:x3; val_offset:12063*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12063*0 + 3*31*FLEN/8, x4, x1, x2)

inst_4022:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1c8920 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x51551e and fs3 == 1 and fe3 == 0x3e and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9c8920; op2val:0x8151551e;
op3val:0x9f00000f; valaddr_reg:x3; val_offset:12066*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12066*0 + 3*31*FLEN/8, x4, x1, x2)

inst_4023:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1c8920 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x51551e and fs3 == 1 and fe3 == 0x3e and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9c8920; op2val:0x8151551e;
op3val:0x9f00001f; valaddr_reg:x3; val_offset:12069*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12069*0 + 3*31*FLEN/8, x4, x1, x2)

inst_4024:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1c8920 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x51551e and fs3 == 1 and fe3 == 0x3e and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9c8920; op2val:0x8151551e;
op3val:0x9f00003f; valaddr_reg:x3; val_offset:12072*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12072*0 + 3*31*FLEN/8, x4, x1, x2)

inst_4025:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1c8920 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x51551e and fs3 == 1 and fe3 == 0x3e and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9c8920; op2val:0x8151551e;
op3val:0x9f00007f; valaddr_reg:x3; val_offset:12075*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12075*0 + 3*31*FLEN/8, x4, x1, x2)

inst_4026:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1c8920 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x51551e and fs3 == 1 and fe3 == 0x3e and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9c8920; op2val:0x8151551e;
op3val:0x9f0000ff; valaddr_reg:x3; val_offset:12078*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12078*0 + 3*31*FLEN/8, x4, x1, x2)

inst_4027:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1c8920 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x51551e and fs3 == 1 and fe3 == 0x3e and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9c8920; op2val:0x8151551e;
op3val:0x9f0001ff; valaddr_reg:x3; val_offset:12081*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12081*0 + 3*31*FLEN/8, x4, x1, x2)

inst_4028:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1c8920 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x51551e and fs3 == 1 and fe3 == 0x3e and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9c8920; op2val:0x8151551e;
op3val:0x9f0003ff; valaddr_reg:x3; val_offset:12084*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12084*0 + 3*31*FLEN/8, x4, x1, x2)

inst_4029:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1c8920 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x51551e and fs3 == 1 and fe3 == 0x3e and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9c8920; op2val:0x8151551e;
op3val:0x9f0007ff; valaddr_reg:x3; val_offset:12087*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12087*0 + 3*31*FLEN/8, x4, x1, x2)

inst_4030:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1c8920 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x51551e and fs3 == 1 and fe3 == 0x3e and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9c8920; op2val:0x8151551e;
op3val:0x9f000fff; valaddr_reg:x3; val_offset:12090*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12090*0 + 3*31*FLEN/8, x4, x1, x2)

inst_4031:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1c8920 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x51551e and fs3 == 1 and fe3 == 0x3e and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9c8920; op2val:0x8151551e;
op3val:0x9f001fff; valaddr_reg:x3; val_offset:12093*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12093*0 + 3*31*FLEN/8, x4, x1, x2)

inst_4032:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1c8920 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x51551e and fs3 == 1 and fe3 == 0x3e and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9c8920; op2val:0x8151551e;
op3val:0x9f003fff; valaddr_reg:x3; val_offset:12096*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12096*0 + 3*31*FLEN/8, x4, x1, x2)

inst_4033:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1c8920 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x51551e and fs3 == 1 and fe3 == 0x3e and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9c8920; op2val:0x8151551e;
op3val:0x9f007fff; valaddr_reg:x3; val_offset:12099*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12099*0 + 3*31*FLEN/8, x4, x1, x2)

inst_4034:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1c8920 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x51551e and fs3 == 1 and fe3 == 0x3e and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9c8920; op2val:0x8151551e;
op3val:0x9f00ffff; valaddr_reg:x3; val_offset:12102*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12102*0 + 3*31*FLEN/8, x4, x1, x2)

inst_4035:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1c8920 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x51551e and fs3 == 1 and fe3 == 0x3e and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9c8920; op2val:0x8151551e;
op3val:0x9f01ffff; valaddr_reg:x3; val_offset:12105*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12105*0 + 3*31*FLEN/8, x4, x1, x2)

inst_4036:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1c8920 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x51551e and fs3 == 1 and fe3 == 0x3e and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9c8920; op2val:0x8151551e;
op3val:0x9f03ffff; valaddr_reg:x3; val_offset:12108*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12108*0 + 3*31*FLEN/8, x4, x1, x2)

inst_4037:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1c8920 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x51551e and fs3 == 1 and fe3 == 0x3e and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9c8920; op2val:0x8151551e;
op3val:0x9f07ffff; valaddr_reg:x3; val_offset:12111*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12111*0 + 3*31*FLEN/8, x4, x1, x2)

inst_4038:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1c8920 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x51551e and fs3 == 1 and fe3 == 0x3e and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9c8920; op2val:0x8151551e;
op3val:0x9f0fffff; valaddr_reg:x3; val_offset:12114*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12114*0 + 3*31*FLEN/8, x4, x1, x2)

inst_4039:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1c8920 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x51551e and fs3 == 1 and fe3 == 0x3e and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9c8920; op2val:0x8151551e;
op3val:0x9f1fffff; valaddr_reg:x3; val_offset:12117*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12117*0 + 3*31*FLEN/8, x4, x1, x2)

inst_4040:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1c8920 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x51551e and fs3 == 1 and fe3 == 0x3e and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9c8920; op2val:0x8151551e;
op3val:0x9f3fffff; valaddr_reg:x3; val_offset:12120*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12120*0 + 3*31*FLEN/8, x4, x1, x2)

inst_4041:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1c8920 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x51551e and fs3 == 1 and fe3 == 0x3e and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9c8920; op2val:0x8151551e;
op3val:0x9f400000; valaddr_reg:x3; val_offset:12123*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12123*0 + 3*31*FLEN/8, x4, x1, x2)

inst_4042:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1c8920 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x51551e and fs3 == 1 and fe3 == 0x3e and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9c8920; op2val:0x8151551e;
op3val:0x9f600000; valaddr_reg:x3; val_offset:12126*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12126*0 + 3*31*FLEN/8, x4, x1, x2)

inst_4043:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1c8920 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x51551e and fs3 == 1 and fe3 == 0x3e and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9c8920; op2val:0x8151551e;
op3val:0x9f700000; valaddr_reg:x3; val_offset:12129*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12129*0 + 3*31*FLEN/8, x4, x1, x2)

inst_4044:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1c8920 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x51551e and fs3 == 1 and fe3 == 0x3e and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9c8920; op2val:0x8151551e;
op3val:0x9f780000; valaddr_reg:x3; val_offset:12132*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12132*0 + 3*31*FLEN/8, x4, x1, x2)

inst_4045:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1c8920 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x51551e and fs3 == 1 and fe3 == 0x3e and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9c8920; op2val:0x8151551e;
op3val:0x9f7c0000; valaddr_reg:x3; val_offset:12135*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12135*0 + 3*31*FLEN/8, x4, x1, x2)

inst_4046:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1c8920 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x51551e and fs3 == 1 and fe3 == 0x3e and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9c8920; op2val:0x8151551e;
op3val:0x9f7e0000; valaddr_reg:x3; val_offset:12138*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12138*0 + 3*31*FLEN/8, x4, x1, x2)

inst_4047:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1c8920 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x51551e and fs3 == 1 and fe3 == 0x3e and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9c8920; op2val:0x8151551e;
op3val:0x9f7f0000; valaddr_reg:x3; val_offset:12141*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12141*0 + 3*31*FLEN/8, x4, x1, x2)

inst_4048:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1c8920 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x51551e and fs3 == 1 and fe3 == 0x3e and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9c8920; op2val:0x8151551e;
op3val:0x9f7f8000; valaddr_reg:x3; val_offset:12144*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12144*0 + 3*31*FLEN/8, x4, x1, x2)

inst_4049:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1c8920 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x51551e and fs3 == 1 and fe3 == 0x3e and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9c8920; op2val:0x8151551e;
op3val:0x9f7fc000; valaddr_reg:x3; val_offset:12147*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12147*0 + 3*31*FLEN/8, x4, x1, x2)

inst_4050:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1c8920 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x51551e and fs3 == 1 and fe3 == 0x3e and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9c8920; op2val:0x8151551e;
op3val:0x9f7fe000; valaddr_reg:x3; val_offset:12150*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12150*0 + 3*31*FLEN/8, x4, x1, x2)

inst_4051:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1c8920 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x51551e and fs3 == 1 and fe3 == 0x3e and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9c8920; op2val:0x8151551e;
op3val:0x9f7ff000; valaddr_reg:x3; val_offset:12153*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12153*0 + 3*31*FLEN/8, x4, x1, x2)

inst_4052:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1c8920 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x51551e and fs3 == 1 and fe3 == 0x3e and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9c8920; op2val:0x8151551e;
op3val:0x9f7ff800; valaddr_reg:x3; val_offset:12156*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12156*0 + 3*31*FLEN/8, x4, x1, x2)

inst_4053:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1c8920 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x51551e and fs3 == 1 and fe3 == 0x3e and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9c8920; op2val:0x8151551e;
op3val:0x9f7ffc00; valaddr_reg:x3; val_offset:12159*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12159*0 + 3*31*FLEN/8, x4, x1, x2)

inst_4054:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1c8920 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x51551e and fs3 == 1 and fe3 == 0x3e and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9c8920; op2val:0x8151551e;
op3val:0x9f7ffe00; valaddr_reg:x3; val_offset:12162*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12162*0 + 3*31*FLEN/8, x4, x1, x2)

inst_4055:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1c8920 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x51551e and fs3 == 1 and fe3 == 0x3e and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9c8920; op2val:0x8151551e;
op3val:0x9f7fff00; valaddr_reg:x3; val_offset:12165*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12165*0 + 3*31*FLEN/8, x4, x1, x2)

inst_4056:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1c8920 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x51551e and fs3 == 1 and fe3 == 0x3e and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9c8920; op2val:0x8151551e;
op3val:0x9f7fff80; valaddr_reg:x3; val_offset:12168*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12168*0 + 3*31*FLEN/8, x4, x1, x2)

inst_4057:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1c8920 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x51551e and fs3 == 1 and fe3 == 0x3e and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9c8920; op2val:0x8151551e;
op3val:0x9f7fffc0; valaddr_reg:x3; val_offset:12171*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12171*0 + 3*31*FLEN/8, x4, x1, x2)

inst_4058:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1c8920 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x51551e and fs3 == 1 and fe3 == 0x3e and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9c8920; op2val:0x8151551e;
op3val:0x9f7fffe0; valaddr_reg:x3; val_offset:12174*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12174*0 + 3*31*FLEN/8, x4, x1, x2)

inst_4059:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1c8920 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x51551e and fs3 == 1 and fe3 == 0x3e and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9c8920; op2val:0x8151551e;
op3val:0x9f7ffff0; valaddr_reg:x3; val_offset:12177*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12177*0 + 3*31*FLEN/8, x4, x1, x2)

inst_4060:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1c8920 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x51551e and fs3 == 1 and fe3 == 0x3e and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9c8920; op2val:0x8151551e;
op3val:0x9f7ffff8; valaddr_reg:x3; val_offset:12180*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12180*0 + 3*31*FLEN/8, x4, x1, x2)

inst_4061:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1c8920 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x51551e and fs3 == 1 and fe3 == 0x3e and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9c8920; op2val:0x8151551e;
op3val:0x9f7ffffc; valaddr_reg:x3; val_offset:12183*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12183*0 + 3*31*FLEN/8, x4, x1, x2)

inst_4062:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1c8920 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x51551e and fs3 == 1 and fe3 == 0x3e and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9c8920; op2val:0x8151551e;
op3val:0x9f7ffffe; valaddr_reg:x3; val_offset:12186*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12186*0 + 3*31*FLEN/8, x4, x1, x2)

inst_4063:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1c8920 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x51551e and fs3 == 1 and fe3 == 0x3e and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9c8920; op2val:0x8151551e;
op3val:0x9f7fffff; valaddr_reg:x3; val_offset:12189*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12189*0 + 3*31*FLEN/8, x4, x1, x2)

inst_4064:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1c8920 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x51551e and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9c8920; op2val:0x8151551e;
op3val:0xbf800001; valaddr_reg:x3; val_offset:12192*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12192*0 + 3*31*FLEN/8, x4, x1, x2)

inst_4065:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1c8920 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x51551e and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9c8920; op2val:0x8151551e;
op3val:0xbf800003; valaddr_reg:x3; val_offset:12195*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12195*0 + 3*31*FLEN/8, x4, x1, x2)

inst_4066:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1c8920 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x51551e and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9c8920; op2val:0x8151551e;
op3val:0xbf800007; valaddr_reg:x3; val_offset:12198*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12198*0 + 3*31*FLEN/8, x4, x1, x2)

inst_4067:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1c8920 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x51551e and fs3 == 1 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9c8920; op2val:0x8151551e;
op3val:0xbf999999; valaddr_reg:x3; val_offset:12201*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12201*0 + 3*31*FLEN/8, x4, x1, x2)

inst_4068:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1c8920 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x51551e and fs3 == 1 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9c8920; op2val:0x8151551e;
op3val:0xbfa49249; valaddr_reg:x3; val_offset:12204*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12204*0 + 3*31*FLEN/8, x4, x1, x2)

inst_4069:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1c8920 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x51551e and fs3 == 1 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9c8920; op2val:0x8151551e;
op3val:0xbfb33333; valaddr_reg:x3; val_offset:12207*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12207*0 + 3*31*FLEN/8, x4, x1, x2)

inst_4070:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1c8920 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x51551e and fs3 == 1 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9c8920; op2val:0x8151551e;
op3val:0xbfb6db6d; valaddr_reg:x3; val_offset:12210*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12210*0 + 3*31*FLEN/8, x4, x1, x2)

inst_4071:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1c8920 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x51551e and fs3 == 1 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9c8920; op2val:0x8151551e;
op3val:0xbfbbbbbb; valaddr_reg:x3; val_offset:12213*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12213*0 + 3*31*FLEN/8, x4, x1, x2)

inst_4072:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1c8920 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x51551e and fs3 == 1 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9c8920; op2val:0x8151551e;
op3val:0xbfc44444; valaddr_reg:x3; val_offset:12216*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12216*0 + 3*31*FLEN/8, x4, x1, x2)

inst_4073:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1c8920 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x51551e and fs3 == 1 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9c8920; op2val:0x8151551e;
op3val:0xbfcccccc; valaddr_reg:x3; val_offset:12219*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12219*0 + 3*31*FLEN/8, x4, x1, x2)

inst_4074:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1c8920 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x51551e and fs3 == 1 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9c8920; op2val:0x8151551e;
op3val:0xbfdb6db6; valaddr_reg:x3; val_offset:12222*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12222*0 + 3*31*FLEN/8, x4, x1, x2)

inst_4075:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1c8920 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x51551e and fs3 == 1 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9c8920; op2val:0x8151551e;
op3val:0xbfe66666; valaddr_reg:x3; val_offset:12225*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12225*0 + 3*31*FLEN/8, x4, x1, x2)

inst_4076:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1c8920 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x51551e and fs3 == 1 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9c8920; op2val:0x8151551e;
op3val:0xbfedb6db; valaddr_reg:x3; val_offset:12228*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12228*0 + 3*31*FLEN/8, x4, x1, x2)

inst_4077:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1c8920 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x51551e and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9c8920; op2val:0x8151551e;
op3val:0xbffffff8; valaddr_reg:x3; val_offset:12231*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12231*0 + 3*31*FLEN/8, x4, x1, x2)

inst_4078:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1c8920 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x51551e and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9c8920; op2val:0x8151551e;
op3val:0xbffffffc; valaddr_reg:x3; val_offset:12234*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12234*0 + 3*31*FLEN/8, x4, x1, x2)

inst_4079:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1c8920 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x51551e and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9c8920; op2val:0x8151551e;
op3val:0xbffffffe; valaddr_reg:x3; val_offset:12237*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12237*0 + 3*31*FLEN/8, x4, x1, x2)

inst_4080:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1fb78b and fs2 == 1 and fe2 == 0x82 and fm2 == 0x4d29b3 and fs3 == 1 and fe3 == 0xd2 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9fb78b; op2val:0xc14d29b3;
op3val:0xe9000000; valaddr_reg:x3; val_offset:12240*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12240*0 + 3*31*FLEN/8, x4, x1, x2)

inst_4081:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1fb78b and fs2 == 1 and fe2 == 0x82 and fm2 == 0x4d29b3 and fs3 == 1 and fe3 == 0xd2 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9fb78b; op2val:0xc14d29b3;
op3val:0xe9000001; valaddr_reg:x3; val_offset:12243*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12243*0 + 3*31*FLEN/8, x4, x1, x2)

inst_4082:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1fb78b and fs2 == 1 and fe2 == 0x82 and fm2 == 0x4d29b3 and fs3 == 1 and fe3 == 0xd2 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9fb78b; op2val:0xc14d29b3;
op3val:0xe9000003; valaddr_reg:x3; val_offset:12246*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12246*0 + 3*31*FLEN/8, x4, x1, x2)

inst_4083:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1fb78b and fs2 == 1 and fe2 == 0x82 and fm2 == 0x4d29b3 and fs3 == 1 and fe3 == 0xd2 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9fb78b; op2val:0xc14d29b3;
op3val:0xe9000007; valaddr_reg:x3; val_offset:12249*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12249*0 + 3*31*FLEN/8, x4, x1, x2)

inst_4084:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1fb78b and fs2 == 1 and fe2 == 0x82 and fm2 == 0x4d29b3 and fs3 == 1 and fe3 == 0xd2 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9fb78b; op2val:0xc14d29b3;
op3val:0xe900000f; valaddr_reg:x3; val_offset:12252*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12252*0 + 3*31*FLEN/8, x4, x1, x2)

inst_4085:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1fb78b and fs2 == 1 and fe2 == 0x82 and fm2 == 0x4d29b3 and fs3 == 1 and fe3 == 0xd2 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9fb78b; op2val:0xc14d29b3;
op3val:0xe900001f; valaddr_reg:x3; val_offset:12255*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12255*0 + 3*31*FLEN/8, x4, x1, x2)

inst_4086:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1fb78b and fs2 == 1 and fe2 == 0x82 and fm2 == 0x4d29b3 and fs3 == 1 and fe3 == 0xd2 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9fb78b; op2val:0xc14d29b3;
op3val:0xe900003f; valaddr_reg:x3; val_offset:12258*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12258*0 + 3*31*FLEN/8, x4, x1, x2)

inst_4087:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1fb78b and fs2 == 1 and fe2 == 0x82 and fm2 == 0x4d29b3 and fs3 == 1 and fe3 == 0xd2 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9fb78b; op2val:0xc14d29b3;
op3val:0xe900007f; valaddr_reg:x3; val_offset:12261*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12261*0 + 3*31*FLEN/8, x4, x1, x2)

inst_4088:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1fb78b and fs2 == 1 and fe2 == 0x82 and fm2 == 0x4d29b3 and fs3 == 1 and fe3 == 0xd2 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9fb78b; op2val:0xc14d29b3;
op3val:0xe90000ff; valaddr_reg:x3; val_offset:12264*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12264*0 + 3*31*FLEN/8, x4, x1, x2)

inst_4089:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1fb78b and fs2 == 1 and fe2 == 0x82 and fm2 == 0x4d29b3 and fs3 == 1 and fe3 == 0xd2 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9fb78b; op2val:0xc14d29b3;
op3val:0xe90001ff; valaddr_reg:x3; val_offset:12267*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12267*0 + 3*31*FLEN/8, x4, x1, x2)

inst_4090:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1fb78b and fs2 == 1 and fe2 == 0x82 and fm2 == 0x4d29b3 and fs3 == 1 and fe3 == 0xd2 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9fb78b; op2val:0xc14d29b3;
op3val:0xe90003ff; valaddr_reg:x3; val_offset:12270*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12270*0 + 3*31*FLEN/8, x4, x1, x2)

inst_4091:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1fb78b and fs2 == 1 and fe2 == 0x82 and fm2 == 0x4d29b3 and fs3 == 1 and fe3 == 0xd2 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9fb78b; op2val:0xc14d29b3;
op3val:0xe90007ff; valaddr_reg:x3; val_offset:12273*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12273*0 + 3*31*FLEN/8, x4, x1, x2)

inst_4092:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1fb78b and fs2 == 1 and fe2 == 0x82 and fm2 == 0x4d29b3 and fs3 == 1 and fe3 == 0xd2 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9fb78b; op2val:0xc14d29b3;
op3val:0xe9000fff; valaddr_reg:x3; val_offset:12276*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12276*0 + 3*31*FLEN/8, x4, x1, x2)

inst_4093:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1fb78b and fs2 == 1 and fe2 == 0x82 and fm2 == 0x4d29b3 and fs3 == 1 and fe3 == 0xd2 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9fb78b; op2val:0xc14d29b3;
op3val:0xe9001fff; valaddr_reg:x3; val_offset:12279*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12279*0 + 3*31*FLEN/8, x4, x1, x2)

inst_4094:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1fb78b and fs2 == 1 and fe2 == 0x82 and fm2 == 0x4d29b3 and fs3 == 1 and fe3 == 0xd2 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9fb78b; op2val:0xc14d29b3;
op3val:0xe9003fff; valaddr_reg:x3; val_offset:12282*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12282*0 + 3*31*FLEN/8, x4, x1, x2)

inst_4095:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1fb78b and fs2 == 1 and fe2 == 0x82 and fm2 == 0x4d29b3 and fs3 == 1 and fe3 == 0xd2 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9fb78b; op2val:0xc14d29b3;
op3val:0xe9007fff; valaddr_reg:x3; val_offset:12285*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12285*0 + 3*31*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(2107214019,32,FLEN)
NAN_BOXED(3243601081,32,FLEN)
NAN_BOXED(3841986559,32,FLEN)
NAN_BOXED(2107214019,32,FLEN)
NAN_BOXED(3243601081,32,FLEN)
NAN_BOXED(3841990655,32,FLEN)
NAN_BOXED(2107214019,32,FLEN)
NAN_BOXED(3243601081,32,FLEN)
NAN_BOXED(3841998847,32,FLEN)
NAN_BOXED(2107214019,32,FLEN)
NAN_BOXED(3243601081,32,FLEN)
NAN_BOXED(3842015231,32,FLEN)
NAN_BOXED(2107214019,32,FLEN)
NAN_BOXED(3243601081,32,FLEN)
NAN_BOXED(3842047999,32,FLEN)
NAN_BOXED(2107214019,32,FLEN)
NAN_BOXED(3243601081,32,FLEN)
NAN_BOXED(3842113535,32,FLEN)
NAN_BOXED(2107214019,32,FLEN)
NAN_BOXED(3243601081,32,FLEN)
NAN_BOXED(3842244607,32,FLEN)
NAN_BOXED(2107214019,32,FLEN)
NAN_BOXED(3243601081,32,FLEN)
NAN_BOXED(3842506751,32,FLEN)
NAN_BOXED(2107214019,32,FLEN)
NAN_BOXED(3243601081,32,FLEN)
NAN_BOXED(3843031039,32,FLEN)
NAN_BOXED(2107214019,32,FLEN)
NAN_BOXED(3243601081,32,FLEN)
NAN_BOXED(3844079615,32,FLEN)
NAN_BOXED(2107214019,32,FLEN)
NAN_BOXED(3243601081,32,FLEN)
NAN_BOXED(3846176767,32,FLEN)
NAN_BOXED(2107214019,32,FLEN)
NAN_BOXED(3243601081,32,FLEN)
NAN_BOXED(3846176768,32,FLEN)
NAN_BOXED(2107214019,32,FLEN)
NAN_BOXED(3243601081,32,FLEN)
NAN_BOXED(3848273920,32,FLEN)
NAN_BOXED(2107214019,32,FLEN)
NAN_BOXED(3243601081,32,FLEN)
NAN_BOXED(3849322496,32,FLEN)
NAN_BOXED(2107214019,32,FLEN)
NAN_BOXED(3243601081,32,FLEN)
NAN_BOXED(3849846784,32,FLEN)
NAN_BOXED(2107214019,32,FLEN)
NAN_BOXED(3243601081,32,FLEN)
NAN_BOXED(3850108928,32,FLEN)
NAN_BOXED(2107214019,32,FLEN)
NAN_BOXED(3243601081,32,FLEN)
NAN_BOXED(3850240000,32,FLEN)
NAN_BOXED(2107214019,32,FLEN)
NAN_BOXED(3243601081,32,FLEN)
NAN_BOXED(3850305536,32,FLEN)
NAN_BOXED(2107214019,32,FLEN)
NAN_BOXED(3243601081,32,FLEN)
NAN_BOXED(3850338304,32,FLEN)
NAN_BOXED(2107214019,32,FLEN)
NAN_BOXED(3243601081,32,FLEN)
NAN_BOXED(3850354688,32,FLEN)
NAN_BOXED(2107214019,32,FLEN)
NAN_BOXED(3243601081,32,FLEN)
NAN_BOXED(3850362880,32,FLEN)
NAN_BOXED(2107214019,32,FLEN)
NAN_BOXED(3243601081,32,FLEN)
NAN_BOXED(3850366976,32,FLEN)
NAN_BOXED(2107214019,32,FLEN)
NAN_BOXED(3243601081,32,FLEN)
NAN_BOXED(3850369024,32,FLEN)
NAN_BOXED(2107214019,32,FLEN)
NAN_BOXED(3243601081,32,FLEN)
NAN_BOXED(3850370048,32,FLEN)
NAN_BOXED(2107214019,32,FLEN)
NAN_BOXED(3243601081,32,FLEN)
NAN_BOXED(3850370560,32,FLEN)
NAN_BOXED(2107214019,32,FLEN)
NAN_BOXED(3243601081,32,FLEN)
NAN_BOXED(3850370816,32,FLEN)
NAN_BOXED(2107214019,32,FLEN)
NAN_BOXED(3243601081,32,FLEN)
NAN_BOXED(3850370944,32,FLEN)
NAN_BOXED(2107214019,32,FLEN)
NAN_BOXED(3243601081,32,FLEN)
NAN_BOXED(3850371008,32,FLEN)
NAN_BOXED(2107214019,32,FLEN)
NAN_BOXED(3243601081,32,FLEN)
NAN_BOXED(3850371040,32,FLEN)
NAN_BOXED(2107214019,32,FLEN)
NAN_BOXED(3243601081,32,FLEN)
NAN_BOXED(3850371056,32,FLEN)
NAN_BOXED(2107214019,32,FLEN)
NAN_BOXED(3243601081,32,FLEN)
NAN_BOXED(3850371064,32,FLEN)
NAN_BOXED(2107214019,32,FLEN)
NAN_BOXED(3243601081,32,FLEN)
NAN_BOXED(3850371068,32,FLEN)
NAN_BOXED(2107214019,32,FLEN)
NAN_BOXED(3243601081,32,FLEN)
NAN_BOXED(3850371070,32,FLEN)
NAN_BOXED(2107214019,32,FLEN)
NAN_BOXED(3243601081,32,FLEN)
NAN_BOXED(3850371071,32,FLEN)
NAN_BOXED(2107214019,32,FLEN)
NAN_BOXED(3243601081,32,FLEN)
NAN_BOXED(4278190081,32,FLEN)
NAN_BOXED(2107214019,32,FLEN)
NAN_BOXED(3243601081,32,FLEN)
NAN_BOXED(4278190083,32,FLEN)
NAN_BOXED(2107214019,32,FLEN)
NAN_BOXED(3243601081,32,FLEN)
NAN_BOXED(4278190087,32,FLEN)
NAN_BOXED(2107214019,32,FLEN)
NAN_BOXED(3243601081,32,FLEN)
NAN_BOXED(4279867801,32,FLEN)
NAN_BOXED(2107214019,32,FLEN)
NAN_BOXED(3243601081,32,FLEN)
NAN_BOXED(4280586825,32,FLEN)
NAN_BOXED(2107214019,32,FLEN)
NAN_BOXED(3243601081,32,FLEN)
NAN_BOXED(4281545523,32,FLEN)
NAN_BOXED(2107214019,32,FLEN)
NAN_BOXED(3243601081,32,FLEN)
NAN_BOXED(4281785197,32,FLEN)
NAN_BOXED(2107214019,32,FLEN)
NAN_BOXED(3243601081,32,FLEN)
NAN_BOXED(4282104763,32,FLEN)
NAN_BOXED(2107214019,32,FLEN)
NAN_BOXED(3243601081,32,FLEN)
NAN_BOXED(4282664004,32,FLEN)
NAN_BOXED(2107214019,32,FLEN)
NAN_BOXED(3243601081,32,FLEN)
NAN_BOXED(4283223244,32,FLEN)
NAN_BOXED(2107214019,32,FLEN)
NAN_BOXED(3243601081,32,FLEN)
NAN_BOXED(4284181942,32,FLEN)
NAN_BOXED(2107214019,32,FLEN)
NAN_BOXED(3243601081,32,FLEN)
NAN_BOXED(4284900966,32,FLEN)
NAN_BOXED(2107214019,32,FLEN)
NAN_BOXED(3243601081,32,FLEN)
NAN_BOXED(4285380315,32,FLEN)
NAN_BOXED(2107214019,32,FLEN)
NAN_BOXED(3243601081,32,FLEN)
NAN_BOXED(4286578680,32,FLEN)
NAN_BOXED(2107214019,32,FLEN)
NAN_BOXED(3243601081,32,FLEN)
NAN_BOXED(4286578684,32,FLEN)
NAN_BOXED(2107214019,32,FLEN)
NAN_BOXED(3243601081,32,FLEN)
NAN_BOXED(4286578686,32,FLEN)
NAN_BOXED(2107410720,32,FLEN)
NAN_BOXED(2169591070,32,FLEN)
NAN_BOXED(2667577344,32,FLEN)
NAN_BOXED(2107410720,32,FLEN)
NAN_BOXED(2169591070,32,FLEN)
NAN_BOXED(2667577345,32,FLEN)
NAN_BOXED(2107410720,32,FLEN)
NAN_BOXED(2169591070,32,FLEN)
NAN_BOXED(2667577347,32,FLEN)
NAN_BOXED(2107410720,32,FLEN)
NAN_BOXED(2169591070,32,FLEN)
NAN_BOXED(2667577351,32,FLEN)
NAN_BOXED(2107410720,32,FLEN)
NAN_BOXED(2169591070,32,FLEN)
NAN_BOXED(2667577359,32,FLEN)
NAN_BOXED(2107410720,32,FLEN)
NAN_BOXED(2169591070,32,FLEN)
NAN_BOXED(2667577375,32,FLEN)
NAN_BOXED(2107410720,32,FLEN)
NAN_BOXED(2169591070,32,FLEN)
NAN_BOXED(2667577407,32,FLEN)
NAN_BOXED(2107410720,32,FLEN)
NAN_BOXED(2169591070,32,FLEN)
NAN_BOXED(2667577471,32,FLEN)
NAN_BOXED(2107410720,32,FLEN)
NAN_BOXED(2169591070,32,FLEN)
NAN_BOXED(2667577599,32,FLEN)
NAN_BOXED(2107410720,32,FLEN)
NAN_BOXED(2169591070,32,FLEN)
NAN_BOXED(2667577855,32,FLEN)
NAN_BOXED(2107410720,32,FLEN)
NAN_BOXED(2169591070,32,FLEN)
NAN_BOXED(2667578367,32,FLEN)
NAN_BOXED(2107410720,32,FLEN)
NAN_BOXED(2169591070,32,FLEN)
NAN_BOXED(2667579391,32,FLEN)
NAN_BOXED(2107410720,32,FLEN)
NAN_BOXED(2169591070,32,FLEN)
NAN_BOXED(2667581439,32,FLEN)
NAN_BOXED(2107410720,32,FLEN)
NAN_BOXED(2169591070,32,FLEN)
NAN_BOXED(2667585535,32,FLEN)
NAN_BOXED(2107410720,32,FLEN)
NAN_BOXED(2169591070,32,FLEN)
NAN_BOXED(2667593727,32,FLEN)
NAN_BOXED(2107410720,32,FLEN)
NAN_BOXED(2169591070,32,FLEN)
NAN_BOXED(2667610111,32,FLEN)
NAN_BOXED(2107410720,32,FLEN)
NAN_BOXED(2169591070,32,FLEN)
NAN_BOXED(2667642879,32,FLEN)
NAN_BOXED(2107410720,32,FLEN)
NAN_BOXED(2169591070,32,FLEN)
NAN_BOXED(2667708415,32,FLEN)
NAN_BOXED(2107410720,32,FLEN)
NAN_BOXED(2169591070,32,FLEN)
NAN_BOXED(2667839487,32,FLEN)
NAN_BOXED(2107410720,32,FLEN)
NAN_BOXED(2169591070,32,FLEN)
NAN_BOXED(2668101631,32,FLEN)
NAN_BOXED(2107410720,32,FLEN)
NAN_BOXED(2169591070,32,FLEN)
NAN_BOXED(2668625919,32,FLEN)
NAN_BOXED(2107410720,32,FLEN)
NAN_BOXED(2169591070,32,FLEN)
NAN_BOXED(2669674495,32,FLEN)
NAN_BOXED(2107410720,32,FLEN)
NAN_BOXED(2169591070,32,FLEN)
NAN_BOXED(2671771647,32,FLEN)
NAN_BOXED(2107410720,32,FLEN)
NAN_BOXED(2169591070,32,FLEN)
NAN_BOXED(2671771648,32,FLEN)
NAN_BOXED(2107410720,32,FLEN)
NAN_BOXED(2169591070,32,FLEN)
NAN_BOXED(2673868800,32,FLEN)
NAN_BOXED(2107410720,32,FLEN)
NAN_BOXED(2169591070,32,FLEN)
NAN_BOXED(2674917376,32,FLEN)
NAN_BOXED(2107410720,32,FLEN)
NAN_BOXED(2169591070,32,FLEN)
NAN_BOXED(2675441664,32,FLEN)
NAN_BOXED(2107410720,32,FLEN)
NAN_BOXED(2169591070,32,FLEN)
NAN_BOXED(2675703808,32,FLEN)
NAN_BOXED(2107410720,32,FLEN)
NAN_BOXED(2169591070,32,FLEN)
NAN_BOXED(2675834880,32,FLEN)
NAN_BOXED(2107410720,32,FLEN)
NAN_BOXED(2169591070,32,FLEN)
NAN_BOXED(2675900416,32,FLEN)
NAN_BOXED(2107410720,32,FLEN)
NAN_BOXED(2169591070,32,FLEN)
NAN_BOXED(2675933184,32,FLEN)
NAN_BOXED(2107410720,32,FLEN)
NAN_BOXED(2169591070,32,FLEN)
NAN_BOXED(2675949568,32,FLEN)
NAN_BOXED(2107410720,32,FLEN)
NAN_BOXED(2169591070,32,FLEN)
NAN_BOXED(2675957760,32,FLEN)
NAN_BOXED(2107410720,32,FLEN)
NAN_BOXED(2169591070,32,FLEN)
NAN_BOXED(2675961856,32,FLEN)
NAN_BOXED(2107410720,32,FLEN)
NAN_BOXED(2169591070,32,FLEN)
NAN_BOXED(2675963904,32,FLEN)
NAN_BOXED(2107410720,32,FLEN)
NAN_BOXED(2169591070,32,FLEN)
NAN_BOXED(2675964928,32,FLEN)
NAN_BOXED(2107410720,32,FLEN)
NAN_BOXED(2169591070,32,FLEN)
NAN_BOXED(2675965440,32,FLEN)
NAN_BOXED(2107410720,32,FLEN)
NAN_BOXED(2169591070,32,FLEN)
NAN_BOXED(2675965696,32,FLEN)
NAN_BOXED(2107410720,32,FLEN)
NAN_BOXED(2169591070,32,FLEN)
NAN_BOXED(2675965824,32,FLEN)
NAN_BOXED(2107410720,32,FLEN)
NAN_BOXED(2169591070,32,FLEN)
NAN_BOXED(2675965888,32,FLEN)
NAN_BOXED(2107410720,32,FLEN)
NAN_BOXED(2169591070,32,FLEN)
NAN_BOXED(2675965920,32,FLEN)
NAN_BOXED(2107410720,32,FLEN)
NAN_BOXED(2169591070,32,FLEN)
NAN_BOXED(2675965936,32,FLEN)
NAN_BOXED(2107410720,32,FLEN)
NAN_BOXED(2169591070,32,FLEN)
NAN_BOXED(2675965944,32,FLEN)
NAN_BOXED(2107410720,32,FLEN)
NAN_BOXED(2169591070,32,FLEN)
NAN_BOXED(2675965948,32,FLEN)
NAN_BOXED(2107410720,32,FLEN)
NAN_BOXED(2169591070,32,FLEN)
NAN_BOXED(2675965950,32,FLEN)
NAN_BOXED(2107410720,32,FLEN)
NAN_BOXED(2169591070,32,FLEN)
NAN_BOXED(2675965951,32,FLEN)
NAN_BOXED(2107410720,32,FLEN)
NAN_BOXED(2169591070,32,FLEN)
NAN_BOXED(3212836865,32,FLEN)
NAN_BOXED(2107410720,32,FLEN)
NAN_BOXED(2169591070,32,FLEN)
NAN_BOXED(3212836867,32,FLEN)
NAN_BOXED(2107410720,32,FLEN)
NAN_BOXED(2169591070,32,FLEN)
NAN_BOXED(3212836871,32,FLEN)
NAN_BOXED(2107410720,32,FLEN)
NAN_BOXED(2169591070,32,FLEN)
NAN_BOXED(3214514585,32,FLEN)
NAN_BOXED(2107410720,32,FLEN)
NAN_BOXED(2169591070,32,FLEN)
NAN_BOXED(3215233609,32,FLEN)
NAN_BOXED(2107410720,32,FLEN)
NAN_BOXED(2169591070,32,FLEN)
NAN_BOXED(3216192307,32,FLEN)
NAN_BOXED(2107410720,32,FLEN)
NAN_BOXED(2169591070,32,FLEN)
NAN_BOXED(3216431981,32,FLEN)
NAN_BOXED(2107410720,32,FLEN)
NAN_BOXED(2169591070,32,FLEN)
NAN_BOXED(3216751547,32,FLEN)
NAN_BOXED(2107410720,32,FLEN)
NAN_BOXED(2169591070,32,FLEN)
NAN_BOXED(3217310788,32,FLEN)
NAN_BOXED(2107410720,32,FLEN)
NAN_BOXED(2169591070,32,FLEN)
NAN_BOXED(3217870028,32,FLEN)
NAN_BOXED(2107410720,32,FLEN)
NAN_BOXED(2169591070,32,FLEN)
NAN_BOXED(3218828726,32,FLEN)
NAN_BOXED(2107410720,32,FLEN)
NAN_BOXED(2169591070,32,FLEN)
NAN_BOXED(3219547750,32,FLEN)
NAN_BOXED(2107410720,32,FLEN)
NAN_BOXED(2169591070,32,FLEN)
NAN_BOXED(3220027099,32,FLEN)
NAN_BOXED(2107410720,32,FLEN)
NAN_BOXED(2169591070,32,FLEN)
NAN_BOXED(3221225464,32,FLEN)
NAN_BOXED(2107410720,32,FLEN)
NAN_BOXED(2169591070,32,FLEN)
NAN_BOXED(3221225468,32,FLEN)
NAN_BOXED(2107410720,32,FLEN)
NAN_BOXED(2169591070,32,FLEN)
NAN_BOXED(3221225470,32,FLEN)
NAN_BOXED(2107619211,32,FLEN)
NAN_BOXED(3243059635,32,FLEN)
NAN_BOXED(3909091328,32,FLEN)
NAN_BOXED(2107619211,32,FLEN)
NAN_BOXED(3243059635,32,FLEN)
NAN_BOXED(3909091329,32,FLEN)
NAN_BOXED(2107619211,32,FLEN)
NAN_BOXED(3243059635,32,FLEN)
NAN_BOXED(3909091331,32,FLEN)
NAN_BOXED(2107619211,32,FLEN)
NAN_BOXED(3243059635,32,FLEN)
NAN_BOXED(3909091335,32,FLEN)
NAN_BOXED(2107619211,32,FLEN)
NAN_BOXED(3243059635,32,FLEN)
NAN_BOXED(3909091343,32,FLEN)
NAN_BOXED(2107619211,32,FLEN)
NAN_BOXED(3243059635,32,FLEN)
NAN_BOXED(3909091359,32,FLEN)
NAN_BOXED(2107619211,32,FLEN)
NAN_BOXED(3243059635,32,FLEN)
NAN_BOXED(3909091391,32,FLEN)
NAN_BOXED(2107619211,32,FLEN)
NAN_BOXED(3243059635,32,FLEN)
NAN_BOXED(3909091455,32,FLEN)
NAN_BOXED(2107619211,32,FLEN)
NAN_BOXED(3243059635,32,FLEN)
NAN_BOXED(3909091583,32,FLEN)
NAN_BOXED(2107619211,32,FLEN)
NAN_BOXED(3243059635,32,FLEN)
NAN_BOXED(3909091839,32,FLEN)
NAN_BOXED(2107619211,32,FLEN)
NAN_BOXED(3243059635,32,FLEN)
NAN_BOXED(3909092351,32,FLEN)
NAN_BOXED(2107619211,32,FLEN)
NAN_BOXED(3243059635,32,FLEN)
NAN_BOXED(3909093375,32,FLEN)
NAN_BOXED(2107619211,32,FLEN)
NAN_BOXED(3243059635,32,FLEN)
NAN_BOXED(3909095423,32,FLEN)
NAN_BOXED(2107619211,32,FLEN)
NAN_BOXED(3243059635,32,FLEN)
NAN_BOXED(3909099519,32,FLEN)
NAN_BOXED(2107619211,32,FLEN)
NAN_BOXED(3243059635,32,FLEN)
NAN_BOXED(3909107711,32,FLEN)
NAN_BOXED(2107619211,32,FLEN)
NAN_BOXED(3243059635,32,FLEN)
NAN_BOXED(3909124095,32,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
