
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 14:18:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32F/fmsub.s.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.s instruction of the RISC-V RV32F_Zicsr,RV32FD_Zicsr,RV64F_Zicsr,RV64FD_Zicsr extension for the fmsub_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF_Zicsr,RV32IFD_Zicsr,RV64IF_Zicsr,RV64IFD_Zicsr,RV32EF_Zicsr,RV32EFD_Zicsr,RV64EF_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fmsub_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*F.*);def TEST_CASE_1=True;",fmsub_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_4480:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x230e99 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x48f5da and fs3 == 0 and fe3 == 0x4a and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da30e99; op2val:0x148f5da;
op3val:0x257e0000; valaddr_reg:x3; val_offset:13440*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13440*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4481:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x230e99 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x48f5da and fs3 == 0 and fe3 == 0x4a and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da30e99; op2val:0x148f5da;
op3val:0x257f0000; valaddr_reg:x3; val_offset:13443*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13443*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4482:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x230e99 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x48f5da and fs3 == 0 and fe3 == 0x4a and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da30e99; op2val:0x148f5da;
op3val:0x257f8000; valaddr_reg:x3; val_offset:13446*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13446*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4483:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x230e99 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x48f5da and fs3 == 0 and fe3 == 0x4a and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da30e99; op2val:0x148f5da;
op3val:0x257fc000; valaddr_reg:x3; val_offset:13449*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13449*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4484:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x230e99 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x48f5da and fs3 == 0 and fe3 == 0x4a and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da30e99; op2val:0x148f5da;
op3val:0x257fe000; valaddr_reg:x3; val_offset:13452*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13452*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4485:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x230e99 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x48f5da and fs3 == 0 and fe3 == 0x4a and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da30e99; op2val:0x148f5da;
op3val:0x257ff000; valaddr_reg:x3; val_offset:13455*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13455*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4486:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x230e99 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x48f5da and fs3 == 0 and fe3 == 0x4a and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da30e99; op2val:0x148f5da;
op3val:0x257ff800; valaddr_reg:x3; val_offset:13458*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13458*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4487:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x230e99 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x48f5da and fs3 == 0 and fe3 == 0x4a and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da30e99; op2val:0x148f5da;
op3val:0x257ffc00; valaddr_reg:x3; val_offset:13461*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13461*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4488:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x230e99 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x48f5da and fs3 == 0 and fe3 == 0x4a and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da30e99; op2val:0x148f5da;
op3val:0x257ffe00; valaddr_reg:x3; val_offset:13464*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13464*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4489:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x230e99 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x48f5da and fs3 == 0 and fe3 == 0x4a and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da30e99; op2val:0x148f5da;
op3val:0x257fff00; valaddr_reg:x3; val_offset:13467*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13467*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4490:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x230e99 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x48f5da and fs3 == 0 and fe3 == 0x4a and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da30e99; op2val:0x148f5da;
op3val:0x257fff80; valaddr_reg:x3; val_offset:13470*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13470*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4491:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x230e99 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x48f5da and fs3 == 0 and fe3 == 0x4a and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da30e99; op2val:0x148f5da;
op3val:0x257fffc0; valaddr_reg:x3; val_offset:13473*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13473*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4492:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x230e99 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x48f5da and fs3 == 0 and fe3 == 0x4a and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da30e99; op2val:0x148f5da;
op3val:0x257fffe0; valaddr_reg:x3; val_offset:13476*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13476*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4493:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x230e99 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x48f5da and fs3 == 0 and fe3 == 0x4a and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da30e99; op2val:0x148f5da;
op3val:0x257ffff0; valaddr_reg:x3; val_offset:13479*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13479*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4494:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x230e99 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x48f5da and fs3 == 0 and fe3 == 0x4a and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da30e99; op2val:0x148f5da;
op3val:0x257ffff8; valaddr_reg:x3; val_offset:13482*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13482*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4495:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x230e99 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x48f5da and fs3 == 0 and fe3 == 0x4a and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da30e99; op2val:0x148f5da;
op3val:0x257ffffc; valaddr_reg:x3; val_offset:13485*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13485*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4496:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x230e99 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x48f5da and fs3 == 0 and fe3 == 0x4a and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da30e99; op2val:0x148f5da;
op3val:0x257ffffe; valaddr_reg:x3; val_offset:13488*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13488*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4497:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x230e99 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x48f5da and fs3 == 0 and fe3 == 0x4a and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da30e99; op2val:0x148f5da;
op3val:0x257fffff; valaddr_reg:x3; val_offset:13491*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13491*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4498:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x230e99 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x48f5da and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da30e99; op2val:0x148f5da;
op3val:0x3f800001; valaddr_reg:x3; val_offset:13494*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13494*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4499:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x230e99 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x48f5da and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da30e99; op2val:0x148f5da;
op3val:0x3f800003; valaddr_reg:x3; val_offset:13497*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13497*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4500:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x230e99 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x48f5da and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da30e99; op2val:0x148f5da;
op3val:0x3f800007; valaddr_reg:x3; val_offset:13500*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13500*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4501:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x230e99 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x48f5da and fs3 == 0 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da30e99; op2val:0x148f5da;
op3val:0x3f999999; valaddr_reg:x3; val_offset:13503*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13503*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4502:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x230e99 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x48f5da and fs3 == 0 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da30e99; op2val:0x148f5da;
op3val:0x3fa49249; valaddr_reg:x3; val_offset:13506*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13506*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4503:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x230e99 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x48f5da and fs3 == 0 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da30e99; op2val:0x148f5da;
op3val:0x3fb33333; valaddr_reg:x3; val_offset:13509*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13509*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4504:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x230e99 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x48f5da and fs3 == 0 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da30e99; op2val:0x148f5da;
op3val:0x3fb6db6d; valaddr_reg:x3; val_offset:13512*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13512*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4505:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x230e99 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x48f5da and fs3 == 0 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da30e99; op2val:0x148f5da;
op3val:0x3fbbbbbb; valaddr_reg:x3; val_offset:13515*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13515*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4506:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x230e99 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x48f5da and fs3 == 0 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da30e99; op2val:0x148f5da;
op3val:0x3fc44444; valaddr_reg:x3; val_offset:13518*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13518*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4507:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x230e99 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x48f5da and fs3 == 0 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da30e99; op2val:0x148f5da;
op3val:0x3fcccccc; valaddr_reg:x3; val_offset:13521*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13521*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4508:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x230e99 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x48f5da and fs3 == 0 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da30e99; op2val:0x148f5da;
op3val:0x3fdb6db6; valaddr_reg:x3; val_offset:13524*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13524*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4509:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x230e99 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x48f5da and fs3 == 0 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da30e99; op2val:0x148f5da;
op3val:0x3fe66666; valaddr_reg:x3; val_offset:13527*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13527*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4510:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x230e99 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x48f5da and fs3 == 0 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da30e99; op2val:0x148f5da;
op3val:0x3fedb6db; valaddr_reg:x3; val_offset:13530*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13530*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4511:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x230e99 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x48f5da and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da30e99; op2val:0x148f5da;
op3val:0x3ffffff8; valaddr_reg:x3; val_offset:13533*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13533*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4512:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x230e99 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x48f5da and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da30e99; op2val:0x148f5da;
op3val:0x3ffffffc; valaddr_reg:x3; val_offset:13536*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13536*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4513:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x230e99 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x48f5da and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da30e99; op2val:0x148f5da;
op3val:0x3ffffffe; valaddr_reg:x3; val_offset:13539*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13539*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4514:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x263fe8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x4519e5 and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da63fe8; op2val:0x414519e5;
op3val:0x7b800000; valaddr_reg:x3; val_offset:13542*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13542*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4515:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x263fe8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x4519e5 and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da63fe8; op2val:0x414519e5;
op3val:0x7b800001; valaddr_reg:x3; val_offset:13545*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13545*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4516:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x263fe8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x4519e5 and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da63fe8; op2val:0x414519e5;
op3val:0x7b800003; valaddr_reg:x3; val_offset:13548*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13548*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4517:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x263fe8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x4519e5 and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da63fe8; op2val:0x414519e5;
op3val:0x7b800007; valaddr_reg:x3; val_offset:13551*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13551*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4518:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x263fe8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x4519e5 and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da63fe8; op2val:0x414519e5;
op3val:0x7b80000f; valaddr_reg:x3; val_offset:13554*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13554*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4519:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x263fe8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x4519e5 and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da63fe8; op2val:0x414519e5;
op3val:0x7b80001f; valaddr_reg:x3; val_offset:13557*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13557*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4520:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x263fe8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x4519e5 and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da63fe8; op2val:0x414519e5;
op3val:0x7b80003f; valaddr_reg:x3; val_offset:13560*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13560*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4521:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x263fe8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x4519e5 and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da63fe8; op2val:0x414519e5;
op3val:0x7b80007f; valaddr_reg:x3; val_offset:13563*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13563*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4522:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x263fe8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x4519e5 and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da63fe8; op2val:0x414519e5;
op3val:0x7b8000ff; valaddr_reg:x3; val_offset:13566*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13566*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4523:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x263fe8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x4519e5 and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da63fe8; op2val:0x414519e5;
op3val:0x7b8001ff; valaddr_reg:x3; val_offset:13569*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13569*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4524:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x263fe8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x4519e5 and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da63fe8; op2val:0x414519e5;
op3val:0x7b8003ff; valaddr_reg:x3; val_offset:13572*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13572*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4525:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x263fe8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x4519e5 and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da63fe8; op2val:0x414519e5;
op3val:0x7b8007ff; valaddr_reg:x3; val_offset:13575*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13575*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4526:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x263fe8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x4519e5 and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da63fe8; op2val:0x414519e5;
op3val:0x7b800fff; valaddr_reg:x3; val_offset:13578*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13578*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4527:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x263fe8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x4519e5 and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da63fe8; op2val:0x414519e5;
op3val:0x7b801fff; valaddr_reg:x3; val_offset:13581*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13581*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4528:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x263fe8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x4519e5 and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da63fe8; op2val:0x414519e5;
op3val:0x7b803fff; valaddr_reg:x3; val_offset:13584*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13584*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4529:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x263fe8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x4519e5 and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da63fe8; op2val:0x414519e5;
op3val:0x7b807fff; valaddr_reg:x3; val_offset:13587*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13587*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4530:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x263fe8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x4519e5 and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da63fe8; op2val:0x414519e5;
op3val:0x7b80ffff; valaddr_reg:x3; val_offset:13590*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13590*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4531:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x263fe8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x4519e5 and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da63fe8; op2val:0x414519e5;
op3val:0x7b81ffff; valaddr_reg:x3; val_offset:13593*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13593*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4532:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x263fe8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x4519e5 and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da63fe8; op2val:0x414519e5;
op3val:0x7b83ffff; valaddr_reg:x3; val_offset:13596*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13596*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4533:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x263fe8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x4519e5 and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da63fe8; op2val:0x414519e5;
op3val:0x7b87ffff; valaddr_reg:x3; val_offset:13599*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13599*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4534:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x263fe8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x4519e5 and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da63fe8; op2val:0x414519e5;
op3val:0x7b8fffff; valaddr_reg:x3; val_offset:13602*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13602*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4535:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x263fe8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x4519e5 and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da63fe8; op2val:0x414519e5;
op3val:0x7b9fffff; valaddr_reg:x3; val_offset:13605*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13605*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4536:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x263fe8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x4519e5 and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da63fe8; op2val:0x414519e5;
op3val:0x7bbfffff; valaddr_reg:x3; val_offset:13608*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13608*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4537:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x263fe8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x4519e5 and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da63fe8; op2val:0x414519e5;
op3val:0x7bc00000; valaddr_reg:x3; val_offset:13611*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13611*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4538:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x263fe8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x4519e5 and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da63fe8; op2val:0x414519e5;
op3val:0x7be00000; valaddr_reg:x3; val_offset:13614*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13614*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4539:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x263fe8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x4519e5 and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da63fe8; op2val:0x414519e5;
op3val:0x7bf00000; valaddr_reg:x3; val_offset:13617*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13617*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4540:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x263fe8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x4519e5 and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da63fe8; op2val:0x414519e5;
op3val:0x7bf80000; valaddr_reg:x3; val_offset:13620*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13620*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4541:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x263fe8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x4519e5 and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da63fe8; op2val:0x414519e5;
op3val:0x7bfc0000; valaddr_reg:x3; val_offset:13623*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13623*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4542:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x263fe8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x4519e5 and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da63fe8; op2val:0x414519e5;
op3val:0x7bfe0000; valaddr_reg:x3; val_offset:13626*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13626*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4543:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x263fe8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x4519e5 and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da63fe8; op2val:0x414519e5;
op3val:0x7bff0000; valaddr_reg:x3; val_offset:13629*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13629*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4544:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x263fe8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x4519e5 and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da63fe8; op2val:0x414519e5;
op3val:0x7bff8000; valaddr_reg:x3; val_offset:13632*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13632*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4545:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x263fe8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x4519e5 and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da63fe8; op2val:0x414519e5;
op3val:0x7bffc000; valaddr_reg:x3; val_offset:13635*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13635*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4546:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x263fe8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x4519e5 and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da63fe8; op2val:0x414519e5;
op3val:0x7bffe000; valaddr_reg:x3; val_offset:13638*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13638*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4547:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x263fe8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x4519e5 and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da63fe8; op2val:0x414519e5;
op3val:0x7bfff000; valaddr_reg:x3; val_offset:13641*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13641*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4548:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x263fe8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x4519e5 and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da63fe8; op2val:0x414519e5;
op3val:0x7bfff800; valaddr_reg:x3; val_offset:13644*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13644*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4549:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x263fe8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x4519e5 and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da63fe8; op2val:0x414519e5;
op3val:0x7bfffc00; valaddr_reg:x3; val_offset:13647*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13647*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4550:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x263fe8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x4519e5 and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da63fe8; op2val:0x414519e5;
op3val:0x7bfffe00; valaddr_reg:x3; val_offset:13650*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13650*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4551:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x263fe8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x4519e5 and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da63fe8; op2val:0x414519e5;
op3val:0x7bffff00; valaddr_reg:x3; val_offset:13653*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13653*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4552:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x263fe8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x4519e5 and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da63fe8; op2val:0x414519e5;
op3val:0x7bffff80; valaddr_reg:x3; val_offset:13656*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13656*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4553:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x263fe8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x4519e5 and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da63fe8; op2val:0x414519e5;
op3val:0x7bffffc0; valaddr_reg:x3; val_offset:13659*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13659*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4554:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x263fe8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x4519e5 and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da63fe8; op2val:0x414519e5;
op3val:0x7bffffe0; valaddr_reg:x3; val_offset:13662*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13662*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4555:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x263fe8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x4519e5 and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da63fe8; op2val:0x414519e5;
op3val:0x7bfffff0; valaddr_reg:x3; val_offset:13665*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13665*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4556:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x263fe8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x4519e5 and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da63fe8; op2val:0x414519e5;
op3val:0x7bfffff8; valaddr_reg:x3; val_offset:13668*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13668*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4557:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x263fe8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x4519e5 and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da63fe8; op2val:0x414519e5;
op3val:0x7bfffffc; valaddr_reg:x3; val_offset:13671*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13671*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4558:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x263fe8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x4519e5 and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da63fe8; op2val:0x414519e5;
op3val:0x7bfffffe; valaddr_reg:x3; val_offset:13674*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13674*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4559:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x263fe8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x4519e5 and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da63fe8; op2val:0x414519e5;
op3val:0x7bffffff; valaddr_reg:x3; val_offset:13677*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13677*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4560:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x263fe8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x4519e5 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da63fe8; op2val:0x414519e5;
op3val:0x7f000001; valaddr_reg:x3; val_offset:13680*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13680*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4561:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x263fe8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x4519e5 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da63fe8; op2val:0x414519e5;
op3val:0x7f000003; valaddr_reg:x3; val_offset:13683*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13683*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4562:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x263fe8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x4519e5 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da63fe8; op2val:0x414519e5;
op3val:0x7f000007; valaddr_reg:x3; val_offset:13686*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13686*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4563:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x263fe8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x4519e5 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da63fe8; op2val:0x414519e5;
op3val:0x7f199999; valaddr_reg:x3; val_offset:13689*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13689*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4564:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x263fe8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x4519e5 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da63fe8; op2val:0x414519e5;
op3val:0x7f249249; valaddr_reg:x3; val_offset:13692*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13692*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4565:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x263fe8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x4519e5 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da63fe8; op2val:0x414519e5;
op3val:0x7f333333; valaddr_reg:x3; val_offset:13695*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13695*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4566:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x263fe8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x4519e5 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da63fe8; op2val:0x414519e5;
op3val:0x7f36db6d; valaddr_reg:x3; val_offset:13698*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13698*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4567:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x263fe8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x4519e5 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da63fe8; op2val:0x414519e5;
op3val:0x7f3bbbbb; valaddr_reg:x3; val_offset:13701*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13701*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4568:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x263fe8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x4519e5 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da63fe8; op2val:0x414519e5;
op3val:0x7f444444; valaddr_reg:x3; val_offset:13704*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13704*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4569:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x263fe8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x4519e5 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da63fe8; op2val:0x414519e5;
op3val:0x7f4ccccc; valaddr_reg:x3; val_offset:13707*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13707*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4570:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x263fe8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x4519e5 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da63fe8; op2val:0x414519e5;
op3val:0x7f5b6db6; valaddr_reg:x3; val_offset:13710*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13710*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4571:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x263fe8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x4519e5 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da63fe8; op2val:0x414519e5;
op3val:0x7f666666; valaddr_reg:x3; val_offset:13713*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13713*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4572:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x263fe8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x4519e5 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da63fe8; op2val:0x414519e5;
op3val:0x7f6db6db; valaddr_reg:x3; val_offset:13716*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13716*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4573:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x263fe8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x4519e5 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da63fe8; op2val:0x414519e5;
op3val:0x7f7ffff8; valaddr_reg:x3; val_offset:13719*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13719*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4574:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x263fe8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x4519e5 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da63fe8; op2val:0x414519e5;
op3val:0x7f7ffffc; valaddr_reg:x3; val_offset:13722*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13722*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4575:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x263fe8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x4519e5 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da63fe8; op2val:0x414519e5;
op3val:0x7f7ffffe; valaddr_reg:x3; val_offset:13725*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13725*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4576:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x264755 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x451118 and fs3 == 0 and fe3 == 0xd3 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da64755; op2val:0x41451118;
op3val:0x69800000; valaddr_reg:x3; val_offset:13728*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13728*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4577:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x264755 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x451118 and fs3 == 0 and fe3 == 0xd3 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da64755; op2val:0x41451118;
op3val:0x69800001; valaddr_reg:x3; val_offset:13731*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13731*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4578:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x264755 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x451118 and fs3 == 0 and fe3 == 0xd3 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da64755; op2val:0x41451118;
op3val:0x69800003; valaddr_reg:x3; val_offset:13734*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13734*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4579:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x264755 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x451118 and fs3 == 0 and fe3 == 0xd3 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da64755; op2val:0x41451118;
op3val:0x69800007; valaddr_reg:x3; val_offset:13737*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13737*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4580:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x264755 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x451118 and fs3 == 0 and fe3 == 0xd3 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da64755; op2val:0x41451118;
op3val:0x6980000f; valaddr_reg:x3; val_offset:13740*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13740*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4581:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x264755 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x451118 and fs3 == 0 and fe3 == 0xd3 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da64755; op2val:0x41451118;
op3val:0x6980001f; valaddr_reg:x3; val_offset:13743*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13743*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4582:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x264755 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x451118 and fs3 == 0 and fe3 == 0xd3 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da64755; op2val:0x41451118;
op3val:0x6980003f; valaddr_reg:x3; val_offset:13746*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13746*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4583:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x264755 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x451118 and fs3 == 0 and fe3 == 0xd3 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da64755; op2val:0x41451118;
op3val:0x6980007f; valaddr_reg:x3; val_offset:13749*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13749*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4584:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x264755 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x451118 and fs3 == 0 and fe3 == 0xd3 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da64755; op2val:0x41451118;
op3val:0x698000ff; valaddr_reg:x3; val_offset:13752*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13752*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4585:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x264755 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x451118 and fs3 == 0 and fe3 == 0xd3 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da64755; op2val:0x41451118;
op3val:0x698001ff; valaddr_reg:x3; val_offset:13755*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13755*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4586:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x264755 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x451118 and fs3 == 0 and fe3 == 0xd3 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da64755; op2val:0x41451118;
op3val:0x698003ff; valaddr_reg:x3; val_offset:13758*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13758*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4587:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x264755 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x451118 and fs3 == 0 and fe3 == 0xd3 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da64755; op2val:0x41451118;
op3val:0x698007ff; valaddr_reg:x3; val_offset:13761*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13761*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4588:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x264755 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x451118 and fs3 == 0 and fe3 == 0xd3 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da64755; op2val:0x41451118;
op3val:0x69800fff; valaddr_reg:x3; val_offset:13764*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13764*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4589:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x264755 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x451118 and fs3 == 0 and fe3 == 0xd3 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da64755; op2val:0x41451118;
op3val:0x69801fff; valaddr_reg:x3; val_offset:13767*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13767*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4590:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x264755 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x451118 and fs3 == 0 and fe3 == 0xd3 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da64755; op2val:0x41451118;
op3val:0x69803fff; valaddr_reg:x3; val_offset:13770*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13770*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4591:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x264755 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x451118 and fs3 == 0 and fe3 == 0xd3 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da64755; op2val:0x41451118;
op3val:0x69807fff; valaddr_reg:x3; val_offset:13773*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13773*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4592:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x264755 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x451118 and fs3 == 0 and fe3 == 0xd3 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da64755; op2val:0x41451118;
op3val:0x6980ffff; valaddr_reg:x3; val_offset:13776*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13776*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4593:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x264755 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x451118 and fs3 == 0 and fe3 == 0xd3 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da64755; op2val:0x41451118;
op3val:0x6981ffff; valaddr_reg:x3; val_offset:13779*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13779*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4594:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x264755 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x451118 and fs3 == 0 and fe3 == 0xd3 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da64755; op2val:0x41451118;
op3val:0x6983ffff; valaddr_reg:x3; val_offset:13782*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13782*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4595:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x264755 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x451118 and fs3 == 0 and fe3 == 0xd3 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da64755; op2val:0x41451118;
op3val:0x6987ffff; valaddr_reg:x3; val_offset:13785*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13785*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4596:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x264755 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x451118 and fs3 == 0 and fe3 == 0xd3 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da64755; op2val:0x41451118;
op3val:0x698fffff; valaddr_reg:x3; val_offset:13788*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13788*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4597:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x264755 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x451118 and fs3 == 0 and fe3 == 0xd3 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da64755; op2val:0x41451118;
op3val:0x699fffff; valaddr_reg:x3; val_offset:13791*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13791*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4598:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x264755 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x451118 and fs3 == 0 and fe3 == 0xd3 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da64755; op2val:0x41451118;
op3val:0x69bfffff; valaddr_reg:x3; val_offset:13794*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13794*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4599:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x264755 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x451118 and fs3 == 0 and fe3 == 0xd3 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da64755; op2val:0x41451118;
op3val:0x69c00000; valaddr_reg:x3; val_offset:13797*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13797*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4600:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x264755 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x451118 and fs3 == 0 and fe3 == 0xd3 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da64755; op2val:0x41451118;
op3val:0x69e00000; valaddr_reg:x3; val_offset:13800*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13800*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4601:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x264755 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x451118 and fs3 == 0 and fe3 == 0xd3 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da64755; op2val:0x41451118;
op3val:0x69f00000; valaddr_reg:x3; val_offset:13803*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13803*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4602:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x264755 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x451118 and fs3 == 0 and fe3 == 0xd3 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da64755; op2val:0x41451118;
op3val:0x69f80000; valaddr_reg:x3; val_offset:13806*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13806*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4603:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x264755 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x451118 and fs3 == 0 and fe3 == 0xd3 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da64755; op2val:0x41451118;
op3val:0x69fc0000; valaddr_reg:x3; val_offset:13809*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13809*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4604:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x264755 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x451118 and fs3 == 0 and fe3 == 0xd3 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da64755; op2val:0x41451118;
op3val:0x69fe0000; valaddr_reg:x3; val_offset:13812*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13812*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4605:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x264755 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x451118 and fs3 == 0 and fe3 == 0xd3 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da64755; op2val:0x41451118;
op3val:0x69ff0000; valaddr_reg:x3; val_offset:13815*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13815*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4606:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x264755 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x451118 and fs3 == 0 and fe3 == 0xd3 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da64755; op2val:0x41451118;
op3val:0x69ff8000; valaddr_reg:x3; val_offset:13818*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13818*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4607:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x264755 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x451118 and fs3 == 0 and fe3 == 0xd3 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da64755; op2val:0x41451118;
op3val:0x69ffc000; valaddr_reg:x3; val_offset:13821*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13821*0 + 3*35*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(2107838105,32,FLEN)
NAN_BOXED(21558746,32,FLEN)
NAN_BOXED(629014528,32,FLEN)
NAN_BOXED(2107838105,32,FLEN)
NAN_BOXED(21558746,32,FLEN)
NAN_BOXED(629080064,32,FLEN)
NAN_BOXED(2107838105,32,FLEN)
NAN_BOXED(21558746,32,FLEN)
NAN_BOXED(629112832,32,FLEN)
NAN_BOXED(2107838105,32,FLEN)
NAN_BOXED(21558746,32,FLEN)
NAN_BOXED(629129216,32,FLEN)
NAN_BOXED(2107838105,32,FLEN)
NAN_BOXED(21558746,32,FLEN)
NAN_BOXED(629137408,32,FLEN)
NAN_BOXED(2107838105,32,FLEN)
NAN_BOXED(21558746,32,FLEN)
NAN_BOXED(629141504,32,FLEN)
NAN_BOXED(2107838105,32,FLEN)
NAN_BOXED(21558746,32,FLEN)
NAN_BOXED(629143552,32,FLEN)
NAN_BOXED(2107838105,32,FLEN)
NAN_BOXED(21558746,32,FLEN)
NAN_BOXED(629144576,32,FLEN)
NAN_BOXED(2107838105,32,FLEN)
NAN_BOXED(21558746,32,FLEN)
NAN_BOXED(629145088,32,FLEN)
NAN_BOXED(2107838105,32,FLEN)
NAN_BOXED(21558746,32,FLEN)
NAN_BOXED(629145344,32,FLEN)
NAN_BOXED(2107838105,32,FLEN)
NAN_BOXED(21558746,32,FLEN)
NAN_BOXED(629145472,32,FLEN)
NAN_BOXED(2107838105,32,FLEN)
NAN_BOXED(21558746,32,FLEN)
NAN_BOXED(629145536,32,FLEN)
NAN_BOXED(2107838105,32,FLEN)
NAN_BOXED(21558746,32,FLEN)
NAN_BOXED(629145568,32,FLEN)
NAN_BOXED(2107838105,32,FLEN)
NAN_BOXED(21558746,32,FLEN)
NAN_BOXED(629145584,32,FLEN)
NAN_BOXED(2107838105,32,FLEN)
NAN_BOXED(21558746,32,FLEN)
NAN_BOXED(629145592,32,FLEN)
NAN_BOXED(2107838105,32,FLEN)
NAN_BOXED(21558746,32,FLEN)
NAN_BOXED(629145596,32,FLEN)
NAN_BOXED(2107838105,32,FLEN)
NAN_BOXED(21558746,32,FLEN)
NAN_BOXED(629145598,32,FLEN)
NAN_BOXED(2107838105,32,FLEN)
NAN_BOXED(21558746,32,FLEN)
NAN_BOXED(629145599,32,FLEN)
NAN_BOXED(2107838105,32,FLEN)
NAN_BOXED(21558746,32,FLEN)
NAN_BOXED(1065353217,32,FLEN)
NAN_BOXED(2107838105,32,FLEN)
NAN_BOXED(21558746,32,FLEN)
NAN_BOXED(1065353219,32,FLEN)
NAN_BOXED(2107838105,32,FLEN)
NAN_BOXED(21558746,32,FLEN)
NAN_BOXED(1065353223,32,FLEN)
NAN_BOXED(2107838105,32,FLEN)
NAN_BOXED(21558746,32,FLEN)
NAN_BOXED(1067030937,32,FLEN)
NAN_BOXED(2107838105,32,FLEN)
NAN_BOXED(21558746,32,FLEN)
NAN_BOXED(1067749961,32,FLEN)
NAN_BOXED(2107838105,32,FLEN)
NAN_BOXED(21558746,32,FLEN)
NAN_BOXED(1068708659,32,FLEN)
NAN_BOXED(2107838105,32,FLEN)
NAN_BOXED(21558746,32,FLEN)
NAN_BOXED(1068948333,32,FLEN)
NAN_BOXED(2107838105,32,FLEN)
NAN_BOXED(21558746,32,FLEN)
NAN_BOXED(1069267899,32,FLEN)
NAN_BOXED(2107838105,32,FLEN)
NAN_BOXED(21558746,32,FLEN)
NAN_BOXED(1069827140,32,FLEN)
NAN_BOXED(2107838105,32,FLEN)
NAN_BOXED(21558746,32,FLEN)
NAN_BOXED(1070386380,32,FLEN)
NAN_BOXED(2107838105,32,FLEN)
NAN_BOXED(21558746,32,FLEN)
NAN_BOXED(1071345078,32,FLEN)
NAN_BOXED(2107838105,32,FLEN)
NAN_BOXED(21558746,32,FLEN)
NAN_BOXED(1072064102,32,FLEN)
NAN_BOXED(2107838105,32,FLEN)
NAN_BOXED(21558746,32,FLEN)
NAN_BOXED(1072543451,32,FLEN)
NAN_BOXED(2107838105,32,FLEN)
NAN_BOXED(21558746,32,FLEN)
NAN_BOXED(1073741816,32,FLEN)
NAN_BOXED(2107838105,32,FLEN)
NAN_BOXED(21558746,32,FLEN)
NAN_BOXED(1073741820,32,FLEN)
NAN_BOXED(2107838105,32,FLEN)
NAN_BOXED(21558746,32,FLEN)
NAN_BOXED(1073741822,32,FLEN)
NAN_BOXED(2108047336,32,FLEN)
NAN_BOXED(1095047653,32,FLEN)
NAN_BOXED(2071986176,32,FLEN)
NAN_BOXED(2108047336,32,FLEN)
NAN_BOXED(1095047653,32,FLEN)
NAN_BOXED(2071986177,32,FLEN)
NAN_BOXED(2108047336,32,FLEN)
NAN_BOXED(1095047653,32,FLEN)
NAN_BOXED(2071986179,32,FLEN)
NAN_BOXED(2108047336,32,FLEN)
NAN_BOXED(1095047653,32,FLEN)
NAN_BOXED(2071986183,32,FLEN)
NAN_BOXED(2108047336,32,FLEN)
NAN_BOXED(1095047653,32,FLEN)
NAN_BOXED(2071986191,32,FLEN)
NAN_BOXED(2108047336,32,FLEN)
NAN_BOXED(1095047653,32,FLEN)
NAN_BOXED(2071986207,32,FLEN)
NAN_BOXED(2108047336,32,FLEN)
NAN_BOXED(1095047653,32,FLEN)
NAN_BOXED(2071986239,32,FLEN)
NAN_BOXED(2108047336,32,FLEN)
NAN_BOXED(1095047653,32,FLEN)
NAN_BOXED(2071986303,32,FLEN)
NAN_BOXED(2108047336,32,FLEN)
NAN_BOXED(1095047653,32,FLEN)
NAN_BOXED(2071986431,32,FLEN)
NAN_BOXED(2108047336,32,FLEN)
NAN_BOXED(1095047653,32,FLEN)
NAN_BOXED(2071986687,32,FLEN)
NAN_BOXED(2108047336,32,FLEN)
NAN_BOXED(1095047653,32,FLEN)
NAN_BOXED(2071987199,32,FLEN)
NAN_BOXED(2108047336,32,FLEN)
NAN_BOXED(1095047653,32,FLEN)
NAN_BOXED(2071988223,32,FLEN)
NAN_BOXED(2108047336,32,FLEN)
NAN_BOXED(1095047653,32,FLEN)
NAN_BOXED(2071990271,32,FLEN)
NAN_BOXED(2108047336,32,FLEN)
NAN_BOXED(1095047653,32,FLEN)
NAN_BOXED(2071994367,32,FLEN)
NAN_BOXED(2108047336,32,FLEN)
NAN_BOXED(1095047653,32,FLEN)
NAN_BOXED(2072002559,32,FLEN)
NAN_BOXED(2108047336,32,FLEN)
NAN_BOXED(1095047653,32,FLEN)
NAN_BOXED(2072018943,32,FLEN)
NAN_BOXED(2108047336,32,FLEN)
NAN_BOXED(1095047653,32,FLEN)
NAN_BOXED(2072051711,32,FLEN)
NAN_BOXED(2108047336,32,FLEN)
NAN_BOXED(1095047653,32,FLEN)
NAN_BOXED(2072117247,32,FLEN)
NAN_BOXED(2108047336,32,FLEN)
NAN_BOXED(1095047653,32,FLEN)
NAN_BOXED(2072248319,32,FLEN)
NAN_BOXED(2108047336,32,FLEN)
NAN_BOXED(1095047653,32,FLEN)
NAN_BOXED(2072510463,32,FLEN)
NAN_BOXED(2108047336,32,FLEN)
NAN_BOXED(1095047653,32,FLEN)
NAN_BOXED(2073034751,32,FLEN)
NAN_BOXED(2108047336,32,FLEN)
NAN_BOXED(1095047653,32,FLEN)
NAN_BOXED(2074083327,32,FLEN)
NAN_BOXED(2108047336,32,FLEN)
NAN_BOXED(1095047653,32,FLEN)
NAN_BOXED(2076180479,32,FLEN)
NAN_BOXED(2108047336,32,FLEN)
NAN_BOXED(1095047653,32,FLEN)
NAN_BOXED(2076180480,32,FLEN)
NAN_BOXED(2108047336,32,FLEN)
NAN_BOXED(1095047653,32,FLEN)
NAN_BOXED(2078277632,32,FLEN)
NAN_BOXED(2108047336,32,FLEN)
NAN_BOXED(1095047653,32,FLEN)
NAN_BOXED(2079326208,32,FLEN)
NAN_BOXED(2108047336,32,FLEN)
NAN_BOXED(1095047653,32,FLEN)
NAN_BOXED(2079850496,32,FLEN)
NAN_BOXED(2108047336,32,FLEN)
NAN_BOXED(1095047653,32,FLEN)
NAN_BOXED(2080112640,32,FLEN)
NAN_BOXED(2108047336,32,FLEN)
NAN_BOXED(1095047653,32,FLEN)
NAN_BOXED(2080243712,32,FLEN)
NAN_BOXED(2108047336,32,FLEN)
NAN_BOXED(1095047653,32,FLEN)
NAN_BOXED(2080309248,32,FLEN)
NAN_BOXED(2108047336,32,FLEN)
NAN_BOXED(1095047653,32,FLEN)
NAN_BOXED(2080342016,32,FLEN)
NAN_BOXED(2108047336,32,FLEN)
NAN_BOXED(1095047653,32,FLEN)
NAN_BOXED(2080358400,32,FLEN)
NAN_BOXED(2108047336,32,FLEN)
NAN_BOXED(1095047653,32,FLEN)
NAN_BOXED(2080366592,32,FLEN)
NAN_BOXED(2108047336,32,FLEN)
NAN_BOXED(1095047653,32,FLEN)
NAN_BOXED(2080370688,32,FLEN)
NAN_BOXED(2108047336,32,FLEN)
NAN_BOXED(1095047653,32,FLEN)
NAN_BOXED(2080372736,32,FLEN)
NAN_BOXED(2108047336,32,FLEN)
NAN_BOXED(1095047653,32,FLEN)
NAN_BOXED(2080373760,32,FLEN)
NAN_BOXED(2108047336,32,FLEN)
NAN_BOXED(1095047653,32,FLEN)
NAN_BOXED(2080374272,32,FLEN)
NAN_BOXED(2108047336,32,FLEN)
NAN_BOXED(1095047653,32,FLEN)
NAN_BOXED(2080374528,32,FLEN)
NAN_BOXED(2108047336,32,FLEN)
NAN_BOXED(1095047653,32,FLEN)
NAN_BOXED(2080374656,32,FLEN)
NAN_BOXED(2108047336,32,FLEN)
NAN_BOXED(1095047653,32,FLEN)
NAN_BOXED(2080374720,32,FLEN)
NAN_BOXED(2108047336,32,FLEN)
NAN_BOXED(1095047653,32,FLEN)
NAN_BOXED(2080374752,32,FLEN)
NAN_BOXED(2108047336,32,FLEN)
NAN_BOXED(1095047653,32,FLEN)
NAN_BOXED(2080374768,32,FLEN)
NAN_BOXED(2108047336,32,FLEN)
NAN_BOXED(1095047653,32,FLEN)
NAN_BOXED(2080374776,32,FLEN)
NAN_BOXED(2108047336,32,FLEN)
NAN_BOXED(1095047653,32,FLEN)
NAN_BOXED(2080374780,32,FLEN)
NAN_BOXED(2108047336,32,FLEN)
NAN_BOXED(1095047653,32,FLEN)
NAN_BOXED(2080374782,32,FLEN)
NAN_BOXED(2108047336,32,FLEN)
NAN_BOXED(1095047653,32,FLEN)
NAN_BOXED(2080374783,32,FLEN)
NAN_BOXED(2108047336,32,FLEN)
NAN_BOXED(1095047653,32,FLEN)
NAN_BOXED(2130706433,32,FLEN)
NAN_BOXED(2108047336,32,FLEN)
NAN_BOXED(1095047653,32,FLEN)
NAN_BOXED(2130706435,32,FLEN)
NAN_BOXED(2108047336,32,FLEN)
NAN_BOXED(1095047653,32,FLEN)
NAN_BOXED(2130706439,32,FLEN)
NAN_BOXED(2108047336,32,FLEN)
NAN_BOXED(1095047653,32,FLEN)
NAN_BOXED(2132384153,32,FLEN)
NAN_BOXED(2108047336,32,FLEN)
NAN_BOXED(1095047653,32,FLEN)
NAN_BOXED(2133103177,32,FLEN)
NAN_BOXED(2108047336,32,FLEN)
NAN_BOXED(1095047653,32,FLEN)
NAN_BOXED(2134061875,32,FLEN)
NAN_BOXED(2108047336,32,FLEN)
NAN_BOXED(1095047653,32,FLEN)
NAN_BOXED(2134301549,32,FLEN)
NAN_BOXED(2108047336,32,FLEN)
NAN_BOXED(1095047653,32,FLEN)
NAN_BOXED(2134621115,32,FLEN)
NAN_BOXED(2108047336,32,FLEN)
NAN_BOXED(1095047653,32,FLEN)
NAN_BOXED(2135180356,32,FLEN)
NAN_BOXED(2108047336,32,FLEN)
NAN_BOXED(1095047653,32,FLEN)
NAN_BOXED(2135739596,32,FLEN)
NAN_BOXED(2108047336,32,FLEN)
NAN_BOXED(1095047653,32,FLEN)
NAN_BOXED(2136698294,32,FLEN)
NAN_BOXED(2108047336,32,FLEN)
NAN_BOXED(1095047653,32,FLEN)
NAN_BOXED(2137417318,32,FLEN)
NAN_BOXED(2108047336,32,FLEN)
NAN_BOXED(1095047653,32,FLEN)
NAN_BOXED(2137896667,32,FLEN)
NAN_BOXED(2108047336,32,FLEN)
NAN_BOXED(1095047653,32,FLEN)
NAN_BOXED(2139095032,32,FLEN)
NAN_BOXED(2108047336,32,FLEN)
NAN_BOXED(1095047653,32,FLEN)
NAN_BOXED(2139095036,32,FLEN)
NAN_BOXED(2108047336,32,FLEN)
NAN_BOXED(1095047653,32,FLEN)
NAN_BOXED(2139095038,32,FLEN)
NAN_BOXED(2108049237,32,FLEN)
NAN_BOXED(1095045400,32,FLEN)
NAN_BOXED(1769996288,32,FLEN)
NAN_BOXED(2108049237,32,FLEN)
NAN_BOXED(1095045400,32,FLEN)
NAN_BOXED(1769996289,32,FLEN)
NAN_BOXED(2108049237,32,FLEN)
NAN_BOXED(1095045400,32,FLEN)
NAN_BOXED(1769996291,32,FLEN)
NAN_BOXED(2108049237,32,FLEN)
NAN_BOXED(1095045400,32,FLEN)
NAN_BOXED(1769996295,32,FLEN)
NAN_BOXED(2108049237,32,FLEN)
NAN_BOXED(1095045400,32,FLEN)
NAN_BOXED(1769996303,32,FLEN)
NAN_BOXED(2108049237,32,FLEN)
NAN_BOXED(1095045400,32,FLEN)
NAN_BOXED(1769996319,32,FLEN)
NAN_BOXED(2108049237,32,FLEN)
NAN_BOXED(1095045400,32,FLEN)
NAN_BOXED(1769996351,32,FLEN)
NAN_BOXED(2108049237,32,FLEN)
NAN_BOXED(1095045400,32,FLEN)
NAN_BOXED(1769996415,32,FLEN)
NAN_BOXED(2108049237,32,FLEN)
NAN_BOXED(1095045400,32,FLEN)
NAN_BOXED(1769996543,32,FLEN)
NAN_BOXED(2108049237,32,FLEN)
NAN_BOXED(1095045400,32,FLEN)
NAN_BOXED(1769996799,32,FLEN)
NAN_BOXED(2108049237,32,FLEN)
NAN_BOXED(1095045400,32,FLEN)
NAN_BOXED(1769997311,32,FLEN)
NAN_BOXED(2108049237,32,FLEN)
NAN_BOXED(1095045400,32,FLEN)
NAN_BOXED(1769998335,32,FLEN)
NAN_BOXED(2108049237,32,FLEN)
NAN_BOXED(1095045400,32,FLEN)
NAN_BOXED(1770000383,32,FLEN)
NAN_BOXED(2108049237,32,FLEN)
NAN_BOXED(1095045400,32,FLEN)
NAN_BOXED(1770004479,32,FLEN)
NAN_BOXED(2108049237,32,FLEN)
NAN_BOXED(1095045400,32,FLEN)
NAN_BOXED(1770012671,32,FLEN)
NAN_BOXED(2108049237,32,FLEN)
NAN_BOXED(1095045400,32,FLEN)
NAN_BOXED(1770029055,32,FLEN)
NAN_BOXED(2108049237,32,FLEN)
NAN_BOXED(1095045400,32,FLEN)
NAN_BOXED(1770061823,32,FLEN)
NAN_BOXED(2108049237,32,FLEN)
NAN_BOXED(1095045400,32,FLEN)
NAN_BOXED(1770127359,32,FLEN)
NAN_BOXED(2108049237,32,FLEN)
NAN_BOXED(1095045400,32,FLEN)
NAN_BOXED(1770258431,32,FLEN)
NAN_BOXED(2108049237,32,FLEN)
NAN_BOXED(1095045400,32,FLEN)
NAN_BOXED(1770520575,32,FLEN)
NAN_BOXED(2108049237,32,FLEN)
NAN_BOXED(1095045400,32,FLEN)
NAN_BOXED(1771044863,32,FLEN)
NAN_BOXED(2108049237,32,FLEN)
NAN_BOXED(1095045400,32,FLEN)
NAN_BOXED(1772093439,32,FLEN)
NAN_BOXED(2108049237,32,FLEN)
NAN_BOXED(1095045400,32,FLEN)
NAN_BOXED(1774190591,32,FLEN)
NAN_BOXED(2108049237,32,FLEN)
NAN_BOXED(1095045400,32,FLEN)
NAN_BOXED(1774190592,32,FLEN)
NAN_BOXED(2108049237,32,FLEN)
NAN_BOXED(1095045400,32,FLEN)
NAN_BOXED(1776287744,32,FLEN)
NAN_BOXED(2108049237,32,FLEN)
NAN_BOXED(1095045400,32,FLEN)
NAN_BOXED(1777336320,32,FLEN)
NAN_BOXED(2108049237,32,FLEN)
NAN_BOXED(1095045400,32,FLEN)
NAN_BOXED(1777860608,32,FLEN)
NAN_BOXED(2108049237,32,FLEN)
NAN_BOXED(1095045400,32,FLEN)
NAN_BOXED(1778122752,32,FLEN)
NAN_BOXED(2108049237,32,FLEN)
NAN_BOXED(1095045400,32,FLEN)
NAN_BOXED(1778253824,32,FLEN)
NAN_BOXED(2108049237,32,FLEN)
NAN_BOXED(1095045400,32,FLEN)
NAN_BOXED(1778319360,32,FLEN)
NAN_BOXED(2108049237,32,FLEN)
NAN_BOXED(1095045400,32,FLEN)
NAN_BOXED(1778352128,32,FLEN)
NAN_BOXED(2108049237,32,FLEN)
NAN_BOXED(1095045400,32,FLEN)
NAN_BOXED(1778368512,32,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
