
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 14:18:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32F/fmsub.s.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.s instruction of the RISC-V RV32F_Zicsr,RV32FD_Zicsr,RV64F_Zicsr,RV64FD_Zicsr extension for the fmsub_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF_Zicsr,RV32IFD_Zicsr,RV64IF_Zicsr,RV64IFD_Zicsr,RV32EF_Zicsr,RV32EFD_Zicsr,RV64EF_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fmsub_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*F.*);def TEST_CASE_1=True;",fmsub_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_4864:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x30fb8e and fs2 == 0 and fe2 == 0x02 and fm2 == 0x3925e9 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db0fb8e; op2val:0x13925e9;
op3val:0x3f800001; valaddr_reg:x3; val_offset:14592*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14592*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4865:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x30fb8e and fs2 == 0 and fe2 == 0x02 and fm2 == 0x3925e9 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db0fb8e; op2val:0x13925e9;
op3val:0x3f800003; valaddr_reg:x3; val_offset:14595*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14595*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4866:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x30fb8e and fs2 == 0 and fe2 == 0x02 and fm2 == 0x3925e9 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db0fb8e; op2val:0x13925e9;
op3val:0x3f800007; valaddr_reg:x3; val_offset:14598*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14598*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4867:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x30fb8e and fs2 == 0 and fe2 == 0x02 and fm2 == 0x3925e9 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db0fb8e; op2val:0x13925e9;
op3val:0x3f999999; valaddr_reg:x3; val_offset:14601*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14601*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4868:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x30fb8e and fs2 == 0 and fe2 == 0x02 and fm2 == 0x3925e9 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db0fb8e; op2val:0x13925e9;
op3val:0x3fa49249; valaddr_reg:x3; val_offset:14604*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14604*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4869:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x30fb8e and fs2 == 0 and fe2 == 0x02 and fm2 == 0x3925e9 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db0fb8e; op2val:0x13925e9;
op3val:0x3fb33333; valaddr_reg:x3; val_offset:14607*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14607*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4870:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x30fb8e and fs2 == 0 and fe2 == 0x02 and fm2 == 0x3925e9 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db0fb8e; op2val:0x13925e9;
op3val:0x3fb6db6d; valaddr_reg:x3; val_offset:14610*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14610*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4871:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x30fb8e and fs2 == 0 and fe2 == 0x02 and fm2 == 0x3925e9 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db0fb8e; op2val:0x13925e9;
op3val:0x3fbbbbbb; valaddr_reg:x3; val_offset:14613*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14613*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4872:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x30fb8e and fs2 == 0 and fe2 == 0x02 and fm2 == 0x3925e9 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db0fb8e; op2val:0x13925e9;
op3val:0x3fc44444; valaddr_reg:x3; val_offset:14616*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14616*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4873:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x30fb8e and fs2 == 0 and fe2 == 0x02 and fm2 == 0x3925e9 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db0fb8e; op2val:0x13925e9;
op3val:0x3fcccccc; valaddr_reg:x3; val_offset:14619*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14619*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4874:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x30fb8e and fs2 == 0 and fe2 == 0x02 and fm2 == 0x3925e9 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db0fb8e; op2val:0x13925e9;
op3val:0x3fdb6db6; valaddr_reg:x3; val_offset:14622*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14622*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4875:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x30fb8e and fs2 == 0 and fe2 == 0x02 and fm2 == 0x3925e9 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db0fb8e; op2val:0x13925e9;
op3val:0x3fe66666; valaddr_reg:x3; val_offset:14625*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14625*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4876:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x30fb8e and fs2 == 0 and fe2 == 0x02 and fm2 == 0x3925e9 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db0fb8e; op2val:0x13925e9;
op3val:0x3fedb6db; valaddr_reg:x3; val_offset:14628*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14628*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4877:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x30fb8e and fs2 == 0 and fe2 == 0x02 and fm2 == 0x3925e9 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db0fb8e; op2val:0x13925e9;
op3val:0x3ffffff8; valaddr_reg:x3; val_offset:14631*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14631*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4878:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x30fb8e and fs2 == 0 and fe2 == 0x02 and fm2 == 0x3925e9 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db0fb8e; op2val:0x13925e9;
op3val:0x3ffffffc; valaddr_reg:x3; val_offset:14634*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14634*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4879:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x30fb8e and fs2 == 0 and fe2 == 0x02 and fm2 == 0x3925e9 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db0fb8e; op2val:0x13925e9;
op3val:0x3ffffffe; valaddr_reg:x3; val_offset:14637*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14637*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4880:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x31d1f9 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x3846a9 and fs3 == 1 and fe3 == 0x6d and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db1d1f9; op2val:0x813846a9;
op3val:0xb6800000; valaddr_reg:x3; val_offset:14640*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14640*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4881:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x31d1f9 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x3846a9 and fs3 == 1 and fe3 == 0x6d and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db1d1f9; op2val:0x813846a9;
op3val:0xb6800001; valaddr_reg:x3; val_offset:14643*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14643*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4882:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x31d1f9 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x3846a9 and fs3 == 1 and fe3 == 0x6d and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db1d1f9; op2val:0x813846a9;
op3val:0xb6800003; valaddr_reg:x3; val_offset:14646*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14646*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4883:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x31d1f9 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x3846a9 and fs3 == 1 and fe3 == 0x6d and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db1d1f9; op2val:0x813846a9;
op3val:0xb6800007; valaddr_reg:x3; val_offset:14649*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14649*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4884:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x31d1f9 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x3846a9 and fs3 == 1 and fe3 == 0x6d and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db1d1f9; op2val:0x813846a9;
op3val:0xb680000f; valaddr_reg:x3; val_offset:14652*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14652*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4885:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x31d1f9 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x3846a9 and fs3 == 1 and fe3 == 0x6d and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db1d1f9; op2val:0x813846a9;
op3val:0xb680001f; valaddr_reg:x3; val_offset:14655*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14655*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4886:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x31d1f9 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x3846a9 and fs3 == 1 and fe3 == 0x6d and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db1d1f9; op2val:0x813846a9;
op3val:0xb680003f; valaddr_reg:x3; val_offset:14658*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14658*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4887:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x31d1f9 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x3846a9 and fs3 == 1 and fe3 == 0x6d and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db1d1f9; op2val:0x813846a9;
op3val:0xb680007f; valaddr_reg:x3; val_offset:14661*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14661*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4888:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x31d1f9 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x3846a9 and fs3 == 1 and fe3 == 0x6d and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db1d1f9; op2val:0x813846a9;
op3val:0xb68000ff; valaddr_reg:x3; val_offset:14664*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14664*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4889:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x31d1f9 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x3846a9 and fs3 == 1 and fe3 == 0x6d and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db1d1f9; op2val:0x813846a9;
op3val:0xb68001ff; valaddr_reg:x3; val_offset:14667*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14667*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4890:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x31d1f9 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x3846a9 and fs3 == 1 and fe3 == 0x6d and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db1d1f9; op2val:0x813846a9;
op3val:0xb68003ff; valaddr_reg:x3; val_offset:14670*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14670*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4891:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x31d1f9 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x3846a9 and fs3 == 1 and fe3 == 0x6d and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db1d1f9; op2val:0x813846a9;
op3val:0xb68007ff; valaddr_reg:x3; val_offset:14673*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14673*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4892:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x31d1f9 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x3846a9 and fs3 == 1 and fe3 == 0x6d and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db1d1f9; op2val:0x813846a9;
op3val:0xb6800fff; valaddr_reg:x3; val_offset:14676*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14676*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4893:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x31d1f9 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x3846a9 and fs3 == 1 and fe3 == 0x6d and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db1d1f9; op2val:0x813846a9;
op3val:0xb6801fff; valaddr_reg:x3; val_offset:14679*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14679*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4894:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x31d1f9 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x3846a9 and fs3 == 1 and fe3 == 0x6d and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db1d1f9; op2val:0x813846a9;
op3val:0xb6803fff; valaddr_reg:x3; val_offset:14682*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14682*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4895:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x31d1f9 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x3846a9 and fs3 == 1 and fe3 == 0x6d and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db1d1f9; op2val:0x813846a9;
op3val:0xb6807fff; valaddr_reg:x3; val_offset:14685*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14685*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4896:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x31d1f9 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x3846a9 and fs3 == 1 and fe3 == 0x6d and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db1d1f9; op2val:0x813846a9;
op3val:0xb680ffff; valaddr_reg:x3; val_offset:14688*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14688*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4897:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x31d1f9 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x3846a9 and fs3 == 1 and fe3 == 0x6d and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db1d1f9; op2val:0x813846a9;
op3val:0xb681ffff; valaddr_reg:x3; val_offset:14691*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14691*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4898:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x31d1f9 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x3846a9 and fs3 == 1 and fe3 == 0x6d and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db1d1f9; op2val:0x813846a9;
op3val:0xb683ffff; valaddr_reg:x3; val_offset:14694*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14694*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4899:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x31d1f9 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x3846a9 and fs3 == 1 and fe3 == 0x6d and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db1d1f9; op2val:0x813846a9;
op3val:0xb687ffff; valaddr_reg:x3; val_offset:14697*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14697*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4900:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x31d1f9 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x3846a9 and fs3 == 1 and fe3 == 0x6d and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db1d1f9; op2val:0x813846a9;
op3val:0xb68fffff; valaddr_reg:x3; val_offset:14700*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14700*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4901:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x31d1f9 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x3846a9 and fs3 == 1 and fe3 == 0x6d and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db1d1f9; op2val:0x813846a9;
op3val:0xb69fffff; valaddr_reg:x3; val_offset:14703*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14703*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4902:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x31d1f9 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x3846a9 and fs3 == 1 and fe3 == 0x6d and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db1d1f9; op2val:0x813846a9;
op3val:0xb6bfffff; valaddr_reg:x3; val_offset:14706*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14706*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4903:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x31d1f9 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x3846a9 and fs3 == 1 and fe3 == 0x6d and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db1d1f9; op2val:0x813846a9;
op3val:0xb6c00000; valaddr_reg:x3; val_offset:14709*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14709*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4904:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x31d1f9 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x3846a9 and fs3 == 1 and fe3 == 0x6d and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db1d1f9; op2val:0x813846a9;
op3val:0xb6e00000; valaddr_reg:x3; val_offset:14712*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14712*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4905:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x31d1f9 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x3846a9 and fs3 == 1 and fe3 == 0x6d and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db1d1f9; op2val:0x813846a9;
op3val:0xb6f00000; valaddr_reg:x3; val_offset:14715*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14715*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4906:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x31d1f9 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x3846a9 and fs3 == 1 and fe3 == 0x6d and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db1d1f9; op2val:0x813846a9;
op3val:0xb6f80000; valaddr_reg:x3; val_offset:14718*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14718*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4907:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x31d1f9 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x3846a9 and fs3 == 1 and fe3 == 0x6d and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db1d1f9; op2val:0x813846a9;
op3val:0xb6fc0000; valaddr_reg:x3; val_offset:14721*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14721*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4908:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x31d1f9 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x3846a9 and fs3 == 1 and fe3 == 0x6d and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db1d1f9; op2val:0x813846a9;
op3val:0xb6fe0000; valaddr_reg:x3; val_offset:14724*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14724*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4909:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x31d1f9 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x3846a9 and fs3 == 1 and fe3 == 0x6d and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db1d1f9; op2val:0x813846a9;
op3val:0xb6ff0000; valaddr_reg:x3; val_offset:14727*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14727*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4910:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x31d1f9 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x3846a9 and fs3 == 1 and fe3 == 0x6d and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db1d1f9; op2val:0x813846a9;
op3val:0xb6ff8000; valaddr_reg:x3; val_offset:14730*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14730*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4911:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x31d1f9 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x3846a9 and fs3 == 1 and fe3 == 0x6d and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db1d1f9; op2val:0x813846a9;
op3val:0xb6ffc000; valaddr_reg:x3; val_offset:14733*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14733*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4912:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x31d1f9 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x3846a9 and fs3 == 1 and fe3 == 0x6d and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db1d1f9; op2val:0x813846a9;
op3val:0xb6ffe000; valaddr_reg:x3; val_offset:14736*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14736*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4913:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x31d1f9 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x3846a9 and fs3 == 1 and fe3 == 0x6d and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db1d1f9; op2val:0x813846a9;
op3val:0xb6fff000; valaddr_reg:x3; val_offset:14739*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14739*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4914:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x31d1f9 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x3846a9 and fs3 == 1 and fe3 == 0x6d and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db1d1f9; op2val:0x813846a9;
op3val:0xb6fff800; valaddr_reg:x3; val_offset:14742*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14742*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4915:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x31d1f9 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x3846a9 and fs3 == 1 and fe3 == 0x6d and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db1d1f9; op2val:0x813846a9;
op3val:0xb6fffc00; valaddr_reg:x3; val_offset:14745*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14745*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4916:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x31d1f9 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x3846a9 and fs3 == 1 and fe3 == 0x6d and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db1d1f9; op2val:0x813846a9;
op3val:0xb6fffe00; valaddr_reg:x3; val_offset:14748*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14748*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4917:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x31d1f9 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x3846a9 and fs3 == 1 and fe3 == 0x6d and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db1d1f9; op2val:0x813846a9;
op3val:0xb6ffff00; valaddr_reg:x3; val_offset:14751*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14751*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4918:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x31d1f9 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x3846a9 and fs3 == 1 and fe3 == 0x6d and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db1d1f9; op2val:0x813846a9;
op3val:0xb6ffff80; valaddr_reg:x3; val_offset:14754*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14754*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4919:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x31d1f9 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x3846a9 and fs3 == 1 and fe3 == 0x6d and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db1d1f9; op2val:0x813846a9;
op3val:0xb6ffffc0; valaddr_reg:x3; val_offset:14757*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14757*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4920:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x31d1f9 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x3846a9 and fs3 == 1 and fe3 == 0x6d and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db1d1f9; op2val:0x813846a9;
op3val:0xb6ffffe0; valaddr_reg:x3; val_offset:14760*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14760*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4921:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x31d1f9 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x3846a9 and fs3 == 1 and fe3 == 0x6d and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db1d1f9; op2val:0x813846a9;
op3val:0xb6fffff0; valaddr_reg:x3; val_offset:14763*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14763*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4922:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x31d1f9 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x3846a9 and fs3 == 1 and fe3 == 0x6d and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db1d1f9; op2val:0x813846a9;
op3val:0xb6fffff8; valaddr_reg:x3; val_offset:14766*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14766*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4923:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x31d1f9 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x3846a9 and fs3 == 1 and fe3 == 0x6d and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db1d1f9; op2val:0x813846a9;
op3val:0xb6fffffc; valaddr_reg:x3; val_offset:14769*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14769*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4924:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x31d1f9 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x3846a9 and fs3 == 1 and fe3 == 0x6d and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db1d1f9; op2val:0x813846a9;
op3val:0xb6fffffe; valaddr_reg:x3; val_offset:14772*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14772*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4925:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x31d1f9 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x3846a9 and fs3 == 1 and fe3 == 0x6d and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db1d1f9; op2val:0x813846a9;
op3val:0xb6ffffff; valaddr_reg:x3; val_offset:14775*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14775*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4926:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x31d1f9 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x3846a9 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db1d1f9; op2val:0x813846a9;
op3val:0xbf800001; valaddr_reg:x3; val_offset:14778*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14778*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4927:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x31d1f9 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x3846a9 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db1d1f9; op2val:0x813846a9;
op3val:0xbf800003; valaddr_reg:x3; val_offset:14781*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14781*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4928:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x31d1f9 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x3846a9 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db1d1f9; op2val:0x813846a9;
op3val:0xbf800007; valaddr_reg:x3; val_offset:14784*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14784*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4929:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x31d1f9 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x3846a9 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db1d1f9; op2val:0x813846a9;
op3val:0xbf999999; valaddr_reg:x3; val_offset:14787*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14787*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4930:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x31d1f9 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x3846a9 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db1d1f9; op2val:0x813846a9;
op3val:0xbfa49249; valaddr_reg:x3; val_offset:14790*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14790*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4931:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x31d1f9 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x3846a9 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db1d1f9; op2val:0x813846a9;
op3val:0xbfb33333; valaddr_reg:x3; val_offset:14793*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14793*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4932:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x31d1f9 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x3846a9 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db1d1f9; op2val:0x813846a9;
op3val:0xbfb6db6d; valaddr_reg:x3; val_offset:14796*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14796*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4933:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x31d1f9 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x3846a9 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db1d1f9; op2val:0x813846a9;
op3val:0xbfbbbbbb; valaddr_reg:x3; val_offset:14799*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14799*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4934:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x31d1f9 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x3846a9 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db1d1f9; op2val:0x813846a9;
op3val:0xbfc44444; valaddr_reg:x3; val_offset:14802*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14802*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4935:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x31d1f9 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x3846a9 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db1d1f9; op2val:0x813846a9;
op3val:0xbfcccccc; valaddr_reg:x3; val_offset:14805*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14805*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4936:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x31d1f9 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x3846a9 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db1d1f9; op2val:0x813846a9;
op3val:0xbfdb6db6; valaddr_reg:x3; val_offset:14808*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14808*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4937:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x31d1f9 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x3846a9 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db1d1f9; op2val:0x813846a9;
op3val:0xbfe66666; valaddr_reg:x3; val_offset:14811*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14811*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4938:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x31d1f9 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x3846a9 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db1d1f9; op2val:0x813846a9;
op3val:0xbfedb6db; valaddr_reg:x3; val_offset:14814*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14814*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4939:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x31d1f9 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x3846a9 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db1d1f9; op2val:0x813846a9;
op3val:0xbffffff8; valaddr_reg:x3; val_offset:14817*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14817*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4940:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x31d1f9 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x3846a9 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db1d1f9; op2val:0x813846a9;
op3val:0xbffffffc; valaddr_reg:x3; val_offset:14820*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14820*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4941:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x31d1f9 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x3846a9 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db1d1f9; op2val:0x813846a9;
op3val:0xbffffffe; valaddr_reg:x3; val_offset:14823*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14823*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4942:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x32f9b7 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x371627 and fs3 == 0 and fe3 == 0xf6 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db2f9b7; op2val:0x41371627;
op3val:0x7b000000; valaddr_reg:x3; val_offset:14826*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14826*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4943:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x32f9b7 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x371627 and fs3 == 0 and fe3 == 0xf6 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db2f9b7; op2val:0x41371627;
op3val:0x7b000001; valaddr_reg:x3; val_offset:14829*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14829*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4944:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x32f9b7 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x371627 and fs3 == 0 and fe3 == 0xf6 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db2f9b7; op2val:0x41371627;
op3val:0x7b000003; valaddr_reg:x3; val_offset:14832*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14832*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4945:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x32f9b7 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x371627 and fs3 == 0 and fe3 == 0xf6 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db2f9b7; op2val:0x41371627;
op3val:0x7b000007; valaddr_reg:x3; val_offset:14835*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14835*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4946:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x32f9b7 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x371627 and fs3 == 0 and fe3 == 0xf6 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db2f9b7; op2val:0x41371627;
op3val:0x7b00000f; valaddr_reg:x3; val_offset:14838*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14838*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4947:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x32f9b7 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x371627 and fs3 == 0 and fe3 == 0xf6 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db2f9b7; op2val:0x41371627;
op3val:0x7b00001f; valaddr_reg:x3; val_offset:14841*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14841*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4948:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x32f9b7 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x371627 and fs3 == 0 and fe3 == 0xf6 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db2f9b7; op2val:0x41371627;
op3val:0x7b00003f; valaddr_reg:x3; val_offset:14844*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14844*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4949:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x32f9b7 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x371627 and fs3 == 0 and fe3 == 0xf6 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db2f9b7; op2val:0x41371627;
op3val:0x7b00007f; valaddr_reg:x3; val_offset:14847*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14847*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4950:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x32f9b7 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x371627 and fs3 == 0 and fe3 == 0xf6 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db2f9b7; op2val:0x41371627;
op3val:0x7b0000ff; valaddr_reg:x3; val_offset:14850*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14850*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4951:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x32f9b7 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x371627 and fs3 == 0 and fe3 == 0xf6 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db2f9b7; op2val:0x41371627;
op3val:0x7b0001ff; valaddr_reg:x3; val_offset:14853*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14853*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4952:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x32f9b7 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x371627 and fs3 == 0 and fe3 == 0xf6 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db2f9b7; op2val:0x41371627;
op3val:0x7b0003ff; valaddr_reg:x3; val_offset:14856*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14856*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4953:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x32f9b7 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x371627 and fs3 == 0 and fe3 == 0xf6 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db2f9b7; op2val:0x41371627;
op3val:0x7b0007ff; valaddr_reg:x3; val_offset:14859*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14859*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4954:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x32f9b7 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x371627 and fs3 == 0 and fe3 == 0xf6 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db2f9b7; op2val:0x41371627;
op3val:0x7b000fff; valaddr_reg:x3; val_offset:14862*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14862*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4955:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x32f9b7 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x371627 and fs3 == 0 and fe3 == 0xf6 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db2f9b7; op2val:0x41371627;
op3val:0x7b001fff; valaddr_reg:x3; val_offset:14865*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14865*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4956:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x32f9b7 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x371627 and fs3 == 0 and fe3 == 0xf6 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db2f9b7; op2val:0x41371627;
op3val:0x7b003fff; valaddr_reg:x3; val_offset:14868*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14868*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4957:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x32f9b7 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x371627 and fs3 == 0 and fe3 == 0xf6 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db2f9b7; op2val:0x41371627;
op3val:0x7b007fff; valaddr_reg:x3; val_offset:14871*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14871*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4958:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x32f9b7 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x371627 and fs3 == 0 and fe3 == 0xf6 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db2f9b7; op2val:0x41371627;
op3val:0x7b00ffff; valaddr_reg:x3; val_offset:14874*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14874*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4959:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x32f9b7 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x371627 and fs3 == 0 and fe3 == 0xf6 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db2f9b7; op2val:0x41371627;
op3val:0x7b01ffff; valaddr_reg:x3; val_offset:14877*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14877*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4960:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x32f9b7 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x371627 and fs3 == 0 and fe3 == 0xf6 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db2f9b7; op2val:0x41371627;
op3val:0x7b03ffff; valaddr_reg:x3; val_offset:14880*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14880*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4961:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x32f9b7 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x371627 and fs3 == 0 and fe3 == 0xf6 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db2f9b7; op2val:0x41371627;
op3val:0x7b07ffff; valaddr_reg:x3; val_offset:14883*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14883*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4962:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x32f9b7 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x371627 and fs3 == 0 and fe3 == 0xf6 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db2f9b7; op2val:0x41371627;
op3val:0x7b0fffff; valaddr_reg:x3; val_offset:14886*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14886*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4963:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x32f9b7 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x371627 and fs3 == 0 and fe3 == 0xf6 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db2f9b7; op2val:0x41371627;
op3val:0x7b1fffff; valaddr_reg:x3; val_offset:14889*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14889*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4964:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x32f9b7 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x371627 and fs3 == 0 and fe3 == 0xf6 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db2f9b7; op2val:0x41371627;
op3val:0x7b3fffff; valaddr_reg:x3; val_offset:14892*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14892*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4965:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x32f9b7 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x371627 and fs3 == 0 and fe3 == 0xf6 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db2f9b7; op2val:0x41371627;
op3val:0x7b400000; valaddr_reg:x3; val_offset:14895*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14895*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4966:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x32f9b7 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x371627 and fs3 == 0 and fe3 == 0xf6 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db2f9b7; op2val:0x41371627;
op3val:0x7b600000; valaddr_reg:x3; val_offset:14898*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14898*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4967:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x32f9b7 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x371627 and fs3 == 0 and fe3 == 0xf6 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db2f9b7; op2val:0x41371627;
op3val:0x7b700000; valaddr_reg:x3; val_offset:14901*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14901*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4968:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x32f9b7 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x371627 and fs3 == 0 and fe3 == 0xf6 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db2f9b7; op2val:0x41371627;
op3val:0x7b780000; valaddr_reg:x3; val_offset:14904*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14904*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4969:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x32f9b7 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x371627 and fs3 == 0 and fe3 == 0xf6 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db2f9b7; op2val:0x41371627;
op3val:0x7b7c0000; valaddr_reg:x3; val_offset:14907*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14907*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4970:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x32f9b7 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x371627 and fs3 == 0 and fe3 == 0xf6 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db2f9b7; op2val:0x41371627;
op3val:0x7b7e0000; valaddr_reg:x3; val_offset:14910*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14910*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4971:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x32f9b7 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x371627 and fs3 == 0 and fe3 == 0xf6 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db2f9b7; op2val:0x41371627;
op3val:0x7b7f0000; valaddr_reg:x3; val_offset:14913*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14913*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4972:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x32f9b7 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x371627 and fs3 == 0 and fe3 == 0xf6 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db2f9b7; op2val:0x41371627;
op3val:0x7b7f8000; valaddr_reg:x3; val_offset:14916*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14916*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4973:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x32f9b7 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x371627 and fs3 == 0 and fe3 == 0xf6 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db2f9b7; op2val:0x41371627;
op3val:0x7b7fc000; valaddr_reg:x3; val_offset:14919*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14919*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4974:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x32f9b7 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x371627 and fs3 == 0 and fe3 == 0xf6 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db2f9b7; op2val:0x41371627;
op3val:0x7b7fe000; valaddr_reg:x3; val_offset:14922*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14922*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4975:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x32f9b7 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x371627 and fs3 == 0 and fe3 == 0xf6 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db2f9b7; op2val:0x41371627;
op3val:0x7b7ff000; valaddr_reg:x3; val_offset:14925*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14925*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4976:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x32f9b7 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x371627 and fs3 == 0 and fe3 == 0xf6 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db2f9b7; op2val:0x41371627;
op3val:0x7b7ff800; valaddr_reg:x3; val_offset:14928*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14928*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4977:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x32f9b7 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x371627 and fs3 == 0 and fe3 == 0xf6 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db2f9b7; op2val:0x41371627;
op3val:0x7b7ffc00; valaddr_reg:x3; val_offset:14931*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14931*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4978:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x32f9b7 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x371627 and fs3 == 0 and fe3 == 0xf6 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db2f9b7; op2val:0x41371627;
op3val:0x7b7ffe00; valaddr_reg:x3; val_offset:14934*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14934*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4979:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x32f9b7 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x371627 and fs3 == 0 and fe3 == 0xf6 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db2f9b7; op2val:0x41371627;
op3val:0x7b7fff00; valaddr_reg:x3; val_offset:14937*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14937*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4980:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x32f9b7 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x371627 and fs3 == 0 and fe3 == 0xf6 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db2f9b7; op2val:0x41371627;
op3val:0x7b7fff80; valaddr_reg:x3; val_offset:14940*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14940*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4981:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x32f9b7 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x371627 and fs3 == 0 and fe3 == 0xf6 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db2f9b7; op2val:0x41371627;
op3val:0x7b7fffc0; valaddr_reg:x3; val_offset:14943*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14943*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4982:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x32f9b7 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x371627 and fs3 == 0 and fe3 == 0xf6 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db2f9b7; op2val:0x41371627;
op3val:0x7b7fffe0; valaddr_reg:x3; val_offset:14946*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14946*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4983:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x32f9b7 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x371627 and fs3 == 0 and fe3 == 0xf6 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db2f9b7; op2val:0x41371627;
op3val:0x7b7ffff0; valaddr_reg:x3; val_offset:14949*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14949*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4984:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x32f9b7 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x371627 and fs3 == 0 and fe3 == 0xf6 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db2f9b7; op2val:0x41371627;
op3val:0x7b7ffff8; valaddr_reg:x3; val_offset:14952*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14952*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4985:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x32f9b7 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x371627 and fs3 == 0 and fe3 == 0xf6 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db2f9b7; op2val:0x41371627;
op3val:0x7b7ffffc; valaddr_reg:x3; val_offset:14955*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14955*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4986:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x32f9b7 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x371627 and fs3 == 0 and fe3 == 0xf6 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db2f9b7; op2val:0x41371627;
op3val:0x7b7ffffe; valaddr_reg:x3; val_offset:14958*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14958*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4987:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x32f9b7 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x371627 and fs3 == 0 and fe3 == 0xf6 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db2f9b7; op2val:0x41371627;
op3val:0x7b7fffff; valaddr_reg:x3; val_offset:14961*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14961*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4988:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x32f9b7 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x371627 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db2f9b7; op2val:0x41371627;
op3val:0x7f000001; valaddr_reg:x3; val_offset:14964*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14964*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4989:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x32f9b7 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x371627 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db2f9b7; op2val:0x41371627;
op3val:0x7f000003; valaddr_reg:x3; val_offset:14967*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14967*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4990:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x32f9b7 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x371627 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db2f9b7; op2val:0x41371627;
op3val:0x7f000007; valaddr_reg:x3; val_offset:14970*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14970*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4991:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x32f9b7 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x371627 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db2f9b7; op2val:0x41371627;
op3val:0x7f199999; valaddr_reg:x3; val_offset:14973*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 14973*0 + 3*38*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(2108750734,32,FLEN)
NAN_BOXED(20522473,32,FLEN)
NAN_BOXED(1065353217,32,FLEN)
NAN_BOXED(2108750734,32,FLEN)
NAN_BOXED(20522473,32,FLEN)
NAN_BOXED(1065353219,32,FLEN)
NAN_BOXED(2108750734,32,FLEN)
NAN_BOXED(20522473,32,FLEN)
NAN_BOXED(1065353223,32,FLEN)
NAN_BOXED(2108750734,32,FLEN)
NAN_BOXED(20522473,32,FLEN)
NAN_BOXED(1067030937,32,FLEN)
NAN_BOXED(2108750734,32,FLEN)
NAN_BOXED(20522473,32,FLEN)
NAN_BOXED(1067749961,32,FLEN)
NAN_BOXED(2108750734,32,FLEN)
NAN_BOXED(20522473,32,FLEN)
NAN_BOXED(1068708659,32,FLEN)
NAN_BOXED(2108750734,32,FLEN)
NAN_BOXED(20522473,32,FLEN)
NAN_BOXED(1068948333,32,FLEN)
NAN_BOXED(2108750734,32,FLEN)
NAN_BOXED(20522473,32,FLEN)
NAN_BOXED(1069267899,32,FLEN)
NAN_BOXED(2108750734,32,FLEN)
NAN_BOXED(20522473,32,FLEN)
NAN_BOXED(1069827140,32,FLEN)
NAN_BOXED(2108750734,32,FLEN)
NAN_BOXED(20522473,32,FLEN)
NAN_BOXED(1070386380,32,FLEN)
NAN_BOXED(2108750734,32,FLEN)
NAN_BOXED(20522473,32,FLEN)
NAN_BOXED(1071345078,32,FLEN)
NAN_BOXED(2108750734,32,FLEN)
NAN_BOXED(20522473,32,FLEN)
NAN_BOXED(1072064102,32,FLEN)
NAN_BOXED(2108750734,32,FLEN)
NAN_BOXED(20522473,32,FLEN)
NAN_BOXED(1072543451,32,FLEN)
NAN_BOXED(2108750734,32,FLEN)
NAN_BOXED(20522473,32,FLEN)
NAN_BOXED(1073741816,32,FLEN)
NAN_BOXED(2108750734,32,FLEN)
NAN_BOXED(20522473,32,FLEN)
NAN_BOXED(1073741820,32,FLEN)
NAN_BOXED(2108750734,32,FLEN)
NAN_BOXED(20522473,32,FLEN)
NAN_BOXED(1073741822,32,FLEN)
NAN_BOXED(2108805625,32,FLEN)
NAN_BOXED(2167948969,32,FLEN)
NAN_BOXED(3061841920,32,FLEN)
NAN_BOXED(2108805625,32,FLEN)
NAN_BOXED(2167948969,32,FLEN)
NAN_BOXED(3061841921,32,FLEN)
NAN_BOXED(2108805625,32,FLEN)
NAN_BOXED(2167948969,32,FLEN)
NAN_BOXED(3061841923,32,FLEN)
NAN_BOXED(2108805625,32,FLEN)
NAN_BOXED(2167948969,32,FLEN)
NAN_BOXED(3061841927,32,FLEN)
NAN_BOXED(2108805625,32,FLEN)
NAN_BOXED(2167948969,32,FLEN)
NAN_BOXED(3061841935,32,FLEN)
NAN_BOXED(2108805625,32,FLEN)
NAN_BOXED(2167948969,32,FLEN)
NAN_BOXED(3061841951,32,FLEN)
NAN_BOXED(2108805625,32,FLEN)
NAN_BOXED(2167948969,32,FLEN)
NAN_BOXED(3061841983,32,FLEN)
NAN_BOXED(2108805625,32,FLEN)
NAN_BOXED(2167948969,32,FLEN)
NAN_BOXED(3061842047,32,FLEN)
NAN_BOXED(2108805625,32,FLEN)
NAN_BOXED(2167948969,32,FLEN)
NAN_BOXED(3061842175,32,FLEN)
NAN_BOXED(2108805625,32,FLEN)
NAN_BOXED(2167948969,32,FLEN)
NAN_BOXED(3061842431,32,FLEN)
NAN_BOXED(2108805625,32,FLEN)
NAN_BOXED(2167948969,32,FLEN)
NAN_BOXED(3061842943,32,FLEN)
NAN_BOXED(2108805625,32,FLEN)
NAN_BOXED(2167948969,32,FLEN)
NAN_BOXED(3061843967,32,FLEN)
NAN_BOXED(2108805625,32,FLEN)
NAN_BOXED(2167948969,32,FLEN)
NAN_BOXED(3061846015,32,FLEN)
NAN_BOXED(2108805625,32,FLEN)
NAN_BOXED(2167948969,32,FLEN)
NAN_BOXED(3061850111,32,FLEN)
NAN_BOXED(2108805625,32,FLEN)
NAN_BOXED(2167948969,32,FLEN)
NAN_BOXED(3061858303,32,FLEN)
NAN_BOXED(2108805625,32,FLEN)
NAN_BOXED(2167948969,32,FLEN)
NAN_BOXED(3061874687,32,FLEN)
NAN_BOXED(2108805625,32,FLEN)
NAN_BOXED(2167948969,32,FLEN)
NAN_BOXED(3061907455,32,FLEN)
NAN_BOXED(2108805625,32,FLEN)
NAN_BOXED(2167948969,32,FLEN)
NAN_BOXED(3061972991,32,FLEN)
NAN_BOXED(2108805625,32,FLEN)
NAN_BOXED(2167948969,32,FLEN)
NAN_BOXED(3062104063,32,FLEN)
NAN_BOXED(2108805625,32,FLEN)
NAN_BOXED(2167948969,32,FLEN)
NAN_BOXED(3062366207,32,FLEN)
NAN_BOXED(2108805625,32,FLEN)
NAN_BOXED(2167948969,32,FLEN)
NAN_BOXED(3062890495,32,FLEN)
NAN_BOXED(2108805625,32,FLEN)
NAN_BOXED(2167948969,32,FLEN)
NAN_BOXED(3063939071,32,FLEN)
NAN_BOXED(2108805625,32,FLEN)
NAN_BOXED(2167948969,32,FLEN)
NAN_BOXED(3066036223,32,FLEN)
NAN_BOXED(2108805625,32,FLEN)
NAN_BOXED(2167948969,32,FLEN)
NAN_BOXED(3066036224,32,FLEN)
NAN_BOXED(2108805625,32,FLEN)
NAN_BOXED(2167948969,32,FLEN)
NAN_BOXED(3068133376,32,FLEN)
NAN_BOXED(2108805625,32,FLEN)
NAN_BOXED(2167948969,32,FLEN)
NAN_BOXED(3069181952,32,FLEN)
NAN_BOXED(2108805625,32,FLEN)
NAN_BOXED(2167948969,32,FLEN)
NAN_BOXED(3069706240,32,FLEN)
NAN_BOXED(2108805625,32,FLEN)
NAN_BOXED(2167948969,32,FLEN)
NAN_BOXED(3069968384,32,FLEN)
NAN_BOXED(2108805625,32,FLEN)
NAN_BOXED(2167948969,32,FLEN)
NAN_BOXED(3070099456,32,FLEN)
NAN_BOXED(2108805625,32,FLEN)
NAN_BOXED(2167948969,32,FLEN)
NAN_BOXED(3070164992,32,FLEN)
NAN_BOXED(2108805625,32,FLEN)
NAN_BOXED(2167948969,32,FLEN)
NAN_BOXED(3070197760,32,FLEN)
NAN_BOXED(2108805625,32,FLEN)
NAN_BOXED(2167948969,32,FLEN)
NAN_BOXED(3070214144,32,FLEN)
NAN_BOXED(2108805625,32,FLEN)
NAN_BOXED(2167948969,32,FLEN)
NAN_BOXED(3070222336,32,FLEN)
NAN_BOXED(2108805625,32,FLEN)
NAN_BOXED(2167948969,32,FLEN)
NAN_BOXED(3070226432,32,FLEN)
NAN_BOXED(2108805625,32,FLEN)
NAN_BOXED(2167948969,32,FLEN)
NAN_BOXED(3070228480,32,FLEN)
NAN_BOXED(2108805625,32,FLEN)
NAN_BOXED(2167948969,32,FLEN)
NAN_BOXED(3070229504,32,FLEN)
NAN_BOXED(2108805625,32,FLEN)
NAN_BOXED(2167948969,32,FLEN)
NAN_BOXED(3070230016,32,FLEN)
NAN_BOXED(2108805625,32,FLEN)
NAN_BOXED(2167948969,32,FLEN)
NAN_BOXED(3070230272,32,FLEN)
NAN_BOXED(2108805625,32,FLEN)
NAN_BOXED(2167948969,32,FLEN)
NAN_BOXED(3070230400,32,FLEN)
NAN_BOXED(2108805625,32,FLEN)
NAN_BOXED(2167948969,32,FLEN)
NAN_BOXED(3070230464,32,FLEN)
NAN_BOXED(2108805625,32,FLEN)
NAN_BOXED(2167948969,32,FLEN)
NAN_BOXED(3070230496,32,FLEN)
NAN_BOXED(2108805625,32,FLEN)
NAN_BOXED(2167948969,32,FLEN)
NAN_BOXED(3070230512,32,FLEN)
NAN_BOXED(2108805625,32,FLEN)
NAN_BOXED(2167948969,32,FLEN)
NAN_BOXED(3070230520,32,FLEN)
NAN_BOXED(2108805625,32,FLEN)
NAN_BOXED(2167948969,32,FLEN)
NAN_BOXED(3070230524,32,FLEN)
NAN_BOXED(2108805625,32,FLEN)
NAN_BOXED(2167948969,32,FLEN)
NAN_BOXED(3070230526,32,FLEN)
NAN_BOXED(2108805625,32,FLEN)
NAN_BOXED(2167948969,32,FLEN)
NAN_BOXED(3070230527,32,FLEN)
NAN_BOXED(2108805625,32,FLEN)
NAN_BOXED(2167948969,32,FLEN)
NAN_BOXED(3212836865,32,FLEN)
NAN_BOXED(2108805625,32,FLEN)
NAN_BOXED(2167948969,32,FLEN)
NAN_BOXED(3212836867,32,FLEN)
NAN_BOXED(2108805625,32,FLEN)
NAN_BOXED(2167948969,32,FLEN)
NAN_BOXED(3212836871,32,FLEN)
NAN_BOXED(2108805625,32,FLEN)
NAN_BOXED(2167948969,32,FLEN)
NAN_BOXED(3214514585,32,FLEN)
NAN_BOXED(2108805625,32,FLEN)
NAN_BOXED(2167948969,32,FLEN)
NAN_BOXED(3215233609,32,FLEN)
NAN_BOXED(2108805625,32,FLEN)
NAN_BOXED(2167948969,32,FLEN)
NAN_BOXED(3216192307,32,FLEN)
NAN_BOXED(2108805625,32,FLEN)
NAN_BOXED(2167948969,32,FLEN)
NAN_BOXED(3216431981,32,FLEN)
NAN_BOXED(2108805625,32,FLEN)
NAN_BOXED(2167948969,32,FLEN)
NAN_BOXED(3216751547,32,FLEN)
NAN_BOXED(2108805625,32,FLEN)
NAN_BOXED(2167948969,32,FLEN)
NAN_BOXED(3217310788,32,FLEN)
NAN_BOXED(2108805625,32,FLEN)
NAN_BOXED(2167948969,32,FLEN)
NAN_BOXED(3217870028,32,FLEN)
NAN_BOXED(2108805625,32,FLEN)
NAN_BOXED(2167948969,32,FLEN)
NAN_BOXED(3218828726,32,FLEN)
NAN_BOXED(2108805625,32,FLEN)
NAN_BOXED(2167948969,32,FLEN)
NAN_BOXED(3219547750,32,FLEN)
NAN_BOXED(2108805625,32,FLEN)
NAN_BOXED(2167948969,32,FLEN)
NAN_BOXED(3220027099,32,FLEN)
NAN_BOXED(2108805625,32,FLEN)
NAN_BOXED(2167948969,32,FLEN)
NAN_BOXED(3221225464,32,FLEN)
NAN_BOXED(2108805625,32,FLEN)
NAN_BOXED(2167948969,32,FLEN)
NAN_BOXED(3221225468,32,FLEN)
NAN_BOXED(2108805625,32,FLEN)
NAN_BOXED(2167948969,32,FLEN)
NAN_BOXED(3221225470,32,FLEN)
NAN_BOXED(2108881335,32,FLEN)
NAN_BOXED(1094129191,32,FLEN)
NAN_BOXED(2063597568,32,FLEN)
NAN_BOXED(2108881335,32,FLEN)
NAN_BOXED(1094129191,32,FLEN)
NAN_BOXED(2063597569,32,FLEN)
NAN_BOXED(2108881335,32,FLEN)
NAN_BOXED(1094129191,32,FLEN)
NAN_BOXED(2063597571,32,FLEN)
NAN_BOXED(2108881335,32,FLEN)
NAN_BOXED(1094129191,32,FLEN)
NAN_BOXED(2063597575,32,FLEN)
NAN_BOXED(2108881335,32,FLEN)
NAN_BOXED(1094129191,32,FLEN)
NAN_BOXED(2063597583,32,FLEN)
NAN_BOXED(2108881335,32,FLEN)
NAN_BOXED(1094129191,32,FLEN)
NAN_BOXED(2063597599,32,FLEN)
NAN_BOXED(2108881335,32,FLEN)
NAN_BOXED(1094129191,32,FLEN)
NAN_BOXED(2063597631,32,FLEN)
NAN_BOXED(2108881335,32,FLEN)
NAN_BOXED(1094129191,32,FLEN)
NAN_BOXED(2063597695,32,FLEN)
NAN_BOXED(2108881335,32,FLEN)
NAN_BOXED(1094129191,32,FLEN)
NAN_BOXED(2063597823,32,FLEN)
NAN_BOXED(2108881335,32,FLEN)
NAN_BOXED(1094129191,32,FLEN)
NAN_BOXED(2063598079,32,FLEN)
NAN_BOXED(2108881335,32,FLEN)
NAN_BOXED(1094129191,32,FLEN)
NAN_BOXED(2063598591,32,FLEN)
NAN_BOXED(2108881335,32,FLEN)
NAN_BOXED(1094129191,32,FLEN)
NAN_BOXED(2063599615,32,FLEN)
NAN_BOXED(2108881335,32,FLEN)
NAN_BOXED(1094129191,32,FLEN)
NAN_BOXED(2063601663,32,FLEN)
NAN_BOXED(2108881335,32,FLEN)
NAN_BOXED(1094129191,32,FLEN)
NAN_BOXED(2063605759,32,FLEN)
NAN_BOXED(2108881335,32,FLEN)
NAN_BOXED(1094129191,32,FLEN)
NAN_BOXED(2063613951,32,FLEN)
NAN_BOXED(2108881335,32,FLEN)
NAN_BOXED(1094129191,32,FLEN)
NAN_BOXED(2063630335,32,FLEN)
NAN_BOXED(2108881335,32,FLEN)
NAN_BOXED(1094129191,32,FLEN)
NAN_BOXED(2063663103,32,FLEN)
NAN_BOXED(2108881335,32,FLEN)
NAN_BOXED(1094129191,32,FLEN)
NAN_BOXED(2063728639,32,FLEN)
NAN_BOXED(2108881335,32,FLEN)
NAN_BOXED(1094129191,32,FLEN)
NAN_BOXED(2063859711,32,FLEN)
NAN_BOXED(2108881335,32,FLEN)
NAN_BOXED(1094129191,32,FLEN)
NAN_BOXED(2064121855,32,FLEN)
NAN_BOXED(2108881335,32,FLEN)
NAN_BOXED(1094129191,32,FLEN)
NAN_BOXED(2064646143,32,FLEN)
NAN_BOXED(2108881335,32,FLEN)
NAN_BOXED(1094129191,32,FLEN)
NAN_BOXED(2065694719,32,FLEN)
NAN_BOXED(2108881335,32,FLEN)
NAN_BOXED(1094129191,32,FLEN)
NAN_BOXED(2067791871,32,FLEN)
NAN_BOXED(2108881335,32,FLEN)
NAN_BOXED(1094129191,32,FLEN)
NAN_BOXED(2067791872,32,FLEN)
NAN_BOXED(2108881335,32,FLEN)
NAN_BOXED(1094129191,32,FLEN)
NAN_BOXED(2069889024,32,FLEN)
NAN_BOXED(2108881335,32,FLEN)
NAN_BOXED(1094129191,32,FLEN)
NAN_BOXED(2070937600,32,FLEN)
NAN_BOXED(2108881335,32,FLEN)
NAN_BOXED(1094129191,32,FLEN)
NAN_BOXED(2071461888,32,FLEN)
NAN_BOXED(2108881335,32,FLEN)
NAN_BOXED(1094129191,32,FLEN)
NAN_BOXED(2071724032,32,FLEN)
NAN_BOXED(2108881335,32,FLEN)
NAN_BOXED(1094129191,32,FLEN)
NAN_BOXED(2071855104,32,FLEN)
NAN_BOXED(2108881335,32,FLEN)
NAN_BOXED(1094129191,32,FLEN)
NAN_BOXED(2071920640,32,FLEN)
NAN_BOXED(2108881335,32,FLEN)
NAN_BOXED(1094129191,32,FLEN)
NAN_BOXED(2071953408,32,FLEN)
NAN_BOXED(2108881335,32,FLEN)
NAN_BOXED(1094129191,32,FLEN)
NAN_BOXED(2071969792,32,FLEN)
NAN_BOXED(2108881335,32,FLEN)
NAN_BOXED(1094129191,32,FLEN)
NAN_BOXED(2071977984,32,FLEN)
NAN_BOXED(2108881335,32,FLEN)
NAN_BOXED(1094129191,32,FLEN)
NAN_BOXED(2071982080,32,FLEN)
NAN_BOXED(2108881335,32,FLEN)
NAN_BOXED(1094129191,32,FLEN)
NAN_BOXED(2071984128,32,FLEN)
NAN_BOXED(2108881335,32,FLEN)
NAN_BOXED(1094129191,32,FLEN)
NAN_BOXED(2071985152,32,FLEN)
NAN_BOXED(2108881335,32,FLEN)
NAN_BOXED(1094129191,32,FLEN)
NAN_BOXED(2071985664,32,FLEN)
NAN_BOXED(2108881335,32,FLEN)
NAN_BOXED(1094129191,32,FLEN)
NAN_BOXED(2071985920,32,FLEN)
NAN_BOXED(2108881335,32,FLEN)
NAN_BOXED(1094129191,32,FLEN)
NAN_BOXED(2071986048,32,FLEN)
NAN_BOXED(2108881335,32,FLEN)
NAN_BOXED(1094129191,32,FLEN)
NAN_BOXED(2071986112,32,FLEN)
NAN_BOXED(2108881335,32,FLEN)
NAN_BOXED(1094129191,32,FLEN)
NAN_BOXED(2071986144,32,FLEN)
NAN_BOXED(2108881335,32,FLEN)
NAN_BOXED(1094129191,32,FLEN)
NAN_BOXED(2071986160,32,FLEN)
NAN_BOXED(2108881335,32,FLEN)
NAN_BOXED(1094129191,32,FLEN)
NAN_BOXED(2071986168,32,FLEN)
NAN_BOXED(2108881335,32,FLEN)
NAN_BOXED(1094129191,32,FLEN)
NAN_BOXED(2071986172,32,FLEN)
NAN_BOXED(2108881335,32,FLEN)
NAN_BOXED(1094129191,32,FLEN)
NAN_BOXED(2071986174,32,FLEN)
NAN_BOXED(2108881335,32,FLEN)
NAN_BOXED(1094129191,32,FLEN)
NAN_BOXED(2071986175,32,FLEN)
NAN_BOXED(2108881335,32,FLEN)
NAN_BOXED(1094129191,32,FLEN)
NAN_BOXED(2130706433,32,FLEN)
NAN_BOXED(2108881335,32,FLEN)
NAN_BOXED(1094129191,32,FLEN)
NAN_BOXED(2130706435,32,FLEN)
NAN_BOXED(2108881335,32,FLEN)
NAN_BOXED(1094129191,32,FLEN)
NAN_BOXED(2130706439,32,FLEN)
NAN_BOXED(2108881335,32,FLEN)
NAN_BOXED(1094129191,32,FLEN)
NAN_BOXED(2132384153,32,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
