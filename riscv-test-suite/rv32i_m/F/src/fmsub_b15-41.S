
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 14:18:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32F/fmsub.s.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.s instruction of the RISC-V RV32F_Zicsr,RV32FD_Zicsr,RV64F_Zicsr,RV64FD_Zicsr extension for the fmsub_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF_Zicsr,RV32IFD_Zicsr,RV64IF_Zicsr,RV64IFD_Zicsr,RV32EF_Zicsr,RV32EFD_Zicsr,RV64EF_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fmsub_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*F.*);def TEST_CASE_1=True;",fmsub_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_5120:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3cdd42 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2d800f and fs3 == 1 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbcdd42; op2val:0x812d800f;
op3val:0xbfc44444; valaddr_reg:x3; val_offset:15360*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15360*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5121:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3cdd42 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2d800f and fs3 == 1 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbcdd42; op2val:0x812d800f;
op3val:0xbfcccccc; valaddr_reg:x3; val_offset:15363*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15363*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5122:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3cdd42 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2d800f and fs3 == 1 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbcdd42; op2val:0x812d800f;
op3val:0xbfdb6db6; valaddr_reg:x3; val_offset:15366*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15366*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5123:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3cdd42 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2d800f and fs3 == 1 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbcdd42; op2val:0x812d800f;
op3val:0xbfe66666; valaddr_reg:x3; val_offset:15369*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15369*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5124:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3cdd42 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2d800f and fs3 == 1 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbcdd42; op2val:0x812d800f;
op3val:0xbfedb6db; valaddr_reg:x3; val_offset:15372*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15372*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5125:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3cdd42 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2d800f and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbcdd42; op2val:0x812d800f;
op3val:0xbffffff8; valaddr_reg:x3; val_offset:15375*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15375*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5126:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3cdd42 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2d800f and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbcdd42; op2val:0x812d800f;
op3val:0xbffffffc; valaddr_reg:x3; val_offset:15378*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15378*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5127:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3cdd42 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2d800f and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbcdd42; op2val:0x812d800f;
op3val:0xbffffffe; valaddr_reg:x3; val_offset:15381*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15381*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5128:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4447f1 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x26f1bd and fs3 == 0 and fe3 == 0x61 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc447f1; op2val:0x126f1bd;
op3val:0x30800000; valaddr_reg:x3; val_offset:15384*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15384*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5129:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4447f1 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x26f1bd and fs3 == 0 and fe3 == 0x61 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc447f1; op2val:0x126f1bd;
op3val:0x30800001; valaddr_reg:x3; val_offset:15387*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15387*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5130:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4447f1 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x26f1bd and fs3 == 0 and fe3 == 0x61 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc447f1; op2val:0x126f1bd;
op3val:0x30800003; valaddr_reg:x3; val_offset:15390*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15390*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5131:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4447f1 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x26f1bd and fs3 == 0 and fe3 == 0x61 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc447f1; op2val:0x126f1bd;
op3val:0x30800007; valaddr_reg:x3; val_offset:15393*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15393*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5132:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4447f1 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x26f1bd and fs3 == 0 and fe3 == 0x61 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc447f1; op2val:0x126f1bd;
op3val:0x3080000f; valaddr_reg:x3; val_offset:15396*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15396*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5133:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4447f1 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x26f1bd and fs3 == 0 and fe3 == 0x61 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc447f1; op2val:0x126f1bd;
op3val:0x3080001f; valaddr_reg:x3; val_offset:15399*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15399*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5134:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4447f1 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x26f1bd and fs3 == 0 and fe3 == 0x61 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc447f1; op2val:0x126f1bd;
op3val:0x3080003f; valaddr_reg:x3; val_offset:15402*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15402*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5135:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4447f1 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x26f1bd and fs3 == 0 and fe3 == 0x61 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc447f1; op2val:0x126f1bd;
op3val:0x3080007f; valaddr_reg:x3; val_offset:15405*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15405*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5136:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4447f1 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x26f1bd and fs3 == 0 and fe3 == 0x61 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc447f1; op2val:0x126f1bd;
op3val:0x308000ff; valaddr_reg:x3; val_offset:15408*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15408*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5137:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4447f1 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x26f1bd and fs3 == 0 and fe3 == 0x61 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc447f1; op2val:0x126f1bd;
op3val:0x308001ff; valaddr_reg:x3; val_offset:15411*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15411*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5138:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4447f1 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x26f1bd and fs3 == 0 and fe3 == 0x61 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc447f1; op2val:0x126f1bd;
op3val:0x308003ff; valaddr_reg:x3; val_offset:15414*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15414*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5139:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4447f1 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x26f1bd and fs3 == 0 and fe3 == 0x61 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc447f1; op2val:0x126f1bd;
op3val:0x308007ff; valaddr_reg:x3; val_offset:15417*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15417*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5140:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4447f1 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x26f1bd and fs3 == 0 and fe3 == 0x61 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc447f1; op2val:0x126f1bd;
op3val:0x30800fff; valaddr_reg:x3; val_offset:15420*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15420*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5141:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4447f1 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x26f1bd and fs3 == 0 and fe3 == 0x61 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc447f1; op2val:0x126f1bd;
op3val:0x30801fff; valaddr_reg:x3; val_offset:15423*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15423*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5142:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4447f1 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x26f1bd and fs3 == 0 and fe3 == 0x61 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc447f1; op2val:0x126f1bd;
op3val:0x30803fff; valaddr_reg:x3; val_offset:15426*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15426*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5143:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4447f1 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x26f1bd and fs3 == 0 and fe3 == 0x61 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc447f1; op2val:0x126f1bd;
op3val:0x30807fff; valaddr_reg:x3; val_offset:15429*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15429*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5144:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4447f1 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x26f1bd and fs3 == 0 and fe3 == 0x61 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc447f1; op2val:0x126f1bd;
op3val:0x3080ffff; valaddr_reg:x3; val_offset:15432*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15432*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5145:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4447f1 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x26f1bd and fs3 == 0 and fe3 == 0x61 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc447f1; op2val:0x126f1bd;
op3val:0x3081ffff; valaddr_reg:x3; val_offset:15435*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15435*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5146:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4447f1 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x26f1bd and fs3 == 0 and fe3 == 0x61 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc447f1; op2val:0x126f1bd;
op3val:0x3083ffff; valaddr_reg:x3; val_offset:15438*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15438*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5147:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4447f1 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x26f1bd and fs3 == 0 and fe3 == 0x61 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc447f1; op2val:0x126f1bd;
op3val:0x3087ffff; valaddr_reg:x3; val_offset:15441*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15441*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5148:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4447f1 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x26f1bd and fs3 == 0 and fe3 == 0x61 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc447f1; op2val:0x126f1bd;
op3val:0x308fffff; valaddr_reg:x3; val_offset:15444*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15444*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5149:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4447f1 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x26f1bd and fs3 == 0 and fe3 == 0x61 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc447f1; op2val:0x126f1bd;
op3val:0x309fffff; valaddr_reg:x3; val_offset:15447*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15447*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5150:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4447f1 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x26f1bd and fs3 == 0 and fe3 == 0x61 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc447f1; op2val:0x126f1bd;
op3val:0x30bfffff; valaddr_reg:x3; val_offset:15450*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15450*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5151:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4447f1 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x26f1bd and fs3 == 0 and fe3 == 0x61 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc447f1; op2val:0x126f1bd;
op3val:0x30c00000; valaddr_reg:x3; val_offset:15453*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15453*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5152:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4447f1 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x26f1bd and fs3 == 0 and fe3 == 0x61 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc447f1; op2val:0x126f1bd;
op3val:0x30e00000; valaddr_reg:x3; val_offset:15456*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15456*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5153:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4447f1 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x26f1bd and fs3 == 0 and fe3 == 0x61 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc447f1; op2val:0x126f1bd;
op3val:0x30f00000; valaddr_reg:x3; val_offset:15459*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15459*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5154:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4447f1 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x26f1bd and fs3 == 0 and fe3 == 0x61 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc447f1; op2val:0x126f1bd;
op3val:0x30f80000; valaddr_reg:x3; val_offset:15462*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15462*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5155:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4447f1 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x26f1bd and fs3 == 0 and fe3 == 0x61 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc447f1; op2val:0x126f1bd;
op3val:0x30fc0000; valaddr_reg:x3; val_offset:15465*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15465*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5156:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4447f1 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x26f1bd and fs3 == 0 and fe3 == 0x61 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc447f1; op2val:0x126f1bd;
op3val:0x30fe0000; valaddr_reg:x3; val_offset:15468*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15468*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5157:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4447f1 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x26f1bd and fs3 == 0 and fe3 == 0x61 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc447f1; op2val:0x126f1bd;
op3val:0x30ff0000; valaddr_reg:x3; val_offset:15471*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15471*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5158:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4447f1 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x26f1bd and fs3 == 0 and fe3 == 0x61 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc447f1; op2val:0x126f1bd;
op3val:0x30ff8000; valaddr_reg:x3; val_offset:15474*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15474*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5159:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4447f1 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x26f1bd and fs3 == 0 and fe3 == 0x61 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc447f1; op2val:0x126f1bd;
op3val:0x30ffc000; valaddr_reg:x3; val_offset:15477*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15477*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5160:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4447f1 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x26f1bd and fs3 == 0 and fe3 == 0x61 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc447f1; op2val:0x126f1bd;
op3val:0x30ffe000; valaddr_reg:x3; val_offset:15480*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15480*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5161:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4447f1 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x26f1bd and fs3 == 0 and fe3 == 0x61 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc447f1; op2val:0x126f1bd;
op3val:0x30fff000; valaddr_reg:x3; val_offset:15483*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15483*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5162:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4447f1 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x26f1bd and fs3 == 0 and fe3 == 0x61 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc447f1; op2val:0x126f1bd;
op3val:0x30fff800; valaddr_reg:x3; val_offset:15486*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15486*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5163:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4447f1 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x26f1bd and fs3 == 0 and fe3 == 0x61 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc447f1; op2val:0x126f1bd;
op3val:0x30fffc00; valaddr_reg:x3; val_offset:15489*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15489*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5164:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4447f1 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x26f1bd and fs3 == 0 and fe3 == 0x61 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc447f1; op2val:0x126f1bd;
op3val:0x30fffe00; valaddr_reg:x3; val_offset:15492*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15492*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5165:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4447f1 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x26f1bd and fs3 == 0 and fe3 == 0x61 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc447f1; op2val:0x126f1bd;
op3val:0x30ffff00; valaddr_reg:x3; val_offset:15495*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15495*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5166:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4447f1 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x26f1bd and fs3 == 0 and fe3 == 0x61 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc447f1; op2val:0x126f1bd;
op3val:0x30ffff80; valaddr_reg:x3; val_offset:15498*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15498*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5167:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4447f1 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x26f1bd and fs3 == 0 and fe3 == 0x61 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc447f1; op2val:0x126f1bd;
op3val:0x30ffffc0; valaddr_reg:x3; val_offset:15501*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15501*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5168:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4447f1 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x26f1bd and fs3 == 0 and fe3 == 0x61 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc447f1; op2val:0x126f1bd;
op3val:0x30ffffe0; valaddr_reg:x3; val_offset:15504*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15504*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5169:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4447f1 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x26f1bd and fs3 == 0 and fe3 == 0x61 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc447f1; op2val:0x126f1bd;
op3val:0x30fffff0; valaddr_reg:x3; val_offset:15507*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15507*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5170:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4447f1 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x26f1bd and fs3 == 0 and fe3 == 0x61 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc447f1; op2val:0x126f1bd;
op3val:0x30fffff8; valaddr_reg:x3; val_offset:15510*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15510*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5171:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4447f1 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x26f1bd and fs3 == 0 and fe3 == 0x61 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc447f1; op2val:0x126f1bd;
op3val:0x30fffffc; valaddr_reg:x3; val_offset:15513*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15513*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5172:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4447f1 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x26f1bd and fs3 == 0 and fe3 == 0x61 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc447f1; op2val:0x126f1bd;
op3val:0x30fffffe; valaddr_reg:x3; val_offset:15516*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15516*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5173:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4447f1 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x26f1bd and fs3 == 0 and fe3 == 0x61 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc447f1; op2val:0x126f1bd;
op3val:0x30ffffff; valaddr_reg:x3; val_offset:15519*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15519*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5174:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4447f1 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x26f1bd and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc447f1; op2val:0x126f1bd;
op3val:0x3f800001; valaddr_reg:x3; val_offset:15522*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15522*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5175:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4447f1 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x26f1bd and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc447f1; op2val:0x126f1bd;
op3val:0x3f800003; valaddr_reg:x3; val_offset:15525*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15525*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5176:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4447f1 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x26f1bd and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc447f1; op2val:0x126f1bd;
op3val:0x3f800007; valaddr_reg:x3; val_offset:15528*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15528*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5177:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4447f1 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x26f1bd and fs3 == 0 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc447f1; op2val:0x126f1bd;
op3val:0x3f999999; valaddr_reg:x3; val_offset:15531*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15531*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5178:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4447f1 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x26f1bd and fs3 == 0 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc447f1; op2val:0x126f1bd;
op3val:0x3fa49249; valaddr_reg:x3; val_offset:15534*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15534*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5179:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4447f1 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x26f1bd and fs3 == 0 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc447f1; op2val:0x126f1bd;
op3val:0x3fb33333; valaddr_reg:x3; val_offset:15537*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15537*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5180:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4447f1 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x26f1bd and fs3 == 0 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc447f1; op2val:0x126f1bd;
op3val:0x3fb6db6d; valaddr_reg:x3; val_offset:15540*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15540*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5181:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4447f1 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x26f1bd and fs3 == 0 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc447f1; op2val:0x126f1bd;
op3val:0x3fbbbbbb; valaddr_reg:x3; val_offset:15543*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15543*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5182:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4447f1 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x26f1bd and fs3 == 0 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc447f1; op2val:0x126f1bd;
op3val:0x3fc44444; valaddr_reg:x3; val_offset:15546*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15546*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5183:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4447f1 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x26f1bd and fs3 == 0 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc447f1; op2val:0x126f1bd;
op3val:0x3fcccccc; valaddr_reg:x3; val_offset:15549*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15549*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5184:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4447f1 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x26f1bd and fs3 == 0 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc447f1; op2val:0x126f1bd;
op3val:0x3fdb6db6; valaddr_reg:x3; val_offset:15552*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15552*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5185:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4447f1 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x26f1bd and fs3 == 0 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc447f1; op2val:0x126f1bd;
op3val:0x3fe66666; valaddr_reg:x3; val_offset:15555*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15555*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5186:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4447f1 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x26f1bd and fs3 == 0 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc447f1; op2val:0x126f1bd;
op3val:0x3fedb6db; valaddr_reg:x3; val_offset:15558*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15558*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5187:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4447f1 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x26f1bd and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc447f1; op2val:0x126f1bd;
op3val:0x3ffffff8; valaddr_reg:x3; val_offset:15561*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15561*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5188:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4447f1 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x26f1bd and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc447f1; op2val:0x126f1bd;
op3val:0x3ffffffc; valaddr_reg:x3; val_offset:15564*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15564*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5189:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4447f1 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x26f1bd and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc447f1; op2val:0x126f1bd;
op3val:0x3ffffffe; valaddr_reg:x3; val_offset:15567*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15567*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5190:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x44ee6c and fs2 == 0 and fe2 == 0x82 and fm2 == 0x26649b and fs3 == 0 and fe3 == 0xd5 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc4ee6c; op2val:0x4126649b;
op3val:0x6a800000; valaddr_reg:x3; val_offset:15570*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15570*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5191:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x44ee6c and fs2 == 0 and fe2 == 0x82 and fm2 == 0x26649b and fs3 == 0 and fe3 == 0xd5 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc4ee6c; op2val:0x4126649b;
op3val:0x6a800001; valaddr_reg:x3; val_offset:15573*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15573*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5192:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x44ee6c and fs2 == 0 and fe2 == 0x82 and fm2 == 0x26649b and fs3 == 0 and fe3 == 0xd5 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc4ee6c; op2val:0x4126649b;
op3val:0x6a800003; valaddr_reg:x3; val_offset:15576*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15576*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5193:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x44ee6c and fs2 == 0 and fe2 == 0x82 and fm2 == 0x26649b and fs3 == 0 and fe3 == 0xd5 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc4ee6c; op2val:0x4126649b;
op3val:0x6a800007; valaddr_reg:x3; val_offset:15579*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15579*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5194:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x44ee6c and fs2 == 0 and fe2 == 0x82 and fm2 == 0x26649b and fs3 == 0 and fe3 == 0xd5 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc4ee6c; op2val:0x4126649b;
op3val:0x6a80000f; valaddr_reg:x3; val_offset:15582*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15582*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5195:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x44ee6c and fs2 == 0 and fe2 == 0x82 and fm2 == 0x26649b and fs3 == 0 and fe3 == 0xd5 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc4ee6c; op2val:0x4126649b;
op3val:0x6a80001f; valaddr_reg:x3; val_offset:15585*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15585*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5196:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x44ee6c and fs2 == 0 and fe2 == 0x82 and fm2 == 0x26649b and fs3 == 0 and fe3 == 0xd5 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc4ee6c; op2val:0x4126649b;
op3val:0x6a80003f; valaddr_reg:x3; val_offset:15588*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15588*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5197:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x44ee6c and fs2 == 0 and fe2 == 0x82 and fm2 == 0x26649b and fs3 == 0 and fe3 == 0xd5 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc4ee6c; op2val:0x4126649b;
op3val:0x6a80007f; valaddr_reg:x3; val_offset:15591*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15591*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5198:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x44ee6c and fs2 == 0 and fe2 == 0x82 and fm2 == 0x26649b and fs3 == 0 and fe3 == 0xd5 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc4ee6c; op2val:0x4126649b;
op3val:0x6a8000ff; valaddr_reg:x3; val_offset:15594*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15594*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5199:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x44ee6c and fs2 == 0 and fe2 == 0x82 and fm2 == 0x26649b and fs3 == 0 and fe3 == 0xd5 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc4ee6c; op2val:0x4126649b;
op3val:0x6a8001ff; valaddr_reg:x3; val_offset:15597*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15597*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5200:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x44ee6c and fs2 == 0 and fe2 == 0x82 and fm2 == 0x26649b and fs3 == 0 and fe3 == 0xd5 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc4ee6c; op2val:0x4126649b;
op3val:0x6a8003ff; valaddr_reg:x3; val_offset:15600*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15600*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5201:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x44ee6c and fs2 == 0 and fe2 == 0x82 and fm2 == 0x26649b and fs3 == 0 and fe3 == 0xd5 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc4ee6c; op2val:0x4126649b;
op3val:0x6a8007ff; valaddr_reg:x3; val_offset:15603*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15603*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5202:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x44ee6c and fs2 == 0 and fe2 == 0x82 and fm2 == 0x26649b and fs3 == 0 and fe3 == 0xd5 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc4ee6c; op2val:0x4126649b;
op3val:0x6a800fff; valaddr_reg:x3; val_offset:15606*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15606*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5203:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x44ee6c and fs2 == 0 and fe2 == 0x82 and fm2 == 0x26649b and fs3 == 0 and fe3 == 0xd5 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc4ee6c; op2val:0x4126649b;
op3val:0x6a801fff; valaddr_reg:x3; val_offset:15609*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15609*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5204:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x44ee6c and fs2 == 0 and fe2 == 0x82 and fm2 == 0x26649b and fs3 == 0 and fe3 == 0xd5 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc4ee6c; op2val:0x4126649b;
op3val:0x6a803fff; valaddr_reg:x3; val_offset:15612*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15612*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5205:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x44ee6c and fs2 == 0 and fe2 == 0x82 and fm2 == 0x26649b and fs3 == 0 and fe3 == 0xd5 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc4ee6c; op2val:0x4126649b;
op3val:0x6a807fff; valaddr_reg:x3; val_offset:15615*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15615*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5206:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x44ee6c and fs2 == 0 and fe2 == 0x82 and fm2 == 0x26649b and fs3 == 0 and fe3 == 0xd5 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc4ee6c; op2val:0x4126649b;
op3val:0x6a80ffff; valaddr_reg:x3; val_offset:15618*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15618*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5207:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x44ee6c and fs2 == 0 and fe2 == 0x82 and fm2 == 0x26649b and fs3 == 0 and fe3 == 0xd5 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc4ee6c; op2val:0x4126649b;
op3val:0x6a81ffff; valaddr_reg:x3; val_offset:15621*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15621*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5208:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x44ee6c and fs2 == 0 and fe2 == 0x82 and fm2 == 0x26649b and fs3 == 0 and fe3 == 0xd5 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc4ee6c; op2val:0x4126649b;
op3val:0x6a83ffff; valaddr_reg:x3; val_offset:15624*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15624*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5209:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x44ee6c and fs2 == 0 and fe2 == 0x82 and fm2 == 0x26649b and fs3 == 0 and fe3 == 0xd5 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc4ee6c; op2val:0x4126649b;
op3val:0x6a87ffff; valaddr_reg:x3; val_offset:15627*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15627*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5210:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x44ee6c and fs2 == 0 and fe2 == 0x82 and fm2 == 0x26649b and fs3 == 0 and fe3 == 0xd5 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc4ee6c; op2val:0x4126649b;
op3val:0x6a8fffff; valaddr_reg:x3; val_offset:15630*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15630*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5211:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x44ee6c and fs2 == 0 and fe2 == 0x82 and fm2 == 0x26649b and fs3 == 0 and fe3 == 0xd5 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc4ee6c; op2val:0x4126649b;
op3val:0x6a9fffff; valaddr_reg:x3; val_offset:15633*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15633*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5212:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x44ee6c and fs2 == 0 and fe2 == 0x82 and fm2 == 0x26649b and fs3 == 0 and fe3 == 0xd5 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc4ee6c; op2val:0x4126649b;
op3val:0x6abfffff; valaddr_reg:x3; val_offset:15636*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15636*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5213:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x44ee6c and fs2 == 0 and fe2 == 0x82 and fm2 == 0x26649b and fs3 == 0 and fe3 == 0xd5 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc4ee6c; op2val:0x4126649b;
op3val:0x6ac00000; valaddr_reg:x3; val_offset:15639*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15639*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5214:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x44ee6c and fs2 == 0 and fe2 == 0x82 and fm2 == 0x26649b and fs3 == 0 and fe3 == 0xd5 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc4ee6c; op2val:0x4126649b;
op3val:0x6ae00000; valaddr_reg:x3; val_offset:15642*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15642*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5215:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x44ee6c and fs2 == 0 and fe2 == 0x82 and fm2 == 0x26649b and fs3 == 0 and fe3 == 0xd5 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc4ee6c; op2val:0x4126649b;
op3val:0x6af00000; valaddr_reg:x3; val_offset:15645*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15645*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5216:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x44ee6c and fs2 == 0 and fe2 == 0x82 and fm2 == 0x26649b and fs3 == 0 and fe3 == 0xd5 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc4ee6c; op2val:0x4126649b;
op3val:0x6af80000; valaddr_reg:x3; val_offset:15648*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15648*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5217:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x44ee6c and fs2 == 0 and fe2 == 0x82 and fm2 == 0x26649b and fs3 == 0 and fe3 == 0xd5 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc4ee6c; op2val:0x4126649b;
op3val:0x6afc0000; valaddr_reg:x3; val_offset:15651*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15651*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5218:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x44ee6c and fs2 == 0 and fe2 == 0x82 and fm2 == 0x26649b and fs3 == 0 and fe3 == 0xd5 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc4ee6c; op2val:0x4126649b;
op3val:0x6afe0000; valaddr_reg:x3; val_offset:15654*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15654*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5219:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x44ee6c and fs2 == 0 and fe2 == 0x82 and fm2 == 0x26649b and fs3 == 0 and fe3 == 0xd5 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc4ee6c; op2val:0x4126649b;
op3val:0x6aff0000; valaddr_reg:x3; val_offset:15657*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15657*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5220:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x44ee6c and fs2 == 0 and fe2 == 0x82 and fm2 == 0x26649b and fs3 == 0 and fe3 == 0xd5 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc4ee6c; op2val:0x4126649b;
op3val:0x6aff8000; valaddr_reg:x3; val_offset:15660*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15660*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5221:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x44ee6c and fs2 == 0 and fe2 == 0x82 and fm2 == 0x26649b and fs3 == 0 and fe3 == 0xd5 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc4ee6c; op2val:0x4126649b;
op3val:0x6affc000; valaddr_reg:x3; val_offset:15663*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15663*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5222:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x44ee6c and fs2 == 0 and fe2 == 0x82 and fm2 == 0x26649b and fs3 == 0 and fe3 == 0xd5 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc4ee6c; op2val:0x4126649b;
op3val:0x6affe000; valaddr_reg:x3; val_offset:15666*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15666*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5223:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x44ee6c and fs2 == 0 and fe2 == 0x82 and fm2 == 0x26649b and fs3 == 0 and fe3 == 0xd5 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc4ee6c; op2val:0x4126649b;
op3val:0x6afff000; valaddr_reg:x3; val_offset:15669*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15669*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5224:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x44ee6c and fs2 == 0 and fe2 == 0x82 and fm2 == 0x26649b and fs3 == 0 and fe3 == 0xd5 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc4ee6c; op2val:0x4126649b;
op3val:0x6afff800; valaddr_reg:x3; val_offset:15672*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15672*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5225:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x44ee6c and fs2 == 0 and fe2 == 0x82 and fm2 == 0x26649b and fs3 == 0 and fe3 == 0xd5 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc4ee6c; op2val:0x4126649b;
op3val:0x6afffc00; valaddr_reg:x3; val_offset:15675*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15675*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5226:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x44ee6c and fs2 == 0 and fe2 == 0x82 and fm2 == 0x26649b and fs3 == 0 and fe3 == 0xd5 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc4ee6c; op2val:0x4126649b;
op3val:0x6afffe00; valaddr_reg:x3; val_offset:15678*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15678*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5227:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x44ee6c and fs2 == 0 and fe2 == 0x82 and fm2 == 0x26649b and fs3 == 0 and fe3 == 0xd5 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc4ee6c; op2val:0x4126649b;
op3val:0x6affff00; valaddr_reg:x3; val_offset:15681*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15681*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5228:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x44ee6c and fs2 == 0 and fe2 == 0x82 and fm2 == 0x26649b and fs3 == 0 and fe3 == 0xd5 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc4ee6c; op2val:0x4126649b;
op3val:0x6affff80; valaddr_reg:x3; val_offset:15684*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15684*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5229:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x44ee6c and fs2 == 0 and fe2 == 0x82 and fm2 == 0x26649b and fs3 == 0 and fe3 == 0xd5 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc4ee6c; op2val:0x4126649b;
op3val:0x6affffc0; valaddr_reg:x3; val_offset:15687*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15687*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5230:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x44ee6c and fs2 == 0 and fe2 == 0x82 and fm2 == 0x26649b and fs3 == 0 and fe3 == 0xd5 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc4ee6c; op2val:0x4126649b;
op3val:0x6affffe0; valaddr_reg:x3; val_offset:15690*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15690*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5231:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x44ee6c and fs2 == 0 and fe2 == 0x82 and fm2 == 0x26649b and fs3 == 0 and fe3 == 0xd5 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc4ee6c; op2val:0x4126649b;
op3val:0x6afffff0; valaddr_reg:x3; val_offset:15693*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15693*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5232:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x44ee6c and fs2 == 0 and fe2 == 0x82 and fm2 == 0x26649b and fs3 == 0 and fe3 == 0xd5 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc4ee6c; op2val:0x4126649b;
op3val:0x6afffff8; valaddr_reg:x3; val_offset:15696*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15696*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5233:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x44ee6c and fs2 == 0 and fe2 == 0x82 and fm2 == 0x26649b and fs3 == 0 and fe3 == 0xd5 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc4ee6c; op2val:0x4126649b;
op3val:0x6afffffc; valaddr_reg:x3; val_offset:15699*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15699*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5234:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x44ee6c and fs2 == 0 and fe2 == 0x82 and fm2 == 0x26649b and fs3 == 0 and fe3 == 0xd5 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc4ee6c; op2val:0x4126649b;
op3val:0x6afffffe; valaddr_reg:x3; val_offset:15702*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15702*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5235:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x44ee6c and fs2 == 0 and fe2 == 0x82 and fm2 == 0x26649b and fs3 == 0 and fe3 == 0xd5 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc4ee6c; op2val:0x4126649b;
op3val:0x6affffff; valaddr_reg:x3; val_offset:15705*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15705*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5236:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x44ee6c and fs2 == 0 and fe2 == 0x82 and fm2 == 0x26649b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc4ee6c; op2val:0x4126649b;
op3val:0x7f000001; valaddr_reg:x3; val_offset:15708*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15708*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5237:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x44ee6c and fs2 == 0 and fe2 == 0x82 and fm2 == 0x26649b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc4ee6c; op2val:0x4126649b;
op3val:0x7f000003; valaddr_reg:x3; val_offset:15711*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15711*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5238:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x44ee6c and fs2 == 0 and fe2 == 0x82 and fm2 == 0x26649b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc4ee6c; op2val:0x4126649b;
op3val:0x7f000007; valaddr_reg:x3; val_offset:15714*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15714*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5239:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x44ee6c and fs2 == 0 and fe2 == 0x82 and fm2 == 0x26649b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc4ee6c; op2val:0x4126649b;
op3val:0x7f199999; valaddr_reg:x3; val_offset:15717*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15717*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5240:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x44ee6c and fs2 == 0 and fe2 == 0x82 and fm2 == 0x26649b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc4ee6c; op2val:0x4126649b;
op3val:0x7f249249; valaddr_reg:x3; val_offset:15720*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15720*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5241:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x44ee6c and fs2 == 0 and fe2 == 0x82 and fm2 == 0x26649b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc4ee6c; op2val:0x4126649b;
op3val:0x7f333333; valaddr_reg:x3; val_offset:15723*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15723*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5242:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x44ee6c and fs2 == 0 and fe2 == 0x82 and fm2 == 0x26649b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc4ee6c; op2val:0x4126649b;
op3val:0x7f36db6d; valaddr_reg:x3; val_offset:15726*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15726*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5243:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x44ee6c and fs2 == 0 and fe2 == 0x82 and fm2 == 0x26649b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc4ee6c; op2val:0x4126649b;
op3val:0x7f3bbbbb; valaddr_reg:x3; val_offset:15729*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15729*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5244:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x44ee6c and fs2 == 0 and fe2 == 0x82 and fm2 == 0x26649b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc4ee6c; op2val:0x4126649b;
op3val:0x7f444444; valaddr_reg:x3; val_offset:15732*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15732*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5245:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x44ee6c and fs2 == 0 and fe2 == 0x82 and fm2 == 0x26649b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc4ee6c; op2val:0x4126649b;
op3val:0x7f4ccccc; valaddr_reg:x3; val_offset:15735*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15735*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5246:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x44ee6c and fs2 == 0 and fe2 == 0x82 and fm2 == 0x26649b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc4ee6c; op2val:0x4126649b;
op3val:0x7f5b6db6; valaddr_reg:x3; val_offset:15738*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15738*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5247:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x44ee6c and fs2 == 0 and fe2 == 0x82 and fm2 == 0x26649b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc4ee6c; op2val:0x4126649b;
op3val:0x7f666666; valaddr_reg:x3; val_offset:15741*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15741*0 + 3*40*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(2109529410,32,FLEN)
NAN_BOXED(2167242767,32,FLEN)
NAN_BOXED(3217310788,32,FLEN)
NAN_BOXED(2109529410,32,FLEN)
NAN_BOXED(2167242767,32,FLEN)
NAN_BOXED(3217870028,32,FLEN)
NAN_BOXED(2109529410,32,FLEN)
NAN_BOXED(2167242767,32,FLEN)
NAN_BOXED(3218828726,32,FLEN)
NAN_BOXED(2109529410,32,FLEN)
NAN_BOXED(2167242767,32,FLEN)
NAN_BOXED(3219547750,32,FLEN)
NAN_BOXED(2109529410,32,FLEN)
NAN_BOXED(2167242767,32,FLEN)
NAN_BOXED(3220027099,32,FLEN)
NAN_BOXED(2109529410,32,FLEN)
NAN_BOXED(2167242767,32,FLEN)
NAN_BOXED(3221225464,32,FLEN)
NAN_BOXED(2109529410,32,FLEN)
NAN_BOXED(2167242767,32,FLEN)
NAN_BOXED(3221225468,32,FLEN)
NAN_BOXED(2109529410,32,FLEN)
NAN_BOXED(2167242767,32,FLEN)
NAN_BOXED(3221225470,32,FLEN)
NAN_BOXED(2110015473,32,FLEN)
NAN_BOXED(19329469,32,FLEN)
NAN_BOXED(813694976,32,FLEN)
NAN_BOXED(2110015473,32,FLEN)
NAN_BOXED(19329469,32,FLEN)
NAN_BOXED(813694977,32,FLEN)
NAN_BOXED(2110015473,32,FLEN)
NAN_BOXED(19329469,32,FLEN)
NAN_BOXED(813694979,32,FLEN)
NAN_BOXED(2110015473,32,FLEN)
NAN_BOXED(19329469,32,FLEN)
NAN_BOXED(813694983,32,FLEN)
NAN_BOXED(2110015473,32,FLEN)
NAN_BOXED(19329469,32,FLEN)
NAN_BOXED(813694991,32,FLEN)
NAN_BOXED(2110015473,32,FLEN)
NAN_BOXED(19329469,32,FLEN)
NAN_BOXED(813695007,32,FLEN)
NAN_BOXED(2110015473,32,FLEN)
NAN_BOXED(19329469,32,FLEN)
NAN_BOXED(813695039,32,FLEN)
NAN_BOXED(2110015473,32,FLEN)
NAN_BOXED(19329469,32,FLEN)
NAN_BOXED(813695103,32,FLEN)
NAN_BOXED(2110015473,32,FLEN)
NAN_BOXED(19329469,32,FLEN)
NAN_BOXED(813695231,32,FLEN)
NAN_BOXED(2110015473,32,FLEN)
NAN_BOXED(19329469,32,FLEN)
NAN_BOXED(813695487,32,FLEN)
NAN_BOXED(2110015473,32,FLEN)
NAN_BOXED(19329469,32,FLEN)
NAN_BOXED(813695999,32,FLEN)
NAN_BOXED(2110015473,32,FLEN)
NAN_BOXED(19329469,32,FLEN)
NAN_BOXED(813697023,32,FLEN)
NAN_BOXED(2110015473,32,FLEN)
NAN_BOXED(19329469,32,FLEN)
NAN_BOXED(813699071,32,FLEN)
NAN_BOXED(2110015473,32,FLEN)
NAN_BOXED(19329469,32,FLEN)
NAN_BOXED(813703167,32,FLEN)
NAN_BOXED(2110015473,32,FLEN)
NAN_BOXED(19329469,32,FLEN)
NAN_BOXED(813711359,32,FLEN)
NAN_BOXED(2110015473,32,FLEN)
NAN_BOXED(19329469,32,FLEN)
NAN_BOXED(813727743,32,FLEN)
NAN_BOXED(2110015473,32,FLEN)
NAN_BOXED(19329469,32,FLEN)
NAN_BOXED(813760511,32,FLEN)
NAN_BOXED(2110015473,32,FLEN)
NAN_BOXED(19329469,32,FLEN)
NAN_BOXED(813826047,32,FLEN)
NAN_BOXED(2110015473,32,FLEN)
NAN_BOXED(19329469,32,FLEN)
NAN_BOXED(813957119,32,FLEN)
NAN_BOXED(2110015473,32,FLEN)
NAN_BOXED(19329469,32,FLEN)
NAN_BOXED(814219263,32,FLEN)
NAN_BOXED(2110015473,32,FLEN)
NAN_BOXED(19329469,32,FLEN)
NAN_BOXED(814743551,32,FLEN)
NAN_BOXED(2110015473,32,FLEN)
NAN_BOXED(19329469,32,FLEN)
NAN_BOXED(815792127,32,FLEN)
NAN_BOXED(2110015473,32,FLEN)
NAN_BOXED(19329469,32,FLEN)
NAN_BOXED(817889279,32,FLEN)
NAN_BOXED(2110015473,32,FLEN)
NAN_BOXED(19329469,32,FLEN)
NAN_BOXED(817889280,32,FLEN)
NAN_BOXED(2110015473,32,FLEN)
NAN_BOXED(19329469,32,FLEN)
NAN_BOXED(819986432,32,FLEN)
NAN_BOXED(2110015473,32,FLEN)
NAN_BOXED(19329469,32,FLEN)
NAN_BOXED(821035008,32,FLEN)
NAN_BOXED(2110015473,32,FLEN)
NAN_BOXED(19329469,32,FLEN)
NAN_BOXED(821559296,32,FLEN)
NAN_BOXED(2110015473,32,FLEN)
NAN_BOXED(19329469,32,FLEN)
NAN_BOXED(821821440,32,FLEN)
NAN_BOXED(2110015473,32,FLEN)
NAN_BOXED(19329469,32,FLEN)
NAN_BOXED(821952512,32,FLEN)
NAN_BOXED(2110015473,32,FLEN)
NAN_BOXED(19329469,32,FLEN)
NAN_BOXED(822018048,32,FLEN)
NAN_BOXED(2110015473,32,FLEN)
NAN_BOXED(19329469,32,FLEN)
NAN_BOXED(822050816,32,FLEN)
NAN_BOXED(2110015473,32,FLEN)
NAN_BOXED(19329469,32,FLEN)
NAN_BOXED(822067200,32,FLEN)
NAN_BOXED(2110015473,32,FLEN)
NAN_BOXED(19329469,32,FLEN)
NAN_BOXED(822075392,32,FLEN)
NAN_BOXED(2110015473,32,FLEN)
NAN_BOXED(19329469,32,FLEN)
NAN_BOXED(822079488,32,FLEN)
NAN_BOXED(2110015473,32,FLEN)
NAN_BOXED(19329469,32,FLEN)
NAN_BOXED(822081536,32,FLEN)
NAN_BOXED(2110015473,32,FLEN)
NAN_BOXED(19329469,32,FLEN)
NAN_BOXED(822082560,32,FLEN)
NAN_BOXED(2110015473,32,FLEN)
NAN_BOXED(19329469,32,FLEN)
NAN_BOXED(822083072,32,FLEN)
NAN_BOXED(2110015473,32,FLEN)
NAN_BOXED(19329469,32,FLEN)
NAN_BOXED(822083328,32,FLEN)
NAN_BOXED(2110015473,32,FLEN)
NAN_BOXED(19329469,32,FLEN)
NAN_BOXED(822083456,32,FLEN)
NAN_BOXED(2110015473,32,FLEN)
NAN_BOXED(19329469,32,FLEN)
NAN_BOXED(822083520,32,FLEN)
NAN_BOXED(2110015473,32,FLEN)
NAN_BOXED(19329469,32,FLEN)
NAN_BOXED(822083552,32,FLEN)
NAN_BOXED(2110015473,32,FLEN)
NAN_BOXED(19329469,32,FLEN)
NAN_BOXED(822083568,32,FLEN)
NAN_BOXED(2110015473,32,FLEN)
NAN_BOXED(19329469,32,FLEN)
NAN_BOXED(822083576,32,FLEN)
NAN_BOXED(2110015473,32,FLEN)
NAN_BOXED(19329469,32,FLEN)
NAN_BOXED(822083580,32,FLEN)
NAN_BOXED(2110015473,32,FLEN)
NAN_BOXED(19329469,32,FLEN)
NAN_BOXED(822083582,32,FLEN)
NAN_BOXED(2110015473,32,FLEN)
NAN_BOXED(19329469,32,FLEN)
NAN_BOXED(822083583,32,FLEN)
NAN_BOXED(2110015473,32,FLEN)
NAN_BOXED(19329469,32,FLEN)
NAN_BOXED(1065353217,32,FLEN)
NAN_BOXED(2110015473,32,FLEN)
NAN_BOXED(19329469,32,FLEN)
NAN_BOXED(1065353219,32,FLEN)
NAN_BOXED(2110015473,32,FLEN)
NAN_BOXED(19329469,32,FLEN)
NAN_BOXED(1065353223,32,FLEN)
NAN_BOXED(2110015473,32,FLEN)
NAN_BOXED(19329469,32,FLEN)
NAN_BOXED(1067030937,32,FLEN)
NAN_BOXED(2110015473,32,FLEN)
NAN_BOXED(19329469,32,FLEN)
NAN_BOXED(1067749961,32,FLEN)
NAN_BOXED(2110015473,32,FLEN)
NAN_BOXED(19329469,32,FLEN)
NAN_BOXED(1068708659,32,FLEN)
NAN_BOXED(2110015473,32,FLEN)
NAN_BOXED(19329469,32,FLEN)
NAN_BOXED(1068948333,32,FLEN)
NAN_BOXED(2110015473,32,FLEN)
NAN_BOXED(19329469,32,FLEN)
NAN_BOXED(1069267899,32,FLEN)
NAN_BOXED(2110015473,32,FLEN)
NAN_BOXED(19329469,32,FLEN)
NAN_BOXED(1069827140,32,FLEN)
NAN_BOXED(2110015473,32,FLEN)
NAN_BOXED(19329469,32,FLEN)
NAN_BOXED(1070386380,32,FLEN)
NAN_BOXED(2110015473,32,FLEN)
NAN_BOXED(19329469,32,FLEN)
NAN_BOXED(1071345078,32,FLEN)
NAN_BOXED(2110015473,32,FLEN)
NAN_BOXED(19329469,32,FLEN)
NAN_BOXED(1072064102,32,FLEN)
NAN_BOXED(2110015473,32,FLEN)
NAN_BOXED(19329469,32,FLEN)
NAN_BOXED(1072543451,32,FLEN)
NAN_BOXED(2110015473,32,FLEN)
NAN_BOXED(19329469,32,FLEN)
NAN_BOXED(1073741816,32,FLEN)
NAN_BOXED(2110015473,32,FLEN)
NAN_BOXED(19329469,32,FLEN)
NAN_BOXED(1073741820,32,FLEN)
NAN_BOXED(2110015473,32,FLEN)
NAN_BOXED(19329469,32,FLEN)
NAN_BOXED(1073741822,32,FLEN)
NAN_BOXED(2110058092,32,FLEN)
NAN_BOXED(1093035163,32,FLEN)
NAN_BOXED(1786773504,32,FLEN)
NAN_BOXED(2110058092,32,FLEN)
NAN_BOXED(1093035163,32,FLEN)
NAN_BOXED(1786773505,32,FLEN)
NAN_BOXED(2110058092,32,FLEN)
NAN_BOXED(1093035163,32,FLEN)
NAN_BOXED(1786773507,32,FLEN)
NAN_BOXED(2110058092,32,FLEN)
NAN_BOXED(1093035163,32,FLEN)
NAN_BOXED(1786773511,32,FLEN)
NAN_BOXED(2110058092,32,FLEN)
NAN_BOXED(1093035163,32,FLEN)
NAN_BOXED(1786773519,32,FLEN)
NAN_BOXED(2110058092,32,FLEN)
NAN_BOXED(1093035163,32,FLEN)
NAN_BOXED(1786773535,32,FLEN)
NAN_BOXED(2110058092,32,FLEN)
NAN_BOXED(1093035163,32,FLEN)
NAN_BOXED(1786773567,32,FLEN)
NAN_BOXED(2110058092,32,FLEN)
NAN_BOXED(1093035163,32,FLEN)
NAN_BOXED(1786773631,32,FLEN)
NAN_BOXED(2110058092,32,FLEN)
NAN_BOXED(1093035163,32,FLEN)
NAN_BOXED(1786773759,32,FLEN)
NAN_BOXED(2110058092,32,FLEN)
NAN_BOXED(1093035163,32,FLEN)
NAN_BOXED(1786774015,32,FLEN)
NAN_BOXED(2110058092,32,FLEN)
NAN_BOXED(1093035163,32,FLEN)
NAN_BOXED(1786774527,32,FLEN)
NAN_BOXED(2110058092,32,FLEN)
NAN_BOXED(1093035163,32,FLEN)
NAN_BOXED(1786775551,32,FLEN)
NAN_BOXED(2110058092,32,FLEN)
NAN_BOXED(1093035163,32,FLEN)
NAN_BOXED(1786777599,32,FLEN)
NAN_BOXED(2110058092,32,FLEN)
NAN_BOXED(1093035163,32,FLEN)
NAN_BOXED(1786781695,32,FLEN)
NAN_BOXED(2110058092,32,FLEN)
NAN_BOXED(1093035163,32,FLEN)
NAN_BOXED(1786789887,32,FLEN)
NAN_BOXED(2110058092,32,FLEN)
NAN_BOXED(1093035163,32,FLEN)
NAN_BOXED(1786806271,32,FLEN)
NAN_BOXED(2110058092,32,FLEN)
NAN_BOXED(1093035163,32,FLEN)
NAN_BOXED(1786839039,32,FLEN)
NAN_BOXED(2110058092,32,FLEN)
NAN_BOXED(1093035163,32,FLEN)
NAN_BOXED(1786904575,32,FLEN)
NAN_BOXED(2110058092,32,FLEN)
NAN_BOXED(1093035163,32,FLEN)
NAN_BOXED(1787035647,32,FLEN)
NAN_BOXED(2110058092,32,FLEN)
NAN_BOXED(1093035163,32,FLEN)
NAN_BOXED(1787297791,32,FLEN)
NAN_BOXED(2110058092,32,FLEN)
NAN_BOXED(1093035163,32,FLEN)
NAN_BOXED(1787822079,32,FLEN)
NAN_BOXED(2110058092,32,FLEN)
NAN_BOXED(1093035163,32,FLEN)
NAN_BOXED(1788870655,32,FLEN)
NAN_BOXED(2110058092,32,FLEN)
NAN_BOXED(1093035163,32,FLEN)
NAN_BOXED(1790967807,32,FLEN)
NAN_BOXED(2110058092,32,FLEN)
NAN_BOXED(1093035163,32,FLEN)
NAN_BOXED(1790967808,32,FLEN)
NAN_BOXED(2110058092,32,FLEN)
NAN_BOXED(1093035163,32,FLEN)
NAN_BOXED(1793064960,32,FLEN)
NAN_BOXED(2110058092,32,FLEN)
NAN_BOXED(1093035163,32,FLEN)
NAN_BOXED(1794113536,32,FLEN)
NAN_BOXED(2110058092,32,FLEN)
NAN_BOXED(1093035163,32,FLEN)
NAN_BOXED(1794637824,32,FLEN)
NAN_BOXED(2110058092,32,FLEN)
NAN_BOXED(1093035163,32,FLEN)
NAN_BOXED(1794899968,32,FLEN)
NAN_BOXED(2110058092,32,FLEN)
NAN_BOXED(1093035163,32,FLEN)
NAN_BOXED(1795031040,32,FLEN)
NAN_BOXED(2110058092,32,FLEN)
NAN_BOXED(1093035163,32,FLEN)
NAN_BOXED(1795096576,32,FLEN)
NAN_BOXED(2110058092,32,FLEN)
NAN_BOXED(1093035163,32,FLEN)
NAN_BOXED(1795129344,32,FLEN)
NAN_BOXED(2110058092,32,FLEN)
NAN_BOXED(1093035163,32,FLEN)
NAN_BOXED(1795145728,32,FLEN)
NAN_BOXED(2110058092,32,FLEN)
NAN_BOXED(1093035163,32,FLEN)
NAN_BOXED(1795153920,32,FLEN)
NAN_BOXED(2110058092,32,FLEN)
NAN_BOXED(1093035163,32,FLEN)
NAN_BOXED(1795158016,32,FLEN)
NAN_BOXED(2110058092,32,FLEN)
NAN_BOXED(1093035163,32,FLEN)
NAN_BOXED(1795160064,32,FLEN)
NAN_BOXED(2110058092,32,FLEN)
NAN_BOXED(1093035163,32,FLEN)
NAN_BOXED(1795161088,32,FLEN)
NAN_BOXED(2110058092,32,FLEN)
NAN_BOXED(1093035163,32,FLEN)
NAN_BOXED(1795161600,32,FLEN)
NAN_BOXED(2110058092,32,FLEN)
NAN_BOXED(1093035163,32,FLEN)
NAN_BOXED(1795161856,32,FLEN)
NAN_BOXED(2110058092,32,FLEN)
NAN_BOXED(1093035163,32,FLEN)
NAN_BOXED(1795161984,32,FLEN)
NAN_BOXED(2110058092,32,FLEN)
NAN_BOXED(1093035163,32,FLEN)
NAN_BOXED(1795162048,32,FLEN)
NAN_BOXED(2110058092,32,FLEN)
NAN_BOXED(1093035163,32,FLEN)
NAN_BOXED(1795162080,32,FLEN)
NAN_BOXED(2110058092,32,FLEN)
NAN_BOXED(1093035163,32,FLEN)
NAN_BOXED(1795162096,32,FLEN)
NAN_BOXED(2110058092,32,FLEN)
NAN_BOXED(1093035163,32,FLEN)
NAN_BOXED(1795162104,32,FLEN)
NAN_BOXED(2110058092,32,FLEN)
NAN_BOXED(1093035163,32,FLEN)
NAN_BOXED(1795162108,32,FLEN)
NAN_BOXED(2110058092,32,FLEN)
NAN_BOXED(1093035163,32,FLEN)
NAN_BOXED(1795162110,32,FLEN)
NAN_BOXED(2110058092,32,FLEN)
NAN_BOXED(1093035163,32,FLEN)
NAN_BOXED(1795162111,32,FLEN)
NAN_BOXED(2110058092,32,FLEN)
NAN_BOXED(1093035163,32,FLEN)
NAN_BOXED(2130706433,32,FLEN)
NAN_BOXED(2110058092,32,FLEN)
NAN_BOXED(1093035163,32,FLEN)
NAN_BOXED(2130706435,32,FLEN)
NAN_BOXED(2110058092,32,FLEN)
NAN_BOXED(1093035163,32,FLEN)
NAN_BOXED(2130706439,32,FLEN)
NAN_BOXED(2110058092,32,FLEN)
NAN_BOXED(1093035163,32,FLEN)
NAN_BOXED(2132384153,32,FLEN)
NAN_BOXED(2110058092,32,FLEN)
NAN_BOXED(1093035163,32,FLEN)
NAN_BOXED(2133103177,32,FLEN)
NAN_BOXED(2110058092,32,FLEN)
NAN_BOXED(1093035163,32,FLEN)
NAN_BOXED(2134061875,32,FLEN)
NAN_BOXED(2110058092,32,FLEN)
NAN_BOXED(1093035163,32,FLEN)
NAN_BOXED(2134301549,32,FLEN)
NAN_BOXED(2110058092,32,FLEN)
NAN_BOXED(1093035163,32,FLEN)
NAN_BOXED(2134621115,32,FLEN)
NAN_BOXED(2110058092,32,FLEN)
NAN_BOXED(1093035163,32,FLEN)
NAN_BOXED(2135180356,32,FLEN)
NAN_BOXED(2110058092,32,FLEN)
NAN_BOXED(1093035163,32,FLEN)
NAN_BOXED(2135739596,32,FLEN)
NAN_BOXED(2110058092,32,FLEN)
NAN_BOXED(1093035163,32,FLEN)
NAN_BOXED(2136698294,32,FLEN)
NAN_BOXED(2110058092,32,FLEN)
NAN_BOXED(1093035163,32,FLEN)
NAN_BOXED(2137417318,32,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
