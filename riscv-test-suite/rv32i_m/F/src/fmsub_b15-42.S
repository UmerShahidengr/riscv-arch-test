
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 14:18:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32F/fmsub.s.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.s instruction of the RISC-V RV32F_Zicsr,RV32FD_Zicsr,RV64F_Zicsr,RV64FD_Zicsr extension for the fmsub_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF_Zicsr,RV32IFD_Zicsr,RV64IF_Zicsr,RV64IFD_Zicsr,RV32EF_Zicsr,RV32EFD_Zicsr,RV64EF_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fmsub_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*F.*);def TEST_CASE_1=True;",fmsub_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_5248:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x44ee6c and fs2 == 0 and fe2 == 0x82 and fm2 == 0x26649b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc4ee6c; op2val:0x4126649b;
op3val:0x7f6db6db; valaddr_reg:x3; val_offset:15744*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15744*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5249:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x44ee6c and fs2 == 0 and fe2 == 0x82 and fm2 == 0x26649b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc4ee6c; op2val:0x4126649b;
op3val:0x7f7ffff8; valaddr_reg:x3; val_offset:15747*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15747*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5250:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x44ee6c and fs2 == 0 and fe2 == 0x82 and fm2 == 0x26649b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc4ee6c; op2val:0x4126649b;
op3val:0x7f7ffffc; valaddr_reg:x3; val_offset:15750*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15750*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5251:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x44ee6c and fs2 == 0 and fe2 == 0x82 and fm2 == 0x26649b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc4ee6c; op2val:0x4126649b;
op3val:0x7f7ffffe; valaddr_reg:x3; val_offset:15753*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15753*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5252:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x484c05 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2398da and fs3 == 1 and fe3 == 0xc6 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc84c05; op2val:0xc12398da;
op3val:0xe3000000; valaddr_reg:x3; val_offset:15756*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15756*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5253:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x484c05 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2398da and fs3 == 1 and fe3 == 0xc6 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc84c05; op2val:0xc12398da;
op3val:0xe3000001; valaddr_reg:x3; val_offset:15759*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15759*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5254:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x484c05 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2398da and fs3 == 1 and fe3 == 0xc6 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc84c05; op2val:0xc12398da;
op3val:0xe3000003; valaddr_reg:x3; val_offset:15762*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15762*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5255:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x484c05 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2398da and fs3 == 1 and fe3 == 0xc6 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc84c05; op2val:0xc12398da;
op3val:0xe3000007; valaddr_reg:x3; val_offset:15765*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15765*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5256:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x484c05 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2398da and fs3 == 1 and fe3 == 0xc6 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc84c05; op2val:0xc12398da;
op3val:0xe300000f; valaddr_reg:x3; val_offset:15768*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15768*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5257:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x484c05 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2398da and fs3 == 1 and fe3 == 0xc6 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc84c05; op2val:0xc12398da;
op3val:0xe300001f; valaddr_reg:x3; val_offset:15771*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15771*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5258:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x484c05 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2398da and fs3 == 1 and fe3 == 0xc6 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc84c05; op2val:0xc12398da;
op3val:0xe300003f; valaddr_reg:x3; val_offset:15774*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15774*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5259:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x484c05 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2398da and fs3 == 1 and fe3 == 0xc6 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc84c05; op2val:0xc12398da;
op3val:0xe300007f; valaddr_reg:x3; val_offset:15777*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15777*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5260:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x484c05 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2398da and fs3 == 1 and fe3 == 0xc6 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc84c05; op2val:0xc12398da;
op3val:0xe30000ff; valaddr_reg:x3; val_offset:15780*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15780*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5261:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x484c05 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2398da and fs3 == 1 and fe3 == 0xc6 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc84c05; op2val:0xc12398da;
op3val:0xe30001ff; valaddr_reg:x3; val_offset:15783*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15783*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5262:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x484c05 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2398da and fs3 == 1 and fe3 == 0xc6 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc84c05; op2val:0xc12398da;
op3val:0xe30003ff; valaddr_reg:x3; val_offset:15786*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15786*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5263:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x484c05 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2398da and fs3 == 1 and fe3 == 0xc6 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc84c05; op2val:0xc12398da;
op3val:0xe30007ff; valaddr_reg:x3; val_offset:15789*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15789*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5264:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x484c05 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2398da and fs3 == 1 and fe3 == 0xc6 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc84c05; op2val:0xc12398da;
op3val:0xe3000fff; valaddr_reg:x3; val_offset:15792*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15792*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5265:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x484c05 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2398da and fs3 == 1 and fe3 == 0xc6 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc84c05; op2val:0xc12398da;
op3val:0xe3001fff; valaddr_reg:x3; val_offset:15795*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15795*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5266:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x484c05 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2398da and fs3 == 1 and fe3 == 0xc6 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc84c05; op2val:0xc12398da;
op3val:0xe3003fff; valaddr_reg:x3; val_offset:15798*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15798*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5267:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x484c05 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2398da and fs3 == 1 and fe3 == 0xc6 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc84c05; op2val:0xc12398da;
op3val:0xe3007fff; valaddr_reg:x3; val_offset:15801*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15801*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5268:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x484c05 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2398da and fs3 == 1 and fe3 == 0xc6 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc84c05; op2val:0xc12398da;
op3val:0xe300ffff; valaddr_reg:x3; val_offset:15804*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15804*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5269:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x484c05 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2398da and fs3 == 1 and fe3 == 0xc6 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc84c05; op2val:0xc12398da;
op3val:0xe301ffff; valaddr_reg:x3; val_offset:15807*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15807*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5270:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x484c05 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2398da and fs3 == 1 and fe3 == 0xc6 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc84c05; op2val:0xc12398da;
op3val:0xe303ffff; valaddr_reg:x3; val_offset:15810*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15810*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5271:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x484c05 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2398da and fs3 == 1 and fe3 == 0xc6 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc84c05; op2val:0xc12398da;
op3val:0xe307ffff; valaddr_reg:x3; val_offset:15813*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15813*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5272:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x484c05 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2398da and fs3 == 1 and fe3 == 0xc6 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc84c05; op2val:0xc12398da;
op3val:0xe30fffff; valaddr_reg:x3; val_offset:15816*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15816*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5273:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x484c05 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2398da and fs3 == 1 and fe3 == 0xc6 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc84c05; op2val:0xc12398da;
op3val:0xe31fffff; valaddr_reg:x3; val_offset:15819*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15819*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5274:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x484c05 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2398da and fs3 == 1 and fe3 == 0xc6 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc84c05; op2val:0xc12398da;
op3val:0xe33fffff; valaddr_reg:x3; val_offset:15822*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15822*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5275:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x484c05 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2398da and fs3 == 1 and fe3 == 0xc6 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc84c05; op2val:0xc12398da;
op3val:0xe3400000; valaddr_reg:x3; val_offset:15825*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15825*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5276:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x484c05 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2398da and fs3 == 1 and fe3 == 0xc6 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc84c05; op2val:0xc12398da;
op3val:0xe3600000; valaddr_reg:x3; val_offset:15828*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15828*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5277:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x484c05 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2398da and fs3 == 1 and fe3 == 0xc6 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc84c05; op2val:0xc12398da;
op3val:0xe3700000; valaddr_reg:x3; val_offset:15831*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15831*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5278:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x484c05 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2398da and fs3 == 1 and fe3 == 0xc6 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc84c05; op2val:0xc12398da;
op3val:0xe3780000; valaddr_reg:x3; val_offset:15834*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15834*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5279:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x484c05 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2398da and fs3 == 1 and fe3 == 0xc6 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc84c05; op2val:0xc12398da;
op3val:0xe37c0000; valaddr_reg:x3; val_offset:15837*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15837*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5280:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x484c05 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2398da and fs3 == 1 and fe3 == 0xc6 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc84c05; op2val:0xc12398da;
op3val:0xe37e0000; valaddr_reg:x3; val_offset:15840*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15840*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5281:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x484c05 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2398da and fs3 == 1 and fe3 == 0xc6 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc84c05; op2val:0xc12398da;
op3val:0xe37f0000; valaddr_reg:x3; val_offset:15843*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15843*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5282:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x484c05 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2398da and fs3 == 1 and fe3 == 0xc6 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc84c05; op2val:0xc12398da;
op3val:0xe37f8000; valaddr_reg:x3; val_offset:15846*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15846*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5283:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x484c05 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2398da and fs3 == 1 and fe3 == 0xc6 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc84c05; op2val:0xc12398da;
op3val:0xe37fc000; valaddr_reg:x3; val_offset:15849*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15849*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5284:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x484c05 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2398da and fs3 == 1 and fe3 == 0xc6 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc84c05; op2val:0xc12398da;
op3val:0xe37fe000; valaddr_reg:x3; val_offset:15852*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15852*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5285:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x484c05 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2398da and fs3 == 1 and fe3 == 0xc6 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc84c05; op2val:0xc12398da;
op3val:0xe37ff000; valaddr_reg:x3; val_offset:15855*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15855*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5286:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x484c05 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2398da and fs3 == 1 and fe3 == 0xc6 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc84c05; op2val:0xc12398da;
op3val:0xe37ff800; valaddr_reg:x3; val_offset:15858*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15858*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5287:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x484c05 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2398da and fs3 == 1 and fe3 == 0xc6 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc84c05; op2val:0xc12398da;
op3val:0xe37ffc00; valaddr_reg:x3; val_offset:15861*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15861*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5288:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x484c05 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2398da and fs3 == 1 and fe3 == 0xc6 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc84c05; op2val:0xc12398da;
op3val:0xe37ffe00; valaddr_reg:x3; val_offset:15864*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15864*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5289:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x484c05 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2398da and fs3 == 1 and fe3 == 0xc6 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc84c05; op2val:0xc12398da;
op3val:0xe37fff00; valaddr_reg:x3; val_offset:15867*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15867*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5290:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x484c05 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2398da and fs3 == 1 and fe3 == 0xc6 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc84c05; op2val:0xc12398da;
op3val:0xe37fff80; valaddr_reg:x3; val_offset:15870*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15870*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5291:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x484c05 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2398da and fs3 == 1 and fe3 == 0xc6 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc84c05; op2val:0xc12398da;
op3val:0xe37fffc0; valaddr_reg:x3; val_offset:15873*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15873*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5292:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x484c05 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2398da and fs3 == 1 and fe3 == 0xc6 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc84c05; op2val:0xc12398da;
op3val:0xe37fffe0; valaddr_reg:x3; val_offset:15876*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15876*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5293:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x484c05 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2398da and fs3 == 1 and fe3 == 0xc6 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc84c05; op2val:0xc12398da;
op3val:0xe37ffff0; valaddr_reg:x3; val_offset:15879*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15879*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5294:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x484c05 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2398da and fs3 == 1 and fe3 == 0xc6 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc84c05; op2val:0xc12398da;
op3val:0xe37ffff8; valaddr_reg:x3; val_offset:15882*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15882*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5295:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x484c05 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2398da and fs3 == 1 and fe3 == 0xc6 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc84c05; op2val:0xc12398da;
op3val:0xe37ffffc; valaddr_reg:x3; val_offset:15885*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15885*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5296:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x484c05 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2398da and fs3 == 1 and fe3 == 0xc6 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc84c05; op2val:0xc12398da;
op3val:0xe37ffffe; valaddr_reg:x3; val_offset:15888*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15888*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5297:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x484c05 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2398da and fs3 == 1 and fe3 == 0xc6 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc84c05; op2val:0xc12398da;
op3val:0xe37fffff; valaddr_reg:x3; val_offset:15891*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15891*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5298:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x484c05 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2398da and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc84c05; op2val:0xc12398da;
op3val:0xff000001; valaddr_reg:x3; val_offset:15894*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15894*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5299:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x484c05 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2398da and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc84c05; op2val:0xc12398da;
op3val:0xff000003; valaddr_reg:x3; val_offset:15897*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15897*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5300:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x484c05 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2398da and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc84c05; op2val:0xc12398da;
op3val:0xff000007; valaddr_reg:x3; val_offset:15900*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15900*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5301:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x484c05 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2398da and fs3 == 1 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc84c05; op2val:0xc12398da;
op3val:0xff199999; valaddr_reg:x3; val_offset:15903*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15903*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5302:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x484c05 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2398da and fs3 == 1 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc84c05; op2val:0xc12398da;
op3val:0xff249249; valaddr_reg:x3; val_offset:15906*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15906*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5303:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x484c05 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2398da and fs3 == 1 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc84c05; op2val:0xc12398da;
op3val:0xff333333; valaddr_reg:x3; val_offset:15909*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15909*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5304:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x484c05 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2398da and fs3 == 1 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc84c05; op2val:0xc12398da;
op3val:0xff36db6d; valaddr_reg:x3; val_offset:15912*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15912*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5305:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x484c05 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2398da and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc84c05; op2val:0xc12398da;
op3val:0xff3bbbbb; valaddr_reg:x3; val_offset:15915*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15915*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5306:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x484c05 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2398da and fs3 == 1 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc84c05; op2val:0xc12398da;
op3val:0xff444444; valaddr_reg:x3; val_offset:15918*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15918*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5307:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x484c05 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2398da and fs3 == 1 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc84c05; op2val:0xc12398da;
op3val:0xff4ccccc; valaddr_reg:x3; val_offset:15921*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15921*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5308:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x484c05 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2398da and fs3 == 1 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc84c05; op2val:0xc12398da;
op3val:0xff5b6db6; valaddr_reg:x3; val_offset:15924*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15924*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5309:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x484c05 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2398da and fs3 == 1 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc84c05; op2val:0xc12398da;
op3val:0xff666666; valaddr_reg:x3; val_offset:15927*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15927*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5310:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x484c05 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2398da and fs3 == 1 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc84c05; op2val:0xc12398da;
op3val:0xff6db6db; valaddr_reg:x3; val_offset:15930*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15930*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5311:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x484c05 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2398da and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc84c05; op2val:0xc12398da;
op3val:0xff7ffff8; valaddr_reg:x3; val_offset:15933*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15933*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5312:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x484c05 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2398da and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc84c05; op2val:0xc12398da;
op3val:0xff7ffffc; valaddr_reg:x3; val_offset:15936*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15936*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5313:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x484c05 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2398da and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc84c05; op2val:0xc12398da;
op3val:0xff7ffffe; valaddr_reg:x3; val_offset:15939*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15939*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5314:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4a4b4c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x21fb61 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dca4b4c; op2val:0x121fb61;
op3val:0x3f800001; valaddr_reg:x3; val_offset:15942*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15942*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5315:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4a4b4c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x21fb61 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dca4b4c; op2val:0x121fb61;
op3val:0x3f800003; valaddr_reg:x3; val_offset:15945*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15945*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5316:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4a4b4c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x21fb61 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dca4b4c; op2val:0x121fb61;
op3val:0x3f800007; valaddr_reg:x3; val_offset:15948*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15948*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5317:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4a4b4c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x21fb61 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dca4b4c; op2val:0x121fb61;
op3val:0x3f999999; valaddr_reg:x3; val_offset:15951*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15951*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5318:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4a4b4c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x21fb61 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dca4b4c; op2val:0x121fb61;
op3val:0x3fa49249; valaddr_reg:x3; val_offset:15954*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15954*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5319:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4a4b4c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x21fb61 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dca4b4c; op2val:0x121fb61;
op3val:0x3fb33333; valaddr_reg:x3; val_offset:15957*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15957*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5320:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4a4b4c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x21fb61 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dca4b4c; op2val:0x121fb61;
op3val:0x3fb6db6d; valaddr_reg:x3; val_offset:15960*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15960*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5321:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4a4b4c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x21fb61 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dca4b4c; op2val:0x121fb61;
op3val:0x3fbbbbbb; valaddr_reg:x3; val_offset:15963*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15963*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5322:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4a4b4c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x21fb61 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dca4b4c; op2val:0x121fb61;
op3val:0x3fc44444; valaddr_reg:x3; val_offset:15966*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15966*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5323:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4a4b4c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x21fb61 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dca4b4c; op2val:0x121fb61;
op3val:0x3fcccccc; valaddr_reg:x3; val_offset:15969*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15969*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5324:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4a4b4c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x21fb61 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dca4b4c; op2val:0x121fb61;
op3val:0x3fdb6db6; valaddr_reg:x3; val_offset:15972*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15972*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5325:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4a4b4c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x21fb61 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dca4b4c; op2val:0x121fb61;
op3val:0x3fe66666; valaddr_reg:x3; val_offset:15975*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15975*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5326:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4a4b4c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x21fb61 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dca4b4c; op2val:0x121fb61;
op3val:0x3fedb6db; valaddr_reg:x3; val_offset:15978*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15978*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5327:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4a4b4c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x21fb61 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dca4b4c; op2val:0x121fb61;
op3val:0x3ffffff8; valaddr_reg:x3; val_offset:15981*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15981*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5328:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4a4b4c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x21fb61 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dca4b4c; op2val:0x121fb61;
op3val:0x3ffffffc; valaddr_reg:x3; val_offset:15984*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15984*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5329:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4a4b4c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x21fb61 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dca4b4c; op2val:0x121fb61;
op3val:0x3ffffffe; valaddr_reg:x3; val_offset:15987*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15987*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5330:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4a4b4c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x21fb61 and fs3 == 0 and fe3 == 0x8c and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dca4b4c; op2val:0x121fb61;
op3val:0x46000000; valaddr_reg:x3; val_offset:15990*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15990*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5331:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4a4b4c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x21fb61 and fs3 == 0 and fe3 == 0x8c and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dca4b4c; op2val:0x121fb61;
op3val:0x46000001; valaddr_reg:x3; val_offset:15993*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15993*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5332:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4a4b4c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x21fb61 and fs3 == 0 and fe3 == 0x8c and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dca4b4c; op2val:0x121fb61;
op3val:0x46000003; valaddr_reg:x3; val_offset:15996*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15996*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5333:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4a4b4c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x21fb61 and fs3 == 0 and fe3 == 0x8c and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dca4b4c; op2val:0x121fb61;
op3val:0x46000007; valaddr_reg:x3; val_offset:15999*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 15999*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5334:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4a4b4c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x21fb61 and fs3 == 0 and fe3 == 0x8c and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dca4b4c; op2val:0x121fb61;
op3val:0x4600000f; valaddr_reg:x3; val_offset:16002*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16002*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5335:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4a4b4c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x21fb61 and fs3 == 0 and fe3 == 0x8c and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dca4b4c; op2val:0x121fb61;
op3val:0x4600001f; valaddr_reg:x3; val_offset:16005*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16005*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5336:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4a4b4c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x21fb61 and fs3 == 0 and fe3 == 0x8c and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dca4b4c; op2val:0x121fb61;
op3val:0x4600003f; valaddr_reg:x3; val_offset:16008*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16008*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5337:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4a4b4c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x21fb61 and fs3 == 0 and fe3 == 0x8c and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dca4b4c; op2val:0x121fb61;
op3val:0x4600007f; valaddr_reg:x3; val_offset:16011*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16011*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5338:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4a4b4c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x21fb61 and fs3 == 0 and fe3 == 0x8c and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dca4b4c; op2val:0x121fb61;
op3val:0x460000ff; valaddr_reg:x3; val_offset:16014*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16014*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5339:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4a4b4c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x21fb61 and fs3 == 0 and fe3 == 0x8c and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dca4b4c; op2val:0x121fb61;
op3val:0x460001ff; valaddr_reg:x3; val_offset:16017*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16017*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5340:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4a4b4c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x21fb61 and fs3 == 0 and fe3 == 0x8c and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dca4b4c; op2val:0x121fb61;
op3val:0x460003ff; valaddr_reg:x3; val_offset:16020*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16020*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5341:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4a4b4c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x21fb61 and fs3 == 0 and fe3 == 0x8c and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dca4b4c; op2val:0x121fb61;
op3val:0x460007ff; valaddr_reg:x3; val_offset:16023*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16023*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5342:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4a4b4c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x21fb61 and fs3 == 0 and fe3 == 0x8c and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dca4b4c; op2val:0x121fb61;
op3val:0x46000fff; valaddr_reg:x3; val_offset:16026*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16026*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5343:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4a4b4c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x21fb61 and fs3 == 0 and fe3 == 0x8c and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dca4b4c; op2val:0x121fb61;
op3val:0x46001fff; valaddr_reg:x3; val_offset:16029*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16029*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5344:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4a4b4c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x21fb61 and fs3 == 0 and fe3 == 0x8c and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dca4b4c; op2val:0x121fb61;
op3val:0x46003fff; valaddr_reg:x3; val_offset:16032*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16032*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5345:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4a4b4c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x21fb61 and fs3 == 0 and fe3 == 0x8c and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dca4b4c; op2val:0x121fb61;
op3val:0x46007fff; valaddr_reg:x3; val_offset:16035*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16035*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5346:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4a4b4c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x21fb61 and fs3 == 0 and fe3 == 0x8c and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dca4b4c; op2val:0x121fb61;
op3val:0x4600ffff; valaddr_reg:x3; val_offset:16038*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16038*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5347:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4a4b4c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x21fb61 and fs3 == 0 and fe3 == 0x8c and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dca4b4c; op2val:0x121fb61;
op3val:0x4601ffff; valaddr_reg:x3; val_offset:16041*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16041*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5348:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4a4b4c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x21fb61 and fs3 == 0 and fe3 == 0x8c and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dca4b4c; op2val:0x121fb61;
op3val:0x4603ffff; valaddr_reg:x3; val_offset:16044*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16044*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5349:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4a4b4c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x21fb61 and fs3 == 0 and fe3 == 0x8c and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dca4b4c; op2val:0x121fb61;
op3val:0x4607ffff; valaddr_reg:x3; val_offset:16047*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16047*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5350:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4a4b4c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x21fb61 and fs3 == 0 and fe3 == 0x8c and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dca4b4c; op2val:0x121fb61;
op3val:0x460fffff; valaddr_reg:x3; val_offset:16050*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16050*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5351:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4a4b4c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x21fb61 and fs3 == 0 and fe3 == 0x8c and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dca4b4c; op2val:0x121fb61;
op3val:0x461fffff; valaddr_reg:x3; val_offset:16053*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16053*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5352:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4a4b4c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x21fb61 and fs3 == 0 and fe3 == 0x8c and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dca4b4c; op2val:0x121fb61;
op3val:0x463fffff; valaddr_reg:x3; val_offset:16056*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16056*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5353:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4a4b4c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x21fb61 and fs3 == 0 and fe3 == 0x8c and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dca4b4c; op2val:0x121fb61;
op3val:0x46400000; valaddr_reg:x3; val_offset:16059*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16059*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5354:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4a4b4c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x21fb61 and fs3 == 0 and fe3 == 0x8c and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dca4b4c; op2val:0x121fb61;
op3val:0x46600000; valaddr_reg:x3; val_offset:16062*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16062*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5355:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4a4b4c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x21fb61 and fs3 == 0 and fe3 == 0x8c and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dca4b4c; op2val:0x121fb61;
op3val:0x46700000; valaddr_reg:x3; val_offset:16065*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16065*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5356:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4a4b4c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x21fb61 and fs3 == 0 and fe3 == 0x8c and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dca4b4c; op2val:0x121fb61;
op3val:0x46780000; valaddr_reg:x3; val_offset:16068*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16068*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5357:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4a4b4c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x21fb61 and fs3 == 0 and fe3 == 0x8c and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dca4b4c; op2val:0x121fb61;
op3val:0x467c0000; valaddr_reg:x3; val_offset:16071*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16071*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5358:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4a4b4c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x21fb61 and fs3 == 0 and fe3 == 0x8c and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dca4b4c; op2val:0x121fb61;
op3val:0x467e0000; valaddr_reg:x3; val_offset:16074*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16074*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5359:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4a4b4c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x21fb61 and fs3 == 0 and fe3 == 0x8c and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dca4b4c; op2val:0x121fb61;
op3val:0x467f0000; valaddr_reg:x3; val_offset:16077*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16077*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5360:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4a4b4c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x21fb61 and fs3 == 0 and fe3 == 0x8c and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dca4b4c; op2val:0x121fb61;
op3val:0x467f8000; valaddr_reg:x3; val_offset:16080*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16080*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5361:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4a4b4c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x21fb61 and fs3 == 0 and fe3 == 0x8c and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dca4b4c; op2val:0x121fb61;
op3val:0x467fc000; valaddr_reg:x3; val_offset:16083*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16083*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5362:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4a4b4c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x21fb61 and fs3 == 0 and fe3 == 0x8c and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dca4b4c; op2val:0x121fb61;
op3val:0x467fe000; valaddr_reg:x3; val_offset:16086*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16086*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5363:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4a4b4c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x21fb61 and fs3 == 0 and fe3 == 0x8c and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dca4b4c; op2val:0x121fb61;
op3val:0x467ff000; valaddr_reg:x3; val_offset:16089*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16089*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5364:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4a4b4c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x21fb61 and fs3 == 0 and fe3 == 0x8c and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dca4b4c; op2val:0x121fb61;
op3val:0x467ff800; valaddr_reg:x3; val_offset:16092*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16092*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5365:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4a4b4c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x21fb61 and fs3 == 0 and fe3 == 0x8c and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dca4b4c; op2val:0x121fb61;
op3val:0x467ffc00; valaddr_reg:x3; val_offset:16095*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16095*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5366:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4a4b4c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x21fb61 and fs3 == 0 and fe3 == 0x8c and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dca4b4c; op2val:0x121fb61;
op3val:0x467ffe00; valaddr_reg:x3; val_offset:16098*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16098*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5367:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4a4b4c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x21fb61 and fs3 == 0 and fe3 == 0x8c and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dca4b4c; op2val:0x121fb61;
op3val:0x467fff00; valaddr_reg:x3; val_offset:16101*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16101*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5368:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4a4b4c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x21fb61 and fs3 == 0 and fe3 == 0x8c and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dca4b4c; op2val:0x121fb61;
op3val:0x467fff80; valaddr_reg:x3; val_offset:16104*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16104*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5369:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4a4b4c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x21fb61 and fs3 == 0 and fe3 == 0x8c and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dca4b4c; op2val:0x121fb61;
op3val:0x467fffc0; valaddr_reg:x3; val_offset:16107*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16107*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5370:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4a4b4c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x21fb61 and fs3 == 0 and fe3 == 0x8c and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dca4b4c; op2val:0x121fb61;
op3val:0x467fffe0; valaddr_reg:x3; val_offset:16110*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16110*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5371:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4a4b4c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x21fb61 and fs3 == 0 and fe3 == 0x8c and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dca4b4c; op2val:0x121fb61;
op3val:0x467ffff0; valaddr_reg:x3; val_offset:16113*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16113*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5372:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4a4b4c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x21fb61 and fs3 == 0 and fe3 == 0x8c and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dca4b4c; op2val:0x121fb61;
op3val:0x467ffff8; valaddr_reg:x3; val_offset:16116*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16116*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5373:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4a4b4c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x21fb61 and fs3 == 0 and fe3 == 0x8c and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dca4b4c; op2val:0x121fb61;
op3val:0x467ffffc; valaddr_reg:x3; val_offset:16119*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16119*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5374:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4a4b4c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x21fb61 and fs3 == 0 and fe3 == 0x8c and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dca4b4c; op2val:0x121fb61;
op3val:0x467ffffe; valaddr_reg:x3; val_offset:16122*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16122*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5375:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4a4b4c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x21fb61 and fs3 == 0 and fe3 == 0x8c and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dca4b4c; op2val:0x121fb61;
op3val:0x467fffff; valaddr_reg:x3; val_offset:16125*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16125*0 + 3*41*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(2110058092,32,FLEN)
NAN_BOXED(1093035163,32,FLEN)
NAN_BOXED(2137896667,32,FLEN)
NAN_BOXED(2110058092,32,FLEN)
NAN_BOXED(1093035163,32,FLEN)
NAN_BOXED(2139095032,32,FLEN)
NAN_BOXED(2110058092,32,FLEN)
NAN_BOXED(1093035163,32,FLEN)
NAN_BOXED(2139095036,32,FLEN)
NAN_BOXED(2110058092,32,FLEN)
NAN_BOXED(1093035163,32,FLEN)
NAN_BOXED(2139095038,32,FLEN)
NAN_BOXED(2110278661,32,FLEN)
NAN_BOXED(3240335578,32,FLEN)
NAN_BOXED(3808428032,32,FLEN)
NAN_BOXED(2110278661,32,FLEN)
NAN_BOXED(3240335578,32,FLEN)
NAN_BOXED(3808428033,32,FLEN)
NAN_BOXED(2110278661,32,FLEN)
NAN_BOXED(3240335578,32,FLEN)
NAN_BOXED(3808428035,32,FLEN)
NAN_BOXED(2110278661,32,FLEN)
NAN_BOXED(3240335578,32,FLEN)
NAN_BOXED(3808428039,32,FLEN)
NAN_BOXED(2110278661,32,FLEN)
NAN_BOXED(3240335578,32,FLEN)
NAN_BOXED(3808428047,32,FLEN)
NAN_BOXED(2110278661,32,FLEN)
NAN_BOXED(3240335578,32,FLEN)
NAN_BOXED(3808428063,32,FLEN)
NAN_BOXED(2110278661,32,FLEN)
NAN_BOXED(3240335578,32,FLEN)
NAN_BOXED(3808428095,32,FLEN)
NAN_BOXED(2110278661,32,FLEN)
NAN_BOXED(3240335578,32,FLEN)
NAN_BOXED(3808428159,32,FLEN)
NAN_BOXED(2110278661,32,FLEN)
NAN_BOXED(3240335578,32,FLEN)
NAN_BOXED(3808428287,32,FLEN)
NAN_BOXED(2110278661,32,FLEN)
NAN_BOXED(3240335578,32,FLEN)
NAN_BOXED(3808428543,32,FLEN)
NAN_BOXED(2110278661,32,FLEN)
NAN_BOXED(3240335578,32,FLEN)
NAN_BOXED(3808429055,32,FLEN)
NAN_BOXED(2110278661,32,FLEN)
NAN_BOXED(3240335578,32,FLEN)
NAN_BOXED(3808430079,32,FLEN)
NAN_BOXED(2110278661,32,FLEN)
NAN_BOXED(3240335578,32,FLEN)
NAN_BOXED(3808432127,32,FLEN)
NAN_BOXED(2110278661,32,FLEN)
NAN_BOXED(3240335578,32,FLEN)
NAN_BOXED(3808436223,32,FLEN)
NAN_BOXED(2110278661,32,FLEN)
NAN_BOXED(3240335578,32,FLEN)
NAN_BOXED(3808444415,32,FLEN)
NAN_BOXED(2110278661,32,FLEN)
NAN_BOXED(3240335578,32,FLEN)
NAN_BOXED(3808460799,32,FLEN)
NAN_BOXED(2110278661,32,FLEN)
NAN_BOXED(3240335578,32,FLEN)
NAN_BOXED(3808493567,32,FLEN)
NAN_BOXED(2110278661,32,FLEN)
NAN_BOXED(3240335578,32,FLEN)
NAN_BOXED(3808559103,32,FLEN)
NAN_BOXED(2110278661,32,FLEN)
NAN_BOXED(3240335578,32,FLEN)
NAN_BOXED(3808690175,32,FLEN)
NAN_BOXED(2110278661,32,FLEN)
NAN_BOXED(3240335578,32,FLEN)
NAN_BOXED(3808952319,32,FLEN)
NAN_BOXED(2110278661,32,FLEN)
NAN_BOXED(3240335578,32,FLEN)
NAN_BOXED(3809476607,32,FLEN)
NAN_BOXED(2110278661,32,FLEN)
NAN_BOXED(3240335578,32,FLEN)
NAN_BOXED(3810525183,32,FLEN)
NAN_BOXED(2110278661,32,FLEN)
NAN_BOXED(3240335578,32,FLEN)
NAN_BOXED(3812622335,32,FLEN)
NAN_BOXED(2110278661,32,FLEN)
NAN_BOXED(3240335578,32,FLEN)
NAN_BOXED(3812622336,32,FLEN)
NAN_BOXED(2110278661,32,FLEN)
NAN_BOXED(3240335578,32,FLEN)
NAN_BOXED(3814719488,32,FLEN)
NAN_BOXED(2110278661,32,FLEN)
NAN_BOXED(3240335578,32,FLEN)
NAN_BOXED(3815768064,32,FLEN)
NAN_BOXED(2110278661,32,FLEN)
NAN_BOXED(3240335578,32,FLEN)
NAN_BOXED(3816292352,32,FLEN)
NAN_BOXED(2110278661,32,FLEN)
NAN_BOXED(3240335578,32,FLEN)
NAN_BOXED(3816554496,32,FLEN)
NAN_BOXED(2110278661,32,FLEN)
NAN_BOXED(3240335578,32,FLEN)
NAN_BOXED(3816685568,32,FLEN)
NAN_BOXED(2110278661,32,FLEN)
NAN_BOXED(3240335578,32,FLEN)
NAN_BOXED(3816751104,32,FLEN)
NAN_BOXED(2110278661,32,FLEN)
NAN_BOXED(3240335578,32,FLEN)
NAN_BOXED(3816783872,32,FLEN)
NAN_BOXED(2110278661,32,FLEN)
NAN_BOXED(3240335578,32,FLEN)
NAN_BOXED(3816800256,32,FLEN)
NAN_BOXED(2110278661,32,FLEN)
NAN_BOXED(3240335578,32,FLEN)
NAN_BOXED(3816808448,32,FLEN)
NAN_BOXED(2110278661,32,FLEN)
NAN_BOXED(3240335578,32,FLEN)
NAN_BOXED(3816812544,32,FLEN)
NAN_BOXED(2110278661,32,FLEN)
NAN_BOXED(3240335578,32,FLEN)
NAN_BOXED(3816814592,32,FLEN)
NAN_BOXED(2110278661,32,FLEN)
NAN_BOXED(3240335578,32,FLEN)
NAN_BOXED(3816815616,32,FLEN)
NAN_BOXED(2110278661,32,FLEN)
NAN_BOXED(3240335578,32,FLEN)
NAN_BOXED(3816816128,32,FLEN)
NAN_BOXED(2110278661,32,FLEN)
NAN_BOXED(3240335578,32,FLEN)
NAN_BOXED(3816816384,32,FLEN)
NAN_BOXED(2110278661,32,FLEN)
NAN_BOXED(3240335578,32,FLEN)
NAN_BOXED(3816816512,32,FLEN)
NAN_BOXED(2110278661,32,FLEN)
NAN_BOXED(3240335578,32,FLEN)
NAN_BOXED(3816816576,32,FLEN)
NAN_BOXED(2110278661,32,FLEN)
NAN_BOXED(3240335578,32,FLEN)
NAN_BOXED(3816816608,32,FLEN)
NAN_BOXED(2110278661,32,FLEN)
NAN_BOXED(3240335578,32,FLEN)
NAN_BOXED(3816816624,32,FLEN)
NAN_BOXED(2110278661,32,FLEN)
NAN_BOXED(3240335578,32,FLEN)
NAN_BOXED(3816816632,32,FLEN)
NAN_BOXED(2110278661,32,FLEN)
NAN_BOXED(3240335578,32,FLEN)
NAN_BOXED(3816816636,32,FLEN)
NAN_BOXED(2110278661,32,FLEN)
NAN_BOXED(3240335578,32,FLEN)
NAN_BOXED(3816816638,32,FLEN)
NAN_BOXED(2110278661,32,FLEN)
NAN_BOXED(3240335578,32,FLEN)
NAN_BOXED(3816816639,32,FLEN)
NAN_BOXED(2110278661,32,FLEN)
NAN_BOXED(3240335578,32,FLEN)
NAN_BOXED(4278190081,32,FLEN)
NAN_BOXED(2110278661,32,FLEN)
NAN_BOXED(3240335578,32,FLEN)
NAN_BOXED(4278190083,32,FLEN)
NAN_BOXED(2110278661,32,FLEN)
NAN_BOXED(3240335578,32,FLEN)
NAN_BOXED(4278190087,32,FLEN)
NAN_BOXED(2110278661,32,FLEN)
NAN_BOXED(3240335578,32,FLEN)
NAN_BOXED(4279867801,32,FLEN)
NAN_BOXED(2110278661,32,FLEN)
NAN_BOXED(3240335578,32,FLEN)
NAN_BOXED(4280586825,32,FLEN)
NAN_BOXED(2110278661,32,FLEN)
NAN_BOXED(3240335578,32,FLEN)
NAN_BOXED(4281545523,32,FLEN)
NAN_BOXED(2110278661,32,FLEN)
NAN_BOXED(3240335578,32,FLEN)
NAN_BOXED(4281785197,32,FLEN)
NAN_BOXED(2110278661,32,FLEN)
NAN_BOXED(3240335578,32,FLEN)
NAN_BOXED(4282104763,32,FLEN)
NAN_BOXED(2110278661,32,FLEN)
NAN_BOXED(3240335578,32,FLEN)
NAN_BOXED(4282664004,32,FLEN)
NAN_BOXED(2110278661,32,FLEN)
NAN_BOXED(3240335578,32,FLEN)
NAN_BOXED(4283223244,32,FLEN)
NAN_BOXED(2110278661,32,FLEN)
NAN_BOXED(3240335578,32,FLEN)
NAN_BOXED(4284181942,32,FLEN)
NAN_BOXED(2110278661,32,FLEN)
NAN_BOXED(3240335578,32,FLEN)
NAN_BOXED(4284900966,32,FLEN)
NAN_BOXED(2110278661,32,FLEN)
NAN_BOXED(3240335578,32,FLEN)
NAN_BOXED(4285380315,32,FLEN)
NAN_BOXED(2110278661,32,FLEN)
NAN_BOXED(3240335578,32,FLEN)
NAN_BOXED(4286578680,32,FLEN)
NAN_BOXED(2110278661,32,FLEN)
NAN_BOXED(3240335578,32,FLEN)
NAN_BOXED(4286578684,32,FLEN)
NAN_BOXED(2110278661,32,FLEN)
NAN_BOXED(3240335578,32,FLEN)
NAN_BOXED(4286578686,32,FLEN)
NAN_BOXED(2110409548,32,FLEN)
NAN_BOXED(19004257,32,FLEN)
NAN_BOXED(1065353217,32,FLEN)
NAN_BOXED(2110409548,32,FLEN)
NAN_BOXED(19004257,32,FLEN)
NAN_BOXED(1065353219,32,FLEN)
NAN_BOXED(2110409548,32,FLEN)
NAN_BOXED(19004257,32,FLEN)
NAN_BOXED(1065353223,32,FLEN)
NAN_BOXED(2110409548,32,FLEN)
NAN_BOXED(19004257,32,FLEN)
NAN_BOXED(1067030937,32,FLEN)
NAN_BOXED(2110409548,32,FLEN)
NAN_BOXED(19004257,32,FLEN)
NAN_BOXED(1067749961,32,FLEN)
NAN_BOXED(2110409548,32,FLEN)
NAN_BOXED(19004257,32,FLEN)
NAN_BOXED(1068708659,32,FLEN)
NAN_BOXED(2110409548,32,FLEN)
NAN_BOXED(19004257,32,FLEN)
NAN_BOXED(1068948333,32,FLEN)
NAN_BOXED(2110409548,32,FLEN)
NAN_BOXED(19004257,32,FLEN)
NAN_BOXED(1069267899,32,FLEN)
NAN_BOXED(2110409548,32,FLEN)
NAN_BOXED(19004257,32,FLEN)
NAN_BOXED(1069827140,32,FLEN)
NAN_BOXED(2110409548,32,FLEN)
NAN_BOXED(19004257,32,FLEN)
NAN_BOXED(1070386380,32,FLEN)
NAN_BOXED(2110409548,32,FLEN)
NAN_BOXED(19004257,32,FLEN)
NAN_BOXED(1071345078,32,FLEN)
NAN_BOXED(2110409548,32,FLEN)
NAN_BOXED(19004257,32,FLEN)
NAN_BOXED(1072064102,32,FLEN)
NAN_BOXED(2110409548,32,FLEN)
NAN_BOXED(19004257,32,FLEN)
NAN_BOXED(1072543451,32,FLEN)
NAN_BOXED(2110409548,32,FLEN)
NAN_BOXED(19004257,32,FLEN)
NAN_BOXED(1073741816,32,FLEN)
NAN_BOXED(2110409548,32,FLEN)
NAN_BOXED(19004257,32,FLEN)
NAN_BOXED(1073741820,32,FLEN)
NAN_BOXED(2110409548,32,FLEN)
NAN_BOXED(19004257,32,FLEN)
NAN_BOXED(1073741822,32,FLEN)
NAN_BOXED(2110409548,32,FLEN)
NAN_BOXED(19004257,32,FLEN)
NAN_BOXED(1174405120,32,FLEN)
NAN_BOXED(2110409548,32,FLEN)
NAN_BOXED(19004257,32,FLEN)
NAN_BOXED(1174405121,32,FLEN)
NAN_BOXED(2110409548,32,FLEN)
NAN_BOXED(19004257,32,FLEN)
NAN_BOXED(1174405123,32,FLEN)
NAN_BOXED(2110409548,32,FLEN)
NAN_BOXED(19004257,32,FLEN)
NAN_BOXED(1174405127,32,FLEN)
NAN_BOXED(2110409548,32,FLEN)
NAN_BOXED(19004257,32,FLEN)
NAN_BOXED(1174405135,32,FLEN)
NAN_BOXED(2110409548,32,FLEN)
NAN_BOXED(19004257,32,FLEN)
NAN_BOXED(1174405151,32,FLEN)
NAN_BOXED(2110409548,32,FLEN)
NAN_BOXED(19004257,32,FLEN)
NAN_BOXED(1174405183,32,FLEN)
NAN_BOXED(2110409548,32,FLEN)
NAN_BOXED(19004257,32,FLEN)
NAN_BOXED(1174405247,32,FLEN)
NAN_BOXED(2110409548,32,FLEN)
NAN_BOXED(19004257,32,FLEN)
NAN_BOXED(1174405375,32,FLEN)
NAN_BOXED(2110409548,32,FLEN)
NAN_BOXED(19004257,32,FLEN)
NAN_BOXED(1174405631,32,FLEN)
NAN_BOXED(2110409548,32,FLEN)
NAN_BOXED(19004257,32,FLEN)
NAN_BOXED(1174406143,32,FLEN)
NAN_BOXED(2110409548,32,FLEN)
NAN_BOXED(19004257,32,FLEN)
NAN_BOXED(1174407167,32,FLEN)
NAN_BOXED(2110409548,32,FLEN)
NAN_BOXED(19004257,32,FLEN)
NAN_BOXED(1174409215,32,FLEN)
NAN_BOXED(2110409548,32,FLEN)
NAN_BOXED(19004257,32,FLEN)
NAN_BOXED(1174413311,32,FLEN)
NAN_BOXED(2110409548,32,FLEN)
NAN_BOXED(19004257,32,FLEN)
NAN_BOXED(1174421503,32,FLEN)
NAN_BOXED(2110409548,32,FLEN)
NAN_BOXED(19004257,32,FLEN)
NAN_BOXED(1174437887,32,FLEN)
NAN_BOXED(2110409548,32,FLEN)
NAN_BOXED(19004257,32,FLEN)
NAN_BOXED(1174470655,32,FLEN)
NAN_BOXED(2110409548,32,FLEN)
NAN_BOXED(19004257,32,FLEN)
NAN_BOXED(1174536191,32,FLEN)
NAN_BOXED(2110409548,32,FLEN)
NAN_BOXED(19004257,32,FLEN)
NAN_BOXED(1174667263,32,FLEN)
NAN_BOXED(2110409548,32,FLEN)
NAN_BOXED(19004257,32,FLEN)
NAN_BOXED(1174929407,32,FLEN)
NAN_BOXED(2110409548,32,FLEN)
NAN_BOXED(19004257,32,FLEN)
NAN_BOXED(1175453695,32,FLEN)
NAN_BOXED(2110409548,32,FLEN)
NAN_BOXED(19004257,32,FLEN)
NAN_BOXED(1176502271,32,FLEN)
NAN_BOXED(2110409548,32,FLEN)
NAN_BOXED(19004257,32,FLEN)
NAN_BOXED(1178599423,32,FLEN)
NAN_BOXED(2110409548,32,FLEN)
NAN_BOXED(19004257,32,FLEN)
NAN_BOXED(1178599424,32,FLEN)
NAN_BOXED(2110409548,32,FLEN)
NAN_BOXED(19004257,32,FLEN)
NAN_BOXED(1180696576,32,FLEN)
NAN_BOXED(2110409548,32,FLEN)
NAN_BOXED(19004257,32,FLEN)
NAN_BOXED(1181745152,32,FLEN)
NAN_BOXED(2110409548,32,FLEN)
NAN_BOXED(19004257,32,FLEN)
NAN_BOXED(1182269440,32,FLEN)
NAN_BOXED(2110409548,32,FLEN)
NAN_BOXED(19004257,32,FLEN)
NAN_BOXED(1182531584,32,FLEN)
NAN_BOXED(2110409548,32,FLEN)
NAN_BOXED(19004257,32,FLEN)
NAN_BOXED(1182662656,32,FLEN)
NAN_BOXED(2110409548,32,FLEN)
NAN_BOXED(19004257,32,FLEN)
NAN_BOXED(1182728192,32,FLEN)
NAN_BOXED(2110409548,32,FLEN)
NAN_BOXED(19004257,32,FLEN)
NAN_BOXED(1182760960,32,FLEN)
NAN_BOXED(2110409548,32,FLEN)
NAN_BOXED(19004257,32,FLEN)
NAN_BOXED(1182777344,32,FLEN)
NAN_BOXED(2110409548,32,FLEN)
NAN_BOXED(19004257,32,FLEN)
NAN_BOXED(1182785536,32,FLEN)
NAN_BOXED(2110409548,32,FLEN)
NAN_BOXED(19004257,32,FLEN)
NAN_BOXED(1182789632,32,FLEN)
NAN_BOXED(2110409548,32,FLEN)
NAN_BOXED(19004257,32,FLEN)
NAN_BOXED(1182791680,32,FLEN)
NAN_BOXED(2110409548,32,FLEN)
NAN_BOXED(19004257,32,FLEN)
NAN_BOXED(1182792704,32,FLEN)
NAN_BOXED(2110409548,32,FLEN)
NAN_BOXED(19004257,32,FLEN)
NAN_BOXED(1182793216,32,FLEN)
NAN_BOXED(2110409548,32,FLEN)
NAN_BOXED(19004257,32,FLEN)
NAN_BOXED(1182793472,32,FLEN)
NAN_BOXED(2110409548,32,FLEN)
NAN_BOXED(19004257,32,FLEN)
NAN_BOXED(1182793600,32,FLEN)
NAN_BOXED(2110409548,32,FLEN)
NAN_BOXED(19004257,32,FLEN)
NAN_BOXED(1182793664,32,FLEN)
NAN_BOXED(2110409548,32,FLEN)
NAN_BOXED(19004257,32,FLEN)
NAN_BOXED(1182793696,32,FLEN)
NAN_BOXED(2110409548,32,FLEN)
NAN_BOXED(19004257,32,FLEN)
NAN_BOXED(1182793712,32,FLEN)
NAN_BOXED(2110409548,32,FLEN)
NAN_BOXED(19004257,32,FLEN)
NAN_BOXED(1182793720,32,FLEN)
NAN_BOXED(2110409548,32,FLEN)
NAN_BOXED(19004257,32,FLEN)
NAN_BOXED(1182793724,32,FLEN)
NAN_BOXED(2110409548,32,FLEN)
NAN_BOXED(19004257,32,FLEN)
NAN_BOXED(1182793726,32,FLEN)
NAN_BOXED(2110409548,32,FLEN)
NAN_BOXED(19004257,32,FLEN)
NAN_BOXED(1182793727,32,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
