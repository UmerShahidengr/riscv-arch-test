
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 14:18:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32F/fmsub.s.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.s instruction of the RISC-V RV32F_Zicsr,RV32FD_Zicsr,RV64F_Zicsr,RV64FD_Zicsr extension for the fmsub_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF_Zicsr,RV32IFD_Zicsr,RV64IF_Zicsr,RV64IFD_Zicsr,RV32EF_Zicsr,RV32EFD_Zicsr,RV64EF_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fmsub_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*F.*);def TEST_CASE_1=True;",fmsub_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_6272:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5cc23e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x146efa and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddcc23e; op2val:0xc1146efa;
op3val:0xe28007ff; valaddr_reg:x3; val_offset:18816*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18816*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6273:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5cc23e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x146efa and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddcc23e; op2val:0xc1146efa;
op3val:0xe2800fff; valaddr_reg:x3; val_offset:18819*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18819*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6274:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5cc23e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x146efa and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddcc23e; op2val:0xc1146efa;
op3val:0xe2801fff; valaddr_reg:x3; val_offset:18822*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18822*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6275:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5cc23e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x146efa and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddcc23e; op2val:0xc1146efa;
op3val:0xe2803fff; valaddr_reg:x3; val_offset:18825*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18825*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6276:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5cc23e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x146efa and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddcc23e; op2val:0xc1146efa;
op3val:0xe2807fff; valaddr_reg:x3; val_offset:18828*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18828*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6277:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5cc23e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x146efa and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddcc23e; op2val:0xc1146efa;
op3val:0xe280ffff; valaddr_reg:x3; val_offset:18831*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18831*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6278:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5cc23e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x146efa and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddcc23e; op2val:0xc1146efa;
op3val:0xe281ffff; valaddr_reg:x3; val_offset:18834*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18834*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6279:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5cc23e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x146efa and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddcc23e; op2val:0xc1146efa;
op3val:0xe283ffff; valaddr_reg:x3; val_offset:18837*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18837*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6280:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5cc23e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x146efa and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddcc23e; op2val:0xc1146efa;
op3val:0xe287ffff; valaddr_reg:x3; val_offset:18840*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18840*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6281:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5cc23e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x146efa and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddcc23e; op2val:0xc1146efa;
op3val:0xe28fffff; valaddr_reg:x3; val_offset:18843*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18843*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6282:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5cc23e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x146efa and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddcc23e; op2val:0xc1146efa;
op3val:0xe29fffff; valaddr_reg:x3; val_offset:18846*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18846*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6283:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5cc23e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x146efa and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddcc23e; op2val:0xc1146efa;
op3val:0xe2bfffff; valaddr_reg:x3; val_offset:18849*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18849*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6284:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5cc23e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x146efa and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddcc23e; op2val:0xc1146efa;
op3val:0xe2c00000; valaddr_reg:x3; val_offset:18852*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18852*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6285:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5cc23e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x146efa and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddcc23e; op2val:0xc1146efa;
op3val:0xe2e00000; valaddr_reg:x3; val_offset:18855*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18855*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6286:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5cc23e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x146efa and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddcc23e; op2val:0xc1146efa;
op3val:0xe2f00000; valaddr_reg:x3; val_offset:18858*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18858*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6287:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5cc23e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x146efa and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddcc23e; op2val:0xc1146efa;
op3val:0xe2f80000; valaddr_reg:x3; val_offset:18861*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18861*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6288:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5cc23e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x146efa and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddcc23e; op2val:0xc1146efa;
op3val:0xe2fc0000; valaddr_reg:x3; val_offset:18864*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18864*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6289:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5cc23e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x146efa and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddcc23e; op2val:0xc1146efa;
op3val:0xe2fe0000; valaddr_reg:x3; val_offset:18867*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18867*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6290:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5cc23e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x146efa and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddcc23e; op2val:0xc1146efa;
op3val:0xe2ff0000; valaddr_reg:x3; val_offset:18870*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18870*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6291:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5cc23e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x146efa and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddcc23e; op2val:0xc1146efa;
op3val:0xe2ff8000; valaddr_reg:x3; val_offset:18873*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18873*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6292:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5cc23e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x146efa and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddcc23e; op2val:0xc1146efa;
op3val:0xe2ffc000; valaddr_reg:x3; val_offset:18876*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18876*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6293:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5cc23e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x146efa and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddcc23e; op2val:0xc1146efa;
op3val:0xe2ffe000; valaddr_reg:x3; val_offset:18879*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18879*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6294:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5cc23e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x146efa and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddcc23e; op2val:0xc1146efa;
op3val:0xe2fff000; valaddr_reg:x3; val_offset:18882*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18882*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6295:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5cc23e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x146efa and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddcc23e; op2val:0xc1146efa;
op3val:0xe2fff800; valaddr_reg:x3; val_offset:18885*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18885*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6296:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5cc23e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x146efa and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddcc23e; op2val:0xc1146efa;
op3val:0xe2fffc00; valaddr_reg:x3; val_offset:18888*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18888*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6297:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5cc23e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x146efa and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddcc23e; op2val:0xc1146efa;
op3val:0xe2fffe00; valaddr_reg:x3; val_offset:18891*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18891*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6298:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5cc23e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x146efa and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddcc23e; op2val:0xc1146efa;
op3val:0xe2ffff00; valaddr_reg:x3; val_offset:18894*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18894*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6299:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5cc23e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x146efa and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddcc23e; op2val:0xc1146efa;
op3val:0xe2ffff80; valaddr_reg:x3; val_offset:18897*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18897*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6300:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5cc23e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x146efa and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddcc23e; op2val:0xc1146efa;
op3val:0xe2ffffc0; valaddr_reg:x3; val_offset:18900*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18900*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6301:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5cc23e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x146efa and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddcc23e; op2val:0xc1146efa;
op3val:0xe2ffffe0; valaddr_reg:x3; val_offset:18903*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18903*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6302:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5cc23e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x146efa and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddcc23e; op2val:0xc1146efa;
op3val:0xe2fffff0; valaddr_reg:x3; val_offset:18906*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18906*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6303:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5cc23e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x146efa and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddcc23e; op2val:0xc1146efa;
op3val:0xe2fffff8; valaddr_reg:x3; val_offset:18909*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18909*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6304:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5cc23e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x146efa and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddcc23e; op2val:0xc1146efa;
op3val:0xe2fffffc; valaddr_reg:x3; val_offset:18912*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18912*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6305:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5cc23e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x146efa and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddcc23e; op2val:0xc1146efa;
op3val:0xe2fffffe; valaddr_reg:x3; val_offset:18915*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18915*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6306:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5cc23e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x146efa and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddcc23e; op2val:0xc1146efa;
op3val:0xe2ffffff; valaddr_reg:x3; val_offset:18918*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18918*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6307:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5cc23e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x146efa and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddcc23e; op2val:0xc1146efa;
op3val:0xff000001; valaddr_reg:x3; val_offset:18921*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18921*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6308:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5cc23e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x146efa and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddcc23e; op2val:0xc1146efa;
op3val:0xff000003; valaddr_reg:x3; val_offset:18924*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18924*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6309:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5cc23e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x146efa and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddcc23e; op2val:0xc1146efa;
op3val:0xff000007; valaddr_reg:x3; val_offset:18927*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18927*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6310:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5cc23e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x146efa and fs3 == 1 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddcc23e; op2val:0xc1146efa;
op3val:0xff199999; valaddr_reg:x3; val_offset:18930*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18930*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6311:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5cc23e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x146efa and fs3 == 1 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddcc23e; op2val:0xc1146efa;
op3val:0xff249249; valaddr_reg:x3; val_offset:18933*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18933*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6312:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5cc23e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x146efa and fs3 == 1 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddcc23e; op2val:0xc1146efa;
op3val:0xff333333; valaddr_reg:x3; val_offset:18936*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18936*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6313:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5cc23e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x146efa and fs3 == 1 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddcc23e; op2val:0xc1146efa;
op3val:0xff36db6d; valaddr_reg:x3; val_offset:18939*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18939*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6314:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5cc23e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x146efa and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddcc23e; op2val:0xc1146efa;
op3val:0xff3bbbbb; valaddr_reg:x3; val_offset:18942*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18942*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6315:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5cc23e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x146efa and fs3 == 1 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddcc23e; op2val:0xc1146efa;
op3val:0xff444444; valaddr_reg:x3; val_offset:18945*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18945*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6316:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5cc23e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x146efa and fs3 == 1 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddcc23e; op2val:0xc1146efa;
op3val:0xff4ccccc; valaddr_reg:x3; val_offset:18948*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18948*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6317:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5cc23e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x146efa and fs3 == 1 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddcc23e; op2val:0xc1146efa;
op3val:0xff5b6db6; valaddr_reg:x3; val_offset:18951*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18951*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6318:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5cc23e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x146efa and fs3 == 1 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddcc23e; op2val:0xc1146efa;
op3val:0xff666666; valaddr_reg:x3; val_offset:18954*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18954*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6319:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5cc23e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x146efa and fs3 == 1 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddcc23e; op2val:0xc1146efa;
op3val:0xff6db6db; valaddr_reg:x3; val_offset:18957*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18957*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6320:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5cc23e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x146efa and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddcc23e; op2val:0xc1146efa;
op3val:0xff7ffff8; valaddr_reg:x3; val_offset:18960*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18960*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6321:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5cc23e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x146efa and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddcc23e; op2val:0xc1146efa;
op3val:0xff7ffffc; valaddr_reg:x3; val_offset:18963*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18963*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6322:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5cc23e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x146efa and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddcc23e; op2val:0xc1146efa;
op3val:0xff7ffffe; valaddr_reg:x3; val_offset:18966*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18966*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6323:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xf0000000; valaddr_reg:x3; val_offset:18969*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18969*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6324:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xf0000001; valaddr_reg:x3; val_offset:18972*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18972*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6325:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xf0000003; valaddr_reg:x3; val_offset:18975*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18975*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6326:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xf0000007; valaddr_reg:x3; val_offset:18978*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18978*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6327:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xf000000f; valaddr_reg:x3; val_offset:18981*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18981*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6328:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xf000001f; valaddr_reg:x3; val_offset:18984*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18984*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6329:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xf000003f; valaddr_reg:x3; val_offset:18987*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18987*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6330:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xf000007f; valaddr_reg:x3; val_offset:18990*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18990*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6331:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xf00000ff; valaddr_reg:x3; val_offset:18993*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18993*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6332:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xf00001ff; valaddr_reg:x3; val_offset:18996*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18996*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6333:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xf00003ff; valaddr_reg:x3; val_offset:18999*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18999*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6334:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xf00007ff; valaddr_reg:x3; val_offset:19002*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19002*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6335:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xf0000fff; valaddr_reg:x3; val_offset:19005*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19005*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6336:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xf0001fff; valaddr_reg:x3; val_offset:19008*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19008*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6337:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xf0003fff; valaddr_reg:x3; val_offset:19011*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19011*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6338:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xf0007fff; valaddr_reg:x3; val_offset:19014*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19014*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6339:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xf000ffff; valaddr_reg:x3; val_offset:19017*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19017*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6340:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xf001ffff; valaddr_reg:x3; val_offset:19020*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19020*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6341:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xf003ffff; valaddr_reg:x3; val_offset:19023*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19023*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6342:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xf007ffff; valaddr_reg:x3; val_offset:19026*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19026*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6343:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xf00fffff; valaddr_reg:x3; val_offset:19029*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19029*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6344:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xf01fffff; valaddr_reg:x3; val_offset:19032*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19032*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6345:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xf03fffff; valaddr_reg:x3; val_offset:19035*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19035*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6346:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xf0400000; valaddr_reg:x3; val_offset:19038*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19038*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6347:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xf0600000; valaddr_reg:x3; val_offset:19041*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19041*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6348:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xf0700000; valaddr_reg:x3; val_offset:19044*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19044*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6349:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xf0780000; valaddr_reg:x3; val_offset:19047*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19047*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6350:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xf07c0000; valaddr_reg:x3; val_offset:19050*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19050*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6351:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xf07e0000; valaddr_reg:x3; val_offset:19053*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19053*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6352:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xf07f0000; valaddr_reg:x3; val_offset:19056*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19056*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6353:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xf07f8000; valaddr_reg:x3; val_offset:19059*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19059*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6354:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xf07fc000; valaddr_reg:x3; val_offset:19062*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19062*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6355:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xf07fe000; valaddr_reg:x3; val_offset:19065*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19065*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6356:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xf07ff000; valaddr_reg:x3; val_offset:19068*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19068*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6357:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xf07ff800; valaddr_reg:x3; val_offset:19071*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19071*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6358:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xf07ffc00; valaddr_reg:x3; val_offset:19074*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19074*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6359:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xf07ffe00; valaddr_reg:x3; val_offset:19077*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19077*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6360:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xf07fff00; valaddr_reg:x3; val_offset:19080*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19080*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6361:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xf07fff80; valaddr_reg:x3; val_offset:19083*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19083*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6362:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xf07fffc0; valaddr_reg:x3; val_offset:19086*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19086*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6363:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xf07fffe0; valaddr_reg:x3; val_offset:19089*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19089*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6364:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xf07ffff0; valaddr_reg:x3; val_offset:19092*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19092*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6365:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xf07ffff8; valaddr_reg:x3; val_offset:19095*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19095*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6366:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xf07ffffc; valaddr_reg:x3; val_offset:19098*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19098*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6367:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xf07ffffe; valaddr_reg:x3; val_offset:19101*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19101*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6368:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xf07fffff; valaddr_reg:x3; val_offset:19104*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19104*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6369:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xff000001; valaddr_reg:x3; val_offset:19107*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19107*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6370:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xff000003; valaddr_reg:x3; val_offset:19110*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19110*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6371:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xff000007; valaddr_reg:x3; val_offset:19113*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19113*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6372:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xff199999; valaddr_reg:x3; val_offset:19116*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19116*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6373:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xff249249; valaddr_reg:x3; val_offset:19119*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19119*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6374:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xff333333; valaddr_reg:x3; val_offset:19122*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19122*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6375:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xff36db6d; valaddr_reg:x3; val_offset:19125*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19125*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6376:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xff3bbbbb; valaddr_reg:x3; val_offset:19128*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19128*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6377:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xff444444; valaddr_reg:x3; val_offset:19131*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19131*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6378:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xff4ccccc; valaddr_reg:x3; val_offset:19134*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19134*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6379:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xff5b6db6; valaddr_reg:x3; val_offset:19137*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19137*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6380:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xff666666; valaddr_reg:x3; val_offset:19140*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19140*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6381:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xff6db6db; valaddr_reg:x3; val_offset:19143*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19143*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6382:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xff7ffff8; valaddr_reg:x3; val_offset:19146*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19146*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6383:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xff7ffffc; valaddr_reg:x3; val_offset:19149*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19149*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6384:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xff7ffffe; valaddr_reg:x3; val_offset:19152*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19152*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6385:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5e5beb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dde5beb; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:19155*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19155*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6386:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5e5beb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dde5beb; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:19158*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19158*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6387:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5e5beb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dde5beb; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:19161*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19161*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6388:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5e5beb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dde5beb; op2val:0x0;
op3val:0x199999; valaddr_reg:x3; val_offset:19164*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19164*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6389:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5e5beb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dde5beb; op2val:0x0;
op3val:0x249249; valaddr_reg:x3; val_offset:19167*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19167*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6390:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5e5beb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dde5beb; op2val:0x0;
op3val:0x333333; valaddr_reg:x3; val_offset:19170*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19170*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6391:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5e5beb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dde5beb; op2val:0x0;
op3val:0x36db6d; valaddr_reg:x3; val_offset:19173*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19173*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6392:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5e5beb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dde5beb; op2val:0x0;
op3val:0x3bbbbb; valaddr_reg:x3; val_offset:19176*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19176*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6393:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5e5beb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dde5beb; op2val:0x0;
op3val:0x444444; valaddr_reg:x3; val_offset:19179*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19179*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6394:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5e5beb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dde5beb; op2val:0x0;
op3val:0x4ccccc; valaddr_reg:x3; val_offset:19182*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19182*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6395:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5e5beb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dde5beb; op2val:0x0;
op3val:0x5b6db6; valaddr_reg:x3; val_offset:19185*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19185*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6396:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5e5beb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dde5beb; op2val:0x0;
op3val:0x666666; valaddr_reg:x3; val_offset:19188*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19188*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6397:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5e5beb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dde5beb; op2val:0x0;
op3val:0x6db6db; valaddr_reg:x3; val_offset:19191*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19191*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6398:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5e5beb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dde5beb; op2val:0x0;
op3val:0x7ffff8; valaddr_reg:x3; val_offset:19194*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19194*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6399:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5e5beb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dde5beb; op2val:0x0;
op3val:0x7ffffc; valaddr_reg:x3; val_offset:19197*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19197*0 + 3*49*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(2111619646,32,FLEN)
NAN_BOXED(3239341818,32,FLEN)
NAN_BOXED(3800041471,32,FLEN)
NAN_BOXED(2111619646,32,FLEN)
NAN_BOXED(3239341818,32,FLEN)
NAN_BOXED(3800043519,32,FLEN)
NAN_BOXED(2111619646,32,FLEN)
NAN_BOXED(3239341818,32,FLEN)
NAN_BOXED(3800047615,32,FLEN)
NAN_BOXED(2111619646,32,FLEN)
NAN_BOXED(3239341818,32,FLEN)
NAN_BOXED(3800055807,32,FLEN)
NAN_BOXED(2111619646,32,FLEN)
NAN_BOXED(3239341818,32,FLEN)
NAN_BOXED(3800072191,32,FLEN)
NAN_BOXED(2111619646,32,FLEN)
NAN_BOXED(3239341818,32,FLEN)
NAN_BOXED(3800104959,32,FLEN)
NAN_BOXED(2111619646,32,FLEN)
NAN_BOXED(3239341818,32,FLEN)
NAN_BOXED(3800170495,32,FLEN)
NAN_BOXED(2111619646,32,FLEN)
NAN_BOXED(3239341818,32,FLEN)
NAN_BOXED(3800301567,32,FLEN)
NAN_BOXED(2111619646,32,FLEN)
NAN_BOXED(3239341818,32,FLEN)
NAN_BOXED(3800563711,32,FLEN)
NAN_BOXED(2111619646,32,FLEN)
NAN_BOXED(3239341818,32,FLEN)
NAN_BOXED(3801087999,32,FLEN)
NAN_BOXED(2111619646,32,FLEN)
NAN_BOXED(3239341818,32,FLEN)
NAN_BOXED(3802136575,32,FLEN)
NAN_BOXED(2111619646,32,FLEN)
NAN_BOXED(3239341818,32,FLEN)
NAN_BOXED(3804233727,32,FLEN)
NAN_BOXED(2111619646,32,FLEN)
NAN_BOXED(3239341818,32,FLEN)
NAN_BOXED(3804233728,32,FLEN)
NAN_BOXED(2111619646,32,FLEN)
NAN_BOXED(3239341818,32,FLEN)
NAN_BOXED(3806330880,32,FLEN)
NAN_BOXED(2111619646,32,FLEN)
NAN_BOXED(3239341818,32,FLEN)
NAN_BOXED(3807379456,32,FLEN)
NAN_BOXED(2111619646,32,FLEN)
NAN_BOXED(3239341818,32,FLEN)
NAN_BOXED(3807903744,32,FLEN)
NAN_BOXED(2111619646,32,FLEN)
NAN_BOXED(3239341818,32,FLEN)
NAN_BOXED(3808165888,32,FLEN)
NAN_BOXED(2111619646,32,FLEN)
NAN_BOXED(3239341818,32,FLEN)
NAN_BOXED(3808296960,32,FLEN)
NAN_BOXED(2111619646,32,FLEN)
NAN_BOXED(3239341818,32,FLEN)
NAN_BOXED(3808362496,32,FLEN)
NAN_BOXED(2111619646,32,FLEN)
NAN_BOXED(3239341818,32,FLEN)
NAN_BOXED(3808395264,32,FLEN)
NAN_BOXED(2111619646,32,FLEN)
NAN_BOXED(3239341818,32,FLEN)
NAN_BOXED(3808411648,32,FLEN)
NAN_BOXED(2111619646,32,FLEN)
NAN_BOXED(3239341818,32,FLEN)
NAN_BOXED(3808419840,32,FLEN)
NAN_BOXED(2111619646,32,FLEN)
NAN_BOXED(3239341818,32,FLEN)
NAN_BOXED(3808423936,32,FLEN)
NAN_BOXED(2111619646,32,FLEN)
NAN_BOXED(3239341818,32,FLEN)
NAN_BOXED(3808425984,32,FLEN)
NAN_BOXED(2111619646,32,FLEN)
NAN_BOXED(3239341818,32,FLEN)
NAN_BOXED(3808427008,32,FLEN)
NAN_BOXED(2111619646,32,FLEN)
NAN_BOXED(3239341818,32,FLEN)
NAN_BOXED(3808427520,32,FLEN)
NAN_BOXED(2111619646,32,FLEN)
NAN_BOXED(3239341818,32,FLEN)
NAN_BOXED(3808427776,32,FLEN)
NAN_BOXED(2111619646,32,FLEN)
NAN_BOXED(3239341818,32,FLEN)
NAN_BOXED(3808427904,32,FLEN)
NAN_BOXED(2111619646,32,FLEN)
NAN_BOXED(3239341818,32,FLEN)
NAN_BOXED(3808427968,32,FLEN)
NAN_BOXED(2111619646,32,FLEN)
NAN_BOXED(3239341818,32,FLEN)
NAN_BOXED(3808428000,32,FLEN)
NAN_BOXED(2111619646,32,FLEN)
NAN_BOXED(3239341818,32,FLEN)
NAN_BOXED(3808428016,32,FLEN)
NAN_BOXED(2111619646,32,FLEN)
NAN_BOXED(3239341818,32,FLEN)
NAN_BOXED(3808428024,32,FLEN)
NAN_BOXED(2111619646,32,FLEN)
NAN_BOXED(3239341818,32,FLEN)
NAN_BOXED(3808428028,32,FLEN)
NAN_BOXED(2111619646,32,FLEN)
NAN_BOXED(3239341818,32,FLEN)
NAN_BOXED(3808428030,32,FLEN)
NAN_BOXED(2111619646,32,FLEN)
NAN_BOXED(3239341818,32,FLEN)
NAN_BOXED(3808428031,32,FLEN)
NAN_BOXED(2111619646,32,FLEN)
NAN_BOXED(3239341818,32,FLEN)
NAN_BOXED(4278190081,32,FLEN)
NAN_BOXED(2111619646,32,FLEN)
NAN_BOXED(3239341818,32,FLEN)
NAN_BOXED(4278190083,32,FLEN)
NAN_BOXED(2111619646,32,FLEN)
NAN_BOXED(3239341818,32,FLEN)
NAN_BOXED(4278190087,32,FLEN)
NAN_BOXED(2111619646,32,FLEN)
NAN_BOXED(3239341818,32,FLEN)
NAN_BOXED(4279867801,32,FLEN)
NAN_BOXED(2111619646,32,FLEN)
NAN_BOXED(3239341818,32,FLEN)
NAN_BOXED(4280586825,32,FLEN)
NAN_BOXED(2111619646,32,FLEN)
NAN_BOXED(3239341818,32,FLEN)
NAN_BOXED(4281545523,32,FLEN)
NAN_BOXED(2111619646,32,FLEN)
NAN_BOXED(3239341818,32,FLEN)
NAN_BOXED(4281785197,32,FLEN)
NAN_BOXED(2111619646,32,FLEN)
NAN_BOXED(3239341818,32,FLEN)
NAN_BOXED(4282104763,32,FLEN)
NAN_BOXED(2111619646,32,FLEN)
NAN_BOXED(3239341818,32,FLEN)
NAN_BOXED(4282664004,32,FLEN)
NAN_BOXED(2111619646,32,FLEN)
NAN_BOXED(3239341818,32,FLEN)
NAN_BOXED(4283223244,32,FLEN)
NAN_BOXED(2111619646,32,FLEN)
NAN_BOXED(3239341818,32,FLEN)
NAN_BOXED(4284181942,32,FLEN)
NAN_BOXED(2111619646,32,FLEN)
NAN_BOXED(3239341818,32,FLEN)
NAN_BOXED(4284900966,32,FLEN)
NAN_BOXED(2111619646,32,FLEN)
NAN_BOXED(3239341818,32,FLEN)
NAN_BOXED(4285380315,32,FLEN)
NAN_BOXED(2111619646,32,FLEN)
NAN_BOXED(3239341818,32,FLEN)
NAN_BOXED(4286578680,32,FLEN)
NAN_BOXED(2111619646,32,FLEN)
NAN_BOXED(3239341818,32,FLEN)
NAN_BOXED(4286578684,32,FLEN)
NAN_BOXED(2111619646,32,FLEN)
NAN_BOXED(3239341818,32,FLEN)
NAN_BOXED(4286578686,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4026531840,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4026531841,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4026531843,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4026531847,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4026531855,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4026531871,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4026531903,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4026531967,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4026532095,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4026532351,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4026532863,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4026533887,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4026535935,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4026540031,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4026548223,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4026564607,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4026597375,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4026662911,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4026793983,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4027056127,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4027580415,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4028628991,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4030726143,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4030726144,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4032823296,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4033871872,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4034396160,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4034658304,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4034789376,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4034854912,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4034887680,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4034904064,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4034912256,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4034916352,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4034918400,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4034919424,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4034919936,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4034920192,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4034920320,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4034920384,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4034920416,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4034920432,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4034920440,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4034920444,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4034920446,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4034920447,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4278190081,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4278190083,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4278190087,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4279867801,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4280586825,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4281545523,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4281785197,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4282104763,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4282664004,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4283223244,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4284181942,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4284900966,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4285380315,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4286578680,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4286578684,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4286578686,32,FLEN)
NAN_BOXED(2111724523,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(2111724523,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3,32,FLEN)
NAN_BOXED(2111724523,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7,32,FLEN)
NAN_BOXED(2111724523,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1677721,32,FLEN)
NAN_BOXED(2111724523,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2396745,32,FLEN)
NAN_BOXED(2111724523,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3355443,32,FLEN)
NAN_BOXED(2111724523,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3595117,32,FLEN)
NAN_BOXED(2111724523,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3914683,32,FLEN)
NAN_BOXED(2111724523,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(4473924,32,FLEN)
NAN_BOXED(2111724523,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5033164,32,FLEN)
NAN_BOXED(2111724523,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5991862,32,FLEN)
NAN_BOXED(2111724523,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(6710886,32,FLEN)
NAN_BOXED(2111724523,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7190235,32,FLEN)
NAN_BOXED(2111724523,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388600,32,FLEN)
NAN_BOXED(2111724523,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388604,32,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
