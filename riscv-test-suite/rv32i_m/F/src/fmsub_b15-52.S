
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 14:18:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32F/fmsub.s.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.s instruction of the RISC-V RV32F_Zicsr,RV32FD_Zicsr,RV64F_Zicsr,RV64FD_Zicsr extension for the fmsub_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF_Zicsr,RV32IFD_Zicsr,RV64IF_Zicsr,RV64IFD_Zicsr,RV32EF_Zicsr,RV32EFD_Zicsr,RV64EF_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fmsub_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*F.*);def TEST_CASE_1=True;",fmsub_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_6528:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x681d02 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0d2c24 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de81d02; op2val:0x10d2c24;
op3val:0x4f000007; valaddr_reg:x3; val_offset:19584*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19584*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6529:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x681d02 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0d2c24 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de81d02; op2val:0x10d2c24;
op3val:0x4f00000f; valaddr_reg:x3; val_offset:19587*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19587*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6530:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x681d02 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0d2c24 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de81d02; op2val:0x10d2c24;
op3val:0x4f00001f; valaddr_reg:x3; val_offset:19590*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19590*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6531:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x681d02 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0d2c24 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de81d02; op2val:0x10d2c24;
op3val:0x4f00003f; valaddr_reg:x3; val_offset:19593*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19593*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6532:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x681d02 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0d2c24 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de81d02; op2val:0x10d2c24;
op3val:0x4f00007f; valaddr_reg:x3; val_offset:19596*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19596*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6533:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x681d02 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0d2c24 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de81d02; op2val:0x10d2c24;
op3val:0x4f0000ff; valaddr_reg:x3; val_offset:19599*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19599*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6534:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x681d02 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0d2c24 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de81d02; op2val:0x10d2c24;
op3val:0x4f0001ff; valaddr_reg:x3; val_offset:19602*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19602*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6535:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x681d02 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0d2c24 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de81d02; op2val:0x10d2c24;
op3val:0x4f0003ff; valaddr_reg:x3; val_offset:19605*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19605*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6536:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x681d02 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0d2c24 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de81d02; op2val:0x10d2c24;
op3val:0x4f0007ff; valaddr_reg:x3; val_offset:19608*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19608*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6537:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x681d02 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0d2c24 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de81d02; op2val:0x10d2c24;
op3val:0x4f000fff; valaddr_reg:x3; val_offset:19611*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19611*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6538:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x681d02 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0d2c24 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de81d02; op2val:0x10d2c24;
op3val:0x4f001fff; valaddr_reg:x3; val_offset:19614*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19614*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6539:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x681d02 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0d2c24 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de81d02; op2val:0x10d2c24;
op3val:0x4f003fff; valaddr_reg:x3; val_offset:19617*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19617*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6540:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x681d02 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0d2c24 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de81d02; op2val:0x10d2c24;
op3val:0x4f007fff; valaddr_reg:x3; val_offset:19620*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19620*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6541:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x681d02 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0d2c24 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de81d02; op2val:0x10d2c24;
op3val:0x4f00ffff; valaddr_reg:x3; val_offset:19623*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19623*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6542:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x681d02 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0d2c24 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de81d02; op2val:0x10d2c24;
op3val:0x4f01ffff; valaddr_reg:x3; val_offset:19626*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19626*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6543:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x681d02 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0d2c24 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de81d02; op2val:0x10d2c24;
op3val:0x4f03ffff; valaddr_reg:x3; val_offset:19629*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19629*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6544:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x681d02 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0d2c24 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de81d02; op2val:0x10d2c24;
op3val:0x4f07ffff; valaddr_reg:x3; val_offset:19632*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19632*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6545:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x681d02 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0d2c24 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de81d02; op2val:0x10d2c24;
op3val:0x4f0fffff; valaddr_reg:x3; val_offset:19635*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19635*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6546:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x681d02 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0d2c24 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de81d02; op2val:0x10d2c24;
op3val:0x4f1fffff; valaddr_reg:x3; val_offset:19638*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19638*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6547:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x681d02 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0d2c24 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de81d02; op2val:0x10d2c24;
op3val:0x4f3fffff; valaddr_reg:x3; val_offset:19641*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19641*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6548:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x681d02 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0d2c24 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de81d02; op2val:0x10d2c24;
op3val:0x4f400000; valaddr_reg:x3; val_offset:19644*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19644*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6549:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x681d02 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0d2c24 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de81d02; op2val:0x10d2c24;
op3val:0x4f600000; valaddr_reg:x3; val_offset:19647*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19647*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6550:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x681d02 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0d2c24 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de81d02; op2val:0x10d2c24;
op3val:0x4f700000; valaddr_reg:x3; val_offset:19650*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19650*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6551:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x681d02 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0d2c24 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de81d02; op2val:0x10d2c24;
op3val:0x4f780000; valaddr_reg:x3; val_offset:19653*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19653*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6552:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x681d02 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0d2c24 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de81d02; op2val:0x10d2c24;
op3val:0x4f7c0000; valaddr_reg:x3; val_offset:19656*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19656*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6553:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x681d02 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0d2c24 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de81d02; op2val:0x10d2c24;
op3val:0x4f7e0000; valaddr_reg:x3; val_offset:19659*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19659*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6554:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x681d02 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0d2c24 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de81d02; op2val:0x10d2c24;
op3val:0x4f7f0000; valaddr_reg:x3; val_offset:19662*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19662*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6555:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x681d02 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0d2c24 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de81d02; op2val:0x10d2c24;
op3val:0x4f7f8000; valaddr_reg:x3; val_offset:19665*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19665*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6556:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x681d02 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0d2c24 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de81d02; op2val:0x10d2c24;
op3val:0x4f7fc000; valaddr_reg:x3; val_offset:19668*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19668*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6557:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x681d02 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0d2c24 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de81d02; op2val:0x10d2c24;
op3val:0x4f7fe000; valaddr_reg:x3; val_offset:19671*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19671*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6558:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x681d02 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0d2c24 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de81d02; op2val:0x10d2c24;
op3val:0x4f7ff000; valaddr_reg:x3; val_offset:19674*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19674*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6559:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x681d02 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0d2c24 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de81d02; op2val:0x10d2c24;
op3val:0x4f7ff800; valaddr_reg:x3; val_offset:19677*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19677*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6560:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x681d02 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0d2c24 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de81d02; op2val:0x10d2c24;
op3val:0x4f7ffc00; valaddr_reg:x3; val_offset:19680*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19680*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6561:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x681d02 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0d2c24 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de81d02; op2val:0x10d2c24;
op3val:0x4f7ffe00; valaddr_reg:x3; val_offset:19683*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19683*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6562:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x681d02 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0d2c24 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de81d02; op2val:0x10d2c24;
op3val:0x4f7fff00; valaddr_reg:x3; val_offset:19686*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19686*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6563:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x681d02 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0d2c24 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de81d02; op2val:0x10d2c24;
op3val:0x4f7fff80; valaddr_reg:x3; val_offset:19689*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19689*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6564:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x681d02 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0d2c24 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de81d02; op2val:0x10d2c24;
op3val:0x4f7fffc0; valaddr_reg:x3; val_offset:19692*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19692*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6565:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x681d02 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0d2c24 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de81d02; op2val:0x10d2c24;
op3val:0x4f7fffe0; valaddr_reg:x3; val_offset:19695*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19695*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6566:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x681d02 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0d2c24 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de81d02; op2val:0x10d2c24;
op3val:0x4f7ffff0; valaddr_reg:x3; val_offset:19698*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19698*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6567:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x681d02 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0d2c24 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de81d02; op2val:0x10d2c24;
op3val:0x4f7ffff8; valaddr_reg:x3; val_offset:19701*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19701*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6568:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x681d02 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0d2c24 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de81d02; op2val:0x10d2c24;
op3val:0x4f7ffffc; valaddr_reg:x3; val_offset:19704*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19704*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6569:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x681d02 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0d2c24 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de81d02; op2val:0x10d2c24;
op3val:0x4f7ffffe; valaddr_reg:x3; val_offset:19707*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19707*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6570:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x681d02 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0d2c24 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de81d02; op2val:0x10d2c24;
op3val:0x4f7fffff; valaddr_reg:x3; val_offset:19710*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19710*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6571:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xc0 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xe0000000; valaddr_reg:x3; val_offset:19713*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19713*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6572:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xc0 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xe0000001; valaddr_reg:x3; val_offset:19716*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19716*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6573:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xc0 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xe0000003; valaddr_reg:x3; val_offset:19719*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19719*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6574:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xc0 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xe0000007; valaddr_reg:x3; val_offset:19722*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19722*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6575:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xc0 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xe000000f; valaddr_reg:x3; val_offset:19725*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19725*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6576:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xc0 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xe000001f; valaddr_reg:x3; val_offset:19728*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19728*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6577:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xc0 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xe000003f; valaddr_reg:x3; val_offset:19731*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19731*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6578:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xc0 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xe000007f; valaddr_reg:x3; val_offset:19734*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19734*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6579:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xc0 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xe00000ff; valaddr_reg:x3; val_offset:19737*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19737*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6580:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xc0 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xe00001ff; valaddr_reg:x3; val_offset:19740*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19740*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6581:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xc0 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xe00003ff; valaddr_reg:x3; val_offset:19743*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19743*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6582:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xc0 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xe00007ff; valaddr_reg:x3; val_offset:19746*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19746*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6583:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xc0 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xe0000fff; valaddr_reg:x3; val_offset:19749*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19749*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6584:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xc0 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xe0001fff; valaddr_reg:x3; val_offset:19752*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19752*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6585:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xc0 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xe0003fff; valaddr_reg:x3; val_offset:19755*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19755*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6586:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xc0 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xe0007fff; valaddr_reg:x3; val_offset:19758*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19758*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6587:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xc0 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xe000ffff; valaddr_reg:x3; val_offset:19761*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19761*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6588:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xc0 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xe001ffff; valaddr_reg:x3; val_offset:19764*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19764*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6589:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xc0 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xe003ffff; valaddr_reg:x3; val_offset:19767*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19767*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6590:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xc0 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xe007ffff; valaddr_reg:x3; val_offset:19770*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19770*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6591:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xc0 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xe00fffff; valaddr_reg:x3; val_offset:19773*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19773*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6592:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xc0 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xe01fffff; valaddr_reg:x3; val_offset:19776*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19776*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6593:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xc0 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xe03fffff; valaddr_reg:x3; val_offset:19779*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19779*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6594:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xc0 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xe0400000; valaddr_reg:x3; val_offset:19782*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19782*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6595:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xc0 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xe0600000; valaddr_reg:x3; val_offset:19785*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19785*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6596:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xc0 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xe0700000; valaddr_reg:x3; val_offset:19788*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19788*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6597:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xc0 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xe0780000; valaddr_reg:x3; val_offset:19791*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19791*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6598:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xc0 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xe07c0000; valaddr_reg:x3; val_offset:19794*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19794*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6599:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xc0 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xe07e0000; valaddr_reg:x3; val_offset:19797*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19797*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6600:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xc0 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xe07f0000; valaddr_reg:x3; val_offset:19800*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19800*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6601:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xc0 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xe07f8000; valaddr_reg:x3; val_offset:19803*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19803*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6602:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xc0 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xe07fc000; valaddr_reg:x3; val_offset:19806*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19806*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6603:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xc0 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xe07fe000; valaddr_reg:x3; val_offset:19809*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19809*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6604:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xc0 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xe07ff000; valaddr_reg:x3; val_offset:19812*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19812*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6605:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xc0 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xe07ff800; valaddr_reg:x3; val_offset:19815*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19815*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6606:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xc0 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xe07ffc00; valaddr_reg:x3; val_offset:19818*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19818*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6607:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xc0 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xe07ffe00; valaddr_reg:x3; val_offset:19821*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19821*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6608:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xc0 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xe07fff00; valaddr_reg:x3; val_offset:19824*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19824*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6609:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xc0 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xe07fff80; valaddr_reg:x3; val_offset:19827*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19827*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6610:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xc0 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xe07fffc0; valaddr_reg:x3; val_offset:19830*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19830*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6611:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xc0 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xe07fffe0; valaddr_reg:x3; val_offset:19833*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19833*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6612:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xc0 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xe07ffff0; valaddr_reg:x3; val_offset:19836*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19836*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6613:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xc0 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xe07ffff8; valaddr_reg:x3; val_offset:19839*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19839*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6614:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xc0 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xe07ffffc; valaddr_reg:x3; val_offset:19842*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19842*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6615:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xc0 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xe07ffffe; valaddr_reg:x3; val_offset:19845*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19845*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6616:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xc0 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xe07fffff; valaddr_reg:x3; val_offset:19848*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19848*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6617:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xff000001; valaddr_reg:x3; val_offset:19851*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19851*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6618:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xff000003; valaddr_reg:x3; val_offset:19854*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19854*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6619:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xff000007; valaddr_reg:x3; val_offset:19857*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19857*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6620:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xff199999; valaddr_reg:x3; val_offset:19860*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19860*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6621:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xff249249; valaddr_reg:x3; val_offset:19863*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19863*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6622:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xff333333; valaddr_reg:x3; val_offset:19866*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19866*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6623:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xff36db6d; valaddr_reg:x3; val_offset:19869*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19869*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6624:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xff3bbbbb; valaddr_reg:x3; val_offset:19872*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19872*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6625:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xff444444; valaddr_reg:x3; val_offset:19875*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19875*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6626:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xff4ccccc; valaddr_reg:x3; val_offset:19878*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19878*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6627:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xff5b6db6; valaddr_reg:x3; val_offset:19881*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19881*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6628:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xff666666; valaddr_reg:x3; val_offset:19884*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19884*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6629:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xff6db6db; valaddr_reg:x3; val_offset:19887*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19887*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6630:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xff7ffff8; valaddr_reg:x3; val_offset:19890*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19890*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6631:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xff7ffffc; valaddr_reg:x3; val_offset:19893*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19893*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6632:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xff7ffffe; valaddr_reg:x3; val_offset:19896*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19896*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6633:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6bb52d and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0b0506 and fs3 == 0 and fe3 == 0x77 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7debb52d; op2val:0x10b0506;
op3val:0x3b800000; valaddr_reg:x3; val_offset:19899*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19899*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6634:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6bb52d and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0b0506 and fs3 == 0 and fe3 == 0x77 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7debb52d; op2val:0x10b0506;
op3val:0x3b800001; valaddr_reg:x3; val_offset:19902*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19902*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6635:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6bb52d and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0b0506 and fs3 == 0 and fe3 == 0x77 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7debb52d; op2val:0x10b0506;
op3val:0x3b800003; valaddr_reg:x3; val_offset:19905*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19905*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6636:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6bb52d and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0b0506 and fs3 == 0 and fe3 == 0x77 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7debb52d; op2val:0x10b0506;
op3val:0x3b800007; valaddr_reg:x3; val_offset:19908*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19908*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6637:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6bb52d and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0b0506 and fs3 == 0 and fe3 == 0x77 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7debb52d; op2val:0x10b0506;
op3val:0x3b80000f; valaddr_reg:x3; val_offset:19911*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19911*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6638:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6bb52d and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0b0506 and fs3 == 0 and fe3 == 0x77 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7debb52d; op2val:0x10b0506;
op3val:0x3b80001f; valaddr_reg:x3; val_offset:19914*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19914*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6639:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6bb52d and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0b0506 and fs3 == 0 and fe3 == 0x77 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7debb52d; op2val:0x10b0506;
op3val:0x3b80003f; valaddr_reg:x3; val_offset:19917*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19917*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6640:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6bb52d and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0b0506 and fs3 == 0 and fe3 == 0x77 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7debb52d; op2val:0x10b0506;
op3val:0x3b80007f; valaddr_reg:x3; val_offset:19920*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19920*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6641:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6bb52d and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0b0506 and fs3 == 0 and fe3 == 0x77 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7debb52d; op2val:0x10b0506;
op3val:0x3b8000ff; valaddr_reg:x3; val_offset:19923*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19923*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6642:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6bb52d and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0b0506 and fs3 == 0 and fe3 == 0x77 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7debb52d; op2val:0x10b0506;
op3val:0x3b8001ff; valaddr_reg:x3; val_offset:19926*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19926*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6643:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6bb52d and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0b0506 and fs3 == 0 and fe3 == 0x77 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7debb52d; op2val:0x10b0506;
op3val:0x3b8003ff; valaddr_reg:x3; val_offset:19929*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19929*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6644:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6bb52d and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0b0506 and fs3 == 0 and fe3 == 0x77 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7debb52d; op2val:0x10b0506;
op3val:0x3b8007ff; valaddr_reg:x3; val_offset:19932*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19932*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6645:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6bb52d and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0b0506 and fs3 == 0 and fe3 == 0x77 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7debb52d; op2val:0x10b0506;
op3val:0x3b800fff; valaddr_reg:x3; val_offset:19935*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19935*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6646:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6bb52d and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0b0506 and fs3 == 0 and fe3 == 0x77 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7debb52d; op2val:0x10b0506;
op3val:0x3b801fff; valaddr_reg:x3; val_offset:19938*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19938*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6647:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6bb52d and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0b0506 and fs3 == 0 and fe3 == 0x77 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7debb52d; op2val:0x10b0506;
op3val:0x3b803fff; valaddr_reg:x3; val_offset:19941*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19941*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6648:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6bb52d and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0b0506 and fs3 == 0 and fe3 == 0x77 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7debb52d; op2val:0x10b0506;
op3val:0x3b807fff; valaddr_reg:x3; val_offset:19944*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19944*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6649:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6bb52d and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0b0506 and fs3 == 0 and fe3 == 0x77 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7debb52d; op2val:0x10b0506;
op3val:0x3b80ffff; valaddr_reg:x3; val_offset:19947*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19947*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6650:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6bb52d and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0b0506 and fs3 == 0 and fe3 == 0x77 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7debb52d; op2val:0x10b0506;
op3val:0x3b81ffff; valaddr_reg:x3; val_offset:19950*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19950*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6651:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6bb52d and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0b0506 and fs3 == 0 and fe3 == 0x77 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7debb52d; op2val:0x10b0506;
op3val:0x3b83ffff; valaddr_reg:x3; val_offset:19953*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19953*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6652:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6bb52d and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0b0506 and fs3 == 0 and fe3 == 0x77 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7debb52d; op2val:0x10b0506;
op3val:0x3b87ffff; valaddr_reg:x3; val_offset:19956*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19956*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6653:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6bb52d and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0b0506 and fs3 == 0 and fe3 == 0x77 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7debb52d; op2val:0x10b0506;
op3val:0x3b8fffff; valaddr_reg:x3; val_offset:19959*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19959*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6654:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6bb52d and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0b0506 and fs3 == 0 and fe3 == 0x77 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7debb52d; op2val:0x10b0506;
op3val:0x3b9fffff; valaddr_reg:x3; val_offset:19962*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19962*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6655:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6bb52d and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0b0506 and fs3 == 0 and fe3 == 0x77 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7debb52d; op2val:0x10b0506;
op3val:0x3bbfffff; valaddr_reg:x3; val_offset:19965*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19965*0 + 3*51*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(2112363778,32,FLEN)
NAN_BOXED(17640484,32,FLEN)
NAN_BOXED(1325400071,32,FLEN)
NAN_BOXED(2112363778,32,FLEN)
NAN_BOXED(17640484,32,FLEN)
NAN_BOXED(1325400079,32,FLEN)
NAN_BOXED(2112363778,32,FLEN)
NAN_BOXED(17640484,32,FLEN)
NAN_BOXED(1325400095,32,FLEN)
NAN_BOXED(2112363778,32,FLEN)
NAN_BOXED(17640484,32,FLEN)
NAN_BOXED(1325400127,32,FLEN)
NAN_BOXED(2112363778,32,FLEN)
NAN_BOXED(17640484,32,FLEN)
NAN_BOXED(1325400191,32,FLEN)
NAN_BOXED(2112363778,32,FLEN)
NAN_BOXED(17640484,32,FLEN)
NAN_BOXED(1325400319,32,FLEN)
NAN_BOXED(2112363778,32,FLEN)
NAN_BOXED(17640484,32,FLEN)
NAN_BOXED(1325400575,32,FLEN)
NAN_BOXED(2112363778,32,FLEN)
NAN_BOXED(17640484,32,FLEN)
NAN_BOXED(1325401087,32,FLEN)
NAN_BOXED(2112363778,32,FLEN)
NAN_BOXED(17640484,32,FLEN)
NAN_BOXED(1325402111,32,FLEN)
NAN_BOXED(2112363778,32,FLEN)
NAN_BOXED(17640484,32,FLEN)
NAN_BOXED(1325404159,32,FLEN)
NAN_BOXED(2112363778,32,FLEN)
NAN_BOXED(17640484,32,FLEN)
NAN_BOXED(1325408255,32,FLEN)
NAN_BOXED(2112363778,32,FLEN)
NAN_BOXED(17640484,32,FLEN)
NAN_BOXED(1325416447,32,FLEN)
NAN_BOXED(2112363778,32,FLEN)
NAN_BOXED(17640484,32,FLEN)
NAN_BOXED(1325432831,32,FLEN)
NAN_BOXED(2112363778,32,FLEN)
NAN_BOXED(17640484,32,FLEN)
NAN_BOXED(1325465599,32,FLEN)
NAN_BOXED(2112363778,32,FLEN)
NAN_BOXED(17640484,32,FLEN)
NAN_BOXED(1325531135,32,FLEN)
NAN_BOXED(2112363778,32,FLEN)
NAN_BOXED(17640484,32,FLEN)
NAN_BOXED(1325662207,32,FLEN)
NAN_BOXED(2112363778,32,FLEN)
NAN_BOXED(17640484,32,FLEN)
NAN_BOXED(1325924351,32,FLEN)
NAN_BOXED(2112363778,32,FLEN)
NAN_BOXED(17640484,32,FLEN)
NAN_BOXED(1326448639,32,FLEN)
NAN_BOXED(2112363778,32,FLEN)
NAN_BOXED(17640484,32,FLEN)
NAN_BOXED(1327497215,32,FLEN)
NAN_BOXED(2112363778,32,FLEN)
NAN_BOXED(17640484,32,FLEN)
NAN_BOXED(1329594367,32,FLEN)
NAN_BOXED(2112363778,32,FLEN)
NAN_BOXED(17640484,32,FLEN)
NAN_BOXED(1329594368,32,FLEN)
NAN_BOXED(2112363778,32,FLEN)
NAN_BOXED(17640484,32,FLEN)
NAN_BOXED(1331691520,32,FLEN)
NAN_BOXED(2112363778,32,FLEN)
NAN_BOXED(17640484,32,FLEN)
NAN_BOXED(1332740096,32,FLEN)
NAN_BOXED(2112363778,32,FLEN)
NAN_BOXED(17640484,32,FLEN)
NAN_BOXED(1333264384,32,FLEN)
NAN_BOXED(2112363778,32,FLEN)
NAN_BOXED(17640484,32,FLEN)
NAN_BOXED(1333526528,32,FLEN)
NAN_BOXED(2112363778,32,FLEN)
NAN_BOXED(17640484,32,FLEN)
NAN_BOXED(1333657600,32,FLEN)
NAN_BOXED(2112363778,32,FLEN)
NAN_BOXED(17640484,32,FLEN)
NAN_BOXED(1333723136,32,FLEN)
NAN_BOXED(2112363778,32,FLEN)
NAN_BOXED(17640484,32,FLEN)
NAN_BOXED(1333755904,32,FLEN)
NAN_BOXED(2112363778,32,FLEN)
NAN_BOXED(17640484,32,FLEN)
NAN_BOXED(1333772288,32,FLEN)
NAN_BOXED(2112363778,32,FLEN)
NAN_BOXED(17640484,32,FLEN)
NAN_BOXED(1333780480,32,FLEN)
NAN_BOXED(2112363778,32,FLEN)
NAN_BOXED(17640484,32,FLEN)
NAN_BOXED(1333784576,32,FLEN)
NAN_BOXED(2112363778,32,FLEN)
NAN_BOXED(17640484,32,FLEN)
NAN_BOXED(1333786624,32,FLEN)
NAN_BOXED(2112363778,32,FLEN)
NAN_BOXED(17640484,32,FLEN)
NAN_BOXED(1333787648,32,FLEN)
NAN_BOXED(2112363778,32,FLEN)
NAN_BOXED(17640484,32,FLEN)
NAN_BOXED(1333788160,32,FLEN)
NAN_BOXED(2112363778,32,FLEN)
NAN_BOXED(17640484,32,FLEN)
NAN_BOXED(1333788416,32,FLEN)
NAN_BOXED(2112363778,32,FLEN)
NAN_BOXED(17640484,32,FLEN)
NAN_BOXED(1333788544,32,FLEN)
NAN_BOXED(2112363778,32,FLEN)
NAN_BOXED(17640484,32,FLEN)
NAN_BOXED(1333788608,32,FLEN)
NAN_BOXED(2112363778,32,FLEN)
NAN_BOXED(17640484,32,FLEN)
NAN_BOXED(1333788640,32,FLEN)
NAN_BOXED(2112363778,32,FLEN)
NAN_BOXED(17640484,32,FLEN)
NAN_BOXED(1333788656,32,FLEN)
NAN_BOXED(2112363778,32,FLEN)
NAN_BOXED(17640484,32,FLEN)
NAN_BOXED(1333788664,32,FLEN)
NAN_BOXED(2112363778,32,FLEN)
NAN_BOXED(17640484,32,FLEN)
NAN_BOXED(1333788668,32,FLEN)
NAN_BOXED(2112363778,32,FLEN)
NAN_BOXED(17640484,32,FLEN)
NAN_BOXED(1333788670,32,FLEN)
NAN_BOXED(2112363778,32,FLEN)
NAN_BOXED(17640484,32,FLEN)
NAN_BOXED(1333788671,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(3758096384,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(3758096385,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(3758096387,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(3758096391,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(3758096399,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(3758096415,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(3758096447,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(3758096511,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(3758096639,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(3758096895,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(3758097407,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(3758098431,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(3758100479,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(3758104575,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(3758112767,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(3758129151,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(3758161919,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(3758227455,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(3758358527,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(3758620671,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(3759144959,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(3760193535,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(3762290687,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(3762290688,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(3764387840,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(3765436416,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(3765960704,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(3766222848,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(3766353920,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(3766419456,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(3766452224,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(3766468608,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(3766476800,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(3766480896,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(3766482944,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(3766483968,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(3766484480,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(3766484736,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(3766484864,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(3766484928,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(3766484960,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(3766484976,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(3766484984,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(3766484988,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(3766484990,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(3766484991,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(4278190081,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(4278190083,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(4278190087,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(4279867801,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(4280586825,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(4281545523,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(4281785197,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(4282104763,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(4282664004,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(4283223244,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(4284181942,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(4284900966,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(4285380315,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(4286578680,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(4286578684,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(4286578686,32,FLEN)
NAN_BOXED(2112599341,32,FLEN)
NAN_BOXED(17499398,32,FLEN)
NAN_BOXED(998244352,32,FLEN)
NAN_BOXED(2112599341,32,FLEN)
NAN_BOXED(17499398,32,FLEN)
NAN_BOXED(998244353,32,FLEN)
NAN_BOXED(2112599341,32,FLEN)
NAN_BOXED(17499398,32,FLEN)
NAN_BOXED(998244355,32,FLEN)
NAN_BOXED(2112599341,32,FLEN)
NAN_BOXED(17499398,32,FLEN)
NAN_BOXED(998244359,32,FLEN)
NAN_BOXED(2112599341,32,FLEN)
NAN_BOXED(17499398,32,FLEN)
NAN_BOXED(998244367,32,FLEN)
NAN_BOXED(2112599341,32,FLEN)
NAN_BOXED(17499398,32,FLEN)
NAN_BOXED(998244383,32,FLEN)
NAN_BOXED(2112599341,32,FLEN)
NAN_BOXED(17499398,32,FLEN)
NAN_BOXED(998244415,32,FLEN)
NAN_BOXED(2112599341,32,FLEN)
NAN_BOXED(17499398,32,FLEN)
NAN_BOXED(998244479,32,FLEN)
NAN_BOXED(2112599341,32,FLEN)
NAN_BOXED(17499398,32,FLEN)
NAN_BOXED(998244607,32,FLEN)
NAN_BOXED(2112599341,32,FLEN)
NAN_BOXED(17499398,32,FLEN)
NAN_BOXED(998244863,32,FLEN)
NAN_BOXED(2112599341,32,FLEN)
NAN_BOXED(17499398,32,FLEN)
NAN_BOXED(998245375,32,FLEN)
NAN_BOXED(2112599341,32,FLEN)
NAN_BOXED(17499398,32,FLEN)
NAN_BOXED(998246399,32,FLEN)
NAN_BOXED(2112599341,32,FLEN)
NAN_BOXED(17499398,32,FLEN)
NAN_BOXED(998248447,32,FLEN)
NAN_BOXED(2112599341,32,FLEN)
NAN_BOXED(17499398,32,FLEN)
NAN_BOXED(998252543,32,FLEN)
NAN_BOXED(2112599341,32,FLEN)
NAN_BOXED(17499398,32,FLEN)
NAN_BOXED(998260735,32,FLEN)
NAN_BOXED(2112599341,32,FLEN)
NAN_BOXED(17499398,32,FLEN)
NAN_BOXED(998277119,32,FLEN)
NAN_BOXED(2112599341,32,FLEN)
NAN_BOXED(17499398,32,FLEN)
NAN_BOXED(998309887,32,FLEN)
NAN_BOXED(2112599341,32,FLEN)
NAN_BOXED(17499398,32,FLEN)
NAN_BOXED(998375423,32,FLEN)
NAN_BOXED(2112599341,32,FLEN)
NAN_BOXED(17499398,32,FLEN)
NAN_BOXED(998506495,32,FLEN)
NAN_BOXED(2112599341,32,FLEN)
NAN_BOXED(17499398,32,FLEN)
NAN_BOXED(998768639,32,FLEN)
NAN_BOXED(2112599341,32,FLEN)
NAN_BOXED(17499398,32,FLEN)
NAN_BOXED(999292927,32,FLEN)
NAN_BOXED(2112599341,32,FLEN)
NAN_BOXED(17499398,32,FLEN)
NAN_BOXED(1000341503,32,FLEN)
NAN_BOXED(2112599341,32,FLEN)
NAN_BOXED(17499398,32,FLEN)
NAN_BOXED(1002438655,32,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
