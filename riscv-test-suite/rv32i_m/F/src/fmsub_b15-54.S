
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 14:18:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32F/fmsub.s.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.s instruction of the RISC-V RV32F_Zicsr,RV32FD_Zicsr,RV64F_Zicsr,RV64FD_Zicsr extension for the fmsub_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF_Zicsr,RV32IFD_Zicsr,RV64IF_Zicsr,RV64IFD_Zicsr,RV32EF_Zicsr,RV32EFD_Zicsr,RV64EF_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fmsub_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*F.*);def TEST_CASE_1=True;",fmsub_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_6784:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x703aca and fs2 == 1 and fe2 == 0x02 and fm2 == 0x08671e and fs3 == 1 and fe3 == 0x8a and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df03aca; op2val:0x8108671e;
op3val:0xc50007ff; valaddr_reg:x3; val_offset:20352*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20352*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6785:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x703aca and fs2 == 1 and fe2 == 0x02 and fm2 == 0x08671e and fs3 == 1 and fe3 == 0x8a and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df03aca; op2val:0x8108671e;
op3val:0xc5000fff; valaddr_reg:x3; val_offset:20355*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20355*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6786:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x703aca and fs2 == 1 and fe2 == 0x02 and fm2 == 0x08671e and fs3 == 1 and fe3 == 0x8a and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df03aca; op2val:0x8108671e;
op3val:0xc5001fff; valaddr_reg:x3; val_offset:20358*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20358*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6787:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x703aca and fs2 == 1 and fe2 == 0x02 and fm2 == 0x08671e and fs3 == 1 and fe3 == 0x8a and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df03aca; op2val:0x8108671e;
op3val:0xc5003fff; valaddr_reg:x3; val_offset:20361*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20361*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6788:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x703aca and fs2 == 1 and fe2 == 0x02 and fm2 == 0x08671e and fs3 == 1 and fe3 == 0x8a and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df03aca; op2val:0x8108671e;
op3val:0xc5007fff; valaddr_reg:x3; val_offset:20364*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20364*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6789:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x703aca and fs2 == 1 and fe2 == 0x02 and fm2 == 0x08671e and fs3 == 1 and fe3 == 0x8a and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df03aca; op2val:0x8108671e;
op3val:0xc500ffff; valaddr_reg:x3; val_offset:20367*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20367*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6790:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x703aca and fs2 == 1 and fe2 == 0x02 and fm2 == 0x08671e and fs3 == 1 and fe3 == 0x8a and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df03aca; op2val:0x8108671e;
op3val:0xc501ffff; valaddr_reg:x3; val_offset:20370*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20370*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6791:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x703aca and fs2 == 1 and fe2 == 0x02 and fm2 == 0x08671e and fs3 == 1 and fe3 == 0x8a and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df03aca; op2val:0x8108671e;
op3val:0xc503ffff; valaddr_reg:x3; val_offset:20373*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20373*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6792:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x703aca and fs2 == 1 and fe2 == 0x02 and fm2 == 0x08671e and fs3 == 1 and fe3 == 0x8a and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df03aca; op2val:0x8108671e;
op3val:0xc507ffff; valaddr_reg:x3; val_offset:20376*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20376*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6793:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x703aca and fs2 == 1 and fe2 == 0x02 and fm2 == 0x08671e and fs3 == 1 and fe3 == 0x8a and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df03aca; op2val:0x8108671e;
op3val:0xc50fffff; valaddr_reg:x3; val_offset:20379*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20379*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6794:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x703aca and fs2 == 1 and fe2 == 0x02 and fm2 == 0x08671e and fs3 == 1 and fe3 == 0x8a and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df03aca; op2val:0x8108671e;
op3val:0xc51fffff; valaddr_reg:x3; val_offset:20382*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20382*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6795:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x703aca and fs2 == 1 and fe2 == 0x02 and fm2 == 0x08671e and fs3 == 1 and fe3 == 0x8a and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df03aca; op2val:0x8108671e;
op3val:0xc53fffff; valaddr_reg:x3; val_offset:20385*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20385*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6796:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x703aca and fs2 == 1 and fe2 == 0x02 and fm2 == 0x08671e and fs3 == 1 and fe3 == 0x8a and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df03aca; op2val:0x8108671e;
op3val:0xc5400000; valaddr_reg:x3; val_offset:20388*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20388*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6797:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x703aca and fs2 == 1 and fe2 == 0x02 and fm2 == 0x08671e and fs3 == 1 and fe3 == 0x8a and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df03aca; op2val:0x8108671e;
op3val:0xc5600000; valaddr_reg:x3; val_offset:20391*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20391*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6798:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x703aca and fs2 == 1 and fe2 == 0x02 and fm2 == 0x08671e and fs3 == 1 and fe3 == 0x8a and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df03aca; op2val:0x8108671e;
op3val:0xc5700000; valaddr_reg:x3; val_offset:20394*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20394*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6799:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x703aca and fs2 == 1 and fe2 == 0x02 and fm2 == 0x08671e and fs3 == 1 and fe3 == 0x8a and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df03aca; op2val:0x8108671e;
op3val:0xc5780000; valaddr_reg:x3; val_offset:20397*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20397*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6800:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x703aca and fs2 == 1 and fe2 == 0x02 and fm2 == 0x08671e and fs3 == 1 and fe3 == 0x8a and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df03aca; op2val:0x8108671e;
op3val:0xc57c0000; valaddr_reg:x3; val_offset:20400*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20400*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6801:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x703aca and fs2 == 1 and fe2 == 0x02 and fm2 == 0x08671e and fs3 == 1 and fe3 == 0x8a and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df03aca; op2val:0x8108671e;
op3val:0xc57e0000; valaddr_reg:x3; val_offset:20403*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20403*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6802:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x703aca and fs2 == 1 and fe2 == 0x02 and fm2 == 0x08671e and fs3 == 1 and fe3 == 0x8a and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df03aca; op2val:0x8108671e;
op3val:0xc57f0000; valaddr_reg:x3; val_offset:20406*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20406*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6803:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x703aca and fs2 == 1 and fe2 == 0x02 and fm2 == 0x08671e and fs3 == 1 and fe3 == 0x8a and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df03aca; op2val:0x8108671e;
op3val:0xc57f8000; valaddr_reg:x3; val_offset:20409*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20409*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6804:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x703aca and fs2 == 1 and fe2 == 0x02 and fm2 == 0x08671e and fs3 == 1 and fe3 == 0x8a and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df03aca; op2val:0x8108671e;
op3val:0xc57fc000; valaddr_reg:x3; val_offset:20412*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20412*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6805:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x703aca and fs2 == 1 and fe2 == 0x02 and fm2 == 0x08671e and fs3 == 1 and fe3 == 0x8a and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df03aca; op2val:0x8108671e;
op3val:0xc57fe000; valaddr_reg:x3; val_offset:20415*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20415*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6806:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x703aca and fs2 == 1 and fe2 == 0x02 and fm2 == 0x08671e and fs3 == 1 and fe3 == 0x8a and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df03aca; op2val:0x8108671e;
op3val:0xc57ff000; valaddr_reg:x3; val_offset:20418*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20418*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6807:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x703aca and fs2 == 1 and fe2 == 0x02 and fm2 == 0x08671e and fs3 == 1 and fe3 == 0x8a and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df03aca; op2val:0x8108671e;
op3val:0xc57ff800; valaddr_reg:x3; val_offset:20421*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20421*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6808:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x703aca and fs2 == 1 and fe2 == 0x02 and fm2 == 0x08671e and fs3 == 1 and fe3 == 0x8a and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df03aca; op2val:0x8108671e;
op3val:0xc57ffc00; valaddr_reg:x3; val_offset:20424*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20424*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6809:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x703aca and fs2 == 1 and fe2 == 0x02 and fm2 == 0x08671e and fs3 == 1 and fe3 == 0x8a and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df03aca; op2val:0x8108671e;
op3val:0xc57ffe00; valaddr_reg:x3; val_offset:20427*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20427*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6810:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x703aca and fs2 == 1 and fe2 == 0x02 and fm2 == 0x08671e and fs3 == 1 and fe3 == 0x8a and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df03aca; op2val:0x8108671e;
op3val:0xc57fff00; valaddr_reg:x3; val_offset:20430*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20430*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6811:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x703aca and fs2 == 1 and fe2 == 0x02 and fm2 == 0x08671e and fs3 == 1 and fe3 == 0x8a and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df03aca; op2val:0x8108671e;
op3val:0xc57fff80; valaddr_reg:x3; val_offset:20433*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20433*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6812:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x703aca and fs2 == 1 and fe2 == 0x02 and fm2 == 0x08671e and fs3 == 1 and fe3 == 0x8a and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df03aca; op2val:0x8108671e;
op3val:0xc57fffc0; valaddr_reg:x3; val_offset:20436*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20436*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6813:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x703aca and fs2 == 1 and fe2 == 0x02 and fm2 == 0x08671e and fs3 == 1 and fe3 == 0x8a and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df03aca; op2val:0x8108671e;
op3val:0xc57fffe0; valaddr_reg:x3; val_offset:20439*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20439*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6814:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x703aca and fs2 == 1 and fe2 == 0x02 and fm2 == 0x08671e and fs3 == 1 and fe3 == 0x8a and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df03aca; op2val:0x8108671e;
op3val:0xc57ffff0; valaddr_reg:x3; val_offset:20442*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20442*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6815:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x703aca and fs2 == 1 and fe2 == 0x02 and fm2 == 0x08671e and fs3 == 1 and fe3 == 0x8a and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df03aca; op2val:0x8108671e;
op3val:0xc57ffff8; valaddr_reg:x3; val_offset:20445*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20445*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6816:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x703aca and fs2 == 1 and fe2 == 0x02 and fm2 == 0x08671e and fs3 == 1 and fe3 == 0x8a and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df03aca; op2val:0x8108671e;
op3val:0xc57ffffc; valaddr_reg:x3; val_offset:20448*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20448*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6817:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x703aca and fs2 == 1 and fe2 == 0x02 and fm2 == 0x08671e and fs3 == 1 and fe3 == 0x8a and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df03aca; op2val:0x8108671e;
op3val:0xc57ffffe; valaddr_reg:x3; val_offset:20451*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20451*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6818:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x703aca and fs2 == 1 and fe2 == 0x02 and fm2 == 0x08671e and fs3 == 1 and fe3 == 0x8a and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df03aca; op2val:0x8108671e;
op3val:0xc57fffff; valaddr_reg:x3; val_offset:20454*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20454*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6819:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xed and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xf6800000; valaddr_reg:x3; val_offset:20457*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20457*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6820:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xed and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xf6800001; valaddr_reg:x3; val_offset:20460*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20460*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6821:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xed and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xf6800003; valaddr_reg:x3; val_offset:20463*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20463*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6822:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xed and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xf6800007; valaddr_reg:x3; val_offset:20466*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20466*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6823:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xed and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xf680000f; valaddr_reg:x3; val_offset:20469*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20469*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6824:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xed and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xf680001f; valaddr_reg:x3; val_offset:20472*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20472*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6825:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xed and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xf680003f; valaddr_reg:x3; val_offset:20475*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20475*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6826:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xed and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xf680007f; valaddr_reg:x3; val_offset:20478*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20478*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6827:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xed and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xf68000ff; valaddr_reg:x3; val_offset:20481*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20481*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6828:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xed and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xf68001ff; valaddr_reg:x3; val_offset:20484*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20484*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6829:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xed and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xf68003ff; valaddr_reg:x3; val_offset:20487*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20487*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6830:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xed and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xf68007ff; valaddr_reg:x3; val_offset:20490*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20490*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6831:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xed and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xf6800fff; valaddr_reg:x3; val_offset:20493*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20493*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6832:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xed and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xf6801fff; valaddr_reg:x3; val_offset:20496*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20496*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6833:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xed and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xf6803fff; valaddr_reg:x3; val_offset:20499*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20499*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6834:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xed and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xf6807fff; valaddr_reg:x3; val_offset:20502*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20502*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6835:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xed and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xf680ffff; valaddr_reg:x3; val_offset:20505*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20505*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6836:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xed and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xf681ffff; valaddr_reg:x3; val_offset:20508*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20508*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6837:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xed and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xf683ffff; valaddr_reg:x3; val_offset:20511*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20511*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6838:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xed and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xf687ffff; valaddr_reg:x3; val_offset:20514*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20514*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6839:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xed and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xf68fffff; valaddr_reg:x3; val_offset:20517*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20517*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6840:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xed and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xf69fffff; valaddr_reg:x3; val_offset:20520*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20520*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6841:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xed and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xf6bfffff; valaddr_reg:x3; val_offset:20523*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20523*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6842:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xed and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xf6c00000; valaddr_reg:x3; val_offset:20526*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20526*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6843:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xed and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xf6e00000; valaddr_reg:x3; val_offset:20529*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20529*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6844:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xed and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xf6f00000; valaddr_reg:x3; val_offset:20532*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20532*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6845:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xed and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xf6f80000; valaddr_reg:x3; val_offset:20535*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20535*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6846:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xed and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xf6fc0000; valaddr_reg:x3; val_offset:20538*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20538*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6847:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xed and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xf6fe0000; valaddr_reg:x3; val_offset:20541*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20541*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6848:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xed and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xf6ff0000; valaddr_reg:x3; val_offset:20544*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20544*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6849:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xed and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xf6ff8000; valaddr_reg:x3; val_offset:20547*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20547*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6850:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xed and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xf6ffc000; valaddr_reg:x3; val_offset:20550*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20550*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6851:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xed and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xf6ffe000; valaddr_reg:x3; val_offset:20553*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20553*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6852:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xed and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xf6fff000; valaddr_reg:x3; val_offset:20556*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20556*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6853:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xed and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xf6fff800; valaddr_reg:x3; val_offset:20559*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20559*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6854:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xed and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xf6fffc00; valaddr_reg:x3; val_offset:20562*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20562*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6855:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xed and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xf6fffe00; valaddr_reg:x3; val_offset:20565*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20565*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6856:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xed and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xf6ffff00; valaddr_reg:x3; val_offset:20568*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20568*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6857:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xed and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xf6ffff80; valaddr_reg:x3; val_offset:20571*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20571*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6858:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xed and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xf6ffffc0; valaddr_reg:x3; val_offset:20574*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20574*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6859:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xed and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xf6ffffe0; valaddr_reg:x3; val_offset:20577*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20577*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6860:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xed and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xf6fffff0; valaddr_reg:x3; val_offset:20580*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20580*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6861:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xed and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xf6fffff8; valaddr_reg:x3; val_offset:20583*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20583*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6862:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xed and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xf6fffffc; valaddr_reg:x3; val_offset:20586*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20586*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6863:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xed and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xf6fffffe; valaddr_reg:x3; val_offset:20589*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20589*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6864:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xed and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xf6ffffff; valaddr_reg:x3; val_offset:20592*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20592*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6865:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xff000001; valaddr_reg:x3; val_offset:20595*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20595*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6866:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xff000003; valaddr_reg:x3; val_offset:20598*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20598*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6867:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xff000007; valaddr_reg:x3; val_offset:20601*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20601*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6868:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xff199999; valaddr_reg:x3; val_offset:20604*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20604*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6869:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xff249249; valaddr_reg:x3; val_offset:20607*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20607*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6870:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xff333333; valaddr_reg:x3; val_offset:20610*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20610*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6871:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xff36db6d; valaddr_reg:x3; val_offset:20613*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20613*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6872:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xff3bbbbb; valaddr_reg:x3; val_offset:20616*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20616*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6873:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xff444444; valaddr_reg:x3; val_offset:20619*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20619*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6874:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xff4ccccc; valaddr_reg:x3; val_offset:20622*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20622*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6875:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xff5b6db6; valaddr_reg:x3; val_offset:20625*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20625*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6876:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xff666666; valaddr_reg:x3; val_offset:20628*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20628*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6877:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xff6db6db; valaddr_reg:x3; val_offset:20631*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20631*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6878:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xff7ffff8; valaddr_reg:x3; val_offset:20634*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20634*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6879:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xff7ffffc; valaddr_reg:x3; val_offset:20637*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20637*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6880:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xff7ffffe; valaddr_reg:x3; val_offset:20640*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20640*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6881:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7346ad and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df346ad; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:20643*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20643*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6882:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7346ad and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df346ad; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:20646*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20646*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6883:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7346ad and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df346ad; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:20649*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20649*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6884:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7346ad and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df346ad; op2val:0x0;
op3val:0x199999; valaddr_reg:x3; val_offset:20652*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20652*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6885:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7346ad and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df346ad; op2val:0x0;
op3val:0x249249; valaddr_reg:x3; val_offset:20655*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20655*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6886:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7346ad and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df346ad; op2val:0x0;
op3val:0x333333; valaddr_reg:x3; val_offset:20658*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20658*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6887:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7346ad and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df346ad; op2val:0x0;
op3val:0x36db6d; valaddr_reg:x3; val_offset:20661*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20661*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6888:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7346ad and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df346ad; op2val:0x0;
op3val:0x3bbbbb; valaddr_reg:x3; val_offset:20664*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20664*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6889:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7346ad and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df346ad; op2val:0x0;
op3val:0x444444; valaddr_reg:x3; val_offset:20667*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20667*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6890:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7346ad and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df346ad; op2val:0x0;
op3val:0x4ccccc; valaddr_reg:x3; val_offset:20670*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20670*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6891:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7346ad and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df346ad; op2val:0x0;
op3val:0x5b6db6; valaddr_reg:x3; val_offset:20673*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20673*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6892:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7346ad and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df346ad; op2val:0x0;
op3val:0x666666; valaddr_reg:x3; val_offset:20676*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20676*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6893:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7346ad and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df346ad; op2val:0x0;
op3val:0x6db6db; valaddr_reg:x3; val_offset:20679*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20679*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6894:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7346ad and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df346ad; op2val:0x0;
op3val:0x7ffff8; valaddr_reg:x3; val_offset:20682*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20682*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6895:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7346ad and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df346ad; op2val:0x0;
op3val:0x7ffffc; valaddr_reg:x3; val_offset:20685*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20685*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6896:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7346ad and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df346ad; op2val:0x0;
op3val:0x7ffffe; valaddr_reg:x3; val_offset:20688*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20688*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6897:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7346ad and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x08 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df346ad; op2val:0x0;
op3val:0x4000000; valaddr_reg:x3; val_offset:20691*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20691*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6898:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7346ad and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x08 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df346ad; op2val:0x0;
op3val:0x4000001; valaddr_reg:x3; val_offset:20694*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20694*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6899:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7346ad and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x08 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df346ad; op2val:0x0;
op3val:0x4000003; valaddr_reg:x3; val_offset:20697*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20697*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6900:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7346ad and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x08 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df346ad; op2val:0x0;
op3val:0x4000007; valaddr_reg:x3; val_offset:20700*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20700*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6901:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7346ad and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x08 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df346ad; op2val:0x0;
op3val:0x400000f; valaddr_reg:x3; val_offset:20703*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20703*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6902:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7346ad and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x08 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df346ad; op2val:0x0;
op3val:0x400001f; valaddr_reg:x3; val_offset:20706*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20706*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6903:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7346ad and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x08 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df346ad; op2val:0x0;
op3val:0x400003f; valaddr_reg:x3; val_offset:20709*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20709*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6904:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7346ad and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x08 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df346ad; op2val:0x0;
op3val:0x400007f; valaddr_reg:x3; val_offset:20712*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20712*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6905:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7346ad and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x08 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df346ad; op2val:0x0;
op3val:0x40000ff; valaddr_reg:x3; val_offset:20715*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20715*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6906:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7346ad and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x08 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df346ad; op2val:0x0;
op3val:0x40001ff; valaddr_reg:x3; val_offset:20718*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20718*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6907:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7346ad and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x08 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df346ad; op2val:0x0;
op3val:0x40003ff; valaddr_reg:x3; val_offset:20721*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20721*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6908:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7346ad and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x08 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df346ad; op2val:0x0;
op3val:0x40007ff; valaddr_reg:x3; val_offset:20724*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20724*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6909:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7346ad and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x08 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df346ad; op2val:0x0;
op3val:0x4000fff; valaddr_reg:x3; val_offset:20727*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20727*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6910:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7346ad and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x08 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df346ad; op2val:0x0;
op3val:0x4001fff; valaddr_reg:x3; val_offset:20730*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20730*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6911:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7346ad and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x08 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df346ad; op2val:0x0;
op3val:0x4003fff; valaddr_reg:x3; val_offset:20733*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20733*0 + 3*53*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(2112895690,32,FLEN)
NAN_BOXED(2164811550,32,FLEN)
NAN_BOXED(3305113599,32,FLEN)
NAN_BOXED(2112895690,32,FLEN)
NAN_BOXED(2164811550,32,FLEN)
NAN_BOXED(3305115647,32,FLEN)
NAN_BOXED(2112895690,32,FLEN)
NAN_BOXED(2164811550,32,FLEN)
NAN_BOXED(3305119743,32,FLEN)
NAN_BOXED(2112895690,32,FLEN)
NAN_BOXED(2164811550,32,FLEN)
NAN_BOXED(3305127935,32,FLEN)
NAN_BOXED(2112895690,32,FLEN)
NAN_BOXED(2164811550,32,FLEN)
NAN_BOXED(3305144319,32,FLEN)
NAN_BOXED(2112895690,32,FLEN)
NAN_BOXED(2164811550,32,FLEN)
NAN_BOXED(3305177087,32,FLEN)
NAN_BOXED(2112895690,32,FLEN)
NAN_BOXED(2164811550,32,FLEN)
NAN_BOXED(3305242623,32,FLEN)
NAN_BOXED(2112895690,32,FLEN)
NAN_BOXED(2164811550,32,FLEN)
NAN_BOXED(3305373695,32,FLEN)
NAN_BOXED(2112895690,32,FLEN)
NAN_BOXED(2164811550,32,FLEN)
NAN_BOXED(3305635839,32,FLEN)
NAN_BOXED(2112895690,32,FLEN)
NAN_BOXED(2164811550,32,FLEN)
NAN_BOXED(3306160127,32,FLEN)
NAN_BOXED(2112895690,32,FLEN)
NAN_BOXED(2164811550,32,FLEN)
NAN_BOXED(3307208703,32,FLEN)
NAN_BOXED(2112895690,32,FLEN)
NAN_BOXED(2164811550,32,FLEN)
NAN_BOXED(3309305855,32,FLEN)
NAN_BOXED(2112895690,32,FLEN)
NAN_BOXED(2164811550,32,FLEN)
NAN_BOXED(3309305856,32,FLEN)
NAN_BOXED(2112895690,32,FLEN)
NAN_BOXED(2164811550,32,FLEN)
NAN_BOXED(3311403008,32,FLEN)
NAN_BOXED(2112895690,32,FLEN)
NAN_BOXED(2164811550,32,FLEN)
NAN_BOXED(3312451584,32,FLEN)
NAN_BOXED(2112895690,32,FLEN)
NAN_BOXED(2164811550,32,FLEN)
NAN_BOXED(3312975872,32,FLEN)
NAN_BOXED(2112895690,32,FLEN)
NAN_BOXED(2164811550,32,FLEN)
NAN_BOXED(3313238016,32,FLEN)
NAN_BOXED(2112895690,32,FLEN)
NAN_BOXED(2164811550,32,FLEN)
NAN_BOXED(3313369088,32,FLEN)
NAN_BOXED(2112895690,32,FLEN)
NAN_BOXED(2164811550,32,FLEN)
NAN_BOXED(3313434624,32,FLEN)
NAN_BOXED(2112895690,32,FLEN)
NAN_BOXED(2164811550,32,FLEN)
NAN_BOXED(3313467392,32,FLEN)
NAN_BOXED(2112895690,32,FLEN)
NAN_BOXED(2164811550,32,FLEN)
NAN_BOXED(3313483776,32,FLEN)
NAN_BOXED(2112895690,32,FLEN)
NAN_BOXED(2164811550,32,FLEN)
NAN_BOXED(3313491968,32,FLEN)
NAN_BOXED(2112895690,32,FLEN)
NAN_BOXED(2164811550,32,FLEN)
NAN_BOXED(3313496064,32,FLEN)
NAN_BOXED(2112895690,32,FLEN)
NAN_BOXED(2164811550,32,FLEN)
NAN_BOXED(3313498112,32,FLEN)
NAN_BOXED(2112895690,32,FLEN)
NAN_BOXED(2164811550,32,FLEN)
NAN_BOXED(3313499136,32,FLEN)
NAN_BOXED(2112895690,32,FLEN)
NAN_BOXED(2164811550,32,FLEN)
NAN_BOXED(3313499648,32,FLEN)
NAN_BOXED(2112895690,32,FLEN)
NAN_BOXED(2164811550,32,FLEN)
NAN_BOXED(3313499904,32,FLEN)
NAN_BOXED(2112895690,32,FLEN)
NAN_BOXED(2164811550,32,FLEN)
NAN_BOXED(3313500032,32,FLEN)
NAN_BOXED(2112895690,32,FLEN)
NAN_BOXED(2164811550,32,FLEN)
NAN_BOXED(3313500096,32,FLEN)
NAN_BOXED(2112895690,32,FLEN)
NAN_BOXED(2164811550,32,FLEN)
NAN_BOXED(3313500128,32,FLEN)
NAN_BOXED(2112895690,32,FLEN)
NAN_BOXED(2164811550,32,FLEN)
NAN_BOXED(3313500144,32,FLEN)
NAN_BOXED(2112895690,32,FLEN)
NAN_BOXED(2164811550,32,FLEN)
NAN_BOXED(3313500152,32,FLEN)
NAN_BOXED(2112895690,32,FLEN)
NAN_BOXED(2164811550,32,FLEN)
NAN_BOXED(3313500156,32,FLEN)
NAN_BOXED(2112895690,32,FLEN)
NAN_BOXED(2164811550,32,FLEN)
NAN_BOXED(3313500158,32,FLEN)
NAN_BOXED(2112895690,32,FLEN)
NAN_BOXED(2164811550,32,FLEN)
NAN_BOXED(3313500159,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4135583744,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4135583745,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4135583747,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4135583751,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4135583759,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4135583775,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4135583807,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4135583871,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4135583999,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4135584255,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4135584767,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4135585791,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4135587839,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4135591935,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4135600127,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4135616511,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4135649279,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4135714815,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4135845887,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4136108031,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4136632319,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4137680895,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4139778047,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4139778048,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4141875200,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4142923776,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4143448064,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4143710208,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4143841280,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4143906816,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4143939584,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4143955968,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4143964160,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4143968256,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4143970304,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4143971328,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4143971840,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4143972096,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4143972224,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4143972288,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4143972320,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4143972336,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4143972344,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4143972348,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4143972350,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4143972351,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4278190081,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4278190083,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4278190087,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4279867801,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4280586825,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4281545523,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4281785197,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4282104763,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4282664004,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4283223244,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4284181942,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4284900966,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4285380315,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4286578680,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4286578684,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4286578686,32,FLEN)
NAN_BOXED(2113095341,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(2113095341,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3,32,FLEN)
NAN_BOXED(2113095341,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7,32,FLEN)
NAN_BOXED(2113095341,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1677721,32,FLEN)
NAN_BOXED(2113095341,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2396745,32,FLEN)
NAN_BOXED(2113095341,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3355443,32,FLEN)
NAN_BOXED(2113095341,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3595117,32,FLEN)
NAN_BOXED(2113095341,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3914683,32,FLEN)
NAN_BOXED(2113095341,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(4473924,32,FLEN)
NAN_BOXED(2113095341,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5033164,32,FLEN)
NAN_BOXED(2113095341,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5991862,32,FLEN)
NAN_BOXED(2113095341,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(6710886,32,FLEN)
NAN_BOXED(2113095341,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7190235,32,FLEN)
NAN_BOXED(2113095341,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388600,32,FLEN)
NAN_BOXED(2113095341,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388604,32,FLEN)
NAN_BOXED(2113095341,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388606,32,FLEN)
NAN_BOXED(2113095341,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(67108864,32,FLEN)
NAN_BOXED(2113095341,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(67108865,32,FLEN)
NAN_BOXED(2113095341,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(67108867,32,FLEN)
NAN_BOXED(2113095341,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(67108871,32,FLEN)
NAN_BOXED(2113095341,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(67108879,32,FLEN)
NAN_BOXED(2113095341,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(67108895,32,FLEN)
NAN_BOXED(2113095341,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(67108927,32,FLEN)
NAN_BOXED(2113095341,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(67108991,32,FLEN)
NAN_BOXED(2113095341,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(67109119,32,FLEN)
NAN_BOXED(2113095341,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(67109375,32,FLEN)
NAN_BOXED(2113095341,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(67109887,32,FLEN)
NAN_BOXED(2113095341,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(67110911,32,FLEN)
NAN_BOXED(2113095341,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(67112959,32,FLEN)
NAN_BOXED(2113095341,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(67117055,32,FLEN)
NAN_BOXED(2113095341,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(67125247,32,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
