
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 14:18:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32F/fmsub.s.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.s instruction of the RISC-V RV32F_Zicsr,RV32FD_Zicsr,RV64F_Zicsr,RV64FD_Zicsr extension for the fmsub_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF_Zicsr,RV32IFD_Zicsr,RV64IF_Zicsr,RV64IFD_Zicsr,RV32EF_Zicsr,RV32EFD_Zicsr,RV64EF_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fmsub_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*F.*);def TEST_CASE_1=True;",fmsub_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_8704:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2851a5 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x42ad94 and fs3 == 1 and fe3 == 0x6b and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2851a5; op2val:0x80c2ad94;
op3val:0xb5ffff00; valaddr_reg:x3; val_offset:26112*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26112*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8705:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2851a5 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x42ad94 and fs3 == 1 and fe3 == 0x6b and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2851a5; op2val:0x80c2ad94;
op3val:0xb5ffff80; valaddr_reg:x3; val_offset:26115*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26115*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8706:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2851a5 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x42ad94 and fs3 == 1 and fe3 == 0x6b and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2851a5; op2val:0x80c2ad94;
op3val:0xb5ffffc0; valaddr_reg:x3; val_offset:26118*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26118*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8707:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2851a5 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x42ad94 and fs3 == 1 and fe3 == 0x6b and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2851a5; op2val:0x80c2ad94;
op3val:0xb5ffffe0; valaddr_reg:x3; val_offset:26121*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26121*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8708:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2851a5 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x42ad94 and fs3 == 1 and fe3 == 0x6b and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2851a5; op2val:0x80c2ad94;
op3val:0xb5fffff0; valaddr_reg:x3; val_offset:26124*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26124*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8709:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2851a5 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x42ad94 and fs3 == 1 and fe3 == 0x6b and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2851a5; op2val:0x80c2ad94;
op3val:0xb5fffff8; valaddr_reg:x3; val_offset:26127*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26127*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8710:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2851a5 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x42ad94 and fs3 == 1 and fe3 == 0x6b and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2851a5; op2val:0x80c2ad94;
op3val:0xb5fffffc; valaddr_reg:x3; val_offset:26130*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26130*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8711:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2851a5 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x42ad94 and fs3 == 1 and fe3 == 0x6b and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2851a5; op2val:0x80c2ad94;
op3val:0xb5fffffe; valaddr_reg:x3; val_offset:26133*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26133*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8712:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2851a5 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x42ad94 and fs3 == 1 and fe3 == 0x6b and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2851a5; op2val:0x80c2ad94;
op3val:0xb5ffffff; valaddr_reg:x3; val_offset:26136*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26136*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8713:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2851a5 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x42ad94 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2851a5; op2val:0x80c2ad94;
op3val:0xbf800001; valaddr_reg:x3; val_offset:26139*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26139*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8714:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2851a5 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x42ad94 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2851a5; op2val:0x80c2ad94;
op3val:0xbf800003; valaddr_reg:x3; val_offset:26142*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26142*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8715:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2851a5 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x42ad94 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2851a5; op2val:0x80c2ad94;
op3val:0xbf800007; valaddr_reg:x3; val_offset:26145*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26145*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8716:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2851a5 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x42ad94 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2851a5; op2val:0x80c2ad94;
op3val:0xbf999999; valaddr_reg:x3; val_offset:26148*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26148*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8717:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2851a5 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x42ad94 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2851a5; op2val:0x80c2ad94;
op3val:0xbfa49249; valaddr_reg:x3; val_offset:26151*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26151*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8718:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2851a5 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x42ad94 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2851a5; op2val:0x80c2ad94;
op3val:0xbfb33333; valaddr_reg:x3; val_offset:26154*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26154*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8719:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2851a5 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x42ad94 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2851a5; op2val:0x80c2ad94;
op3val:0xbfb6db6d; valaddr_reg:x3; val_offset:26157*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26157*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8720:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2851a5 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x42ad94 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2851a5; op2val:0x80c2ad94;
op3val:0xbfbbbbbb; valaddr_reg:x3; val_offset:26160*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26160*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8721:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2851a5 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x42ad94 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2851a5; op2val:0x80c2ad94;
op3val:0xbfc44444; valaddr_reg:x3; val_offset:26163*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26163*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8722:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2851a5 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x42ad94 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2851a5; op2val:0x80c2ad94;
op3val:0xbfcccccc; valaddr_reg:x3; val_offset:26166*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26166*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8723:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2851a5 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x42ad94 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2851a5; op2val:0x80c2ad94;
op3val:0xbfdb6db6; valaddr_reg:x3; val_offset:26169*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26169*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8724:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2851a5 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x42ad94 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2851a5; op2val:0x80c2ad94;
op3val:0xbfe66666; valaddr_reg:x3; val_offset:26172*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26172*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8725:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2851a5 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x42ad94 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2851a5; op2val:0x80c2ad94;
op3val:0xbfedb6db; valaddr_reg:x3; val_offset:26175*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26175*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8726:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2851a5 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x42ad94 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2851a5; op2val:0x80c2ad94;
op3val:0xbffffff8; valaddr_reg:x3; val_offset:26178*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26178*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8727:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2851a5 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x42ad94 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2851a5; op2val:0x80c2ad94;
op3val:0xbffffffc; valaddr_reg:x3; val_offset:26181*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26181*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8728:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2851a5 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x42ad94 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2851a5; op2val:0x80c2ad94;
op3val:0xbffffffe; valaddr_reg:x3; val_offset:26184*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26184*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8729:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2c70b2 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e0677 and fs3 == 1 and fe3 == 0xdf and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2c70b2; op2val:0xc0be0677;
op3val:0xef800000; valaddr_reg:x3; val_offset:26187*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26187*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8730:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2c70b2 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e0677 and fs3 == 1 and fe3 == 0xdf and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2c70b2; op2val:0xc0be0677;
op3val:0xef800001; valaddr_reg:x3; val_offset:26190*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26190*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8731:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2c70b2 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e0677 and fs3 == 1 and fe3 == 0xdf and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2c70b2; op2val:0xc0be0677;
op3val:0xef800003; valaddr_reg:x3; val_offset:26193*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26193*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8732:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2c70b2 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e0677 and fs3 == 1 and fe3 == 0xdf and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2c70b2; op2val:0xc0be0677;
op3val:0xef800007; valaddr_reg:x3; val_offset:26196*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26196*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8733:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2c70b2 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e0677 and fs3 == 1 and fe3 == 0xdf and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2c70b2; op2val:0xc0be0677;
op3val:0xef80000f; valaddr_reg:x3; val_offset:26199*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26199*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8734:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2c70b2 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e0677 and fs3 == 1 and fe3 == 0xdf and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2c70b2; op2val:0xc0be0677;
op3val:0xef80001f; valaddr_reg:x3; val_offset:26202*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26202*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8735:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2c70b2 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e0677 and fs3 == 1 and fe3 == 0xdf and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2c70b2; op2val:0xc0be0677;
op3val:0xef80003f; valaddr_reg:x3; val_offset:26205*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26205*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8736:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2c70b2 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e0677 and fs3 == 1 and fe3 == 0xdf and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2c70b2; op2val:0xc0be0677;
op3val:0xef80007f; valaddr_reg:x3; val_offset:26208*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26208*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8737:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2c70b2 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e0677 and fs3 == 1 and fe3 == 0xdf and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2c70b2; op2val:0xc0be0677;
op3val:0xef8000ff; valaddr_reg:x3; val_offset:26211*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26211*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8738:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2c70b2 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e0677 and fs3 == 1 and fe3 == 0xdf and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2c70b2; op2val:0xc0be0677;
op3val:0xef8001ff; valaddr_reg:x3; val_offset:26214*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26214*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8739:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2c70b2 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e0677 and fs3 == 1 and fe3 == 0xdf and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2c70b2; op2val:0xc0be0677;
op3val:0xef8003ff; valaddr_reg:x3; val_offset:26217*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26217*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8740:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2c70b2 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e0677 and fs3 == 1 and fe3 == 0xdf and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2c70b2; op2val:0xc0be0677;
op3val:0xef8007ff; valaddr_reg:x3; val_offset:26220*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26220*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8741:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2c70b2 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e0677 and fs3 == 1 and fe3 == 0xdf and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2c70b2; op2val:0xc0be0677;
op3val:0xef800fff; valaddr_reg:x3; val_offset:26223*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26223*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8742:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2c70b2 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e0677 and fs3 == 1 and fe3 == 0xdf and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2c70b2; op2val:0xc0be0677;
op3val:0xef801fff; valaddr_reg:x3; val_offset:26226*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26226*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8743:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2c70b2 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e0677 and fs3 == 1 and fe3 == 0xdf and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2c70b2; op2val:0xc0be0677;
op3val:0xef803fff; valaddr_reg:x3; val_offset:26229*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26229*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8744:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2c70b2 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e0677 and fs3 == 1 and fe3 == 0xdf and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2c70b2; op2val:0xc0be0677;
op3val:0xef807fff; valaddr_reg:x3; val_offset:26232*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26232*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8745:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2c70b2 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e0677 and fs3 == 1 and fe3 == 0xdf and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2c70b2; op2val:0xc0be0677;
op3val:0xef80ffff; valaddr_reg:x3; val_offset:26235*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26235*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8746:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2c70b2 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e0677 and fs3 == 1 and fe3 == 0xdf and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2c70b2; op2val:0xc0be0677;
op3val:0xef81ffff; valaddr_reg:x3; val_offset:26238*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26238*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8747:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2c70b2 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e0677 and fs3 == 1 and fe3 == 0xdf and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2c70b2; op2val:0xc0be0677;
op3val:0xef83ffff; valaddr_reg:x3; val_offset:26241*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26241*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8748:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2c70b2 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e0677 and fs3 == 1 and fe3 == 0xdf and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2c70b2; op2val:0xc0be0677;
op3val:0xef87ffff; valaddr_reg:x3; val_offset:26244*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26244*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8749:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2c70b2 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e0677 and fs3 == 1 and fe3 == 0xdf and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2c70b2; op2val:0xc0be0677;
op3val:0xef8fffff; valaddr_reg:x3; val_offset:26247*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26247*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8750:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2c70b2 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e0677 and fs3 == 1 and fe3 == 0xdf and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2c70b2; op2val:0xc0be0677;
op3val:0xef9fffff; valaddr_reg:x3; val_offset:26250*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26250*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8751:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2c70b2 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e0677 and fs3 == 1 and fe3 == 0xdf and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2c70b2; op2val:0xc0be0677;
op3val:0xefbfffff; valaddr_reg:x3; val_offset:26253*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26253*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8752:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2c70b2 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e0677 and fs3 == 1 and fe3 == 0xdf and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2c70b2; op2val:0xc0be0677;
op3val:0xefc00000; valaddr_reg:x3; val_offset:26256*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26256*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8753:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2c70b2 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e0677 and fs3 == 1 and fe3 == 0xdf and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2c70b2; op2val:0xc0be0677;
op3val:0xefe00000; valaddr_reg:x3; val_offset:26259*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26259*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8754:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2c70b2 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e0677 and fs3 == 1 and fe3 == 0xdf and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2c70b2; op2val:0xc0be0677;
op3val:0xeff00000; valaddr_reg:x3; val_offset:26262*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26262*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8755:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2c70b2 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e0677 and fs3 == 1 and fe3 == 0xdf and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2c70b2; op2val:0xc0be0677;
op3val:0xeff80000; valaddr_reg:x3; val_offset:26265*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26265*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8756:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2c70b2 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e0677 and fs3 == 1 and fe3 == 0xdf and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2c70b2; op2val:0xc0be0677;
op3val:0xeffc0000; valaddr_reg:x3; val_offset:26268*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26268*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8757:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2c70b2 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e0677 and fs3 == 1 and fe3 == 0xdf and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2c70b2; op2val:0xc0be0677;
op3val:0xeffe0000; valaddr_reg:x3; val_offset:26271*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26271*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8758:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2c70b2 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e0677 and fs3 == 1 and fe3 == 0xdf and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2c70b2; op2val:0xc0be0677;
op3val:0xefff0000; valaddr_reg:x3; val_offset:26274*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26274*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8759:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2c70b2 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e0677 and fs3 == 1 and fe3 == 0xdf and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2c70b2; op2val:0xc0be0677;
op3val:0xefff8000; valaddr_reg:x3; val_offset:26277*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26277*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8760:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2c70b2 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e0677 and fs3 == 1 and fe3 == 0xdf and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2c70b2; op2val:0xc0be0677;
op3val:0xefffc000; valaddr_reg:x3; val_offset:26280*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26280*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8761:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2c70b2 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e0677 and fs3 == 1 and fe3 == 0xdf and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2c70b2; op2val:0xc0be0677;
op3val:0xefffe000; valaddr_reg:x3; val_offset:26283*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26283*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8762:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2c70b2 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e0677 and fs3 == 1 and fe3 == 0xdf and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2c70b2; op2val:0xc0be0677;
op3val:0xeffff000; valaddr_reg:x3; val_offset:26286*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26286*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8763:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2c70b2 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e0677 and fs3 == 1 and fe3 == 0xdf and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2c70b2; op2val:0xc0be0677;
op3val:0xeffff800; valaddr_reg:x3; val_offset:26289*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26289*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8764:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2c70b2 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e0677 and fs3 == 1 and fe3 == 0xdf and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2c70b2; op2val:0xc0be0677;
op3val:0xeffffc00; valaddr_reg:x3; val_offset:26292*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26292*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8765:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2c70b2 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e0677 and fs3 == 1 and fe3 == 0xdf and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2c70b2; op2val:0xc0be0677;
op3val:0xeffffe00; valaddr_reg:x3; val_offset:26295*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26295*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8766:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2c70b2 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e0677 and fs3 == 1 and fe3 == 0xdf and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2c70b2; op2val:0xc0be0677;
op3val:0xefffff00; valaddr_reg:x3; val_offset:26298*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26298*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8767:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2c70b2 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e0677 and fs3 == 1 and fe3 == 0xdf and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2c70b2; op2val:0xc0be0677;
op3val:0xefffff80; valaddr_reg:x3; val_offset:26301*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26301*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8768:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2c70b2 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e0677 and fs3 == 1 and fe3 == 0xdf and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2c70b2; op2val:0xc0be0677;
op3val:0xefffffc0; valaddr_reg:x3; val_offset:26304*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26304*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8769:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2c70b2 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e0677 and fs3 == 1 and fe3 == 0xdf and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2c70b2; op2val:0xc0be0677;
op3val:0xefffffe0; valaddr_reg:x3; val_offset:26307*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26307*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8770:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2c70b2 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e0677 and fs3 == 1 and fe3 == 0xdf and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2c70b2; op2val:0xc0be0677;
op3val:0xeffffff0; valaddr_reg:x3; val_offset:26310*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26310*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8771:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2c70b2 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e0677 and fs3 == 1 and fe3 == 0xdf and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2c70b2; op2val:0xc0be0677;
op3val:0xeffffff8; valaddr_reg:x3; val_offset:26313*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26313*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8772:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2c70b2 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e0677 and fs3 == 1 and fe3 == 0xdf and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2c70b2; op2val:0xc0be0677;
op3val:0xeffffffc; valaddr_reg:x3; val_offset:26316*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26316*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8773:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2c70b2 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e0677 and fs3 == 1 and fe3 == 0xdf and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2c70b2; op2val:0xc0be0677;
op3val:0xeffffffe; valaddr_reg:x3; val_offset:26319*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26319*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8774:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2c70b2 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e0677 and fs3 == 1 and fe3 == 0xdf and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2c70b2; op2val:0xc0be0677;
op3val:0xefffffff; valaddr_reg:x3; val_offset:26322*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26322*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8775:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2c70b2 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e0677 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2c70b2; op2val:0xc0be0677;
op3val:0xff000001; valaddr_reg:x3; val_offset:26325*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26325*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8776:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2c70b2 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e0677 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2c70b2; op2val:0xc0be0677;
op3val:0xff000003; valaddr_reg:x3; val_offset:26328*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26328*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8777:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2c70b2 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e0677 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2c70b2; op2val:0xc0be0677;
op3val:0xff000007; valaddr_reg:x3; val_offset:26331*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26331*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8778:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2c70b2 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e0677 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2c70b2; op2val:0xc0be0677;
op3val:0xff199999; valaddr_reg:x3; val_offset:26334*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26334*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8779:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2c70b2 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e0677 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2c70b2; op2val:0xc0be0677;
op3val:0xff249249; valaddr_reg:x3; val_offset:26337*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26337*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8780:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2c70b2 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e0677 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2c70b2; op2val:0xc0be0677;
op3val:0xff333333; valaddr_reg:x3; val_offset:26340*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26340*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8781:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2c70b2 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e0677 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2c70b2; op2val:0xc0be0677;
op3val:0xff36db6d; valaddr_reg:x3; val_offset:26343*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26343*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8782:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2c70b2 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e0677 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2c70b2; op2val:0xc0be0677;
op3val:0xff3bbbbb; valaddr_reg:x3; val_offset:26346*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26346*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8783:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2c70b2 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e0677 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2c70b2; op2val:0xc0be0677;
op3val:0xff444444; valaddr_reg:x3; val_offset:26349*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26349*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8784:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2c70b2 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e0677 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2c70b2; op2val:0xc0be0677;
op3val:0xff4ccccc; valaddr_reg:x3; val_offset:26352*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26352*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8785:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2c70b2 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e0677 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2c70b2; op2val:0xc0be0677;
op3val:0xff5b6db6; valaddr_reg:x3; val_offset:26355*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26355*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8786:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2c70b2 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e0677 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2c70b2; op2val:0xc0be0677;
op3val:0xff666666; valaddr_reg:x3; val_offset:26358*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26358*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8787:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2c70b2 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e0677 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2c70b2; op2val:0xc0be0677;
op3val:0xff6db6db; valaddr_reg:x3; val_offset:26361*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26361*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8788:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2c70b2 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e0677 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2c70b2; op2val:0xc0be0677;
op3val:0xff7ffff8; valaddr_reg:x3; val_offset:26364*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26364*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8789:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2c70b2 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e0677 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2c70b2; op2val:0xc0be0677;
op3val:0xff7ffffc; valaddr_reg:x3; val_offset:26367*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26367*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8790:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2c70b2 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e0677 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2c70b2; op2val:0xc0be0677;
op3val:0xff7ffffe; valaddr_reg:x3; val_offset:26370*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26370*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8791:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2f4293 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3af7c5 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2f4293; op2val:0xbaf7c5;
op3val:0x3f800001; valaddr_reg:x3; val_offset:26373*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26373*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8792:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2f4293 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3af7c5 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2f4293; op2val:0xbaf7c5;
op3val:0x3f800003; valaddr_reg:x3; val_offset:26376*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26376*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8793:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2f4293 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3af7c5 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2f4293; op2val:0xbaf7c5;
op3val:0x3f800007; valaddr_reg:x3; val_offset:26379*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26379*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8794:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2f4293 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3af7c5 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2f4293; op2val:0xbaf7c5;
op3val:0x3f999999; valaddr_reg:x3; val_offset:26382*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26382*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8795:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2f4293 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3af7c5 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2f4293; op2val:0xbaf7c5;
op3val:0x3fa49249; valaddr_reg:x3; val_offset:26385*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26385*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8796:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2f4293 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3af7c5 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2f4293; op2val:0xbaf7c5;
op3val:0x3fb33333; valaddr_reg:x3; val_offset:26388*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26388*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8797:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2f4293 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3af7c5 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2f4293; op2val:0xbaf7c5;
op3val:0x3fb6db6d; valaddr_reg:x3; val_offset:26391*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26391*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8798:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2f4293 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3af7c5 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2f4293; op2val:0xbaf7c5;
op3val:0x3fbbbbbb; valaddr_reg:x3; val_offset:26394*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26394*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8799:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2f4293 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3af7c5 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2f4293; op2val:0xbaf7c5;
op3val:0x3fc44444; valaddr_reg:x3; val_offset:26397*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26397*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8800:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2f4293 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3af7c5 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2f4293; op2val:0xbaf7c5;
op3val:0x3fcccccc; valaddr_reg:x3; val_offset:26400*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26400*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8801:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2f4293 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3af7c5 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2f4293; op2val:0xbaf7c5;
op3val:0x3fdb6db6; valaddr_reg:x3; val_offset:26403*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26403*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8802:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2f4293 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3af7c5 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2f4293; op2val:0xbaf7c5;
op3val:0x3fe66666; valaddr_reg:x3; val_offset:26406*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26406*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8803:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2f4293 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3af7c5 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2f4293; op2val:0xbaf7c5;
op3val:0x3fedb6db; valaddr_reg:x3; val_offset:26409*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26409*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8804:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2f4293 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3af7c5 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2f4293; op2val:0xbaf7c5;
op3val:0x3ffffff8; valaddr_reg:x3; val_offset:26412*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26412*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8805:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2f4293 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3af7c5 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2f4293; op2val:0xbaf7c5;
op3val:0x3ffffffc; valaddr_reg:x3; val_offset:26415*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26415*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8806:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2f4293 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3af7c5 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2f4293; op2val:0xbaf7c5;
op3val:0x3ffffffe; valaddr_reg:x3; val_offset:26418*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26418*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8807:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2f4293 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3af7c5 and fs3 == 0 and fe3 == 0x97 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2f4293; op2val:0xbaf7c5;
op3val:0x4b800000; valaddr_reg:x3; val_offset:26421*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26421*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8808:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2f4293 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3af7c5 and fs3 == 0 and fe3 == 0x97 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2f4293; op2val:0xbaf7c5;
op3val:0x4b800001; valaddr_reg:x3; val_offset:26424*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26424*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8809:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2f4293 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3af7c5 and fs3 == 0 and fe3 == 0x97 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2f4293; op2val:0xbaf7c5;
op3val:0x4b800003; valaddr_reg:x3; val_offset:26427*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26427*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8810:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2f4293 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3af7c5 and fs3 == 0 and fe3 == 0x97 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2f4293; op2val:0xbaf7c5;
op3val:0x4b800007; valaddr_reg:x3; val_offset:26430*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26430*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8811:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2f4293 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3af7c5 and fs3 == 0 and fe3 == 0x97 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2f4293; op2val:0xbaf7c5;
op3val:0x4b80000f; valaddr_reg:x3; val_offset:26433*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26433*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8812:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2f4293 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3af7c5 and fs3 == 0 and fe3 == 0x97 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2f4293; op2val:0xbaf7c5;
op3val:0x4b80001f; valaddr_reg:x3; val_offset:26436*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26436*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8813:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2f4293 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3af7c5 and fs3 == 0 and fe3 == 0x97 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2f4293; op2val:0xbaf7c5;
op3val:0x4b80003f; valaddr_reg:x3; val_offset:26439*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26439*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8814:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2f4293 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3af7c5 and fs3 == 0 and fe3 == 0x97 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2f4293; op2val:0xbaf7c5;
op3val:0x4b80007f; valaddr_reg:x3; val_offset:26442*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26442*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8815:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2f4293 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3af7c5 and fs3 == 0 and fe3 == 0x97 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2f4293; op2val:0xbaf7c5;
op3val:0x4b8000ff; valaddr_reg:x3; val_offset:26445*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26445*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8816:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2f4293 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3af7c5 and fs3 == 0 and fe3 == 0x97 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2f4293; op2val:0xbaf7c5;
op3val:0x4b8001ff; valaddr_reg:x3; val_offset:26448*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26448*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8817:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2f4293 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3af7c5 and fs3 == 0 and fe3 == 0x97 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2f4293; op2val:0xbaf7c5;
op3val:0x4b8003ff; valaddr_reg:x3; val_offset:26451*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26451*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8818:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2f4293 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3af7c5 and fs3 == 0 and fe3 == 0x97 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2f4293; op2val:0xbaf7c5;
op3val:0x4b8007ff; valaddr_reg:x3; val_offset:26454*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26454*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8819:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2f4293 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3af7c5 and fs3 == 0 and fe3 == 0x97 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2f4293; op2val:0xbaf7c5;
op3val:0x4b800fff; valaddr_reg:x3; val_offset:26457*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26457*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8820:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2f4293 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3af7c5 and fs3 == 0 and fe3 == 0x97 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2f4293; op2val:0xbaf7c5;
op3val:0x4b801fff; valaddr_reg:x3; val_offset:26460*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26460*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8821:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2f4293 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3af7c5 and fs3 == 0 and fe3 == 0x97 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2f4293; op2val:0xbaf7c5;
op3val:0x4b803fff; valaddr_reg:x3; val_offset:26463*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26463*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8822:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2f4293 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3af7c5 and fs3 == 0 and fe3 == 0x97 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2f4293; op2val:0xbaf7c5;
op3val:0x4b807fff; valaddr_reg:x3; val_offset:26466*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26466*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8823:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2f4293 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3af7c5 and fs3 == 0 and fe3 == 0x97 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2f4293; op2val:0xbaf7c5;
op3val:0x4b80ffff; valaddr_reg:x3; val_offset:26469*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26469*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8824:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2f4293 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3af7c5 and fs3 == 0 and fe3 == 0x97 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2f4293; op2val:0xbaf7c5;
op3val:0x4b81ffff; valaddr_reg:x3; val_offset:26472*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26472*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8825:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2f4293 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3af7c5 and fs3 == 0 and fe3 == 0x97 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2f4293; op2val:0xbaf7c5;
op3val:0x4b83ffff; valaddr_reg:x3; val_offset:26475*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26475*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8826:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2f4293 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3af7c5 and fs3 == 0 and fe3 == 0x97 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2f4293; op2val:0xbaf7c5;
op3val:0x4b87ffff; valaddr_reg:x3; val_offset:26478*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26478*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8827:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2f4293 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3af7c5 and fs3 == 0 and fe3 == 0x97 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2f4293; op2val:0xbaf7c5;
op3val:0x4b8fffff; valaddr_reg:x3; val_offset:26481*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26481*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8828:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2f4293 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3af7c5 and fs3 == 0 and fe3 == 0x97 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2f4293; op2val:0xbaf7c5;
op3val:0x4b9fffff; valaddr_reg:x3; val_offset:26484*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26484*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8829:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2f4293 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3af7c5 and fs3 == 0 and fe3 == 0x97 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2f4293; op2val:0xbaf7c5;
op3val:0x4bbfffff; valaddr_reg:x3; val_offset:26487*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26487*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8830:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2f4293 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3af7c5 and fs3 == 0 and fe3 == 0x97 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2f4293; op2val:0xbaf7c5;
op3val:0x4bc00000; valaddr_reg:x3; val_offset:26490*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26490*0 + 3*68*FLEN/8, x4, x1, x2)

inst_8831:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2f4293 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3af7c5 and fs3 == 0 and fe3 == 0x97 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2f4293; op2val:0xbaf7c5;
op3val:0x4be00000; valaddr_reg:x3; val_offset:26493*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 26493*0 + 3*68*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(2116571557,32,FLEN)
NAN_BOXED(2160242068,32,FLEN)
NAN_BOXED(3053453056,32,FLEN)
NAN_BOXED(2116571557,32,FLEN)
NAN_BOXED(2160242068,32,FLEN)
NAN_BOXED(3053453184,32,FLEN)
NAN_BOXED(2116571557,32,FLEN)
NAN_BOXED(2160242068,32,FLEN)
NAN_BOXED(3053453248,32,FLEN)
NAN_BOXED(2116571557,32,FLEN)
NAN_BOXED(2160242068,32,FLEN)
NAN_BOXED(3053453280,32,FLEN)
NAN_BOXED(2116571557,32,FLEN)
NAN_BOXED(2160242068,32,FLEN)
NAN_BOXED(3053453296,32,FLEN)
NAN_BOXED(2116571557,32,FLEN)
NAN_BOXED(2160242068,32,FLEN)
NAN_BOXED(3053453304,32,FLEN)
NAN_BOXED(2116571557,32,FLEN)
NAN_BOXED(2160242068,32,FLEN)
NAN_BOXED(3053453308,32,FLEN)
NAN_BOXED(2116571557,32,FLEN)
NAN_BOXED(2160242068,32,FLEN)
NAN_BOXED(3053453310,32,FLEN)
NAN_BOXED(2116571557,32,FLEN)
NAN_BOXED(2160242068,32,FLEN)
NAN_BOXED(3053453311,32,FLEN)
NAN_BOXED(2116571557,32,FLEN)
NAN_BOXED(2160242068,32,FLEN)
NAN_BOXED(3212836865,32,FLEN)
NAN_BOXED(2116571557,32,FLEN)
NAN_BOXED(2160242068,32,FLEN)
NAN_BOXED(3212836867,32,FLEN)
NAN_BOXED(2116571557,32,FLEN)
NAN_BOXED(2160242068,32,FLEN)
NAN_BOXED(3212836871,32,FLEN)
NAN_BOXED(2116571557,32,FLEN)
NAN_BOXED(2160242068,32,FLEN)
NAN_BOXED(3214514585,32,FLEN)
NAN_BOXED(2116571557,32,FLEN)
NAN_BOXED(2160242068,32,FLEN)
NAN_BOXED(3215233609,32,FLEN)
NAN_BOXED(2116571557,32,FLEN)
NAN_BOXED(2160242068,32,FLEN)
NAN_BOXED(3216192307,32,FLEN)
NAN_BOXED(2116571557,32,FLEN)
NAN_BOXED(2160242068,32,FLEN)
NAN_BOXED(3216431981,32,FLEN)
NAN_BOXED(2116571557,32,FLEN)
NAN_BOXED(2160242068,32,FLEN)
NAN_BOXED(3216751547,32,FLEN)
NAN_BOXED(2116571557,32,FLEN)
NAN_BOXED(2160242068,32,FLEN)
NAN_BOXED(3217310788,32,FLEN)
NAN_BOXED(2116571557,32,FLEN)
NAN_BOXED(2160242068,32,FLEN)
NAN_BOXED(3217870028,32,FLEN)
NAN_BOXED(2116571557,32,FLEN)
NAN_BOXED(2160242068,32,FLEN)
NAN_BOXED(3218828726,32,FLEN)
NAN_BOXED(2116571557,32,FLEN)
NAN_BOXED(2160242068,32,FLEN)
NAN_BOXED(3219547750,32,FLEN)
NAN_BOXED(2116571557,32,FLEN)
NAN_BOXED(2160242068,32,FLEN)
NAN_BOXED(3220027099,32,FLEN)
NAN_BOXED(2116571557,32,FLEN)
NAN_BOXED(2160242068,32,FLEN)
NAN_BOXED(3221225464,32,FLEN)
NAN_BOXED(2116571557,32,FLEN)
NAN_BOXED(2160242068,32,FLEN)
NAN_BOXED(3221225468,32,FLEN)
NAN_BOXED(2116571557,32,FLEN)
NAN_BOXED(2160242068,32,FLEN)
NAN_BOXED(3221225470,32,FLEN)
NAN_BOXED(2116841650,32,FLEN)
NAN_BOXED(3233678967,32,FLEN)
NAN_BOXED(4018143232,32,FLEN)
NAN_BOXED(2116841650,32,FLEN)
NAN_BOXED(3233678967,32,FLEN)
NAN_BOXED(4018143233,32,FLEN)
NAN_BOXED(2116841650,32,FLEN)
NAN_BOXED(3233678967,32,FLEN)
NAN_BOXED(4018143235,32,FLEN)
NAN_BOXED(2116841650,32,FLEN)
NAN_BOXED(3233678967,32,FLEN)
NAN_BOXED(4018143239,32,FLEN)
NAN_BOXED(2116841650,32,FLEN)
NAN_BOXED(3233678967,32,FLEN)
NAN_BOXED(4018143247,32,FLEN)
NAN_BOXED(2116841650,32,FLEN)
NAN_BOXED(3233678967,32,FLEN)
NAN_BOXED(4018143263,32,FLEN)
NAN_BOXED(2116841650,32,FLEN)
NAN_BOXED(3233678967,32,FLEN)
NAN_BOXED(4018143295,32,FLEN)
NAN_BOXED(2116841650,32,FLEN)
NAN_BOXED(3233678967,32,FLEN)
NAN_BOXED(4018143359,32,FLEN)
NAN_BOXED(2116841650,32,FLEN)
NAN_BOXED(3233678967,32,FLEN)
NAN_BOXED(4018143487,32,FLEN)
NAN_BOXED(2116841650,32,FLEN)
NAN_BOXED(3233678967,32,FLEN)
NAN_BOXED(4018143743,32,FLEN)
NAN_BOXED(2116841650,32,FLEN)
NAN_BOXED(3233678967,32,FLEN)
NAN_BOXED(4018144255,32,FLEN)
NAN_BOXED(2116841650,32,FLEN)
NAN_BOXED(3233678967,32,FLEN)
NAN_BOXED(4018145279,32,FLEN)
NAN_BOXED(2116841650,32,FLEN)
NAN_BOXED(3233678967,32,FLEN)
NAN_BOXED(4018147327,32,FLEN)
NAN_BOXED(2116841650,32,FLEN)
NAN_BOXED(3233678967,32,FLEN)
NAN_BOXED(4018151423,32,FLEN)
NAN_BOXED(2116841650,32,FLEN)
NAN_BOXED(3233678967,32,FLEN)
NAN_BOXED(4018159615,32,FLEN)
NAN_BOXED(2116841650,32,FLEN)
NAN_BOXED(3233678967,32,FLEN)
NAN_BOXED(4018175999,32,FLEN)
NAN_BOXED(2116841650,32,FLEN)
NAN_BOXED(3233678967,32,FLEN)
NAN_BOXED(4018208767,32,FLEN)
NAN_BOXED(2116841650,32,FLEN)
NAN_BOXED(3233678967,32,FLEN)
NAN_BOXED(4018274303,32,FLEN)
NAN_BOXED(2116841650,32,FLEN)
NAN_BOXED(3233678967,32,FLEN)
NAN_BOXED(4018405375,32,FLEN)
NAN_BOXED(2116841650,32,FLEN)
NAN_BOXED(3233678967,32,FLEN)
NAN_BOXED(4018667519,32,FLEN)
NAN_BOXED(2116841650,32,FLEN)
NAN_BOXED(3233678967,32,FLEN)
NAN_BOXED(4019191807,32,FLEN)
NAN_BOXED(2116841650,32,FLEN)
NAN_BOXED(3233678967,32,FLEN)
NAN_BOXED(4020240383,32,FLEN)
NAN_BOXED(2116841650,32,FLEN)
NAN_BOXED(3233678967,32,FLEN)
NAN_BOXED(4022337535,32,FLEN)
NAN_BOXED(2116841650,32,FLEN)
NAN_BOXED(3233678967,32,FLEN)
NAN_BOXED(4022337536,32,FLEN)
NAN_BOXED(2116841650,32,FLEN)
NAN_BOXED(3233678967,32,FLEN)
NAN_BOXED(4024434688,32,FLEN)
NAN_BOXED(2116841650,32,FLEN)
NAN_BOXED(3233678967,32,FLEN)
NAN_BOXED(4025483264,32,FLEN)
NAN_BOXED(2116841650,32,FLEN)
NAN_BOXED(3233678967,32,FLEN)
NAN_BOXED(4026007552,32,FLEN)
NAN_BOXED(2116841650,32,FLEN)
NAN_BOXED(3233678967,32,FLEN)
NAN_BOXED(4026269696,32,FLEN)
NAN_BOXED(2116841650,32,FLEN)
NAN_BOXED(3233678967,32,FLEN)
NAN_BOXED(4026400768,32,FLEN)
NAN_BOXED(2116841650,32,FLEN)
NAN_BOXED(3233678967,32,FLEN)
NAN_BOXED(4026466304,32,FLEN)
NAN_BOXED(2116841650,32,FLEN)
NAN_BOXED(3233678967,32,FLEN)
NAN_BOXED(4026499072,32,FLEN)
NAN_BOXED(2116841650,32,FLEN)
NAN_BOXED(3233678967,32,FLEN)
NAN_BOXED(4026515456,32,FLEN)
NAN_BOXED(2116841650,32,FLEN)
NAN_BOXED(3233678967,32,FLEN)
NAN_BOXED(4026523648,32,FLEN)
NAN_BOXED(2116841650,32,FLEN)
NAN_BOXED(3233678967,32,FLEN)
NAN_BOXED(4026527744,32,FLEN)
NAN_BOXED(2116841650,32,FLEN)
NAN_BOXED(3233678967,32,FLEN)
NAN_BOXED(4026529792,32,FLEN)
NAN_BOXED(2116841650,32,FLEN)
NAN_BOXED(3233678967,32,FLEN)
NAN_BOXED(4026530816,32,FLEN)
NAN_BOXED(2116841650,32,FLEN)
NAN_BOXED(3233678967,32,FLEN)
NAN_BOXED(4026531328,32,FLEN)
NAN_BOXED(2116841650,32,FLEN)
NAN_BOXED(3233678967,32,FLEN)
NAN_BOXED(4026531584,32,FLEN)
NAN_BOXED(2116841650,32,FLEN)
NAN_BOXED(3233678967,32,FLEN)
NAN_BOXED(4026531712,32,FLEN)
NAN_BOXED(2116841650,32,FLEN)
NAN_BOXED(3233678967,32,FLEN)
NAN_BOXED(4026531776,32,FLEN)
NAN_BOXED(2116841650,32,FLEN)
NAN_BOXED(3233678967,32,FLEN)
NAN_BOXED(4026531808,32,FLEN)
NAN_BOXED(2116841650,32,FLEN)
NAN_BOXED(3233678967,32,FLEN)
NAN_BOXED(4026531824,32,FLEN)
NAN_BOXED(2116841650,32,FLEN)
NAN_BOXED(3233678967,32,FLEN)
NAN_BOXED(4026531832,32,FLEN)
NAN_BOXED(2116841650,32,FLEN)
NAN_BOXED(3233678967,32,FLEN)
NAN_BOXED(4026531836,32,FLEN)
NAN_BOXED(2116841650,32,FLEN)
NAN_BOXED(3233678967,32,FLEN)
NAN_BOXED(4026531838,32,FLEN)
NAN_BOXED(2116841650,32,FLEN)
NAN_BOXED(3233678967,32,FLEN)
NAN_BOXED(4026531839,32,FLEN)
NAN_BOXED(2116841650,32,FLEN)
NAN_BOXED(3233678967,32,FLEN)
NAN_BOXED(4278190081,32,FLEN)
NAN_BOXED(2116841650,32,FLEN)
NAN_BOXED(3233678967,32,FLEN)
NAN_BOXED(4278190083,32,FLEN)
NAN_BOXED(2116841650,32,FLEN)
NAN_BOXED(3233678967,32,FLEN)
NAN_BOXED(4278190087,32,FLEN)
NAN_BOXED(2116841650,32,FLEN)
NAN_BOXED(3233678967,32,FLEN)
NAN_BOXED(4279867801,32,FLEN)
NAN_BOXED(2116841650,32,FLEN)
NAN_BOXED(3233678967,32,FLEN)
NAN_BOXED(4280586825,32,FLEN)
NAN_BOXED(2116841650,32,FLEN)
NAN_BOXED(3233678967,32,FLEN)
NAN_BOXED(4281545523,32,FLEN)
NAN_BOXED(2116841650,32,FLEN)
NAN_BOXED(3233678967,32,FLEN)
NAN_BOXED(4281785197,32,FLEN)
NAN_BOXED(2116841650,32,FLEN)
NAN_BOXED(3233678967,32,FLEN)
NAN_BOXED(4282104763,32,FLEN)
NAN_BOXED(2116841650,32,FLEN)
NAN_BOXED(3233678967,32,FLEN)
NAN_BOXED(4282664004,32,FLEN)
NAN_BOXED(2116841650,32,FLEN)
NAN_BOXED(3233678967,32,FLEN)
NAN_BOXED(4283223244,32,FLEN)
NAN_BOXED(2116841650,32,FLEN)
NAN_BOXED(3233678967,32,FLEN)
NAN_BOXED(4284181942,32,FLEN)
NAN_BOXED(2116841650,32,FLEN)
NAN_BOXED(3233678967,32,FLEN)
NAN_BOXED(4284900966,32,FLEN)
NAN_BOXED(2116841650,32,FLEN)
NAN_BOXED(3233678967,32,FLEN)
NAN_BOXED(4285380315,32,FLEN)
NAN_BOXED(2116841650,32,FLEN)
NAN_BOXED(3233678967,32,FLEN)
NAN_BOXED(4286578680,32,FLEN)
NAN_BOXED(2116841650,32,FLEN)
NAN_BOXED(3233678967,32,FLEN)
NAN_BOXED(4286578684,32,FLEN)
NAN_BOXED(2116841650,32,FLEN)
NAN_BOXED(3233678967,32,FLEN)
NAN_BOXED(4286578686,32,FLEN)
NAN_BOXED(2117026451,32,FLEN)
NAN_BOXED(12253125,32,FLEN)
NAN_BOXED(1065353217,32,FLEN)
NAN_BOXED(2117026451,32,FLEN)
NAN_BOXED(12253125,32,FLEN)
NAN_BOXED(1065353219,32,FLEN)
NAN_BOXED(2117026451,32,FLEN)
NAN_BOXED(12253125,32,FLEN)
NAN_BOXED(1065353223,32,FLEN)
NAN_BOXED(2117026451,32,FLEN)
NAN_BOXED(12253125,32,FLEN)
NAN_BOXED(1067030937,32,FLEN)
NAN_BOXED(2117026451,32,FLEN)
NAN_BOXED(12253125,32,FLEN)
NAN_BOXED(1067749961,32,FLEN)
NAN_BOXED(2117026451,32,FLEN)
NAN_BOXED(12253125,32,FLEN)
NAN_BOXED(1068708659,32,FLEN)
NAN_BOXED(2117026451,32,FLEN)
NAN_BOXED(12253125,32,FLEN)
NAN_BOXED(1068948333,32,FLEN)
NAN_BOXED(2117026451,32,FLEN)
NAN_BOXED(12253125,32,FLEN)
NAN_BOXED(1069267899,32,FLEN)
NAN_BOXED(2117026451,32,FLEN)
NAN_BOXED(12253125,32,FLEN)
NAN_BOXED(1069827140,32,FLEN)
NAN_BOXED(2117026451,32,FLEN)
NAN_BOXED(12253125,32,FLEN)
NAN_BOXED(1070386380,32,FLEN)
NAN_BOXED(2117026451,32,FLEN)
NAN_BOXED(12253125,32,FLEN)
NAN_BOXED(1071345078,32,FLEN)
NAN_BOXED(2117026451,32,FLEN)
NAN_BOXED(12253125,32,FLEN)
NAN_BOXED(1072064102,32,FLEN)
NAN_BOXED(2117026451,32,FLEN)
NAN_BOXED(12253125,32,FLEN)
NAN_BOXED(1072543451,32,FLEN)
NAN_BOXED(2117026451,32,FLEN)
NAN_BOXED(12253125,32,FLEN)
NAN_BOXED(1073741816,32,FLEN)
NAN_BOXED(2117026451,32,FLEN)
NAN_BOXED(12253125,32,FLEN)
NAN_BOXED(1073741820,32,FLEN)
NAN_BOXED(2117026451,32,FLEN)
NAN_BOXED(12253125,32,FLEN)
NAN_BOXED(1073741822,32,FLEN)
NAN_BOXED(2117026451,32,FLEN)
NAN_BOXED(12253125,32,FLEN)
NAN_BOXED(1266679808,32,FLEN)
NAN_BOXED(2117026451,32,FLEN)
NAN_BOXED(12253125,32,FLEN)
NAN_BOXED(1266679809,32,FLEN)
NAN_BOXED(2117026451,32,FLEN)
NAN_BOXED(12253125,32,FLEN)
NAN_BOXED(1266679811,32,FLEN)
NAN_BOXED(2117026451,32,FLEN)
NAN_BOXED(12253125,32,FLEN)
NAN_BOXED(1266679815,32,FLEN)
NAN_BOXED(2117026451,32,FLEN)
NAN_BOXED(12253125,32,FLEN)
NAN_BOXED(1266679823,32,FLEN)
NAN_BOXED(2117026451,32,FLEN)
NAN_BOXED(12253125,32,FLEN)
NAN_BOXED(1266679839,32,FLEN)
NAN_BOXED(2117026451,32,FLEN)
NAN_BOXED(12253125,32,FLEN)
NAN_BOXED(1266679871,32,FLEN)
NAN_BOXED(2117026451,32,FLEN)
NAN_BOXED(12253125,32,FLEN)
NAN_BOXED(1266679935,32,FLEN)
NAN_BOXED(2117026451,32,FLEN)
NAN_BOXED(12253125,32,FLEN)
NAN_BOXED(1266680063,32,FLEN)
NAN_BOXED(2117026451,32,FLEN)
NAN_BOXED(12253125,32,FLEN)
NAN_BOXED(1266680319,32,FLEN)
NAN_BOXED(2117026451,32,FLEN)
NAN_BOXED(12253125,32,FLEN)
NAN_BOXED(1266680831,32,FLEN)
NAN_BOXED(2117026451,32,FLEN)
NAN_BOXED(12253125,32,FLEN)
NAN_BOXED(1266681855,32,FLEN)
NAN_BOXED(2117026451,32,FLEN)
NAN_BOXED(12253125,32,FLEN)
NAN_BOXED(1266683903,32,FLEN)
NAN_BOXED(2117026451,32,FLEN)
NAN_BOXED(12253125,32,FLEN)
NAN_BOXED(1266687999,32,FLEN)
NAN_BOXED(2117026451,32,FLEN)
NAN_BOXED(12253125,32,FLEN)
NAN_BOXED(1266696191,32,FLEN)
NAN_BOXED(2117026451,32,FLEN)
NAN_BOXED(12253125,32,FLEN)
NAN_BOXED(1266712575,32,FLEN)
NAN_BOXED(2117026451,32,FLEN)
NAN_BOXED(12253125,32,FLEN)
NAN_BOXED(1266745343,32,FLEN)
NAN_BOXED(2117026451,32,FLEN)
NAN_BOXED(12253125,32,FLEN)
NAN_BOXED(1266810879,32,FLEN)
NAN_BOXED(2117026451,32,FLEN)
NAN_BOXED(12253125,32,FLEN)
NAN_BOXED(1266941951,32,FLEN)
NAN_BOXED(2117026451,32,FLEN)
NAN_BOXED(12253125,32,FLEN)
NAN_BOXED(1267204095,32,FLEN)
NAN_BOXED(2117026451,32,FLEN)
NAN_BOXED(12253125,32,FLEN)
NAN_BOXED(1267728383,32,FLEN)
NAN_BOXED(2117026451,32,FLEN)
NAN_BOXED(12253125,32,FLEN)
NAN_BOXED(1268776959,32,FLEN)
NAN_BOXED(2117026451,32,FLEN)
NAN_BOXED(12253125,32,FLEN)
NAN_BOXED(1270874111,32,FLEN)
NAN_BOXED(2117026451,32,FLEN)
NAN_BOXED(12253125,32,FLEN)
NAN_BOXED(1270874112,32,FLEN)
NAN_BOXED(2117026451,32,FLEN)
NAN_BOXED(12253125,32,FLEN)
NAN_BOXED(1272971264,32,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
