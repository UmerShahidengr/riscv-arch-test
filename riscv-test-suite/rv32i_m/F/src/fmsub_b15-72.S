
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 14:18:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32F/fmsub.s.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.s instruction of the RISC-V RV32F_Zicsr,RV32FD_Zicsr,RV64F_Zicsr,RV64FD_Zicsr extension for the fmsub_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF_Zicsr,RV32IFD_Zicsr,RV64IF_Zicsr,RV64IFD_Zicsr,RV32EF_Zicsr,RV32EFD_Zicsr,RV64EF_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fmsub_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*F.*);def TEST_CASE_1=True;",fmsub_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_9088:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3557bf and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3557bf; op2val:0x0;
op3val:0xcfff000; valaddr_reg:x3; val_offset:27264*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27264*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9089:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3557bf and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3557bf; op2val:0x0;
op3val:0xcfff800; valaddr_reg:x3; val_offset:27267*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27267*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9090:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3557bf and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3557bf; op2val:0x0;
op3val:0xcfffc00; valaddr_reg:x3; val_offset:27270*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27270*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9091:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3557bf and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3557bf; op2val:0x0;
op3val:0xcfffe00; valaddr_reg:x3; val_offset:27273*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27273*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9092:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3557bf and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3557bf; op2val:0x0;
op3val:0xcffff00; valaddr_reg:x3; val_offset:27276*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27276*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9093:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3557bf and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3557bf; op2val:0x0;
op3val:0xcffff80; valaddr_reg:x3; val_offset:27279*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27279*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9094:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3557bf and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3557bf; op2val:0x0;
op3val:0xcffffc0; valaddr_reg:x3; val_offset:27282*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27282*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9095:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3557bf and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3557bf; op2val:0x0;
op3val:0xcffffe0; valaddr_reg:x3; val_offset:27285*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27285*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9096:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3557bf and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3557bf; op2val:0x0;
op3val:0xcfffff0; valaddr_reg:x3; val_offset:27288*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27288*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9097:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3557bf and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3557bf; op2val:0x0;
op3val:0xcfffff8; valaddr_reg:x3; val_offset:27291*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27291*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9098:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3557bf and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3557bf; op2val:0x0;
op3val:0xcfffffc; valaddr_reg:x3; val_offset:27294*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27294*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9099:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3557bf and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3557bf; op2val:0x0;
op3val:0xcfffffe; valaddr_reg:x3; val_offset:27297*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27297*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9100:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3557bf and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3557bf; op2val:0x0;
op3val:0xcffffff; valaddr_reg:x3; val_offset:27300*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27300*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9101:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x397e0b and fs2 == 0 and fe2 == 0x81 and fm2 == 0x30a776 and fs3 == 0 and fe3 == 0xe7 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e397e0b; op2val:0x40b0a776;
op3val:0x73800000; valaddr_reg:x3; val_offset:27303*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27303*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9102:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x397e0b and fs2 == 0 and fe2 == 0x81 and fm2 == 0x30a776 and fs3 == 0 and fe3 == 0xe7 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e397e0b; op2val:0x40b0a776;
op3val:0x73800001; valaddr_reg:x3; val_offset:27306*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27306*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9103:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x397e0b and fs2 == 0 and fe2 == 0x81 and fm2 == 0x30a776 and fs3 == 0 and fe3 == 0xe7 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e397e0b; op2val:0x40b0a776;
op3val:0x73800003; valaddr_reg:x3; val_offset:27309*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27309*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9104:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x397e0b and fs2 == 0 and fe2 == 0x81 and fm2 == 0x30a776 and fs3 == 0 and fe3 == 0xe7 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e397e0b; op2val:0x40b0a776;
op3val:0x73800007; valaddr_reg:x3; val_offset:27312*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27312*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9105:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x397e0b and fs2 == 0 and fe2 == 0x81 and fm2 == 0x30a776 and fs3 == 0 and fe3 == 0xe7 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e397e0b; op2val:0x40b0a776;
op3val:0x7380000f; valaddr_reg:x3; val_offset:27315*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27315*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9106:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x397e0b and fs2 == 0 and fe2 == 0x81 and fm2 == 0x30a776 and fs3 == 0 and fe3 == 0xe7 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e397e0b; op2val:0x40b0a776;
op3val:0x7380001f; valaddr_reg:x3; val_offset:27318*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27318*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9107:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x397e0b and fs2 == 0 and fe2 == 0x81 and fm2 == 0x30a776 and fs3 == 0 and fe3 == 0xe7 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e397e0b; op2val:0x40b0a776;
op3val:0x7380003f; valaddr_reg:x3; val_offset:27321*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27321*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9108:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x397e0b and fs2 == 0 and fe2 == 0x81 and fm2 == 0x30a776 and fs3 == 0 and fe3 == 0xe7 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e397e0b; op2val:0x40b0a776;
op3val:0x7380007f; valaddr_reg:x3; val_offset:27324*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27324*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9109:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x397e0b and fs2 == 0 and fe2 == 0x81 and fm2 == 0x30a776 and fs3 == 0 and fe3 == 0xe7 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e397e0b; op2val:0x40b0a776;
op3val:0x738000ff; valaddr_reg:x3; val_offset:27327*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27327*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9110:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x397e0b and fs2 == 0 and fe2 == 0x81 and fm2 == 0x30a776 and fs3 == 0 and fe3 == 0xe7 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e397e0b; op2val:0x40b0a776;
op3val:0x738001ff; valaddr_reg:x3; val_offset:27330*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27330*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9111:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x397e0b and fs2 == 0 and fe2 == 0x81 and fm2 == 0x30a776 and fs3 == 0 and fe3 == 0xe7 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e397e0b; op2val:0x40b0a776;
op3val:0x738003ff; valaddr_reg:x3; val_offset:27333*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27333*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9112:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x397e0b and fs2 == 0 and fe2 == 0x81 and fm2 == 0x30a776 and fs3 == 0 and fe3 == 0xe7 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e397e0b; op2val:0x40b0a776;
op3val:0x738007ff; valaddr_reg:x3; val_offset:27336*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27336*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9113:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x397e0b and fs2 == 0 and fe2 == 0x81 and fm2 == 0x30a776 and fs3 == 0 and fe3 == 0xe7 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e397e0b; op2val:0x40b0a776;
op3val:0x73800fff; valaddr_reg:x3; val_offset:27339*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27339*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9114:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x397e0b and fs2 == 0 and fe2 == 0x81 and fm2 == 0x30a776 and fs3 == 0 and fe3 == 0xe7 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e397e0b; op2val:0x40b0a776;
op3val:0x73801fff; valaddr_reg:x3; val_offset:27342*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27342*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9115:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x397e0b and fs2 == 0 and fe2 == 0x81 and fm2 == 0x30a776 and fs3 == 0 and fe3 == 0xe7 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e397e0b; op2val:0x40b0a776;
op3val:0x73803fff; valaddr_reg:x3; val_offset:27345*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27345*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9116:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x397e0b and fs2 == 0 and fe2 == 0x81 and fm2 == 0x30a776 and fs3 == 0 and fe3 == 0xe7 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e397e0b; op2val:0x40b0a776;
op3val:0x73807fff; valaddr_reg:x3; val_offset:27348*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27348*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9117:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x397e0b and fs2 == 0 and fe2 == 0x81 and fm2 == 0x30a776 and fs3 == 0 and fe3 == 0xe7 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e397e0b; op2val:0x40b0a776;
op3val:0x7380ffff; valaddr_reg:x3; val_offset:27351*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27351*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9118:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x397e0b and fs2 == 0 and fe2 == 0x81 and fm2 == 0x30a776 and fs3 == 0 and fe3 == 0xe7 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e397e0b; op2val:0x40b0a776;
op3val:0x7381ffff; valaddr_reg:x3; val_offset:27354*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27354*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9119:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x397e0b and fs2 == 0 and fe2 == 0x81 and fm2 == 0x30a776 and fs3 == 0 and fe3 == 0xe7 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e397e0b; op2val:0x40b0a776;
op3val:0x7383ffff; valaddr_reg:x3; val_offset:27357*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27357*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9120:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x397e0b and fs2 == 0 and fe2 == 0x81 and fm2 == 0x30a776 and fs3 == 0 and fe3 == 0xe7 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e397e0b; op2val:0x40b0a776;
op3val:0x7387ffff; valaddr_reg:x3; val_offset:27360*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27360*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9121:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x397e0b and fs2 == 0 and fe2 == 0x81 and fm2 == 0x30a776 and fs3 == 0 and fe3 == 0xe7 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e397e0b; op2val:0x40b0a776;
op3val:0x738fffff; valaddr_reg:x3; val_offset:27363*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27363*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9122:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x397e0b and fs2 == 0 and fe2 == 0x81 and fm2 == 0x30a776 and fs3 == 0 and fe3 == 0xe7 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e397e0b; op2val:0x40b0a776;
op3val:0x739fffff; valaddr_reg:x3; val_offset:27366*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27366*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9123:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x397e0b and fs2 == 0 and fe2 == 0x81 and fm2 == 0x30a776 and fs3 == 0 and fe3 == 0xe7 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e397e0b; op2val:0x40b0a776;
op3val:0x73bfffff; valaddr_reg:x3; val_offset:27369*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27369*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9124:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x397e0b and fs2 == 0 and fe2 == 0x81 and fm2 == 0x30a776 and fs3 == 0 and fe3 == 0xe7 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e397e0b; op2val:0x40b0a776;
op3val:0x73c00000; valaddr_reg:x3; val_offset:27372*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27372*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9125:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x397e0b and fs2 == 0 and fe2 == 0x81 and fm2 == 0x30a776 and fs3 == 0 and fe3 == 0xe7 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e397e0b; op2val:0x40b0a776;
op3val:0x73e00000; valaddr_reg:x3; val_offset:27375*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27375*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9126:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x397e0b and fs2 == 0 and fe2 == 0x81 and fm2 == 0x30a776 and fs3 == 0 and fe3 == 0xe7 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e397e0b; op2val:0x40b0a776;
op3val:0x73f00000; valaddr_reg:x3; val_offset:27378*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27378*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9127:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x397e0b and fs2 == 0 and fe2 == 0x81 and fm2 == 0x30a776 and fs3 == 0 and fe3 == 0xe7 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e397e0b; op2val:0x40b0a776;
op3val:0x73f80000; valaddr_reg:x3; val_offset:27381*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27381*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9128:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x397e0b and fs2 == 0 and fe2 == 0x81 and fm2 == 0x30a776 and fs3 == 0 and fe3 == 0xe7 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e397e0b; op2val:0x40b0a776;
op3val:0x73fc0000; valaddr_reg:x3; val_offset:27384*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27384*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9129:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x397e0b and fs2 == 0 and fe2 == 0x81 and fm2 == 0x30a776 and fs3 == 0 and fe3 == 0xe7 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e397e0b; op2val:0x40b0a776;
op3val:0x73fe0000; valaddr_reg:x3; val_offset:27387*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27387*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9130:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x397e0b and fs2 == 0 and fe2 == 0x81 and fm2 == 0x30a776 and fs3 == 0 and fe3 == 0xe7 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e397e0b; op2val:0x40b0a776;
op3val:0x73ff0000; valaddr_reg:x3; val_offset:27390*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27390*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9131:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x397e0b and fs2 == 0 and fe2 == 0x81 and fm2 == 0x30a776 and fs3 == 0 and fe3 == 0xe7 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e397e0b; op2val:0x40b0a776;
op3val:0x73ff8000; valaddr_reg:x3; val_offset:27393*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27393*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9132:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x397e0b and fs2 == 0 and fe2 == 0x81 and fm2 == 0x30a776 and fs3 == 0 and fe3 == 0xe7 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e397e0b; op2val:0x40b0a776;
op3val:0x73ffc000; valaddr_reg:x3; val_offset:27396*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27396*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9133:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x397e0b and fs2 == 0 and fe2 == 0x81 and fm2 == 0x30a776 and fs3 == 0 and fe3 == 0xe7 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e397e0b; op2val:0x40b0a776;
op3val:0x73ffe000; valaddr_reg:x3; val_offset:27399*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27399*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9134:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x397e0b and fs2 == 0 and fe2 == 0x81 and fm2 == 0x30a776 and fs3 == 0 and fe3 == 0xe7 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e397e0b; op2val:0x40b0a776;
op3val:0x73fff000; valaddr_reg:x3; val_offset:27402*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27402*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9135:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x397e0b and fs2 == 0 and fe2 == 0x81 and fm2 == 0x30a776 and fs3 == 0 and fe3 == 0xe7 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e397e0b; op2val:0x40b0a776;
op3val:0x73fff800; valaddr_reg:x3; val_offset:27405*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27405*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9136:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x397e0b and fs2 == 0 and fe2 == 0x81 and fm2 == 0x30a776 and fs3 == 0 and fe3 == 0xe7 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e397e0b; op2val:0x40b0a776;
op3val:0x73fffc00; valaddr_reg:x3; val_offset:27408*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27408*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9137:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x397e0b and fs2 == 0 and fe2 == 0x81 and fm2 == 0x30a776 and fs3 == 0 and fe3 == 0xe7 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e397e0b; op2val:0x40b0a776;
op3val:0x73fffe00; valaddr_reg:x3; val_offset:27411*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27411*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9138:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x397e0b and fs2 == 0 and fe2 == 0x81 and fm2 == 0x30a776 and fs3 == 0 and fe3 == 0xe7 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e397e0b; op2val:0x40b0a776;
op3val:0x73ffff00; valaddr_reg:x3; val_offset:27414*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27414*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9139:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x397e0b and fs2 == 0 and fe2 == 0x81 and fm2 == 0x30a776 and fs3 == 0 and fe3 == 0xe7 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e397e0b; op2val:0x40b0a776;
op3val:0x73ffff80; valaddr_reg:x3; val_offset:27417*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27417*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9140:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x397e0b and fs2 == 0 and fe2 == 0x81 and fm2 == 0x30a776 and fs3 == 0 and fe3 == 0xe7 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e397e0b; op2val:0x40b0a776;
op3val:0x73ffffc0; valaddr_reg:x3; val_offset:27420*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27420*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9141:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x397e0b and fs2 == 0 and fe2 == 0x81 and fm2 == 0x30a776 and fs3 == 0 and fe3 == 0xe7 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e397e0b; op2val:0x40b0a776;
op3val:0x73ffffe0; valaddr_reg:x3; val_offset:27423*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27423*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9142:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x397e0b and fs2 == 0 and fe2 == 0x81 and fm2 == 0x30a776 and fs3 == 0 and fe3 == 0xe7 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e397e0b; op2val:0x40b0a776;
op3val:0x73fffff0; valaddr_reg:x3; val_offset:27426*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27426*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9143:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x397e0b and fs2 == 0 and fe2 == 0x81 and fm2 == 0x30a776 and fs3 == 0 and fe3 == 0xe7 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e397e0b; op2val:0x40b0a776;
op3val:0x73fffff8; valaddr_reg:x3; val_offset:27429*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27429*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9144:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x397e0b and fs2 == 0 and fe2 == 0x81 and fm2 == 0x30a776 and fs3 == 0 and fe3 == 0xe7 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e397e0b; op2val:0x40b0a776;
op3val:0x73fffffc; valaddr_reg:x3; val_offset:27432*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27432*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9145:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x397e0b and fs2 == 0 and fe2 == 0x81 and fm2 == 0x30a776 and fs3 == 0 and fe3 == 0xe7 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e397e0b; op2val:0x40b0a776;
op3val:0x73fffffe; valaddr_reg:x3; val_offset:27435*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27435*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9146:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x397e0b and fs2 == 0 and fe2 == 0x81 and fm2 == 0x30a776 and fs3 == 0 and fe3 == 0xe7 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e397e0b; op2val:0x40b0a776;
op3val:0x73ffffff; valaddr_reg:x3; val_offset:27438*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27438*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9147:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x397e0b and fs2 == 0 and fe2 == 0x81 and fm2 == 0x30a776 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e397e0b; op2val:0x40b0a776;
op3val:0x7f000001; valaddr_reg:x3; val_offset:27441*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27441*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9148:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x397e0b and fs2 == 0 and fe2 == 0x81 and fm2 == 0x30a776 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e397e0b; op2val:0x40b0a776;
op3val:0x7f000003; valaddr_reg:x3; val_offset:27444*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27444*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9149:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x397e0b and fs2 == 0 and fe2 == 0x81 and fm2 == 0x30a776 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e397e0b; op2val:0x40b0a776;
op3val:0x7f000007; valaddr_reg:x3; val_offset:27447*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27447*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9150:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x397e0b and fs2 == 0 and fe2 == 0x81 and fm2 == 0x30a776 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e397e0b; op2val:0x40b0a776;
op3val:0x7f199999; valaddr_reg:x3; val_offset:27450*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27450*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9151:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x397e0b and fs2 == 0 and fe2 == 0x81 and fm2 == 0x30a776 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e397e0b; op2val:0x40b0a776;
op3val:0x7f249249; valaddr_reg:x3; val_offset:27453*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27453*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9152:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x397e0b and fs2 == 0 and fe2 == 0x81 and fm2 == 0x30a776 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e397e0b; op2val:0x40b0a776;
op3val:0x7f333333; valaddr_reg:x3; val_offset:27456*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27456*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9153:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x397e0b and fs2 == 0 and fe2 == 0x81 and fm2 == 0x30a776 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e397e0b; op2val:0x40b0a776;
op3val:0x7f36db6d; valaddr_reg:x3; val_offset:27459*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27459*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9154:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x397e0b and fs2 == 0 and fe2 == 0x81 and fm2 == 0x30a776 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e397e0b; op2val:0x40b0a776;
op3val:0x7f3bbbbb; valaddr_reg:x3; val_offset:27462*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27462*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9155:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x397e0b and fs2 == 0 and fe2 == 0x81 and fm2 == 0x30a776 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e397e0b; op2val:0x40b0a776;
op3val:0x7f444444; valaddr_reg:x3; val_offset:27465*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27465*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9156:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x397e0b and fs2 == 0 and fe2 == 0x81 and fm2 == 0x30a776 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e397e0b; op2val:0x40b0a776;
op3val:0x7f4ccccc; valaddr_reg:x3; val_offset:27468*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27468*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9157:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x397e0b and fs2 == 0 and fe2 == 0x81 and fm2 == 0x30a776 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e397e0b; op2val:0x40b0a776;
op3val:0x7f5b6db6; valaddr_reg:x3; val_offset:27471*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27471*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9158:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x397e0b and fs2 == 0 and fe2 == 0x81 and fm2 == 0x30a776 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e397e0b; op2val:0x40b0a776;
op3val:0x7f666666; valaddr_reg:x3; val_offset:27474*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27474*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9159:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x397e0b and fs2 == 0 and fe2 == 0x81 and fm2 == 0x30a776 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e397e0b; op2val:0x40b0a776;
op3val:0x7f6db6db; valaddr_reg:x3; val_offset:27477*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27477*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9160:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x397e0b and fs2 == 0 and fe2 == 0x81 and fm2 == 0x30a776 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e397e0b; op2val:0x40b0a776;
op3val:0x7f7ffff8; valaddr_reg:x3; val_offset:27480*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27480*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9161:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x397e0b and fs2 == 0 and fe2 == 0x81 and fm2 == 0x30a776 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e397e0b; op2val:0x40b0a776;
op3val:0x7f7ffffc; valaddr_reg:x3; val_offset:27483*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27483*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9162:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x397e0b and fs2 == 0 and fe2 == 0x81 and fm2 == 0x30a776 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e397e0b; op2val:0x40b0a776;
op3val:0x7f7ffffe; valaddr_reg:x3; val_offset:27486*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27486*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9163:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3d8318 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2ce83c and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3d8318; op2val:0xace83c;
op3val:0x3f800001; valaddr_reg:x3; val_offset:27489*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27489*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9164:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3d8318 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2ce83c and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3d8318; op2val:0xace83c;
op3val:0x3f800003; valaddr_reg:x3; val_offset:27492*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27492*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9165:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3d8318 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2ce83c and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3d8318; op2val:0xace83c;
op3val:0x3f800007; valaddr_reg:x3; val_offset:27495*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27495*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9166:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3d8318 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2ce83c and fs3 == 0 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3d8318; op2val:0xace83c;
op3val:0x3f999999; valaddr_reg:x3; val_offset:27498*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27498*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9167:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3d8318 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2ce83c and fs3 == 0 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3d8318; op2val:0xace83c;
op3val:0x3fa49249; valaddr_reg:x3; val_offset:27501*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27501*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9168:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3d8318 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2ce83c and fs3 == 0 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3d8318; op2val:0xace83c;
op3val:0x3fb33333; valaddr_reg:x3; val_offset:27504*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27504*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9169:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3d8318 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2ce83c and fs3 == 0 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3d8318; op2val:0xace83c;
op3val:0x3fb6db6d; valaddr_reg:x3; val_offset:27507*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27507*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9170:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3d8318 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2ce83c and fs3 == 0 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3d8318; op2val:0xace83c;
op3val:0x3fbbbbbb; valaddr_reg:x3; val_offset:27510*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27510*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9171:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3d8318 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2ce83c and fs3 == 0 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3d8318; op2val:0xace83c;
op3val:0x3fc44444; valaddr_reg:x3; val_offset:27513*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27513*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9172:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3d8318 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2ce83c and fs3 == 0 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3d8318; op2val:0xace83c;
op3val:0x3fcccccc; valaddr_reg:x3; val_offset:27516*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27516*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9173:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3d8318 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2ce83c and fs3 == 0 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3d8318; op2val:0xace83c;
op3val:0x3fdb6db6; valaddr_reg:x3; val_offset:27519*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27519*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9174:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3d8318 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2ce83c and fs3 == 0 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3d8318; op2val:0xace83c;
op3val:0x3fe66666; valaddr_reg:x3; val_offset:27522*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27522*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9175:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3d8318 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2ce83c and fs3 == 0 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3d8318; op2val:0xace83c;
op3val:0x3fedb6db; valaddr_reg:x3; val_offset:27525*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27525*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9176:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3d8318 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2ce83c and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3d8318; op2val:0xace83c;
op3val:0x3ffffff8; valaddr_reg:x3; val_offset:27528*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27528*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9177:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3d8318 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2ce83c and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3d8318; op2val:0xace83c;
op3val:0x3ffffffc; valaddr_reg:x3; val_offset:27531*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27531*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9178:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3d8318 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2ce83c and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3d8318; op2val:0xace83c;
op3val:0x3ffffffe; valaddr_reg:x3; val_offset:27534*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27534*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9179:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3d8318 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2ce83c and fs3 == 0 and fe3 == 0x93 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3d8318; op2val:0xace83c;
op3val:0x49800000; valaddr_reg:x3; val_offset:27537*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27537*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9180:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3d8318 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2ce83c and fs3 == 0 and fe3 == 0x93 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3d8318; op2val:0xace83c;
op3val:0x49800001; valaddr_reg:x3; val_offset:27540*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27540*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9181:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3d8318 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2ce83c and fs3 == 0 and fe3 == 0x93 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3d8318; op2val:0xace83c;
op3val:0x49800003; valaddr_reg:x3; val_offset:27543*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27543*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9182:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3d8318 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2ce83c and fs3 == 0 and fe3 == 0x93 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3d8318; op2val:0xace83c;
op3val:0x49800007; valaddr_reg:x3; val_offset:27546*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27546*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9183:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3d8318 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2ce83c and fs3 == 0 and fe3 == 0x93 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3d8318; op2val:0xace83c;
op3val:0x4980000f; valaddr_reg:x3; val_offset:27549*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27549*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9184:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3d8318 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2ce83c and fs3 == 0 and fe3 == 0x93 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3d8318; op2val:0xace83c;
op3val:0x4980001f; valaddr_reg:x3; val_offset:27552*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27552*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9185:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3d8318 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2ce83c and fs3 == 0 and fe3 == 0x93 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3d8318; op2val:0xace83c;
op3val:0x4980003f; valaddr_reg:x3; val_offset:27555*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27555*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9186:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3d8318 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2ce83c and fs3 == 0 and fe3 == 0x93 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3d8318; op2val:0xace83c;
op3val:0x4980007f; valaddr_reg:x3; val_offset:27558*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27558*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9187:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3d8318 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2ce83c and fs3 == 0 and fe3 == 0x93 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3d8318; op2val:0xace83c;
op3val:0x498000ff; valaddr_reg:x3; val_offset:27561*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27561*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9188:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3d8318 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2ce83c and fs3 == 0 and fe3 == 0x93 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3d8318; op2val:0xace83c;
op3val:0x498001ff; valaddr_reg:x3; val_offset:27564*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27564*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9189:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3d8318 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2ce83c and fs3 == 0 and fe3 == 0x93 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3d8318; op2val:0xace83c;
op3val:0x498003ff; valaddr_reg:x3; val_offset:27567*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27567*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9190:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3d8318 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2ce83c and fs3 == 0 and fe3 == 0x93 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3d8318; op2val:0xace83c;
op3val:0x498007ff; valaddr_reg:x3; val_offset:27570*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27570*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9191:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3d8318 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2ce83c and fs3 == 0 and fe3 == 0x93 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3d8318; op2val:0xace83c;
op3val:0x49800fff; valaddr_reg:x3; val_offset:27573*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27573*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9192:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3d8318 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2ce83c and fs3 == 0 and fe3 == 0x93 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3d8318; op2val:0xace83c;
op3val:0x49801fff; valaddr_reg:x3; val_offset:27576*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27576*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9193:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3d8318 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2ce83c and fs3 == 0 and fe3 == 0x93 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3d8318; op2val:0xace83c;
op3val:0x49803fff; valaddr_reg:x3; val_offset:27579*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27579*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9194:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3d8318 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2ce83c and fs3 == 0 and fe3 == 0x93 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3d8318; op2val:0xace83c;
op3val:0x49807fff; valaddr_reg:x3; val_offset:27582*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27582*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9195:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3d8318 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2ce83c and fs3 == 0 and fe3 == 0x93 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3d8318; op2val:0xace83c;
op3val:0x4980ffff; valaddr_reg:x3; val_offset:27585*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27585*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9196:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3d8318 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2ce83c and fs3 == 0 and fe3 == 0x93 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3d8318; op2val:0xace83c;
op3val:0x4981ffff; valaddr_reg:x3; val_offset:27588*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27588*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9197:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3d8318 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2ce83c and fs3 == 0 and fe3 == 0x93 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3d8318; op2val:0xace83c;
op3val:0x4983ffff; valaddr_reg:x3; val_offset:27591*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27591*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9198:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3d8318 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2ce83c and fs3 == 0 and fe3 == 0x93 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3d8318; op2val:0xace83c;
op3val:0x4987ffff; valaddr_reg:x3; val_offset:27594*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27594*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9199:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3d8318 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2ce83c and fs3 == 0 and fe3 == 0x93 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3d8318; op2val:0xace83c;
op3val:0x498fffff; valaddr_reg:x3; val_offset:27597*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27597*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9200:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3d8318 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2ce83c and fs3 == 0 and fe3 == 0x93 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3d8318; op2val:0xace83c;
op3val:0x499fffff; valaddr_reg:x3; val_offset:27600*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27600*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9201:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3d8318 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2ce83c and fs3 == 0 and fe3 == 0x93 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3d8318; op2val:0xace83c;
op3val:0x49bfffff; valaddr_reg:x3; val_offset:27603*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27603*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9202:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3d8318 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2ce83c and fs3 == 0 and fe3 == 0x93 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3d8318; op2val:0xace83c;
op3val:0x49c00000; valaddr_reg:x3; val_offset:27606*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27606*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9203:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3d8318 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2ce83c and fs3 == 0 and fe3 == 0x93 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3d8318; op2val:0xace83c;
op3val:0x49e00000; valaddr_reg:x3; val_offset:27609*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27609*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9204:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3d8318 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2ce83c and fs3 == 0 and fe3 == 0x93 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3d8318; op2val:0xace83c;
op3val:0x49f00000; valaddr_reg:x3; val_offset:27612*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27612*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9205:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3d8318 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2ce83c and fs3 == 0 and fe3 == 0x93 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3d8318; op2val:0xace83c;
op3val:0x49f80000; valaddr_reg:x3; val_offset:27615*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27615*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9206:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3d8318 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2ce83c and fs3 == 0 and fe3 == 0x93 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3d8318; op2val:0xace83c;
op3val:0x49fc0000; valaddr_reg:x3; val_offset:27618*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27618*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9207:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3d8318 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2ce83c and fs3 == 0 and fe3 == 0x93 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3d8318; op2val:0xace83c;
op3val:0x49fe0000; valaddr_reg:x3; val_offset:27621*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27621*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9208:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3d8318 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2ce83c and fs3 == 0 and fe3 == 0x93 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3d8318; op2val:0xace83c;
op3val:0x49ff0000; valaddr_reg:x3; val_offset:27624*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27624*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9209:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3d8318 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2ce83c and fs3 == 0 and fe3 == 0x93 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3d8318; op2val:0xace83c;
op3val:0x49ff8000; valaddr_reg:x3; val_offset:27627*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27627*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9210:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3d8318 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2ce83c and fs3 == 0 and fe3 == 0x93 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3d8318; op2val:0xace83c;
op3val:0x49ffc000; valaddr_reg:x3; val_offset:27630*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27630*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9211:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3d8318 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2ce83c and fs3 == 0 and fe3 == 0x93 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3d8318; op2val:0xace83c;
op3val:0x49ffe000; valaddr_reg:x3; val_offset:27633*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27633*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9212:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3d8318 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2ce83c and fs3 == 0 and fe3 == 0x93 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3d8318; op2val:0xace83c;
op3val:0x49fff000; valaddr_reg:x3; val_offset:27636*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27636*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9213:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3d8318 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2ce83c and fs3 == 0 and fe3 == 0x93 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3d8318; op2val:0xace83c;
op3val:0x49fff800; valaddr_reg:x3; val_offset:27639*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27639*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9214:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3d8318 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2ce83c and fs3 == 0 and fe3 == 0x93 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3d8318; op2val:0xace83c;
op3val:0x49fffc00; valaddr_reg:x3; val_offset:27642*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27642*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9215:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3d8318 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2ce83c and fs3 == 0 and fe3 == 0x93 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3d8318; op2val:0xace83c;
op3val:0x49fffe00; valaddr_reg:x3; val_offset:27645*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27645*0 + 3*71*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(2117425087,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(218099712,32,FLEN)
NAN_BOXED(2117425087,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(218101760,32,FLEN)
NAN_BOXED(2117425087,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(218102784,32,FLEN)
NAN_BOXED(2117425087,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(218103296,32,FLEN)
NAN_BOXED(2117425087,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(218103552,32,FLEN)
NAN_BOXED(2117425087,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(218103680,32,FLEN)
NAN_BOXED(2117425087,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(218103744,32,FLEN)
NAN_BOXED(2117425087,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(218103776,32,FLEN)
NAN_BOXED(2117425087,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(218103792,32,FLEN)
NAN_BOXED(2117425087,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(218103800,32,FLEN)
NAN_BOXED(2117425087,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(218103804,32,FLEN)
NAN_BOXED(2117425087,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(218103806,32,FLEN)
NAN_BOXED(2117425087,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(218103807,32,FLEN)
NAN_BOXED(2117697035,32,FLEN)
NAN_BOXED(1085319030,32,FLEN)
NAN_BOXED(1937768448,32,FLEN)
NAN_BOXED(2117697035,32,FLEN)
NAN_BOXED(1085319030,32,FLEN)
NAN_BOXED(1937768449,32,FLEN)
NAN_BOXED(2117697035,32,FLEN)
NAN_BOXED(1085319030,32,FLEN)
NAN_BOXED(1937768451,32,FLEN)
NAN_BOXED(2117697035,32,FLEN)
NAN_BOXED(1085319030,32,FLEN)
NAN_BOXED(1937768455,32,FLEN)
NAN_BOXED(2117697035,32,FLEN)
NAN_BOXED(1085319030,32,FLEN)
NAN_BOXED(1937768463,32,FLEN)
NAN_BOXED(2117697035,32,FLEN)
NAN_BOXED(1085319030,32,FLEN)
NAN_BOXED(1937768479,32,FLEN)
NAN_BOXED(2117697035,32,FLEN)
NAN_BOXED(1085319030,32,FLEN)
NAN_BOXED(1937768511,32,FLEN)
NAN_BOXED(2117697035,32,FLEN)
NAN_BOXED(1085319030,32,FLEN)
NAN_BOXED(1937768575,32,FLEN)
NAN_BOXED(2117697035,32,FLEN)
NAN_BOXED(1085319030,32,FLEN)
NAN_BOXED(1937768703,32,FLEN)
NAN_BOXED(2117697035,32,FLEN)
NAN_BOXED(1085319030,32,FLEN)
NAN_BOXED(1937768959,32,FLEN)
NAN_BOXED(2117697035,32,FLEN)
NAN_BOXED(1085319030,32,FLEN)
NAN_BOXED(1937769471,32,FLEN)
NAN_BOXED(2117697035,32,FLEN)
NAN_BOXED(1085319030,32,FLEN)
NAN_BOXED(1937770495,32,FLEN)
NAN_BOXED(2117697035,32,FLEN)
NAN_BOXED(1085319030,32,FLEN)
NAN_BOXED(1937772543,32,FLEN)
NAN_BOXED(2117697035,32,FLEN)
NAN_BOXED(1085319030,32,FLEN)
NAN_BOXED(1937776639,32,FLEN)
NAN_BOXED(2117697035,32,FLEN)
NAN_BOXED(1085319030,32,FLEN)
NAN_BOXED(1937784831,32,FLEN)
NAN_BOXED(2117697035,32,FLEN)
NAN_BOXED(1085319030,32,FLEN)
NAN_BOXED(1937801215,32,FLEN)
NAN_BOXED(2117697035,32,FLEN)
NAN_BOXED(1085319030,32,FLEN)
NAN_BOXED(1937833983,32,FLEN)
NAN_BOXED(2117697035,32,FLEN)
NAN_BOXED(1085319030,32,FLEN)
NAN_BOXED(1937899519,32,FLEN)
NAN_BOXED(2117697035,32,FLEN)
NAN_BOXED(1085319030,32,FLEN)
NAN_BOXED(1938030591,32,FLEN)
NAN_BOXED(2117697035,32,FLEN)
NAN_BOXED(1085319030,32,FLEN)
NAN_BOXED(1938292735,32,FLEN)
NAN_BOXED(2117697035,32,FLEN)
NAN_BOXED(1085319030,32,FLEN)
NAN_BOXED(1938817023,32,FLEN)
NAN_BOXED(2117697035,32,FLEN)
NAN_BOXED(1085319030,32,FLEN)
NAN_BOXED(1939865599,32,FLEN)
NAN_BOXED(2117697035,32,FLEN)
NAN_BOXED(1085319030,32,FLEN)
NAN_BOXED(1941962751,32,FLEN)
NAN_BOXED(2117697035,32,FLEN)
NAN_BOXED(1085319030,32,FLEN)
NAN_BOXED(1941962752,32,FLEN)
NAN_BOXED(2117697035,32,FLEN)
NAN_BOXED(1085319030,32,FLEN)
NAN_BOXED(1944059904,32,FLEN)
NAN_BOXED(2117697035,32,FLEN)
NAN_BOXED(1085319030,32,FLEN)
NAN_BOXED(1945108480,32,FLEN)
NAN_BOXED(2117697035,32,FLEN)
NAN_BOXED(1085319030,32,FLEN)
NAN_BOXED(1945632768,32,FLEN)
NAN_BOXED(2117697035,32,FLEN)
NAN_BOXED(1085319030,32,FLEN)
NAN_BOXED(1945894912,32,FLEN)
NAN_BOXED(2117697035,32,FLEN)
NAN_BOXED(1085319030,32,FLEN)
NAN_BOXED(1946025984,32,FLEN)
NAN_BOXED(2117697035,32,FLEN)
NAN_BOXED(1085319030,32,FLEN)
NAN_BOXED(1946091520,32,FLEN)
NAN_BOXED(2117697035,32,FLEN)
NAN_BOXED(1085319030,32,FLEN)
NAN_BOXED(1946124288,32,FLEN)
NAN_BOXED(2117697035,32,FLEN)
NAN_BOXED(1085319030,32,FLEN)
NAN_BOXED(1946140672,32,FLEN)
NAN_BOXED(2117697035,32,FLEN)
NAN_BOXED(1085319030,32,FLEN)
NAN_BOXED(1946148864,32,FLEN)
NAN_BOXED(2117697035,32,FLEN)
NAN_BOXED(1085319030,32,FLEN)
NAN_BOXED(1946152960,32,FLEN)
NAN_BOXED(2117697035,32,FLEN)
NAN_BOXED(1085319030,32,FLEN)
NAN_BOXED(1946155008,32,FLEN)
NAN_BOXED(2117697035,32,FLEN)
NAN_BOXED(1085319030,32,FLEN)
NAN_BOXED(1946156032,32,FLEN)
NAN_BOXED(2117697035,32,FLEN)
NAN_BOXED(1085319030,32,FLEN)
NAN_BOXED(1946156544,32,FLEN)
NAN_BOXED(2117697035,32,FLEN)
NAN_BOXED(1085319030,32,FLEN)
NAN_BOXED(1946156800,32,FLEN)
NAN_BOXED(2117697035,32,FLEN)
NAN_BOXED(1085319030,32,FLEN)
NAN_BOXED(1946156928,32,FLEN)
NAN_BOXED(2117697035,32,FLEN)
NAN_BOXED(1085319030,32,FLEN)
NAN_BOXED(1946156992,32,FLEN)
NAN_BOXED(2117697035,32,FLEN)
NAN_BOXED(1085319030,32,FLEN)
NAN_BOXED(1946157024,32,FLEN)
NAN_BOXED(2117697035,32,FLEN)
NAN_BOXED(1085319030,32,FLEN)
NAN_BOXED(1946157040,32,FLEN)
NAN_BOXED(2117697035,32,FLEN)
NAN_BOXED(1085319030,32,FLEN)
NAN_BOXED(1946157048,32,FLEN)
NAN_BOXED(2117697035,32,FLEN)
NAN_BOXED(1085319030,32,FLEN)
NAN_BOXED(1946157052,32,FLEN)
NAN_BOXED(2117697035,32,FLEN)
NAN_BOXED(1085319030,32,FLEN)
NAN_BOXED(1946157054,32,FLEN)
NAN_BOXED(2117697035,32,FLEN)
NAN_BOXED(1085319030,32,FLEN)
NAN_BOXED(1946157055,32,FLEN)
NAN_BOXED(2117697035,32,FLEN)
NAN_BOXED(1085319030,32,FLEN)
NAN_BOXED(2130706433,32,FLEN)
NAN_BOXED(2117697035,32,FLEN)
NAN_BOXED(1085319030,32,FLEN)
NAN_BOXED(2130706435,32,FLEN)
NAN_BOXED(2117697035,32,FLEN)
NAN_BOXED(1085319030,32,FLEN)
NAN_BOXED(2130706439,32,FLEN)
NAN_BOXED(2117697035,32,FLEN)
NAN_BOXED(1085319030,32,FLEN)
NAN_BOXED(2132384153,32,FLEN)
NAN_BOXED(2117697035,32,FLEN)
NAN_BOXED(1085319030,32,FLEN)
NAN_BOXED(2133103177,32,FLEN)
NAN_BOXED(2117697035,32,FLEN)
NAN_BOXED(1085319030,32,FLEN)
NAN_BOXED(2134061875,32,FLEN)
NAN_BOXED(2117697035,32,FLEN)
NAN_BOXED(1085319030,32,FLEN)
NAN_BOXED(2134301549,32,FLEN)
NAN_BOXED(2117697035,32,FLEN)
NAN_BOXED(1085319030,32,FLEN)
NAN_BOXED(2134621115,32,FLEN)
NAN_BOXED(2117697035,32,FLEN)
NAN_BOXED(1085319030,32,FLEN)
NAN_BOXED(2135180356,32,FLEN)
NAN_BOXED(2117697035,32,FLEN)
NAN_BOXED(1085319030,32,FLEN)
NAN_BOXED(2135739596,32,FLEN)
NAN_BOXED(2117697035,32,FLEN)
NAN_BOXED(1085319030,32,FLEN)
NAN_BOXED(2136698294,32,FLEN)
NAN_BOXED(2117697035,32,FLEN)
NAN_BOXED(1085319030,32,FLEN)
NAN_BOXED(2137417318,32,FLEN)
NAN_BOXED(2117697035,32,FLEN)
NAN_BOXED(1085319030,32,FLEN)
NAN_BOXED(2137896667,32,FLEN)
NAN_BOXED(2117697035,32,FLEN)
NAN_BOXED(1085319030,32,FLEN)
NAN_BOXED(2139095032,32,FLEN)
NAN_BOXED(2117697035,32,FLEN)
NAN_BOXED(1085319030,32,FLEN)
NAN_BOXED(2139095036,32,FLEN)
NAN_BOXED(2117697035,32,FLEN)
NAN_BOXED(1085319030,32,FLEN)
NAN_BOXED(2139095038,32,FLEN)
NAN_BOXED(2117960472,32,FLEN)
NAN_BOXED(11331644,32,FLEN)
NAN_BOXED(1065353217,32,FLEN)
NAN_BOXED(2117960472,32,FLEN)
NAN_BOXED(11331644,32,FLEN)
NAN_BOXED(1065353219,32,FLEN)
NAN_BOXED(2117960472,32,FLEN)
NAN_BOXED(11331644,32,FLEN)
NAN_BOXED(1065353223,32,FLEN)
NAN_BOXED(2117960472,32,FLEN)
NAN_BOXED(11331644,32,FLEN)
NAN_BOXED(1067030937,32,FLEN)
NAN_BOXED(2117960472,32,FLEN)
NAN_BOXED(11331644,32,FLEN)
NAN_BOXED(1067749961,32,FLEN)
NAN_BOXED(2117960472,32,FLEN)
NAN_BOXED(11331644,32,FLEN)
NAN_BOXED(1068708659,32,FLEN)
NAN_BOXED(2117960472,32,FLEN)
NAN_BOXED(11331644,32,FLEN)
NAN_BOXED(1068948333,32,FLEN)
NAN_BOXED(2117960472,32,FLEN)
NAN_BOXED(11331644,32,FLEN)
NAN_BOXED(1069267899,32,FLEN)
NAN_BOXED(2117960472,32,FLEN)
NAN_BOXED(11331644,32,FLEN)
NAN_BOXED(1069827140,32,FLEN)
NAN_BOXED(2117960472,32,FLEN)
NAN_BOXED(11331644,32,FLEN)
NAN_BOXED(1070386380,32,FLEN)
NAN_BOXED(2117960472,32,FLEN)
NAN_BOXED(11331644,32,FLEN)
NAN_BOXED(1071345078,32,FLEN)
NAN_BOXED(2117960472,32,FLEN)
NAN_BOXED(11331644,32,FLEN)
NAN_BOXED(1072064102,32,FLEN)
NAN_BOXED(2117960472,32,FLEN)
NAN_BOXED(11331644,32,FLEN)
NAN_BOXED(1072543451,32,FLEN)
NAN_BOXED(2117960472,32,FLEN)
NAN_BOXED(11331644,32,FLEN)
NAN_BOXED(1073741816,32,FLEN)
NAN_BOXED(2117960472,32,FLEN)
NAN_BOXED(11331644,32,FLEN)
NAN_BOXED(1073741820,32,FLEN)
NAN_BOXED(2117960472,32,FLEN)
NAN_BOXED(11331644,32,FLEN)
NAN_BOXED(1073741822,32,FLEN)
NAN_BOXED(2117960472,32,FLEN)
NAN_BOXED(11331644,32,FLEN)
NAN_BOXED(1233125376,32,FLEN)
NAN_BOXED(2117960472,32,FLEN)
NAN_BOXED(11331644,32,FLEN)
NAN_BOXED(1233125377,32,FLEN)
NAN_BOXED(2117960472,32,FLEN)
NAN_BOXED(11331644,32,FLEN)
NAN_BOXED(1233125379,32,FLEN)
NAN_BOXED(2117960472,32,FLEN)
NAN_BOXED(11331644,32,FLEN)
NAN_BOXED(1233125383,32,FLEN)
NAN_BOXED(2117960472,32,FLEN)
NAN_BOXED(11331644,32,FLEN)
NAN_BOXED(1233125391,32,FLEN)
NAN_BOXED(2117960472,32,FLEN)
NAN_BOXED(11331644,32,FLEN)
NAN_BOXED(1233125407,32,FLEN)
NAN_BOXED(2117960472,32,FLEN)
NAN_BOXED(11331644,32,FLEN)
NAN_BOXED(1233125439,32,FLEN)
NAN_BOXED(2117960472,32,FLEN)
NAN_BOXED(11331644,32,FLEN)
NAN_BOXED(1233125503,32,FLEN)
NAN_BOXED(2117960472,32,FLEN)
NAN_BOXED(11331644,32,FLEN)
NAN_BOXED(1233125631,32,FLEN)
NAN_BOXED(2117960472,32,FLEN)
NAN_BOXED(11331644,32,FLEN)
NAN_BOXED(1233125887,32,FLEN)
NAN_BOXED(2117960472,32,FLEN)
NAN_BOXED(11331644,32,FLEN)
NAN_BOXED(1233126399,32,FLEN)
NAN_BOXED(2117960472,32,FLEN)
NAN_BOXED(11331644,32,FLEN)
NAN_BOXED(1233127423,32,FLEN)
NAN_BOXED(2117960472,32,FLEN)
NAN_BOXED(11331644,32,FLEN)
NAN_BOXED(1233129471,32,FLEN)
NAN_BOXED(2117960472,32,FLEN)
NAN_BOXED(11331644,32,FLEN)
NAN_BOXED(1233133567,32,FLEN)
NAN_BOXED(2117960472,32,FLEN)
NAN_BOXED(11331644,32,FLEN)
NAN_BOXED(1233141759,32,FLEN)
NAN_BOXED(2117960472,32,FLEN)
NAN_BOXED(11331644,32,FLEN)
NAN_BOXED(1233158143,32,FLEN)
NAN_BOXED(2117960472,32,FLEN)
NAN_BOXED(11331644,32,FLEN)
NAN_BOXED(1233190911,32,FLEN)
NAN_BOXED(2117960472,32,FLEN)
NAN_BOXED(11331644,32,FLEN)
NAN_BOXED(1233256447,32,FLEN)
NAN_BOXED(2117960472,32,FLEN)
NAN_BOXED(11331644,32,FLEN)
NAN_BOXED(1233387519,32,FLEN)
NAN_BOXED(2117960472,32,FLEN)
NAN_BOXED(11331644,32,FLEN)
NAN_BOXED(1233649663,32,FLEN)
NAN_BOXED(2117960472,32,FLEN)
NAN_BOXED(11331644,32,FLEN)
NAN_BOXED(1234173951,32,FLEN)
NAN_BOXED(2117960472,32,FLEN)
NAN_BOXED(11331644,32,FLEN)
NAN_BOXED(1235222527,32,FLEN)
NAN_BOXED(2117960472,32,FLEN)
NAN_BOXED(11331644,32,FLEN)
NAN_BOXED(1237319679,32,FLEN)
NAN_BOXED(2117960472,32,FLEN)
NAN_BOXED(11331644,32,FLEN)
NAN_BOXED(1237319680,32,FLEN)
NAN_BOXED(2117960472,32,FLEN)
NAN_BOXED(11331644,32,FLEN)
NAN_BOXED(1239416832,32,FLEN)
NAN_BOXED(2117960472,32,FLEN)
NAN_BOXED(11331644,32,FLEN)
NAN_BOXED(1240465408,32,FLEN)
NAN_BOXED(2117960472,32,FLEN)
NAN_BOXED(11331644,32,FLEN)
NAN_BOXED(1240989696,32,FLEN)
NAN_BOXED(2117960472,32,FLEN)
NAN_BOXED(11331644,32,FLEN)
NAN_BOXED(1241251840,32,FLEN)
NAN_BOXED(2117960472,32,FLEN)
NAN_BOXED(11331644,32,FLEN)
NAN_BOXED(1241382912,32,FLEN)
NAN_BOXED(2117960472,32,FLEN)
NAN_BOXED(11331644,32,FLEN)
NAN_BOXED(1241448448,32,FLEN)
NAN_BOXED(2117960472,32,FLEN)
NAN_BOXED(11331644,32,FLEN)
NAN_BOXED(1241481216,32,FLEN)
NAN_BOXED(2117960472,32,FLEN)
NAN_BOXED(11331644,32,FLEN)
NAN_BOXED(1241497600,32,FLEN)
NAN_BOXED(2117960472,32,FLEN)
NAN_BOXED(11331644,32,FLEN)
NAN_BOXED(1241505792,32,FLEN)
NAN_BOXED(2117960472,32,FLEN)
NAN_BOXED(11331644,32,FLEN)
NAN_BOXED(1241509888,32,FLEN)
NAN_BOXED(2117960472,32,FLEN)
NAN_BOXED(11331644,32,FLEN)
NAN_BOXED(1241511936,32,FLEN)
NAN_BOXED(2117960472,32,FLEN)
NAN_BOXED(11331644,32,FLEN)
NAN_BOXED(1241512960,32,FLEN)
NAN_BOXED(2117960472,32,FLEN)
NAN_BOXED(11331644,32,FLEN)
NAN_BOXED(1241513472,32,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
