
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 14:18:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32F/fmsub.s.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.s instruction of the RISC-V RV32F_Zicsr,RV32FD_Zicsr,RV64F_Zicsr,RV64FD_Zicsr extension for the fmsub_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF_Zicsr,RV32IFD_Zicsr,RV64IF_Zicsr,RV64IFD_Zicsr,RV32EF_Zicsr,RV32EFD_Zicsr,RV64EF_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fmsub_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*F.*);def TEST_CASE_1=True;",fmsub_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_9216:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3d8318 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2ce83c and fs3 == 0 and fe3 == 0x93 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3d8318; op2val:0xace83c;
op3val:0x49ffff00; valaddr_reg:x3; val_offset:27648*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27648*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9217:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3d8318 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2ce83c and fs3 == 0 and fe3 == 0x93 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3d8318; op2val:0xace83c;
op3val:0x49ffff80; valaddr_reg:x3; val_offset:27651*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27651*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9218:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3d8318 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2ce83c and fs3 == 0 and fe3 == 0x93 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3d8318; op2val:0xace83c;
op3val:0x49ffffc0; valaddr_reg:x3; val_offset:27654*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27654*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9219:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3d8318 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2ce83c and fs3 == 0 and fe3 == 0x93 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3d8318; op2val:0xace83c;
op3val:0x49ffffe0; valaddr_reg:x3; val_offset:27657*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27657*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9220:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3d8318 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2ce83c and fs3 == 0 and fe3 == 0x93 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3d8318; op2val:0xace83c;
op3val:0x49fffff0; valaddr_reg:x3; val_offset:27660*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27660*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9221:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3d8318 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2ce83c and fs3 == 0 and fe3 == 0x93 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3d8318; op2val:0xace83c;
op3val:0x49fffff8; valaddr_reg:x3; val_offset:27663*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27663*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9222:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3d8318 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2ce83c and fs3 == 0 and fe3 == 0x93 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3d8318; op2val:0xace83c;
op3val:0x49fffffc; valaddr_reg:x3; val_offset:27666*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27666*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9223:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3d8318 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2ce83c and fs3 == 0 and fe3 == 0x93 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3d8318; op2val:0xace83c;
op3val:0x49fffffe; valaddr_reg:x3; val_offset:27669*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27669*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9224:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3d8318 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2ce83c and fs3 == 0 and fe3 == 0x93 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3d8318; op2val:0xace83c;
op3val:0x49ffffff; valaddr_reg:x3; val_offset:27672*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27672*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9225:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3e54c4 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2c29c1 and fs3 == 0 and fe3 == 0x68 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3e54c4; op2val:0xac29c1;
op3val:0x34000000; valaddr_reg:x3; val_offset:27675*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27675*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9226:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3e54c4 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2c29c1 and fs3 == 0 and fe3 == 0x68 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3e54c4; op2val:0xac29c1;
op3val:0x34000001; valaddr_reg:x3; val_offset:27678*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27678*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9227:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3e54c4 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2c29c1 and fs3 == 0 and fe3 == 0x68 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3e54c4; op2val:0xac29c1;
op3val:0x34000003; valaddr_reg:x3; val_offset:27681*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27681*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9228:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3e54c4 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2c29c1 and fs3 == 0 and fe3 == 0x68 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3e54c4; op2val:0xac29c1;
op3val:0x34000007; valaddr_reg:x3; val_offset:27684*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27684*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9229:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3e54c4 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2c29c1 and fs3 == 0 and fe3 == 0x68 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3e54c4; op2val:0xac29c1;
op3val:0x3400000f; valaddr_reg:x3; val_offset:27687*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27687*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9230:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3e54c4 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2c29c1 and fs3 == 0 and fe3 == 0x68 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3e54c4; op2val:0xac29c1;
op3val:0x3400001f; valaddr_reg:x3; val_offset:27690*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27690*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9231:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3e54c4 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2c29c1 and fs3 == 0 and fe3 == 0x68 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3e54c4; op2val:0xac29c1;
op3val:0x3400003f; valaddr_reg:x3; val_offset:27693*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27693*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9232:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3e54c4 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2c29c1 and fs3 == 0 and fe3 == 0x68 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3e54c4; op2val:0xac29c1;
op3val:0x3400007f; valaddr_reg:x3; val_offset:27696*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27696*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9233:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3e54c4 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2c29c1 and fs3 == 0 and fe3 == 0x68 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3e54c4; op2val:0xac29c1;
op3val:0x340000ff; valaddr_reg:x3; val_offset:27699*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27699*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9234:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3e54c4 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2c29c1 and fs3 == 0 and fe3 == 0x68 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3e54c4; op2val:0xac29c1;
op3val:0x340001ff; valaddr_reg:x3; val_offset:27702*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27702*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9235:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3e54c4 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2c29c1 and fs3 == 0 and fe3 == 0x68 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3e54c4; op2val:0xac29c1;
op3val:0x340003ff; valaddr_reg:x3; val_offset:27705*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27705*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9236:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3e54c4 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2c29c1 and fs3 == 0 and fe3 == 0x68 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3e54c4; op2val:0xac29c1;
op3val:0x340007ff; valaddr_reg:x3; val_offset:27708*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27708*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9237:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3e54c4 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2c29c1 and fs3 == 0 and fe3 == 0x68 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3e54c4; op2val:0xac29c1;
op3val:0x34000fff; valaddr_reg:x3; val_offset:27711*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27711*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9238:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3e54c4 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2c29c1 and fs3 == 0 and fe3 == 0x68 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3e54c4; op2val:0xac29c1;
op3val:0x34001fff; valaddr_reg:x3; val_offset:27714*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27714*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9239:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3e54c4 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2c29c1 and fs3 == 0 and fe3 == 0x68 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3e54c4; op2val:0xac29c1;
op3val:0x34003fff; valaddr_reg:x3; val_offset:27717*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27717*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9240:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3e54c4 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2c29c1 and fs3 == 0 and fe3 == 0x68 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3e54c4; op2val:0xac29c1;
op3val:0x34007fff; valaddr_reg:x3; val_offset:27720*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27720*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9241:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3e54c4 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2c29c1 and fs3 == 0 and fe3 == 0x68 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3e54c4; op2val:0xac29c1;
op3val:0x3400ffff; valaddr_reg:x3; val_offset:27723*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27723*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9242:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3e54c4 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2c29c1 and fs3 == 0 and fe3 == 0x68 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3e54c4; op2val:0xac29c1;
op3val:0x3401ffff; valaddr_reg:x3; val_offset:27726*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27726*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9243:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3e54c4 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2c29c1 and fs3 == 0 and fe3 == 0x68 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3e54c4; op2val:0xac29c1;
op3val:0x3403ffff; valaddr_reg:x3; val_offset:27729*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27729*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9244:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3e54c4 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2c29c1 and fs3 == 0 and fe3 == 0x68 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3e54c4; op2val:0xac29c1;
op3val:0x3407ffff; valaddr_reg:x3; val_offset:27732*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27732*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9245:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3e54c4 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2c29c1 and fs3 == 0 and fe3 == 0x68 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3e54c4; op2val:0xac29c1;
op3val:0x340fffff; valaddr_reg:x3; val_offset:27735*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27735*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9246:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3e54c4 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2c29c1 and fs3 == 0 and fe3 == 0x68 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3e54c4; op2val:0xac29c1;
op3val:0x341fffff; valaddr_reg:x3; val_offset:27738*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27738*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9247:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3e54c4 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2c29c1 and fs3 == 0 and fe3 == 0x68 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3e54c4; op2val:0xac29c1;
op3val:0x343fffff; valaddr_reg:x3; val_offset:27741*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27741*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9248:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3e54c4 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2c29c1 and fs3 == 0 and fe3 == 0x68 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3e54c4; op2val:0xac29c1;
op3val:0x34400000; valaddr_reg:x3; val_offset:27744*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27744*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9249:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3e54c4 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2c29c1 and fs3 == 0 and fe3 == 0x68 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3e54c4; op2val:0xac29c1;
op3val:0x34600000; valaddr_reg:x3; val_offset:27747*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27747*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9250:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3e54c4 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2c29c1 and fs3 == 0 and fe3 == 0x68 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3e54c4; op2val:0xac29c1;
op3val:0x34700000; valaddr_reg:x3; val_offset:27750*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27750*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9251:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3e54c4 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2c29c1 and fs3 == 0 and fe3 == 0x68 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3e54c4; op2val:0xac29c1;
op3val:0x34780000; valaddr_reg:x3; val_offset:27753*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27753*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9252:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3e54c4 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2c29c1 and fs3 == 0 and fe3 == 0x68 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3e54c4; op2val:0xac29c1;
op3val:0x347c0000; valaddr_reg:x3; val_offset:27756*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27756*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9253:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3e54c4 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2c29c1 and fs3 == 0 and fe3 == 0x68 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3e54c4; op2val:0xac29c1;
op3val:0x347e0000; valaddr_reg:x3; val_offset:27759*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27759*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9254:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3e54c4 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2c29c1 and fs3 == 0 and fe3 == 0x68 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3e54c4; op2val:0xac29c1;
op3val:0x347f0000; valaddr_reg:x3; val_offset:27762*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27762*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9255:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3e54c4 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2c29c1 and fs3 == 0 and fe3 == 0x68 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3e54c4; op2val:0xac29c1;
op3val:0x347f8000; valaddr_reg:x3; val_offset:27765*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27765*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9256:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3e54c4 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2c29c1 and fs3 == 0 and fe3 == 0x68 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3e54c4; op2val:0xac29c1;
op3val:0x347fc000; valaddr_reg:x3; val_offset:27768*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27768*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9257:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3e54c4 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2c29c1 and fs3 == 0 and fe3 == 0x68 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3e54c4; op2val:0xac29c1;
op3val:0x347fe000; valaddr_reg:x3; val_offset:27771*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27771*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9258:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3e54c4 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2c29c1 and fs3 == 0 and fe3 == 0x68 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3e54c4; op2val:0xac29c1;
op3val:0x347ff000; valaddr_reg:x3; val_offset:27774*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27774*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9259:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3e54c4 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2c29c1 and fs3 == 0 and fe3 == 0x68 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3e54c4; op2val:0xac29c1;
op3val:0x347ff800; valaddr_reg:x3; val_offset:27777*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27777*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9260:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3e54c4 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2c29c1 and fs3 == 0 and fe3 == 0x68 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3e54c4; op2val:0xac29c1;
op3val:0x347ffc00; valaddr_reg:x3; val_offset:27780*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27780*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9261:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3e54c4 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2c29c1 and fs3 == 0 and fe3 == 0x68 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3e54c4; op2val:0xac29c1;
op3val:0x347ffe00; valaddr_reg:x3; val_offset:27783*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27783*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9262:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3e54c4 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2c29c1 and fs3 == 0 and fe3 == 0x68 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3e54c4; op2val:0xac29c1;
op3val:0x347fff00; valaddr_reg:x3; val_offset:27786*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27786*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9263:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3e54c4 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2c29c1 and fs3 == 0 and fe3 == 0x68 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3e54c4; op2val:0xac29c1;
op3val:0x347fff80; valaddr_reg:x3; val_offset:27789*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27789*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9264:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3e54c4 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2c29c1 and fs3 == 0 and fe3 == 0x68 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3e54c4; op2val:0xac29c1;
op3val:0x347fffc0; valaddr_reg:x3; val_offset:27792*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27792*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9265:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3e54c4 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2c29c1 and fs3 == 0 and fe3 == 0x68 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3e54c4; op2val:0xac29c1;
op3val:0x347fffe0; valaddr_reg:x3; val_offset:27795*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27795*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9266:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3e54c4 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2c29c1 and fs3 == 0 and fe3 == 0x68 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3e54c4; op2val:0xac29c1;
op3val:0x347ffff0; valaddr_reg:x3; val_offset:27798*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27798*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9267:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3e54c4 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2c29c1 and fs3 == 0 and fe3 == 0x68 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3e54c4; op2val:0xac29c1;
op3val:0x347ffff8; valaddr_reg:x3; val_offset:27801*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27801*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9268:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3e54c4 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2c29c1 and fs3 == 0 and fe3 == 0x68 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3e54c4; op2val:0xac29c1;
op3val:0x347ffffc; valaddr_reg:x3; val_offset:27804*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27804*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9269:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3e54c4 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2c29c1 and fs3 == 0 and fe3 == 0x68 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3e54c4; op2val:0xac29c1;
op3val:0x347ffffe; valaddr_reg:x3; val_offset:27807*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27807*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9270:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3e54c4 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2c29c1 and fs3 == 0 and fe3 == 0x68 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3e54c4; op2val:0xac29c1;
op3val:0x347fffff; valaddr_reg:x3; val_offset:27810*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27810*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9271:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3e54c4 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2c29c1 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3e54c4; op2val:0xac29c1;
op3val:0x3f800001; valaddr_reg:x3; val_offset:27813*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27813*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9272:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3e54c4 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2c29c1 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3e54c4; op2val:0xac29c1;
op3val:0x3f800003; valaddr_reg:x3; val_offset:27816*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27816*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9273:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3e54c4 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2c29c1 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3e54c4; op2val:0xac29c1;
op3val:0x3f800007; valaddr_reg:x3; val_offset:27819*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27819*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9274:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3e54c4 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2c29c1 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3e54c4; op2val:0xac29c1;
op3val:0x3f999999; valaddr_reg:x3; val_offset:27822*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27822*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9275:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3e54c4 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2c29c1 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3e54c4; op2val:0xac29c1;
op3val:0x3fa49249; valaddr_reg:x3; val_offset:27825*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27825*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9276:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3e54c4 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2c29c1 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3e54c4; op2val:0xac29c1;
op3val:0x3fb33333; valaddr_reg:x3; val_offset:27828*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27828*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9277:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3e54c4 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2c29c1 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3e54c4; op2val:0xac29c1;
op3val:0x3fb6db6d; valaddr_reg:x3; val_offset:27831*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27831*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9278:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3e54c4 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2c29c1 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3e54c4; op2val:0xac29c1;
op3val:0x3fbbbbbb; valaddr_reg:x3; val_offset:27834*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27834*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9279:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3e54c4 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2c29c1 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3e54c4; op2val:0xac29c1;
op3val:0x3fc44444; valaddr_reg:x3; val_offset:27837*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27837*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9280:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3e54c4 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2c29c1 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3e54c4; op2val:0xac29c1;
op3val:0x3fcccccc; valaddr_reg:x3; val_offset:27840*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27840*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9281:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3e54c4 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2c29c1 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3e54c4; op2val:0xac29c1;
op3val:0x3fdb6db6; valaddr_reg:x3; val_offset:27843*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27843*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9282:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3e54c4 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2c29c1 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3e54c4; op2val:0xac29c1;
op3val:0x3fe66666; valaddr_reg:x3; val_offset:27846*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27846*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9283:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3e54c4 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2c29c1 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3e54c4; op2val:0xac29c1;
op3val:0x3fedb6db; valaddr_reg:x3; val_offset:27849*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27849*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9284:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3e54c4 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2c29c1 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3e54c4; op2val:0xac29c1;
op3val:0x3ffffff8; valaddr_reg:x3; val_offset:27852*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27852*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9285:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3e54c4 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2c29c1 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3e54c4; op2val:0xac29c1;
op3val:0x3ffffffc; valaddr_reg:x3; val_offset:27855*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27855*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9286:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3e54c4 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2c29c1 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3e54c4; op2val:0xac29c1;
op3val:0x3ffffffe; valaddr_reg:x3; val_offset:27858*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27858*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9287:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3f9e07 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2b01ed and fs3 == 0 and fe3 == 0x5a and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3f9e07; op2val:0xab01ed;
op3val:0x2d000000; valaddr_reg:x3; val_offset:27861*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27861*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9288:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3f9e07 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2b01ed and fs3 == 0 and fe3 == 0x5a and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3f9e07; op2val:0xab01ed;
op3val:0x2d000001; valaddr_reg:x3; val_offset:27864*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27864*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9289:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3f9e07 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2b01ed and fs3 == 0 and fe3 == 0x5a and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3f9e07; op2val:0xab01ed;
op3val:0x2d000003; valaddr_reg:x3; val_offset:27867*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27867*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9290:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3f9e07 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2b01ed and fs3 == 0 and fe3 == 0x5a and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3f9e07; op2val:0xab01ed;
op3val:0x2d000007; valaddr_reg:x3; val_offset:27870*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27870*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9291:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3f9e07 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2b01ed and fs3 == 0 and fe3 == 0x5a and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3f9e07; op2val:0xab01ed;
op3val:0x2d00000f; valaddr_reg:x3; val_offset:27873*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27873*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9292:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3f9e07 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2b01ed and fs3 == 0 and fe3 == 0x5a and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3f9e07; op2val:0xab01ed;
op3val:0x2d00001f; valaddr_reg:x3; val_offset:27876*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27876*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9293:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3f9e07 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2b01ed and fs3 == 0 and fe3 == 0x5a and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3f9e07; op2val:0xab01ed;
op3val:0x2d00003f; valaddr_reg:x3; val_offset:27879*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27879*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9294:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3f9e07 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2b01ed and fs3 == 0 and fe3 == 0x5a and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3f9e07; op2val:0xab01ed;
op3val:0x2d00007f; valaddr_reg:x3; val_offset:27882*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27882*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9295:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3f9e07 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2b01ed and fs3 == 0 and fe3 == 0x5a and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3f9e07; op2val:0xab01ed;
op3val:0x2d0000ff; valaddr_reg:x3; val_offset:27885*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27885*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9296:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3f9e07 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2b01ed and fs3 == 0 and fe3 == 0x5a and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3f9e07; op2val:0xab01ed;
op3val:0x2d0001ff; valaddr_reg:x3; val_offset:27888*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27888*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9297:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3f9e07 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2b01ed and fs3 == 0 and fe3 == 0x5a and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3f9e07; op2val:0xab01ed;
op3val:0x2d0003ff; valaddr_reg:x3; val_offset:27891*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27891*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9298:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3f9e07 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2b01ed and fs3 == 0 and fe3 == 0x5a and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3f9e07; op2val:0xab01ed;
op3val:0x2d0007ff; valaddr_reg:x3; val_offset:27894*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27894*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9299:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3f9e07 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2b01ed and fs3 == 0 and fe3 == 0x5a and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3f9e07; op2val:0xab01ed;
op3val:0x2d000fff; valaddr_reg:x3; val_offset:27897*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27897*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9300:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3f9e07 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2b01ed and fs3 == 0 and fe3 == 0x5a and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3f9e07; op2val:0xab01ed;
op3val:0x2d001fff; valaddr_reg:x3; val_offset:27900*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27900*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9301:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3f9e07 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2b01ed and fs3 == 0 and fe3 == 0x5a and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3f9e07; op2val:0xab01ed;
op3val:0x2d003fff; valaddr_reg:x3; val_offset:27903*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27903*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9302:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3f9e07 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2b01ed and fs3 == 0 and fe3 == 0x5a and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3f9e07; op2val:0xab01ed;
op3val:0x2d007fff; valaddr_reg:x3; val_offset:27906*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27906*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9303:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3f9e07 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2b01ed and fs3 == 0 and fe3 == 0x5a and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3f9e07; op2val:0xab01ed;
op3val:0x2d00ffff; valaddr_reg:x3; val_offset:27909*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27909*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9304:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3f9e07 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2b01ed and fs3 == 0 and fe3 == 0x5a and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3f9e07; op2val:0xab01ed;
op3val:0x2d01ffff; valaddr_reg:x3; val_offset:27912*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27912*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9305:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3f9e07 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2b01ed and fs3 == 0 and fe3 == 0x5a and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3f9e07; op2val:0xab01ed;
op3val:0x2d03ffff; valaddr_reg:x3; val_offset:27915*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27915*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9306:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3f9e07 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2b01ed and fs3 == 0 and fe3 == 0x5a and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3f9e07; op2val:0xab01ed;
op3val:0x2d07ffff; valaddr_reg:x3; val_offset:27918*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27918*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9307:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3f9e07 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2b01ed and fs3 == 0 and fe3 == 0x5a and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3f9e07; op2val:0xab01ed;
op3val:0x2d0fffff; valaddr_reg:x3; val_offset:27921*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27921*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9308:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3f9e07 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2b01ed and fs3 == 0 and fe3 == 0x5a and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3f9e07; op2val:0xab01ed;
op3val:0x2d1fffff; valaddr_reg:x3; val_offset:27924*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27924*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9309:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3f9e07 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2b01ed and fs3 == 0 and fe3 == 0x5a and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3f9e07; op2val:0xab01ed;
op3val:0x2d3fffff; valaddr_reg:x3; val_offset:27927*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27927*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9310:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3f9e07 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2b01ed and fs3 == 0 and fe3 == 0x5a and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3f9e07; op2val:0xab01ed;
op3val:0x2d400000; valaddr_reg:x3; val_offset:27930*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27930*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9311:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3f9e07 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2b01ed and fs3 == 0 and fe3 == 0x5a and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3f9e07; op2val:0xab01ed;
op3val:0x2d600000; valaddr_reg:x3; val_offset:27933*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27933*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9312:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3f9e07 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2b01ed and fs3 == 0 and fe3 == 0x5a and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3f9e07; op2val:0xab01ed;
op3val:0x2d700000; valaddr_reg:x3; val_offset:27936*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27936*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9313:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3f9e07 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2b01ed and fs3 == 0 and fe3 == 0x5a and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3f9e07; op2val:0xab01ed;
op3val:0x2d780000; valaddr_reg:x3; val_offset:27939*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27939*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9314:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3f9e07 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2b01ed and fs3 == 0 and fe3 == 0x5a and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3f9e07; op2val:0xab01ed;
op3val:0x2d7c0000; valaddr_reg:x3; val_offset:27942*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27942*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9315:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3f9e07 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2b01ed and fs3 == 0 and fe3 == 0x5a and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3f9e07; op2val:0xab01ed;
op3val:0x2d7e0000; valaddr_reg:x3; val_offset:27945*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27945*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9316:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3f9e07 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2b01ed and fs3 == 0 and fe3 == 0x5a and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3f9e07; op2val:0xab01ed;
op3val:0x2d7f0000; valaddr_reg:x3; val_offset:27948*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27948*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9317:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3f9e07 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2b01ed and fs3 == 0 and fe3 == 0x5a and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3f9e07; op2val:0xab01ed;
op3val:0x2d7f8000; valaddr_reg:x3; val_offset:27951*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27951*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9318:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3f9e07 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2b01ed and fs3 == 0 and fe3 == 0x5a and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3f9e07; op2val:0xab01ed;
op3val:0x2d7fc000; valaddr_reg:x3; val_offset:27954*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27954*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9319:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3f9e07 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2b01ed and fs3 == 0 and fe3 == 0x5a and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3f9e07; op2val:0xab01ed;
op3val:0x2d7fe000; valaddr_reg:x3; val_offset:27957*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27957*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9320:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3f9e07 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2b01ed and fs3 == 0 and fe3 == 0x5a and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3f9e07; op2val:0xab01ed;
op3val:0x2d7ff000; valaddr_reg:x3; val_offset:27960*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27960*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9321:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3f9e07 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2b01ed and fs3 == 0 and fe3 == 0x5a and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3f9e07; op2val:0xab01ed;
op3val:0x2d7ff800; valaddr_reg:x3; val_offset:27963*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27963*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9322:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3f9e07 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2b01ed and fs3 == 0 and fe3 == 0x5a and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3f9e07; op2val:0xab01ed;
op3val:0x2d7ffc00; valaddr_reg:x3; val_offset:27966*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27966*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9323:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3f9e07 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2b01ed and fs3 == 0 and fe3 == 0x5a and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3f9e07; op2val:0xab01ed;
op3val:0x2d7ffe00; valaddr_reg:x3; val_offset:27969*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27969*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9324:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3f9e07 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2b01ed and fs3 == 0 and fe3 == 0x5a and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3f9e07; op2val:0xab01ed;
op3val:0x2d7fff00; valaddr_reg:x3; val_offset:27972*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27972*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9325:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3f9e07 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2b01ed and fs3 == 0 and fe3 == 0x5a and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3f9e07; op2val:0xab01ed;
op3val:0x2d7fff80; valaddr_reg:x3; val_offset:27975*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27975*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9326:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3f9e07 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2b01ed and fs3 == 0 and fe3 == 0x5a and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3f9e07; op2val:0xab01ed;
op3val:0x2d7fffc0; valaddr_reg:x3; val_offset:27978*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27978*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9327:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3f9e07 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2b01ed and fs3 == 0 and fe3 == 0x5a and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3f9e07; op2val:0xab01ed;
op3val:0x2d7fffe0; valaddr_reg:x3; val_offset:27981*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27981*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9328:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3f9e07 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2b01ed and fs3 == 0 and fe3 == 0x5a and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3f9e07; op2val:0xab01ed;
op3val:0x2d7ffff0; valaddr_reg:x3; val_offset:27984*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27984*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9329:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3f9e07 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2b01ed and fs3 == 0 and fe3 == 0x5a and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3f9e07; op2val:0xab01ed;
op3val:0x2d7ffff8; valaddr_reg:x3; val_offset:27987*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27987*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9330:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3f9e07 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2b01ed and fs3 == 0 and fe3 == 0x5a and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3f9e07; op2val:0xab01ed;
op3val:0x2d7ffffc; valaddr_reg:x3; val_offset:27990*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27990*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9331:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3f9e07 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2b01ed and fs3 == 0 and fe3 == 0x5a and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3f9e07; op2val:0xab01ed;
op3val:0x2d7ffffe; valaddr_reg:x3; val_offset:27993*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27993*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9332:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3f9e07 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2b01ed and fs3 == 0 and fe3 == 0x5a and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3f9e07; op2val:0xab01ed;
op3val:0x2d7fffff; valaddr_reg:x3; val_offset:27996*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27996*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9333:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3f9e07 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2b01ed and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3f9e07; op2val:0xab01ed;
op3val:0x3f800001; valaddr_reg:x3; val_offset:27999*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27999*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9334:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3f9e07 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2b01ed and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3f9e07; op2val:0xab01ed;
op3val:0x3f800003; valaddr_reg:x3; val_offset:28002*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28002*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9335:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3f9e07 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2b01ed and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3f9e07; op2val:0xab01ed;
op3val:0x3f800007; valaddr_reg:x3; val_offset:28005*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28005*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9336:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3f9e07 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2b01ed and fs3 == 0 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3f9e07; op2val:0xab01ed;
op3val:0x3f999999; valaddr_reg:x3; val_offset:28008*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28008*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9337:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3f9e07 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2b01ed and fs3 == 0 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3f9e07; op2val:0xab01ed;
op3val:0x3fa49249; valaddr_reg:x3; val_offset:28011*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28011*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9338:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3f9e07 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2b01ed and fs3 == 0 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3f9e07; op2val:0xab01ed;
op3val:0x3fb33333; valaddr_reg:x3; val_offset:28014*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28014*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9339:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3f9e07 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2b01ed and fs3 == 0 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3f9e07; op2val:0xab01ed;
op3val:0x3fb6db6d; valaddr_reg:x3; val_offset:28017*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28017*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9340:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3f9e07 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2b01ed and fs3 == 0 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3f9e07; op2val:0xab01ed;
op3val:0x3fbbbbbb; valaddr_reg:x3; val_offset:28020*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28020*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9341:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3f9e07 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2b01ed and fs3 == 0 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3f9e07; op2val:0xab01ed;
op3val:0x3fc44444; valaddr_reg:x3; val_offset:28023*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28023*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9342:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3f9e07 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2b01ed and fs3 == 0 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3f9e07; op2val:0xab01ed;
op3val:0x3fcccccc; valaddr_reg:x3; val_offset:28026*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28026*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9343:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3f9e07 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2b01ed and fs3 == 0 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3f9e07; op2val:0xab01ed;
op3val:0x3fdb6db6; valaddr_reg:x3; val_offset:28029*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28029*0 + 3*72*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(2117960472,32,FLEN)
NAN_BOXED(11331644,32,FLEN)
NAN_BOXED(1241513728,32,FLEN)
NAN_BOXED(2117960472,32,FLEN)
NAN_BOXED(11331644,32,FLEN)
NAN_BOXED(1241513856,32,FLEN)
NAN_BOXED(2117960472,32,FLEN)
NAN_BOXED(11331644,32,FLEN)
NAN_BOXED(1241513920,32,FLEN)
NAN_BOXED(2117960472,32,FLEN)
NAN_BOXED(11331644,32,FLEN)
NAN_BOXED(1241513952,32,FLEN)
NAN_BOXED(2117960472,32,FLEN)
NAN_BOXED(11331644,32,FLEN)
NAN_BOXED(1241513968,32,FLEN)
NAN_BOXED(2117960472,32,FLEN)
NAN_BOXED(11331644,32,FLEN)
NAN_BOXED(1241513976,32,FLEN)
NAN_BOXED(2117960472,32,FLEN)
NAN_BOXED(11331644,32,FLEN)
NAN_BOXED(1241513980,32,FLEN)
NAN_BOXED(2117960472,32,FLEN)
NAN_BOXED(11331644,32,FLEN)
NAN_BOXED(1241513982,32,FLEN)
NAN_BOXED(2117960472,32,FLEN)
NAN_BOXED(11331644,32,FLEN)
NAN_BOXED(1241513983,32,FLEN)
NAN_BOXED(2118014148,32,FLEN)
NAN_BOXED(11282881,32,FLEN)
NAN_BOXED(872415232,32,FLEN)
NAN_BOXED(2118014148,32,FLEN)
NAN_BOXED(11282881,32,FLEN)
NAN_BOXED(872415233,32,FLEN)
NAN_BOXED(2118014148,32,FLEN)
NAN_BOXED(11282881,32,FLEN)
NAN_BOXED(872415235,32,FLEN)
NAN_BOXED(2118014148,32,FLEN)
NAN_BOXED(11282881,32,FLEN)
NAN_BOXED(872415239,32,FLEN)
NAN_BOXED(2118014148,32,FLEN)
NAN_BOXED(11282881,32,FLEN)
NAN_BOXED(872415247,32,FLEN)
NAN_BOXED(2118014148,32,FLEN)
NAN_BOXED(11282881,32,FLEN)
NAN_BOXED(872415263,32,FLEN)
NAN_BOXED(2118014148,32,FLEN)
NAN_BOXED(11282881,32,FLEN)
NAN_BOXED(872415295,32,FLEN)
NAN_BOXED(2118014148,32,FLEN)
NAN_BOXED(11282881,32,FLEN)
NAN_BOXED(872415359,32,FLEN)
NAN_BOXED(2118014148,32,FLEN)
NAN_BOXED(11282881,32,FLEN)
NAN_BOXED(872415487,32,FLEN)
NAN_BOXED(2118014148,32,FLEN)
NAN_BOXED(11282881,32,FLEN)
NAN_BOXED(872415743,32,FLEN)
NAN_BOXED(2118014148,32,FLEN)
NAN_BOXED(11282881,32,FLEN)
NAN_BOXED(872416255,32,FLEN)
NAN_BOXED(2118014148,32,FLEN)
NAN_BOXED(11282881,32,FLEN)
NAN_BOXED(872417279,32,FLEN)
NAN_BOXED(2118014148,32,FLEN)
NAN_BOXED(11282881,32,FLEN)
NAN_BOXED(872419327,32,FLEN)
NAN_BOXED(2118014148,32,FLEN)
NAN_BOXED(11282881,32,FLEN)
NAN_BOXED(872423423,32,FLEN)
NAN_BOXED(2118014148,32,FLEN)
NAN_BOXED(11282881,32,FLEN)
NAN_BOXED(872431615,32,FLEN)
NAN_BOXED(2118014148,32,FLEN)
NAN_BOXED(11282881,32,FLEN)
NAN_BOXED(872447999,32,FLEN)
NAN_BOXED(2118014148,32,FLEN)
NAN_BOXED(11282881,32,FLEN)
NAN_BOXED(872480767,32,FLEN)
NAN_BOXED(2118014148,32,FLEN)
NAN_BOXED(11282881,32,FLEN)
NAN_BOXED(872546303,32,FLEN)
NAN_BOXED(2118014148,32,FLEN)
NAN_BOXED(11282881,32,FLEN)
NAN_BOXED(872677375,32,FLEN)
NAN_BOXED(2118014148,32,FLEN)
NAN_BOXED(11282881,32,FLEN)
NAN_BOXED(872939519,32,FLEN)
NAN_BOXED(2118014148,32,FLEN)
NAN_BOXED(11282881,32,FLEN)
NAN_BOXED(873463807,32,FLEN)
NAN_BOXED(2118014148,32,FLEN)
NAN_BOXED(11282881,32,FLEN)
NAN_BOXED(874512383,32,FLEN)
NAN_BOXED(2118014148,32,FLEN)
NAN_BOXED(11282881,32,FLEN)
NAN_BOXED(876609535,32,FLEN)
NAN_BOXED(2118014148,32,FLEN)
NAN_BOXED(11282881,32,FLEN)
NAN_BOXED(876609536,32,FLEN)
NAN_BOXED(2118014148,32,FLEN)
NAN_BOXED(11282881,32,FLEN)
NAN_BOXED(878706688,32,FLEN)
NAN_BOXED(2118014148,32,FLEN)
NAN_BOXED(11282881,32,FLEN)
NAN_BOXED(879755264,32,FLEN)
NAN_BOXED(2118014148,32,FLEN)
NAN_BOXED(11282881,32,FLEN)
NAN_BOXED(880279552,32,FLEN)
NAN_BOXED(2118014148,32,FLEN)
NAN_BOXED(11282881,32,FLEN)
NAN_BOXED(880541696,32,FLEN)
NAN_BOXED(2118014148,32,FLEN)
NAN_BOXED(11282881,32,FLEN)
NAN_BOXED(880672768,32,FLEN)
NAN_BOXED(2118014148,32,FLEN)
NAN_BOXED(11282881,32,FLEN)
NAN_BOXED(880738304,32,FLEN)
NAN_BOXED(2118014148,32,FLEN)
NAN_BOXED(11282881,32,FLEN)
NAN_BOXED(880771072,32,FLEN)
NAN_BOXED(2118014148,32,FLEN)
NAN_BOXED(11282881,32,FLEN)
NAN_BOXED(880787456,32,FLEN)
NAN_BOXED(2118014148,32,FLEN)
NAN_BOXED(11282881,32,FLEN)
NAN_BOXED(880795648,32,FLEN)
NAN_BOXED(2118014148,32,FLEN)
NAN_BOXED(11282881,32,FLEN)
NAN_BOXED(880799744,32,FLEN)
NAN_BOXED(2118014148,32,FLEN)
NAN_BOXED(11282881,32,FLEN)
NAN_BOXED(880801792,32,FLEN)
NAN_BOXED(2118014148,32,FLEN)
NAN_BOXED(11282881,32,FLEN)
NAN_BOXED(880802816,32,FLEN)
NAN_BOXED(2118014148,32,FLEN)
NAN_BOXED(11282881,32,FLEN)
NAN_BOXED(880803328,32,FLEN)
NAN_BOXED(2118014148,32,FLEN)
NAN_BOXED(11282881,32,FLEN)
NAN_BOXED(880803584,32,FLEN)
NAN_BOXED(2118014148,32,FLEN)
NAN_BOXED(11282881,32,FLEN)
NAN_BOXED(880803712,32,FLEN)
NAN_BOXED(2118014148,32,FLEN)
NAN_BOXED(11282881,32,FLEN)
NAN_BOXED(880803776,32,FLEN)
NAN_BOXED(2118014148,32,FLEN)
NAN_BOXED(11282881,32,FLEN)
NAN_BOXED(880803808,32,FLEN)
NAN_BOXED(2118014148,32,FLEN)
NAN_BOXED(11282881,32,FLEN)
NAN_BOXED(880803824,32,FLEN)
NAN_BOXED(2118014148,32,FLEN)
NAN_BOXED(11282881,32,FLEN)
NAN_BOXED(880803832,32,FLEN)
NAN_BOXED(2118014148,32,FLEN)
NAN_BOXED(11282881,32,FLEN)
NAN_BOXED(880803836,32,FLEN)
NAN_BOXED(2118014148,32,FLEN)
NAN_BOXED(11282881,32,FLEN)
NAN_BOXED(880803838,32,FLEN)
NAN_BOXED(2118014148,32,FLEN)
NAN_BOXED(11282881,32,FLEN)
NAN_BOXED(880803839,32,FLEN)
NAN_BOXED(2118014148,32,FLEN)
NAN_BOXED(11282881,32,FLEN)
NAN_BOXED(1065353217,32,FLEN)
NAN_BOXED(2118014148,32,FLEN)
NAN_BOXED(11282881,32,FLEN)
NAN_BOXED(1065353219,32,FLEN)
NAN_BOXED(2118014148,32,FLEN)
NAN_BOXED(11282881,32,FLEN)
NAN_BOXED(1065353223,32,FLEN)
NAN_BOXED(2118014148,32,FLEN)
NAN_BOXED(11282881,32,FLEN)
NAN_BOXED(1067030937,32,FLEN)
NAN_BOXED(2118014148,32,FLEN)
NAN_BOXED(11282881,32,FLEN)
NAN_BOXED(1067749961,32,FLEN)
NAN_BOXED(2118014148,32,FLEN)
NAN_BOXED(11282881,32,FLEN)
NAN_BOXED(1068708659,32,FLEN)
NAN_BOXED(2118014148,32,FLEN)
NAN_BOXED(11282881,32,FLEN)
NAN_BOXED(1068948333,32,FLEN)
NAN_BOXED(2118014148,32,FLEN)
NAN_BOXED(11282881,32,FLEN)
NAN_BOXED(1069267899,32,FLEN)
NAN_BOXED(2118014148,32,FLEN)
NAN_BOXED(11282881,32,FLEN)
NAN_BOXED(1069827140,32,FLEN)
NAN_BOXED(2118014148,32,FLEN)
NAN_BOXED(11282881,32,FLEN)
NAN_BOXED(1070386380,32,FLEN)
NAN_BOXED(2118014148,32,FLEN)
NAN_BOXED(11282881,32,FLEN)
NAN_BOXED(1071345078,32,FLEN)
NAN_BOXED(2118014148,32,FLEN)
NAN_BOXED(11282881,32,FLEN)
NAN_BOXED(1072064102,32,FLEN)
NAN_BOXED(2118014148,32,FLEN)
NAN_BOXED(11282881,32,FLEN)
NAN_BOXED(1072543451,32,FLEN)
NAN_BOXED(2118014148,32,FLEN)
NAN_BOXED(11282881,32,FLEN)
NAN_BOXED(1073741816,32,FLEN)
NAN_BOXED(2118014148,32,FLEN)
NAN_BOXED(11282881,32,FLEN)
NAN_BOXED(1073741820,32,FLEN)
NAN_BOXED(2118014148,32,FLEN)
NAN_BOXED(11282881,32,FLEN)
NAN_BOXED(1073741822,32,FLEN)
NAN_BOXED(2118098439,32,FLEN)
NAN_BOXED(11207149,32,FLEN)
NAN_BOXED(754974720,32,FLEN)
NAN_BOXED(2118098439,32,FLEN)
NAN_BOXED(11207149,32,FLEN)
NAN_BOXED(754974721,32,FLEN)
NAN_BOXED(2118098439,32,FLEN)
NAN_BOXED(11207149,32,FLEN)
NAN_BOXED(754974723,32,FLEN)
NAN_BOXED(2118098439,32,FLEN)
NAN_BOXED(11207149,32,FLEN)
NAN_BOXED(754974727,32,FLEN)
NAN_BOXED(2118098439,32,FLEN)
NAN_BOXED(11207149,32,FLEN)
NAN_BOXED(754974735,32,FLEN)
NAN_BOXED(2118098439,32,FLEN)
NAN_BOXED(11207149,32,FLEN)
NAN_BOXED(754974751,32,FLEN)
NAN_BOXED(2118098439,32,FLEN)
NAN_BOXED(11207149,32,FLEN)
NAN_BOXED(754974783,32,FLEN)
NAN_BOXED(2118098439,32,FLEN)
NAN_BOXED(11207149,32,FLEN)
NAN_BOXED(754974847,32,FLEN)
NAN_BOXED(2118098439,32,FLEN)
NAN_BOXED(11207149,32,FLEN)
NAN_BOXED(754974975,32,FLEN)
NAN_BOXED(2118098439,32,FLEN)
NAN_BOXED(11207149,32,FLEN)
NAN_BOXED(754975231,32,FLEN)
NAN_BOXED(2118098439,32,FLEN)
NAN_BOXED(11207149,32,FLEN)
NAN_BOXED(754975743,32,FLEN)
NAN_BOXED(2118098439,32,FLEN)
NAN_BOXED(11207149,32,FLEN)
NAN_BOXED(754976767,32,FLEN)
NAN_BOXED(2118098439,32,FLEN)
NAN_BOXED(11207149,32,FLEN)
NAN_BOXED(754978815,32,FLEN)
NAN_BOXED(2118098439,32,FLEN)
NAN_BOXED(11207149,32,FLEN)
NAN_BOXED(754982911,32,FLEN)
NAN_BOXED(2118098439,32,FLEN)
NAN_BOXED(11207149,32,FLEN)
NAN_BOXED(754991103,32,FLEN)
NAN_BOXED(2118098439,32,FLEN)
NAN_BOXED(11207149,32,FLEN)
NAN_BOXED(755007487,32,FLEN)
NAN_BOXED(2118098439,32,FLEN)
NAN_BOXED(11207149,32,FLEN)
NAN_BOXED(755040255,32,FLEN)
NAN_BOXED(2118098439,32,FLEN)
NAN_BOXED(11207149,32,FLEN)
NAN_BOXED(755105791,32,FLEN)
NAN_BOXED(2118098439,32,FLEN)
NAN_BOXED(11207149,32,FLEN)
NAN_BOXED(755236863,32,FLEN)
NAN_BOXED(2118098439,32,FLEN)
NAN_BOXED(11207149,32,FLEN)
NAN_BOXED(755499007,32,FLEN)
NAN_BOXED(2118098439,32,FLEN)
NAN_BOXED(11207149,32,FLEN)
NAN_BOXED(756023295,32,FLEN)
NAN_BOXED(2118098439,32,FLEN)
NAN_BOXED(11207149,32,FLEN)
NAN_BOXED(757071871,32,FLEN)
NAN_BOXED(2118098439,32,FLEN)
NAN_BOXED(11207149,32,FLEN)
NAN_BOXED(759169023,32,FLEN)
NAN_BOXED(2118098439,32,FLEN)
NAN_BOXED(11207149,32,FLEN)
NAN_BOXED(759169024,32,FLEN)
NAN_BOXED(2118098439,32,FLEN)
NAN_BOXED(11207149,32,FLEN)
NAN_BOXED(761266176,32,FLEN)
NAN_BOXED(2118098439,32,FLEN)
NAN_BOXED(11207149,32,FLEN)
NAN_BOXED(762314752,32,FLEN)
NAN_BOXED(2118098439,32,FLEN)
NAN_BOXED(11207149,32,FLEN)
NAN_BOXED(762839040,32,FLEN)
NAN_BOXED(2118098439,32,FLEN)
NAN_BOXED(11207149,32,FLEN)
NAN_BOXED(763101184,32,FLEN)
NAN_BOXED(2118098439,32,FLEN)
NAN_BOXED(11207149,32,FLEN)
NAN_BOXED(763232256,32,FLEN)
NAN_BOXED(2118098439,32,FLEN)
NAN_BOXED(11207149,32,FLEN)
NAN_BOXED(763297792,32,FLEN)
NAN_BOXED(2118098439,32,FLEN)
NAN_BOXED(11207149,32,FLEN)
NAN_BOXED(763330560,32,FLEN)
NAN_BOXED(2118098439,32,FLEN)
NAN_BOXED(11207149,32,FLEN)
NAN_BOXED(763346944,32,FLEN)
NAN_BOXED(2118098439,32,FLEN)
NAN_BOXED(11207149,32,FLEN)
NAN_BOXED(763355136,32,FLEN)
NAN_BOXED(2118098439,32,FLEN)
NAN_BOXED(11207149,32,FLEN)
NAN_BOXED(763359232,32,FLEN)
NAN_BOXED(2118098439,32,FLEN)
NAN_BOXED(11207149,32,FLEN)
NAN_BOXED(763361280,32,FLEN)
NAN_BOXED(2118098439,32,FLEN)
NAN_BOXED(11207149,32,FLEN)
NAN_BOXED(763362304,32,FLEN)
NAN_BOXED(2118098439,32,FLEN)
NAN_BOXED(11207149,32,FLEN)
NAN_BOXED(763362816,32,FLEN)
NAN_BOXED(2118098439,32,FLEN)
NAN_BOXED(11207149,32,FLEN)
NAN_BOXED(763363072,32,FLEN)
NAN_BOXED(2118098439,32,FLEN)
NAN_BOXED(11207149,32,FLEN)
NAN_BOXED(763363200,32,FLEN)
NAN_BOXED(2118098439,32,FLEN)
NAN_BOXED(11207149,32,FLEN)
NAN_BOXED(763363264,32,FLEN)
NAN_BOXED(2118098439,32,FLEN)
NAN_BOXED(11207149,32,FLEN)
NAN_BOXED(763363296,32,FLEN)
NAN_BOXED(2118098439,32,FLEN)
NAN_BOXED(11207149,32,FLEN)
NAN_BOXED(763363312,32,FLEN)
NAN_BOXED(2118098439,32,FLEN)
NAN_BOXED(11207149,32,FLEN)
NAN_BOXED(763363320,32,FLEN)
NAN_BOXED(2118098439,32,FLEN)
NAN_BOXED(11207149,32,FLEN)
NAN_BOXED(763363324,32,FLEN)
NAN_BOXED(2118098439,32,FLEN)
NAN_BOXED(11207149,32,FLEN)
NAN_BOXED(763363326,32,FLEN)
NAN_BOXED(2118098439,32,FLEN)
NAN_BOXED(11207149,32,FLEN)
NAN_BOXED(763363327,32,FLEN)
NAN_BOXED(2118098439,32,FLEN)
NAN_BOXED(11207149,32,FLEN)
NAN_BOXED(1065353217,32,FLEN)
NAN_BOXED(2118098439,32,FLEN)
NAN_BOXED(11207149,32,FLEN)
NAN_BOXED(1065353219,32,FLEN)
NAN_BOXED(2118098439,32,FLEN)
NAN_BOXED(11207149,32,FLEN)
NAN_BOXED(1065353223,32,FLEN)
NAN_BOXED(2118098439,32,FLEN)
NAN_BOXED(11207149,32,FLEN)
NAN_BOXED(1067030937,32,FLEN)
NAN_BOXED(2118098439,32,FLEN)
NAN_BOXED(11207149,32,FLEN)
NAN_BOXED(1067749961,32,FLEN)
NAN_BOXED(2118098439,32,FLEN)
NAN_BOXED(11207149,32,FLEN)
NAN_BOXED(1068708659,32,FLEN)
NAN_BOXED(2118098439,32,FLEN)
NAN_BOXED(11207149,32,FLEN)
NAN_BOXED(1068948333,32,FLEN)
NAN_BOXED(2118098439,32,FLEN)
NAN_BOXED(11207149,32,FLEN)
NAN_BOXED(1069267899,32,FLEN)
NAN_BOXED(2118098439,32,FLEN)
NAN_BOXED(11207149,32,FLEN)
NAN_BOXED(1069827140,32,FLEN)
NAN_BOXED(2118098439,32,FLEN)
NAN_BOXED(11207149,32,FLEN)
NAN_BOXED(1070386380,32,FLEN)
NAN_BOXED(2118098439,32,FLEN)
NAN_BOXED(11207149,32,FLEN)
NAN_BOXED(1071345078,32,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
