
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 14:18:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32F/fmsub.s.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.s instruction of the RISC-V RV32F_Zicsr,RV32FD_Zicsr,RV64F_Zicsr,RV64FD_Zicsr extension for the fmsub_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF_Zicsr,RV32IFD_Zicsr,RV64IF_Zicsr,RV64IFD_Zicsr,RV32EF_Zicsr,RV32EFD_Zicsr,RV64EF_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fmsub_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*F.*);def TEST_CASE_1=True;",fmsub_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_9728:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x48d049 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x232d19 and fs3 == 1 and fe3 == 0xfd and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e48d049; op2val:0xc0a32d19;
op3val:0xfe80007f; valaddr_reg:x3; val_offset:29184*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29184*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9729:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x48d049 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x232d19 and fs3 == 1 and fe3 == 0xfd and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e48d049; op2val:0xc0a32d19;
op3val:0xfe8000ff; valaddr_reg:x3; val_offset:29187*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29187*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9730:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x48d049 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x232d19 and fs3 == 1 and fe3 == 0xfd and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e48d049; op2val:0xc0a32d19;
op3val:0xfe8001ff; valaddr_reg:x3; val_offset:29190*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29190*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9731:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x48d049 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x232d19 and fs3 == 1 and fe3 == 0xfd and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e48d049; op2val:0xc0a32d19;
op3val:0xfe8003ff; valaddr_reg:x3; val_offset:29193*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29193*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9732:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x48d049 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x232d19 and fs3 == 1 and fe3 == 0xfd and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e48d049; op2val:0xc0a32d19;
op3val:0xfe8007ff; valaddr_reg:x3; val_offset:29196*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29196*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9733:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x48d049 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x232d19 and fs3 == 1 and fe3 == 0xfd and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e48d049; op2val:0xc0a32d19;
op3val:0xfe800fff; valaddr_reg:x3; val_offset:29199*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29199*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9734:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x48d049 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x232d19 and fs3 == 1 and fe3 == 0xfd and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e48d049; op2val:0xc0a32d19;
op3val:0xfe801fff; valaddr_reg:x3; val_offset:29202*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29202*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9735:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x48d049 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x232d19 and fs3 == 1 and fe3 == 0xfd and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e48d049; op2val:0xc0a32d19;
op3val:0xfe803fff; valaddr_reg:x3; val_offset:29205*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29205*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9736:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x48d049 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x232d19 and fs3 == 1 and fe3 == 0xfd and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e48d049; op2val:0xc0a32d19;
op3val:0xfe807fff; valaddr_reg:x3; val_offset:29208*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29208*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9737:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x48d049 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x232d19 and fs3 == 1 and fe3 == 0xfd and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e48d049; op2val:0xc0a32d19;
op3val:0xfe80ffff; valaddr_reg:x3; val_offset:29211*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29211*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9738:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x48d049 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x232d19 and fs3 == 1 and fe3 == 0xfd and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e48d049; op2val:0xc0a32d19;
op3val:0xfe81ffff; valaddr_reg:x3; val_offset:29214*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29214*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9739:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x48d049 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x232d19 and fs3 == 1 and fe3 == 0xfd and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e48d049; op2val:0xc0a32d19;
op3val:0xfe83ffff; valaddr_reg:x3; val_offset:29217*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29217*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9740:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x48d049 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x232d19 and fs3 == 1 and fe3 == 0xfd and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e48d049; op2val:0xc0a32d19;
op3val:0xfe87ffff; valaddr_reg:x3; val_offset:29220*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29220*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9741:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x48d049 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x232d19 and fs3 == 1 and fe3 == 0xfd and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e48d049; op2val:0xc0a32d19;
op3val:0xfe8fffff; valaddr_reg:x3; val_offset:29223*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29223*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9742:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x48d049 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x232d19 and fs3 == 1 and fe3 == 0xfd and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e48d049; op2val:0xc0a32d19;
op3val:0xfe9fffff; valaddr_reg:x3; val_offset:29226*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29226*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9743:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x48d049 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x232d19 and fs3 == 1 and fe3 == 0xfd and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e48d049; op2val:0xc0a32d19;
op3val:0xfebfffff; valaddr_reg:x3; val_offset:29229*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29229*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9744:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x48d049 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x232d19 and fs3 == 1 and fe3 == 0xfd and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e48d049; op2val:0xc0a32d19;
op3val:0xfec00000; valaddr_reg:x3; val_offset:29232*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29232*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9745:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x48d049 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x232d19 and fs3 == 1 and fe3 == 0xfd and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e48d049; op2val:0xc0a32d19;
op3val:0xfee00000; valaddr_reg:x3; val_offset:29235*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29235*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9746:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x48d049 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x232d19 and fs3 == 1 and fe3 == 0xfd and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e48d049; op2val:0xc0a32d19;
op3val:0xfef00000; valaddr_reg:x3; val_offset:29238*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29238*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9747:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x48d049 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x232d19 and fs3 == 1 and fe3 == 0xfd and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e48d049; op2val:0xc0a32d19;
op3val:0xfef80000; valaddr_reg:x3; val_offset:29241*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29241*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9748:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x48d049 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x232d19 and fs3 == 1 and fe3 == 0xfd and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e48d049; op2val:0xc0a32d19;
op3val:0xfefc0000; valaddr_reg:x3; val_offset:29244*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29244*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9749:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x48d049 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x232d19 and fs3 == 1 and fe3 == 0xfd and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e48d049; op2val:0xc0a32d19;
op3val:0xfefe0000; valaddr_reg:x3; val_offset:29247*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29247*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9750:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x48d049 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x232d19 and fs3 == 1 and fe3 == 0xfd and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e48d049; op2val:0xc0a32d19;
op3val:0xfeff0000; valaddr_reg:x3; val_offset:29250*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29250*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9751:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x48d049 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x232d19 and fs3 == 1 and fe3 == 0xfd and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e48d049; op2val:0xc0a32d19;
op3val:0xfeff8000; valaddr_reg:x3; val_offset:29253*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29253*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9752:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x48d049 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x232d19 and fs3 == 1 and fe3 == 0xfd and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e48d049; op2val:0xc0a32d19;
op3val:0xfeffc000; valaddr_reg:x3; val_offset:29256*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29256*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9753:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x48d049 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x232d19 and fs3 == 1 and fe3 == 0xfd and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e48d049; op2val:0xc0a32d19;
op3val:0xfeffe000; valaddr_reg:x3; val_offset:29259*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29259*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9754:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x48d049 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x232d19 and fs3 == 1 and fe3 == 0xfd and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e48d049; op2val:0xc0a32d19;
op3val:0xfefff000; valaddr_reg:x3; val_offset:29262*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29262*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9755:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x48d049 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x232d19 and fs3 == 1 and fe3 == 0xfd and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e48d049; op2val:0xc0a32d19;
op3val:0xfefff800; valaddr_reg:x3; val_offset:29265*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29265*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9756:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x48d049 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x232d19 and fs3 == 1 and fe3 == 0xfd and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e48d049; op2val:0xc0a32d19;
op3val:0xfefffc00; valaddr_reg:x3; val_offset:29268*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29268*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9757:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x48d049 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x232d19 and fs3 == 1 and fe3 == 0xfd and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e48d049; op2val:0xc0a32d19;
op3val:0xfefffe00; valaddr_reg:x3; val_offset:29271*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29271*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9758:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x48d049 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x232d19 and fs3 == 1 and fe3 == 0xfd and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e48d049; op2val:0xc0a32d19;
op3val:0xfeffff00; valaddr_reg:x3; val_offset:29274*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29274*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9759:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x48d049 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x232d19 and fs3 == 1 and fe3 == 0xfd and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e48d049; op2val:0xc0a32d19;
op3val:0xfeffff80; valaddr_reg:x3; val_offset:29277*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29277*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9760:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x48d049 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x232d19 and fs3 == 1 and fe3 == 0xfd and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e48d049; op2val:0xc0a32d19;
op3val:0xfeffffc0; valaddr_reg:x3; val_offset:29280*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29280*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9761:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x48d049 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x232d19 and fs3 == 1 and fe3 == 0xfd and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e48d049; op2val:0xc0a32d19;
op3val:0xfeffffe0; valaddr_reg:x3; val_offset:29283*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29283*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9762:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x48d049 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x232d19 and fs3 == 1 and fe3 == 0xfd and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e48d049; op2val:0xc0a32d19;
op3val:0xfefffff0; valaddr_reg:x3; val_offset:29286*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29286*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9763:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x48d049 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x232d19 and fs3 == 1 and fe3 == 0xfd and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e48d049; op2val:0xc0a32d19;
op3val:0xfefffff8; valaddr_reg:x3; val_offset:29289*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29289*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9764:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x48d049 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x232d19 and fs3 == 1 and fe3 == 0xfd and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e48d049; op2val:0xc0a32d19;
op3val:0xfefffffc; valaddr_reg:x3; val_offset:29292*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29292*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9765:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x48d049 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x232d19 and fs3 == 1 and fe3 == 0xfd and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e48d049; op2val:0xc0a32d19;
op3val:0xfefffffe; valaddr_reg:x3; val_offset:29295*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29295*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9766:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x48d049 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x232d19 and fs3 == 1 and fe3 == 0xfd and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e48d049; op2val:0xc0a32d19;
op3val:0xfeffffff; valaddr_reg:x3; val_offset:29298*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29298*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9767:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x48d049 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x232d19 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e48d049; op2val:0xc0a32d19;
op3val:0xff000001; valaddr_reg:x3; val_offset:29301*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29301*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9768:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x48d049 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x232d19 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e48d049; op2val:0xc0a32d19;
op3val:0xff000003; valaddr_reg:x3; val_offset:29304*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29304*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9769:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x48d049 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x232d19 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e48d049; op2val:0xc0a32d19;
op3val:0xff000007; valaddr_reg:x3; val_offset:29307*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29307*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9770:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x48d049 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x232d19 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e48d049; op2val:0xc0a32d19;
op3val:0xff199999; valaddr_reg:x3; val_offset:29310*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29310*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9771:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x48d049 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x232d19 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e48d049; op2val:0xc0a32d19;
op3val:0xff249249; valaddr_reg:x3; val_offset:29313*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29313*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9772:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x48d049 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x232d19 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e48d049; op2val:0xc0a32d19;
op3val:0xff333333; valaddr_reg:x3; val_offset:29316*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29316*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9773:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x48d049 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x232d19 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e48d049; op2val:0xc0a32d19;
op3val:0xff36db6d; valaddr_reg:x3; val_offset:29319*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29319*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9774:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x48d049 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x232d19 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e48d049; op2val:0xc0a32d19;
op3val:0xff3bbbbb; valaddr_reg:x3; val_offset:29322*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29322*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9775:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x48d049 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x232d19 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e48d049; op2val:0xc0a32d19;
op3val:0xff444444; valaddr_reg:x3; val_offset:29325*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29325*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9776:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x48d049 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x232d19 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e48d049; op2val:0xc0a32d19;
op3val:0xff4ccccc; valaddr_reg:x3; val_offset:29328*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29328*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9777:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x48d049 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x232d19 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e48d049; op2val:0xc0a32d19;
op3val:0xff5b6db6; valaddr_reg:x3; val_offset:29331*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29331*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9778:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x48d049 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x232d19 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e48d049; op2val:0xc0a32d19;
op3val:0xff666666; valaddr_reg:x3; val_offset:29334*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29334*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9779:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x48d049 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x232d19 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e48d049; op2val:0xc0a32d19;
op3val:0xff6db6db; valaddr_reg:x3; val_offset:29337*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29337*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9780:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x48d049 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x232d19 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e48d049; op2val:0xc0a32d19;
op3val:0xff7ffff8; valaddr_reg:x3; val_offset:29340*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29340*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9781:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x48d049 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x232d19 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e48d049; op2val:0xc0a32d19;
op3val:0xff7ffffc; valaddr_reg:x3; val_offset:29343*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29343*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9782:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x48d049 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x232d19 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e48d049; op2val:0xc0a32d19;
op3val:0xff7ffffe; valaddr_reg:x3; val_offset:29346*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29346*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9783:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x491753 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x22f375 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e491753; op2val:0xa2f375;
op3val:0x3f800001; valaddr_reg:x3; val_offset:29349*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29349*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9784:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x491753 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x22f375 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e491753; op2val:0xa2f375;
op3val:0x3f800003; valaddr_reg:x3; val_offset:29352*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29352*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9785:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x491753 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x22f375 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e491753; op2val:0xa2f375;
op3val:0x3f800007; valaddr_reg:x3; val_offset:29355*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29355*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9786:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x491753 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x22f375 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e491753; op2val:0xa2f375;
op3val:0x3f999999; valaddr_reg:x3; val_offset:29358*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29358*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9787:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x491753 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x22f375 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e491753; op2val:0xa2f375;
op3val:0x3fa49249; valaddr_reg:x3; val_offset:29361*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29361*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9788:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x491753 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x22f375 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e491753; op2val:0xa2f375;
op3val:0x3fb33333; valaddr_reg:x3; val_offset:29364*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29364*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9789:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x491753 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x22f375 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e491753; op2val:0xa2f375;
op3val:0x3fb6db6d; valaddr_reg:x3; val_offset:29367*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29367*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9790:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x491753 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x22f375 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e491753; op2val:0xa2f375;
op3val:0x3fbbbbbb; valaddr_reg:x3; val_offset:29370*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29370*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9791:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x491753 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x22f375 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e491753; op2val:0xa2f375;
op3val:0x3fc44444; valaddr_reg:x3; val_offset:29373*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29373*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9792:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x491753 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x22f375 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e491753; op2val:0xa2f375;
op3val:0x3fcccccc; valaddr_reg:x3; val_offset:29376*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29376*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9793:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x491753 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x22f375 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e491753; op2val:0xa2f375;
op3val:0x3fdb6db6; valaddr_reg:x3; val_offset:29379*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29379*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9794:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x491753 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x22f375 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e491753; op2val:0xa2f375;
op3val:0x3fe66666; valaddr_reg:x3; val_offset:29382*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29382*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9795:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x491753 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x22f375 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e491753; op2val:0xa2f375;
op3val:0x3fedb6db; valaddr_reg:x3; val_offset:29385*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29385*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9796:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x491753 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x22f375 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e491753; op2val:0xa2f375;
op3val:0x3ffffff8; valaddr_reg:x3; val_offset:29388*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29388*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9797:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x491753 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x22f375 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e491753; op2val:0xa2f375;
op3val:0x3ffffffc; valaddr_reg:x3; val_offset:29391*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29391*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9798:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x491753 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x22f375 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e491753; op2val:0xa2f375;
op3val:0x3ffffffe; valaddr_reg:x3; val_offset:29394*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29394*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9799:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x491753 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x22f375 and fs3 == 0 and fe3 == 0x85 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e491753; op2val:0xa2f375;
op3val:0x42800000; valaddr_reg:x3; val_offset:29397*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29397*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9800:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x491753 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x22f375 and fs3 == 0 and fe3 == 0x85 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e491753; op2val:0xa2f375;
op3val:0x42800001; valaddr_reg:x3; val_offset:29400*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29400*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9801:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x491753 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x22f375 and fs3 == 0 and fe3 == 0x85 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e491753; op2val:0xa2f375;
op3val:0x42800003; valaddr_reg:x3; val_offset:29403*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29403*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9802:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x491753 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x22f375 and fs3 == 0 and fe3 == 0x85 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e491753; op2val:0xa2f375;
op3val:0x42800007; valaddr_reg:x3; val_offset:29406*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29406*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9803:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x491753 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x22f375 and fs3 == 0 and fe3 == 0x85 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e491753; op2val:0xa2f375;
op3val:0x4280000f; valaddr_reg:x3; val_offset:29409*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29409*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9804:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x491753 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x22f375 and fs3 == 0 and fe3 == 0x85 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e491753; op2val:0xa2f375;
op3val:0x4280001f; valaddr_reg:x3; val_offset:29412*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29412*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9805:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x491753 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x22f375 and fs3 == 0 and fe3 == 0x85 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e491753; op2val:0xa2f375;
op3val:0x4280003f; valaddr_reg:x3; val_offset:29415*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29415*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9806:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x491753 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x22f375 and fs3 == 0 and fe3 == 0x85 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e491753; op2val:0xa2f375;
op3val:0x4280007f; valaddr_reg:x3; val_offset:29418*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29418*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9807:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x491753 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x22f375 and fs3 == 0 and fe3 == 0x85 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e491753; op2val:0xa2f375;
op3val:0x428000ff; valaddr_reg:x3; val_offset:29421*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29421*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9808:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x491753 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x22f375 and fs3 == 0 and fe3 == 0x85 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e491753; op2val:0xa2f375;
op3val:0x428001ff; valaddr_reg:x3; val_offset:29424*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29424*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9809:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x491753 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x22f375 and fs3 == 0 and fe3 == 0x85 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e491753; op2val:0xa2f375;
op3val:0x428003ff; valaddr_reg:x3; val_offset:29427*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29427*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9810:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x491753 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x22f375 and fs3 == 0 and fe3 == 0x85 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e491753; op2val:0xa2f375;
op3val:0x428007ff; valaddr_reg:x3; val_offset:29430*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29430*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9811:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x491753 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x22f375 and fs3 == 0 and fe3 == 0x85 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e491753; op2val:0xa2f375;
op3val:0x42800fff; valaddr_reg:x3; val_offset:29433*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29433*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9812:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x491753 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x22f375 and fs3 == 0 and fe3 == 0x85 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e491753; op2val:0xa2f375;
op3val:0x42801fff; valaddr_reg:x3; val_offset:29436*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29436*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9813:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x491753 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x22f375 and fs3 == 0 and fe3 == 0x85 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e491753; op2val:0xa2f375;
op3val:0x42803fff; valaddr_reg:x3; val_offset:29439*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29439*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9814:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x491753 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x22f375 and fs3 == 0 and fe3 == 0x85 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e491753; op2val:0xa2f375;
op3val:0x42807fff; valaddr_reg:x3; val_offset:29442*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29442*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9815:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x491753 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x22f375 and fs3 == 0 and fe3 == 0x85 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e491753; op2val:0xa2f375;
op3val:0x4280ffff; valaddr_reg:x3; val_offset:29445*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29445*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9816:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x491753 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x22f375 and fs3 == 0 and fe3 == 0x85 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e491753; op2val:0xa2f375;
op3val:0x4281ffff; valaddr_reg:x3; val_offset:29448*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29448*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9817:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x491753 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x22f375 and fs3 == 0 and fe3 == 0x85 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e491753; op2val:0xa2f375;
op3val:0x4283ffff; valaddr_reg:x3; val_offset:29451*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29451*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9818:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x491753 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x22f375 and fs3 == 0 and fe3 == 0x85 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e491753; op2val:0xa2f375;
op3val:0x4287ffff; valaddr_reg:x3; val_offset:29454*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29454*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9819:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x491753 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x22f375 and fs3 == 0 and fe3 == 0x85 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e491753; op2val:0xa2f375;
op3val:0x428fffff; valaddr_reg:x3; val_offset:29457*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29457*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9820:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x491753 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x22f375 and fs3 == 0 and fe3 == 0x85 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e491753; op2val:0xa2f375;
op3val:0x429fffff; valaddr_reg:x3; val_offset:29460*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29460*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9821:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x491753 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x22f375 and fs3 == 0 and fe3 == 0x85 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e491753; op2val:0xa2f375;
op3val:0x42bfffff; valaddr_reg:x3; val_offset:29463*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29463*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9822:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x491753 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x22f375 and fs3 == 0 and fe3 == 0x85 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e491753; op2val:0xa2f375;
op3val:0x42c00000; valaddr_reg:x3; val_offset:29466*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29466*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9823:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x491753 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x22f375 and fs3 == 0 and fe3 == 0x85 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e491753; op2val:0xa2f375;
op3val:0x42e00000; valaddr_reg:x3; val_offset:29469*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29469*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9824:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x491753 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x22f375 and fs3 == 0 and fe3 == 0x85 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e491753; op2val:0xa2f375;
op3val:0x42f00000; valaddr_reg:x3; val_offset:29472*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29472*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9825:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x491753 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x22f375 and fs3 == 0 and fe3 == 0x85 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e491753; op2val:0xa2f375;
op3val:0x42f80000; valaddr_reg:x3; val_offset:29475*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29475*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9826:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x491753 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x22f375 and fs3 == 0 and fe3 == 0x85 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e491753; op2val:0xa2f375;
op3val:0x42fc0000; valaddr_reg:x3; val_offset:29478*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29478*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9827:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x491753 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x22f375 and fs3 == 0 and fe3 == 0x85 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e491753; op2val:0xa2f375;
op3val:0x42fe0000; valaddr_reg:x3; val_offset:29481*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29481*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9828:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x491753 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x22f375 and fs3 == 0 and fe3 == 0x85 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e491753; op2val:0xa2f375;
op3val:0x42ff0000; valaddr_reg:x3; val_offset:29484*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29484*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9829:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x491753 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x22f375 and fs3 == 0 and fe3 == 0x85 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e491753; op2val:0xa2f375;
op3val:0x42ff8000; valaddr_reg:x3; val_offset:29487*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29487*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9830:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x491753 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x22f375 and fs3 == 0 and fe3 == 0x85 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e491753; op2val:0xa2f375;
op3val:0x42ffc000; valaddr_reg:x3; val_offset:29490*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29490*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9831:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x491753 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x22f375 and fs3 == 0 and fe3 == 0x85 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e491753; op2val:0xa2f375;
op3val:0x42ffe000; valaddr_reg:x3; val_offset:29493*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29493*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9832:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x491753 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x22f375 and fs3 == 0 and fe3 == 0x85 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e491753; op2val:0xa2f375;
op3val:0x42fff000; valaddr_reg:x3; val_offset:29496*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29496*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9833:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x491753 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x22f375 and fs3 == 0 and fe3 == 0x85 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e491753; op2val:0xa2f375;
op3val:0x42fff800; valaddr_reg:x3; val_offset:29499*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29499*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9834:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x491753 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x22f375 and fs3 == 0 and fe3 == 0x85 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e491753; op2val:0xa2f375;
op3val:0x42fffc00; valaddr_reg:x3; val_offset:29502*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29502*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9835:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x491753 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x22f375 and fs3 == 0 and fe3 == 0x85 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e491753; op2val:0xa2f375;
op3val:0x42fffe00; valaddr_reg:x3; val_offset:29505*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29505*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9836:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x491753 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x22f375 and fs3 == 0 and fe3 == 0x85 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e491753; op2val:0xa2f375;
op3val:0x42ffff00; valaddr_reg:x3; val_offset:29508*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29508*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9837:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x491753 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x22f375 and fs3 == 0 and fe3 == 0x85 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e491753; op2val:0xa2f375;
op3val:0x42ffff80; valaddr_reg:x3; val_offset:29511*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29511*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9838:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x491753 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x22f375 and fs3 == 0 and fe3 == 0x85 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e491753; op2val:0xa2f375;
op3val:0x42ffffc0; valaddr_reg:x3; val_offset:29514*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29514*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9839:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x491753 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x22f375 and fs3 == 0 and fe3 == 0x85 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e491753; op2val:0xa2f375;
op3val:0x42ffffe0; valaddr_reg:x3; val_offset:29517*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29517*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9840:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x491753 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x22f375 and fs3 == 0 and fe3 == 0x85 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e491753; op2val:0xa2f375;
op3val:0x42fffff0; valaddr_reg:x3; val_offset:29520*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29520*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9841:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x491753 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x22f375 and fs3 == 0 and fe3 == 0x85 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e491753; op2val:0xa2f375;
op3val:0x42fffff8; valaddr_reg:x3; val_offset:29523*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29523*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9842:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x491753 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x22f375 and fs3 == 0 and fe3 == 0x85 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e491753; op2val:0xa2f375;
op3val:0x42fffffc; valaddr_reg:x3; val_offset:29526*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29526*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9843:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x491753 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x22f375 and fs3 == 0 and fe3 == 0x85 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e491753; op2val:0xa2f375;
op3val:0x42fffffe; valaddr_reg:x3; val_offset:29529*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29529*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9844:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x491753 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x22f375 and fs3 == 0 and fe3 == 0x85 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e491753; op2val:0xa2f375;
op3val:0x42ffffff; valaddr_reg:x3; val_offset:29532*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29532*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9845:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x499bb6 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x228873 and fs3 == 1 and fe3 == 0xda and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e499bb6; op2val:0xc0a28873;
op3val:0xed000000; valaddr_reg:x3; val_offset:29535*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29535*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9846:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x499bb6 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x228873 and fs3 == 1 and fe3 == 0xda and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e499bb6; op2val:0xc0a28873;
op3val:0xed000001; valaddr_reg:x3; val_offset:29538*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29538*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9847:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x499bb6 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x228873 and fs3 == 1 and fe3 == 0xda and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e499bb6; op2val:0xc0a28873;
op3val:0xed000003; valaddr_reg:x3; val_offset:29541*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29541*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9848:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x499bb6 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x228873 and fs3 == 1 and fe3 == 0xda and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e499bb6; op2val:0xc0a28873;
op3val:0xed000007; valaddr_reg:x3; val_offset:29544*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29544*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9849:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x499bb6 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x228873 and fs3 == 1 and fe3 == 0xda and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e499bb6; op2val:0xc0a28873;
op3val:0xed00000f; valaddr_reg:x3; val_offset:29547*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29547*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9850:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x499bb6 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x228873 and fs3 == 1 and fe3 == 0xda and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e499bb6; op2val:0xc0a28873;
op3val:0xed00001f; valaddr_reg:x3; val_offset:29550*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29550*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9851:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x499bb6 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x228873 and fs3 == 1 and fe3 == 0xda and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e499bb6; op2val:0xc0a28873;
op3val:0xed00003f; valaddr_reg:x3; val_offset:29553*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29553*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9852:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x499bb6 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x228873 and fs3 == 1 and fe3 == 0xda and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e499bb6; op2val:0xc0a28873;
op3val:0xed00007f; valaddr_reg:x3; val_offset:29556*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29556*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9853:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x499bb6 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x228873 and fs3 == 1 and fe3 == 0xda and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e499bb6; op2val:0xc0a28873;
op3val:0xed0000ff; valaddr_reg:x3; val_offset:29559*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29559*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9854:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x499bb6 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x228873 and fs3 == 1 and fe3 == 0xda and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e499bb6; op2val:0xc0a28873;
op3val:0xed0001ff; valaddr_reg:x3; val_offset:29562*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29562*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9855:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x499bb6 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x228873 and fs3 == 1 and fe3 == 0xda and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e499bb6; op2val:0xc0a28873;
op3val:0xed0003ff; valaddr_reg:x3; val_offset:29565*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29565*0 + 3*76*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(2118701129,32,FLEN)
NAN_BOXED(3231919385,32,FLEN)
NAN_BOXED(4269801599,32,FLEN)
NAN_BOXED(2118701129,32,FLEN)
NAN_BOXED(3231919385,32,FLEN)
NAN_BOXED(4269801727,32,FLEN)
NAN_BOXED(2118701129,32,FLEN)
NAN_BOXED(3231919385,32,FLEN)
NAN_BOXED(4269801983,32,FLEN)
NAN_BOXED(2118701129,32,FLEN)
NAN_BOXED(3231919385,32,FLEN)
NAN_BOXED(4269802495,32,FLEN)
NAN_BOXED(2118701129,32,FLEN)
NAN_BOXED(3231919385,32,FLEN)
NAN_BOXED(4269803519,32,FLEN)
NAN_BOXED(2118701129,32,FLEN)
NAN_BOXED(3231919385,32,FLEN)
NAN_BOXED(4269805567,32,FLEN)
NAN_BOXED(2118701129,32,FLEN)
NAN_BOXED(3231919385,32,FLEN)
NAN_BOXED(4269809663,32,FLEN)
NAN_BOXED(2118701129,32,FLEN)
NAN_BOXED(3231919385,32,FLEN)
NAN_BOXED(4269817855,32,FLEN)
NAN_BOXED(2118701129,32,FLEN)
NAN_BOXED(3231919385,32,FLEN)
NAN_BOXED(4269834239,32,FLEN)
NAN_BOXED(2118701129,32,FLEN)
NAN_BOXED(3231919385,32,FLEN)
NAN_BOXED(4269867007,32,FLEN)
NAN_BOXED(2118701129,32,FLEN)
NAN_BOXED(3231919385,32,FLEN)
NAN_BOXED(4269932543,32,FLEN)
NAN_BOXED(2118701129,32,FLEN)
NAN_BOXED(3231919385,32,FLEN)
NAN_BOXED(4270063615,32,FLEN)
NAN_BOXED(2118701129,32,FLEN)
NAN_BOXED(3231919385,32,FLEN)
NAN_BOXED(4270325759,32,FLEN)
NAN_BOXED(2118701129,32,FLEN)
NAN_BOXED(3231919385,32,FLEN)
NAN_BOXED(4270850047,32,FLEN)
NAN_BOXED(2118701129,32,FLEN)
NAN_BOXED(3231919385,32,FLEN)
NAN_BOXED(4271898623,32,FLEN)
NAN_BOXED(2118701129,32,FLEN)
NAN_BOXED(3231919385,32,FLEN)
NAN_BOXED(4273995775,32,FLEN)
NAN_BOXED(2118701129,32,FLEN)
NAN_BOXED(3231919385,32,FLEN)
NAN_BOXED(4273995776,32,FLEN)
NAN_BOXED(2118701129,32,FLEN)
NAN_BOXED(3231919385,32,FLEN)
NAN_BOXED(4276092928,32,FLEN)
NAN_BOXED(2118701129,32,FLEN)
NAN_BOXED(3231919385,32,FLEN)
NAN_BOXED(4277141504,32,FLEN)
NAN_BOXED(2118701129,32,FLEN)
NAN_BOXED(3231919385,32,FLEN)
NAN_BOXED(4277665792,32,FLEN)
NAN_BOXED(2118701129,32,FLEN)
NAN_BOXED(3231919385,32,FLEN)
NAN_BOXED(4277927936,32,FLEN)
NAN_BOXED(2118701129,32,FLEN)
NAN_BOXED(3231919385,32,FLEN)
NAN_BOXED(4278059008,32,FLEN)
NAN_BOXED(2118701129,32,FLEN)
NAN_BOXED(3231919385,32,FLEN)
NAN_BOXED(4278124544,32,FLEN)
NAN_BOXED(2118701129,32,FLEN)
NAN_BOXED(3231919385,32,FLEN)
NAN_BOXED(4278157312,32,FLEN)
NAN_BOXED(2118701129,32,FLEN)
NAN_BOXED(3231919385,32,FLEN)
NAN_BOXED(4278173696,32,FLEN)
NAN_BOXED(2118701129,32,FLEN)
NAN_BOXED(3231919385,32,FLEN)
NAN_BOXED(4278181888,32,FLEN)
NAN_BOXED(2118701129,32,FLEN)
NAN_BOXED(3231919385,32,FLEN)
NAN_BOXED(4278185984,32,FLEN)
NAN_BOXED(2118701129,32,FLEN)
NAN_BOXED(3231919385,32,FLEN)
NAN_BOXED(4278188032,32,FLEN)
NAN_BOXED(2118701129,32,FLEN)
NAN_BOXED(3231919385,32,FLEN)
NAN_BOXED(4278189056,32,FLEN)
NAN_BOXED(2118701129,32,FLEN)
NAN_BOXED(3231919385,32,FLEN)
NAN_BOXED(4278189568,32,FLEN)
NAN_BOXED(2118701129,32,FLEN)
NAN_BOXED(3231919385,32,FLEN)
NAN_BOXED(4278189824,32,FLEN)
NAN_BOXED(2118701129,32,FLEN)
NAN_BOXED(3231919385,32,FLEN)
NAN_BOXED(4278189952,32,FLEN)
NAN_BOXED(2118701129,32,FLEN)
NAN_BOXED(3231919385,32,FLEN)
NAN_BOXED(4278190016,32,FLEN)
NAN_BOXED(2118701129,32,FLEN)
NAN_BOXED(3231919385,32,FLEN)
NAN_BOXED(4278190048,32,FLEN)
NAN_BOXED(2118701129,32,FLEN)
NAN_BOXED(3231919385,32,FLEN)
NAN_BOXED(4278190064,32,FLEN)
NAN_BOXED(2118701129,32,FLEN)
NAN_BOXED(3231919385,32,FLEN)
NAN_BOXED(4278190072,32,FLEN)
NAN_BOXED(2118701129,32,FLEN)
NAN_BOXED(3231919385,32,FLEN)
NAN_BOXED(4278190076,32,FLEN)
NAN_BOXED(2118701129,32,FLEN)
NAN_BOXED(3231919385,32,FLEN)
NAN_BOXED(4278190078,32,FLEN)
NAN_BOXED(2118701129,32,FLEN)
NAN_BOXED(3231919385,32,FLEN)
NAN_BOXED(4278190079,32,FLEN)
NAN_BOXED(2118701129,32,FLEN)
NAN_BOXED(3231919385,32,FLEN)
NAN_BOXED(4278190081,32,FLEN)
NAN_BOXED(2118701129,32,FLEN)
NAN_BOXED(3231919385,32,FLEN)
NAN_BOXED(4278190083,32,FLEN)
NAN_BOXED(2118701129,32,FLEN)
NAN_BOXED(3231919385,32,FLEN)
NAN_BOXED(4278190087,32,FLEN)
NAN_BOXED(2118701129,32,FLEN)
NAN_BOXED(3231919385,32,FLEN)
NAN_BOXED(4279867801,32,FLEN)
NAN_BOXED(2118701129,32,FLEN)
NAN_BOXED(3231919385,32,FLEN)
NAN_BOXED(4280586825,32,FLEN)
NAN_BOXED(2118701129,32,FLEN)
NAN_BOXED(3231919385,32,FLEN)
NAN_BOXED(4281545523,32,FLEN)
NAN_BOXED(2118701129,32,FLEN)
NAN_BOXED(3231919385,32,FLEN)
NAN_BOXED(4281785197,32,FLEN)
NAN_BOXED(2118701129,32,FLEN)
NAN_BOXED(3231919385,32,FLEN)
NAN_BOXED(4282104763,32,FLEN)
NAN_BOXED(2118701129,32,FLEN)
NAN_BOXED(3231919385,32,FLEN)
NAN_BOXED(4282664004,32,FLEN)
NAN_BOXED(2118701129,32,FLEN)
NAN_BOXED(3231919385,32,FLEN)
NAN_BOXED(4283223244,32,FLEN)
NAN_BOXED(2118701129,32,FLEN)
NAN_BOXED(3231919385,32,FLEN)
NAN_BOXED(4284181942,32,FLEN)
NAN_BOXED(2118701129,32,FLEN)
NAN_BOXED(3231919385,32,FLEN)
NAN_BOXED(4284900966,32,FLEN)
NAN_BOXED(2118701129,32,FLEN)
NAN_BOXED(3231919385,32,FLEN)
NAN_BOXED(4285380315,32,FLEN)
NAN_BOXED(2118701129,32,FLEN)
NAN_BOXED(3231919385,32,FLEN)
NAN_BOXED(4286578680,32,FLEN)
NAN_BOXED(2118701129,32,FLEN)
NAN_BOXED(3231919385,32,FLEN)
NAN_BOXED(4286578684,32,FLEN)
NAN_BOXED(2118701129,32,FLEN)
NAN_BOXED(3231919385,32,FLEN)
NAN_BOXED(4286578686,32,FLEN)
NAN_BOXED(2118719315,32,FLEN)
NAN_BOXED(10679157,32,FLEN)
NAN_BOXED(1065353217,32,FLEN)
NAN_BOXED(2118719315,32,FLEN)
NAN_BOXED(10679157,32,FLEN)
NAN_BOXED(1065353219,32,FLEN)
NAN_BOXED(2118719315,32,FLEN)
NAN_BOXED(10679157,32,FLEN)
NAN_BOXED(1065353223,32,FLEN)
NAN_BOXED(2118719315,32,FLEN)
NAN_BOXED(10679157,32,FLEN)
NAN_BOXED(1067030937,32,FLEN)
NAN_BOXED(2118719315,32,FLEN)
NAN_BOXED(10679157,32,FLEN)
NAN_BOXED(1067749961,32,FLEN)
NAN_BOXED(2118719315,32,FLEN)
NAN_BOXED(10679157,32,FLEN)
NAN_BOXED(1068708659,32,FLEN)
NAN_BOXED(2118719315,32,FLEN)
NAN_BOXED(10679157,32,FLEN)
NAN_BOXED(1068948333,32,FLEN)
NAN_BOXED(2118719315,32,FLEN)
NAN_BOXED(10679157,32,FLEN)
NAN_BOXED(1069267899,32,FLEN)
NAN_BOXED(2118719315,32,FLEN)
NAN_BOXED(10679157,32,FLEN)
NAN_BOXED(1069827140,32,FLEN)
NAN_BOXED(2118719315,32,FLEN)
NAN_BOXED(10679157,32,FLEN)
NAN_BOXED(1070386380,32,FLEN)
NAN_BOXED(2118719315,32,FLEN)
NAN_BOXED(10679157,32,FLEN)
NAN_BOXED(1071345078,32,FLEN)
NAN_BOXED(2118719315,32,FLEN)
NAN_BOXED(10679157,32,FLEN)
NAN_BOXED(1072064102,32,FLEN)
NAN_BOXED(2118719315,32,FLEN)
NAN_BOXED(10679157,32,FLEN)
NAN_BOXED(1072543451,32,FLEN)
NAN_BOXED(2118719315,32,FLEN)
NAN_BOXED(10679157,32,FLEN)
NAN_BOXED(1073741816,32,FLEN)
NAN_BOXED(2118719315,32,FLEN)
NAN_BOXED(10679157,32,FLEN)
NAN_BOXED(1073741820,32,FLEN)
NAN_BOXED(2118719315,32,FLEN)
NAN_BOXED(10679157,32,FLEN)
NAN_BOXED(1073741822,32,FLEN)
NAN_BOXED(2118719315,32,FLEN)
NAN_BOXED(10679157,32,FLEN)
NAN_BOXED(1115684864,32,FLEN)
NAN_BOXED(2118719315,32,FLEN)
NAN_BOXED(10679157,32,FLEN)
NAN_BOXED(1115684865,32,FLEN)
NAN_BOXED(2118719315,32,FLEN)
NAN_BOXED(10679157,32,FLEN)
NAN_BOXED(1115684867,32,FLEN)
NAN_BOXED(2118719315,32,FLEN)
NAN_BOXED(10679157,32,FLEN)
NAN_BOXED(1115684871,32,FLEN)
NAN_BOXED(2118719315,32,FLEN)
NAN_BOXED(10679157,32,FLEN)
NAN_BOXED(1115684879,32,FLEN)
NAN_BOXED(2118719315,32,FLEN)
NAN_BOXED(10679157,32,FLEN)
NAN_BOXED(1115684895,32,FLEN)
NAN_BOXED(2118719315,32,FLEN)
NAN_BOXED(10679157,32,FLEN)
NAN_BOXED(1115684927,32,FLEN)
NAN_BOXED(2118719315,32,FLEN)
NAN_BOXED(10679157,32,FLEN)
NAN_BOXED(1115684991,32,FLEN)
NAN_BOXED(2118719315,32,FLEN)
NAN_BOXED(10679157,32,FLEN)
NAN_BOXED(1115685119,32,FLEN)
NAN_BOXED(2118719315,32,FLEN)
NAN_BOXED(10679157,32,FLEN)
NAN_BOXED(1115685375,32,FLEN)
NAN_BOXED(2118719315,32,FLEN)
NAN_BOXED(10679157,32,FLEN)
NAN_BOXED(1115685887,32,FLEN)
NAN_BOXED(2118719315,32,FLEN)
NAN_BOXED(10679157,32,FLEN)
NAN_BOXED(1115686911,32,FLEN)
NAN_BOXED(2118719315,32,FLEN)
NAN_BOXED(10679157,32,FLEN)
NAN_BOXED(1115688959,32,FLEN)
NAN_BOXED(2118719315,32,FLEN)
NAN_BOXED(10679157,32,FLEN)
NAN_BOXED(1115693055,32,FLEN)
NAN_BOXED(2118719315,32,FLEN)
NAN_BOXED(10679157,32,FLEN)
NAN_BOXED(1115701247,32,FLEN)
NAN_BOXED(2118719315,32,FLEN)
NAN_BOXED(10679157,32,FLEN)
NAN_BOXED(1115717631,32,FLEN)
NAN_BOXED(2118719315,32,FLEN)
NAN_BOXED(10679157,32,FLEN)
NAN_BOXED(1115750399,32,FLEN)
NAN_BOXED(2118719315,32,FLEN)
NAN_BOXED(10679157,32,FLEN)
NAN_BOXED(1115815935,32,FLEN)
NAN_BOXED(2118719315,32,FLEN)
NAN_BOXED(10679157,32,FLEN)
NAN_BOXED(1115947007,32,FLEN)
NAN_BOXED(2118719315,32,FLEN)
NAN_BOXED(10679157,32,FLEN)
NAN_BOXED(1116209151,32,FLEN)
NAN_BOXED(2118719315,32,FLEN)
NAN_BOXED(10679157,32,FLEN)
NAN_BOXED(1116733439,32,FLEN)
NAN_BOXED(2118719315,32,FLEN)
NAN_BOXED(10679157,32,FLEN)
NAN_BOXED(1117782015,32,FLEN)
NAN_BOXED(2118719315,32,FLEN)
NAN_BOXED(10679157,32,FLEN)
NAN_BOXED(1119879167,32,FLEN)
NAN_BOXED(2118719315,32,FLEN)
NAN_BOXED(10679157,32,FLEN)
NAN_BOXED(1119879168,32,FLEN)
NAN_BOXED(2118719315,32,FLEN)
NAN_BOXED(10679157,32,FLEN)
NAN_BOXED(1121976320,32,FLEN)
NAN_BOXED(2118719315,32,FLEN)
NAN_BOXED(10679157,32,FLEN)
NAN_BOXED(1123024896,32,FLEN)
NAN_BOXED(2118719315,32,FLEN)
NAN_BOXED(10679157,32,FLEN)
NAN_BOXED(1123549184,32,FLEN)
NAN_BOXED(2118719315,32,FLEN)
NAN_BOXED(10679157,32,FLEN)
NAN_BOXED(1123811328,32,FLEN)
NAN_BOXED(2118719315,32,FLEN)
NAN_BOXED(10679157,32,FLEN)
NAN_BOXED(1123942400,32,FLEN)
NAN_BOXED(2118719315,32,FLEN)
NAN_BOXED(10679157,32,FLEN)
NAN_BOXED(1124007936,32,FLEN)
NAN_BOXED(2118719315,32,FLEN)
NAN_BOXED(10679157,32,FLEN)
NAN_BOXED(1124040704,32,FLEN)
NAN_BOXED(2118719315,32,FLEN)
NAN_BOXED(10679157,32,FLEN)
NAN_BOXED(1124057088,32,FLEN)
NAN_BOXED(2118719315,32,FLEN)
NAN_BOXED(10679157,32,FLEN)
NAN_BOXED(1124065280,32,FLEN)
NAN_BOXED(2118719315,32,FLEN)
NAN_BOXED(10679157,32,FLEN)
NAN_BOXED(1124069376,32,FLEN)
NAN_BOXED(2118719315,32,FLEN)
NAN_BOXED(10679157,32,FLEN)
NAN_BOXED(1124071424,32,FLEN)
NAN_BOXED(2118719315,32,FLEN)
NAN_BOXED(10679157,32,FLEN)
NAN_BOXED(1124072448,32,FLEN)
NAN_BOXED(2118719315,32,FLEN)
NAN_BOXED(10679157,32,FLEN)
NAN_BOXED(1124072960,32,FLEN)
NAN_BOXED(2118719315,32,FLEN)
NAN_BOXED(10679157,32,FLEN)
NAN_BOXED(1124073216,32,FLEN)
NAN_BOXED(2118719315,32,FLEN)
NAN_BOXED(10679157,32,FLEN)
NAN_BOXED(1124073344,32,FLEN)
NAN_BOXED(2118719315,32,FLEN)
NAN_BOXED(10679157,32,FLEN)
NAN_BOXED(1124073408,32,FLEN)
NAN_BOXED(2118719315,32,FLEN)
NAN_BOXED(10679157,32,FLEN)
NAN_BOXED(1124073440,32,FLEN)
NAN_BOXED(2118719315,32,FLEN)
NAN_BOXED(10679157,32,FLEN)
NAN_BOXED(1124073456,32,FLEN)
NAN_BOXED(2118719315,32,FLEN)
NAN_BOXED(10679157,32,FLEN)
NAN_BOXED(1124073464,32,FLEN)
NAN_BOXED(2118719315,32,FLEN)
NAN_BOXED(10679157,32,FLEN)
NAN_BOXED(1124073468,32,FLEN)
NAN_BOXED(2118719315,32,FLEN)
NAN_BOXED(10679157,32,FLEN)
NAN_BOXED(1124073470,32,FLEN)
NAN_BOXED(2118719315,32,FLEN)
NAN_BOXED(10679157,32,FLEN)
NAN_BOXED(1124073471,32,FLEN)
NAN_BOXED(2118753206,32,FLEN)
NAN_BOXED(3231877235,32,FLEN)
NAN_BOXED(3976200192,32,FLEN)
NAN_BOXED(2118753206,32,FLEN)
NAN_BOXED(3231877235,32,FLEN)
NAN_BOXED(3976200193,32,FLEN)
NAN_BOXED(2118753206,32,FLEN)
NAN_BOXED(3231877235,32,FLEN)
NAN_BOXED(3976200195,32,FLEN)
NAN_BOXED(2118753206,32,FLEN)
NAN_BOXED(3231877235,32,FLEN)
NAN_BOXED(3976200199,32,FLEN)
NAN_BOXED(2118753206,32,FLEN)
NAN_BOXED(3231877235,32,FLEN)
NAN_BOXED(3976200207,32,FLEN)
NAN_BOXED(2118753206,32,FLEN)
NAN_BOXED(3231877235,32,FLEN)
NAN_BOXED(3976200223,32,FLEN)
NAN_BOXED(2118753206,32,FLEN)
NAN_BOXED(3231877235,32,FLEN)
NAN_BOXED(3976200255,32,FLEN)
NAN_BOXED(2118753206,32,FLEN)
NAN_BOXED(3231877235,32,FLEN)
NAN_BOXED(3976200319,32,FLEN)
NAN_BOXED(2118753206,32,FLEN)
NAN_BOXED(3231877235,32,FLEN)
NAN_BOXED(3976200447,32,FLEN)
NAN_BOXED(2118753206,32,FLEN)
NAN_BOXED(3231877235,32,FLEN)
NAN_BOXED(3976200703,32,FLEN)
NAN_BOXED(2118753206,32,FLEN)
NAN_BOXED(3231877235,32,FLEN)
NAN_BOXED(3976201215,32,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
