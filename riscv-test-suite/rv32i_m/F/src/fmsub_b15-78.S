
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 14:18:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32F/fmsub.s.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.s instruction of the RISC-V RV32F_Zicsr,RV32FD_Zicsr,RV64F_Zicsr,RV64FD_Zicsr extension for the fmsub_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF_Zicsr,RV32IFD_Zicsr,RV64IF_Zicsr,RV64IFD_Zicsr,RV32EF_Zicsr,RV32EFD_Zicsr,RV64EF_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fmsub_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*F.*);def TEST_CASE_1=True;",fmsub_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_9856:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x499bb6 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x228873 and fs3 == 1 and fe3 == 0xda and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e499bb6; op2val:0xc0a28873;
op3val:0xed0007ff; valaddr_reg:x3; val_offset:29568*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29568*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9857:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x499bb6 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x228873 and fs3 == 1 and fe3 == 0xda and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e499bb6; op2val:0xc0a28873;
op3val:0xed000fff; valaddr_reg:x3; val_offset:29571*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29571*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9858:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x499bb6 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x228873 and fs3 == 1 and fe3 == 0xda and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e499bb6; op2val:0xc0a28873;
op3val:0xed001fff; valaddr_reg:x3; val_offset:29574*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29574*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9859:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x499bb6 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x228873 and fs3 == 1 and fe3 == 0xda and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e499bb6; op2val:0xc0a28873;
op3val:0xed003fff; valaddr_reg:x3; val_offset:29577*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29577*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9860:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x499bb6 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x228873 and fs3 == 1 and fe3 == 0xda and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e499bb6; op2val:0xc0a28873;
op3val:0xed007fff; valaddr_reg:x3; val_offset:29580*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29580*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9861:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x499bb6 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x228873 and fs3 == 1 and fe3 == 0xda and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e499bb6; op2val:0xc0a28873;
op3val:0xed00ffff; valaddr_reg:x3; val_offset:29583*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29583*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9862:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x499bb6 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x228873 and fs3 == 1 and fe3 == 0xda and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e499bb6; op2val:0xc0a28873;
op3val:0xed01ffff; valaddr_reg:x3; val_offset:29586*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29586*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9863:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x499bb6 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x228873 and fs3 == 1 and fe3 == 0xda and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e499bb6; op2val:0xc0a28873;
op3val:0xed03ffff; valaddr_reg:x3; val_offset:29589*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29589*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9864:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x499bb6 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x228873 and fs3 == 1 and fe3 == 0xda and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e499bb6; op2val:0xc0a28873;
op3val:0xed07ffff; valaddr_reg:x3; val_offset:29592*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29592*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9865:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x499bb6 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x228873 and fs3 == 1 and fe3 == 0xda and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e499bb6; op2val:0xc0a28873;
op3val:0xed0fffff; valaddr_reg:x3; val_offset:29595*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29595*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9866:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x499bb6 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x228873 and fs3 == 1 and fe3 == 0xda and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e499bb6; op2val:0xc0a28873;
op3val:0xed1fffff; valaddr_reg:x3; val_offset:29598*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29598*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9867:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x499bb6 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x228873 and fs3 == 1 and fe3 == 0xda and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e499bb6; op2val:0xc0a28873;
op3val:0xed3fffff; valaddr_reg:x3; val_offset:29601*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29601*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9868:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x499bb6 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x228873 and fs3 == 1 and fe3 == 0xda and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e499bb6; op2val:0xc0a28873;
op3val:0xed400000; valaddr_reg:x3; val_offset:29604*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29604*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9869:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x499bb6 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x228873 and fs3 == 1 and fe3 == 0xda and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e499bb6; op2val:0xc0a28873;
op3val:0xed600000; valaddr_reg:x3; val_offset:29607*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29607*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9870:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x499bb6 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x228873 and fs3 == 1 and fe3 == 0xda and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e499bb6; op2val:0xc0a28873;
op3val:0xed700000; valaddr_reg:x3; val_offset:29610*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29610*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9871:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x499bb6 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x228873 and fs3 == 1 and fe3 == 0xda and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e499bb6; op2val:0xc0a28873;
op3val:0xed780000; valaddr_reg:x3; val_offset:29613*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29613*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9872:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x499bb6 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x228873 and fs3 == 1 and fe3 == 0xda and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e499bb6; op2val:0xc0a28873;
op3val:0xed7c0000; valaddr_reg:x3; val_offset:29616*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29616*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9873:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x499bb6 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x228873 and fs3 == 1 and fe3 == 0xda and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e499bb6; op2val:0xc0a28873;
op3val:0xed7e0000; valaddr_reg:x3; val_offset:29619*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29619*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9874:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x499bb6 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x228873 and fs3 == 1 and fe3 == 0xda and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e499bb6; op2val:0xc0a28873;
op3val:0xed7f0000; valaddr_reg:x3; val_offset:29622*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29622*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9875:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x499bb6 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x228873 and fs3 == 1 and fe3 == 0xda and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e499bb6; op2val:0xc0a28873;
op3val:0xed7f8000; valaddr_reg:x3; val_offset:29625*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29625*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9876:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x499bb6 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x228873 and fs3 == 1 and fe3 == 0xda and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e499bb6; op2val:0xc0a28873;
op3val:0xed7fc000; valaddr_reg:x3; val_offset:29628*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29628*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9877:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x499bb6 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x228873 and fs3 == 1 and fe3 == 0xda and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e499bb6; op2val:0xc0a28873;
op3val:0xed7fe000; valaddr_reg:x3; val_offset:29631*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29631*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9878:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x499bb6 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x228873 and fs3 == 1 and fe3 == 0xda and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e499bb6; op2val:0xc0a28873;
op3val:0xed7ff000; valaddr_reg:x3; val_offset:29634*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29634*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9879:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x499bb6 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x228873 and fs3 == 1 and fe3 == 0xda and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e499bb6; op2val:0xc0a28873;
op3val:0xed7ff800; valaddr_reg:x3; val_offset:29637*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29637*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9880:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x499bb6 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x228873 and fs3 == 1 and fe3 == 0xda and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e499bb6; op2val:0xc0a28873;
op3val:0xed7ffc00; valaddr_reg:x3; val_offset:29640*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29640*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9881:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x499bb6 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x228873 and fs3 == 1 and fe3 == 0xda and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e499bb6; op2val:0xc0a28873;
op3val:0xed7ffe00; valaddr_reg:x3; val_offset:29643*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29643*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9882:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x499bb6 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x228873 and fs3 == 1 and fe3 == 0xda and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e499bb6; op2val:0xc0a28873;
op3val:0xed7fff00; valaddr_reg:x3; val_offset:29646*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29646*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9883:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x499bb6 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x228873 and fs3 == 1 and fe3 == 0xda and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e499bb6; op2val:0xc0a28873;
op3val:0xed7fff80; valaddr_reg:x3; val_offset:29649*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29649*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9884:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x499bb6 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x228873 and fs3 == 1 and fe3 == 0xda and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e499bb6; op2val:0xc0a28873;
op3val:0xed7fffc0; valaddr_reg:x3; val_offset:29652*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29652*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9885:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x499bb6 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x228873 and fs3 == 1 and fe3 == 0xda and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e499bb6; op2val:0xc0a28873;
op3val:0xed7fffe0; valaddr_reg:x3; val_offset:29655*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29655*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9886:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x499bb6 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x228873 and fs3 == 1 and fe3 == 0xda and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e499bb6; op2val:0xc0a28873;
op3val:0xed7ffff0; valaddr_reg:x3; val_offset:29658*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29658*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9887:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x499bb6 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x228873 and fs3 == 1 and fe3 == 0xda and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e499bb6; op2val:0xc0a28873;
op3val:0xed7ffff8; valaddr_reg:x3; val_offset:29661*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29661*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9888:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x499bb6 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x228873 and fs3 == 1 and fe3 == 0xda and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e499bb6; op2val:0xc0a28873;
op3val:0xed7ffffc; valaddr_reg:x3; val_offset:29664*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29664*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9889:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x499bb6 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x228873 and fs3 == 1 and fe3 == 0xda and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e499bb6; op2val:0xc0a28873;
op3val:0xed7ffffe; valaddr_reg:x3; val_offset:29667*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29667*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9890:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x499bb6 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x228873 and fs3 == 1 and fe3 == 0xda and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e499bb6; op2val:0xc0a28873;
op3val:0xed7fffff; valaddr_reg:x3; val_offset:29670*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29670*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9891:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x499bb6 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x228873 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e499bb6; op2val:0xc0a28873;
op3val:0xff000001; valaddr_reg:x3; val_offset:29673*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29673*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9892:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x499bb6 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x228873 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e499bb6; op2val:0xc0a28873;
op3val:0xff000003; valaddr_reg:x3; val_offset:29676*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29676*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9893:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x499bb6 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x228873 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e499bb6; op2val:0xc0a28873;
op3val:0xff000007; valaddr_reg:x3; val_offset:29679*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29679*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9894:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x499bb6 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x228873 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e499bb6; op2val:0xc0a28873;
op3val:0xff199999; valaddr_reg:x3; val_offset:29682*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29682*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9895:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x499bb6 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x228873 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e499bb6; op2val:0xc0a28873;
op3val:0xff249249; valaddr_reg:x3; val_offset:29685*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29685*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9896:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x499bb6 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x228873 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e499bb6; op2val:0xc0a28873;
op3val:0xff333333; valaddr_reg:x3; val_offset:29688*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29688*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9897:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x499bb6 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x228873 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e499bb6; op2val:0xc0a28873;
op3val:0xff36db6d; valaddr_reg:x3; val_offset:29691*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29691*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9898:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x499bb6 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x228873 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e499bb6; op2val:0xc0a28873;
op3val:0xff3bbbbb; valaddr_reg:x3; val_offset:29694*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29694*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9899:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x499bb6 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x228873 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e499bb6; op2val:0xc0a28873;
op3val:0xff444444; valaddr_reg:x3; val_offset:29697*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29697*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9900:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x499bb6 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x228873 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e499bb6; op2val:0xc0a28873;
op3val:0xff4ccccc; valaddr_reg:x3; val_offset:29700*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29700*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9901:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x499bb6 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x228873 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e499bb6; op2val:0xc0a28873;
op3val:0xff5b6db6; valaddr_reg:x3; val_offset:29703*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29703*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9902:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x499bb6 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x228873 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e499bb6; op2val:0xc0a28873;
op3val:0xff666666; valaddr_reg:x3; val_offset:29706*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29706*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9903:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x499bb6 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x228873 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e499bb6; op2val:0xc0a28873;
op3val:0xff6db6db; valaddr_reg:x3; val_offset:29709*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29709*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9904:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x499bb6 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x228873 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e499bb6; op2val:0xc0a28873;
op3val:0xff7ffff8; valaddr_reg:x3; val_offset:29712*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29712*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9905:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x499bb6 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x228873 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e499bb6; op2val:0xc0a28873;
op3val:0xff7ffffc; valaddr_reg:x3; val_offset:29715*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29715*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9906:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x499bb6 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x228873 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e499bb6; op2val:0xc0a28873;
op3val:0xff7ffffe; valaddr_reg:x3; val_offset:29718*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29718*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9907:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ab524 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x21a6cd and fs3 == 0 and fe3 == 0x74 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ab524; op2val:0xa1a6cd;
op3val:0x3a000000; valaddr_reg:x3; val_offset:29721*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29721*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9908:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ab524 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x21a6cd and fs3 == 0 and fe3 == 0x74 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ab524; op2val:0xa1a6cd;
op3val:0x3a000001; valaddr_reg:x3; val_offset:29724*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29724*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9909:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ab524 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x21a6cd and fs3 == 0 and fe3 == 0x74 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ab524; op2val:0xa1a6cd;
op3val:0x3a000003; valaddr_reg:x3; val_offset:29727*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29727*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9910:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ab524 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x21a6cd and fs3 == 0 and fe3 == 0x74 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ab524; op2val:0xa1a6cd;
op3val:0x3a000007; valaddr_reg:x3; val_offset:29730*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29730*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9911:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ab524 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x21a6cd and fs3 == 0 and fe3 == 0x74 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ab524; op2val:0xa1a6cd;
op3val:0x3a00000f; valaddr_reg:x3; val_offset:29733*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29733*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9912:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ab524 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x21a6cd and fs3 == 0 and fe3 == 0x74 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ab524; op2val:0xa1a6cd;
op3val:0x3a00001f; valaddr_reg:x3; val_offset:29736*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29736*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9913:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ab524 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x21a6cd and fs3 == 0 and fe3 == 0x74 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ab524; op2val:0xa1a6cd;
op3val:0x3a00003f; valaddr_reg:x3; val_offset:29739*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29739*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9914:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ab524 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x21a6cd and fs3 == 0 and fe3 == 0x74 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ab524; op2val:0xa1a6cd;
op3val:0x3a00007f; valaddr_reg:x3; val_offset:29742*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29742*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9915:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ab524 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x21a6cd and fs3 == 0 and fe3 == 0x74 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ab524; op2val:0xa1a6cd;
op3val:0x3a0000ff; valaddr_reg:x3; val_offset:29745*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29745*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9916:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ab524 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x21a6cd and fs3 == 0 and fe3 == 0x74 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ab524; op2val:0xa1a6cd;
op3val:0x3a0001ff; valaddr_reg:x3; val_offset:29748*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29748*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9917:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ab524 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x21a6cd and fs3 == 0 and fe3 == 0x74 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ab524; op2val:0xa1a6cd;
op3val:0x3a0003ff; valaddr_reg:x3; val_offset:29751*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29751*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9918:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ab524 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x21a6cd and fs3 == 0 and fe3 == 0x74 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ab524; op2val:0xa1a6cd;
op3val:0x3a0007ff; valaddr_reg:x3; val_offset:29754*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29754*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9919:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ab524 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x21a6cd and fs3 == 0 and fe3 == 0x74 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ab524; op2val:0xa1a6cd;
op3val:0x3a000fff; valaddr_reg:x3; val_offset:29757*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29757*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9920:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ab524 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x21a6cd and fs3 == 0 and fe3 == 0x74 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ab524; op2val:0xa1a6cd;
op3val:0x3a001fff; valaddr_reg:x3; val_offset:29760*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29760*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9921:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ab524 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x21a6cd and fs3 == 0 and fe3 == 0x74 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ab524; op2val:0xa1a6cd;
op3val:0x3a003fff; valaddr_reg:x3; val_offset:29763*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29763*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9922:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ab524 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x21a6cd and fs3 == 0 and fe3 == 0x74 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ab524; op2val:0xa1a6cd;
op3val:0x3a007fff; valaddr_reg:x3; val_offset:29766*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29766*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9923:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ab524 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x21a6cd and fs3 == 0 and fe3 == 0x74 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ab524; op2val:0xa1a6cd;
op3val:0x3a00ffff; valaddr_reg:x3; val_offset:29769*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29769*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9924:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ab524 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x21a6cd and fs3 == 0 and fe3 == 0x74 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ab524; op2val:0xa1a6cd;
op3val:0x3a01ffff; valaddr_reg:x3; val_offset:29772*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29772*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9925:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ab524 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x21a6cd and fs3 == 0 and fe3 == 0x74 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ab524; op2val:0xa1a6cd;
op3val:0x3a03ffff; valaddr_reg:x3; val_offset:29775*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29775*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9926:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ab524 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x21a6cd and fs3 == 0 and fe3 == 0x74 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ab524; op2val:0xa1a6cd;
op3val:0x3a07ffff; valaddr_reg:x3; val_offset:29778*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29778*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9927:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ab524 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x21a6cd and fs3 == 0 and fe3 == 0x74 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ab524; op2val:0xa1a6cd;
op3val:0x3a0fffff; valaddr_reg:x3; val_offset:29781*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29781*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9928:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ab524 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x21a6cd and fs3 == 0 and fe3 == 0x74 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ab524; op2val:0xa1a6cd;
op3val:0x3a1fffff; valaddr_reg:x3; val_offset:29784*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29784*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9929:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ab524 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x21a6cd and fs3 == 0 and fe3 == 0x74 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ab524; op2val:0xa1a6cd;
op3val:0x3a3fffff; valaddr_reg:x3; val_offset:29787*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29787*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9930:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ab524 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x21a6cd and fs3 == 0 and fe3 == 0x74 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ab524; op2val:0xa1a6cd;
op3val:0x3a400000; valaddr_reg:x3; val_offset:29790*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29790*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9931:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ab524 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x21a6cd and fs3 == 0 and fe3 == 0x74 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ab524; op2val:0xa1a6cd;
op3val:0x3a600000; valaddr_reg:x3; val_offset:29793*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29793*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9932:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ab524 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x21a6cd and fs3 == 0 and fe3 == 0x74 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ab524; op2val:0xa1a6cd;
op3val:0x3a700000; valaddr_reg:x3; val_offset:29796*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29796*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9933:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ab524 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x21a6cd and fs3 == 0 and fe3 == 0x74 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ab524; op2val:0xa1a6cd;
op3val:0x3a780000; valaddr_reg:x3; val_offset:29799*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29799*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9934:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ab524 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x21a6cd and fs3 == 0 and fe3 == 0x74 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ab524; op2val:0xa1a6cd;
op3val:0x3a7c0000; valaddr_reg:x3; val_offset:29802*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29802*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9935:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ab524 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x21a6cd and fs3 == 0 and fe3 == 0x74 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ab524; op2val:0xa1a6cd;
op3val:0x3a7e0000; valaddr_reg:x3; val_offset:29805*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29805*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9936:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ab524 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x21a6cd and fs3 == 0 and fe3 == 0x74 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ab524; op2val:0xa1a6cd;
op3val:0x3a7f0000; valaddr_reg:x3; val_offset:29808*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29808*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9937:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ab524 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x21a6cd and fs3 == 0 and fe3 == 0x74 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ab524; op2val:0xa1a6cd;
op3val:0x3a7f8000; valaddr_reg:x3; val_offset:29811*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29811*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9938:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ab524 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x21a6cd and fs3 == 0 and fe3 == 0x74 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ab524; op2val:0xa1a6cd;
op3val:0x3a7fc000; valaddr_reg:x3; val_offset:29814*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29814*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9939:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ab524 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x21a6cd and fs3 == 0 and fe3 == 0x74 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ab524; op2val:0xa1a6cd;
op3val:0x3a7fe000; valaddr_reg:x3; val_offset:29817*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29817*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9940:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ab524 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x21a6cd and fs3 == 0 and fe3 == 0x74 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ab524; op2val:0xa1a6cd;
op3val:0x3a7ff000; valaddr_reg:x3; val_offset:29820*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29820*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9941:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ab524 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x21a6cd and fs3 == 0 and fe3 == 0x74 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ab524; op2val:0xa1a6cd;
op3val:0x3a7ff800; valaddr_reg:x3; val_offset:29823*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29823*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9942:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ab524 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x21a6cd and fs3 == 0 and fe3 == 0x74 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ab524; op2val:0xa1a6cd;
op3val:0x3a7ffc00; valaddr_reg:x3; val_offset:29826*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29826*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9943:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ab524 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x21a6cd and fs3 == 0 and fe3 == 0x74 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ab524; op2val:0xa1a6cd;
op3val:0x3a7ffe00; valaddr_reg:x3; val_offset:29829*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29829*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9944:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ab524 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x21a6cd and fs3 == 0 and fe3 == 0x74 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ab524; op2val:0xa1a6cd;
op3val:0x3a7fff00; valaddr_reg:x3; val_offset:29832*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29832*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9945:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ab524 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x21a6cd and fs3 == 0 and fe3 == 0x74 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ab524; op2val:0xa1a6cd;
op3val:0x3a7fff80; valaddr_reg:x3; val_offset:29835*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29835*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9946:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ab524 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x21a6cd and fs3 == 0 and fe3 == 0x74 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ab524; op2val:0xa1a6cd;
op3val:0x3a7fffc0; valaddr_reg:x3; val_offset:29838*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29838*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9947:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ab524 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x21a6cd and fs3 == 0 and fe3 == 0x74 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ab524; op2val:0xa1a6cd;
op3val:0x3a7fffe0; valaddr_reg:x3; val_offset:29841*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29841*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9948:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ab524 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x21a6cd and fs3 == 0 and fe3 == 0x74 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ab524; op2val:0xa1a6cd;
op3val:0x3a7ffff0; valaddr_reg:x3; val_offset:29844*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29844*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9949:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ab524 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x21a6cd and fs3 == 0 and fe3 == 0x74 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ab524; op2val:0xa1a6cd;
op3val:0x3a7ffff8; valaddr_reg:x3; val_offset:29847*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29847*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9950:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ab524 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x21a6cd and fs3 == 0 and fe3 == 0x74 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ab524; op2val:0xa1a6cd;
op3val:0x3a7ffffc; valaddr_reg:x3; val_offset:29850*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29850*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9951:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ab524 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x21a6cd and fs3 == 0 and fe3 == 0x74 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ab524; op2val:0xa1a6cd;
op3val:0x3a7ffffe; valaddr_reg:x3; val_offset:29853*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29853*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9952:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ab524 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x21a6cd and fs3 == 0 and fe3 == 0x74 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ab524; op2val:0xa1a6cd;
op3val:0x3a7fffff; valaddr_reg:x3; val_offset:29856*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29856*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9953:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ab524 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x21a6cd and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ab524; op2val:0xa1a6cd;
op3val:0x3f800001; valaddr_reg:x3; val_offset:29859*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29859*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9954:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ab524 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x21a6cd and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ab524; op2val:0xa1a6cd;
op3val:0x3f800003; valaddr_reg:x3; val_offset:29862*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29862*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9955:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ab524 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x21a6cd and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ab524; op2val:0xa1a6cd;
op3val:0x3f800007; valaddr_reg:x3; val_offset:29865*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29865*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9956:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ab524 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x21a6cd and fs3 == 0 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ab524; op2val:0xa1a6cd;
op3val:0x3f999999; valaddr_reg:x3; val_offset:29868*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29868*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9957:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ab524 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x21a6cd and fs3 == 0 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ab524; op2val:0xa1a6cd;
op3val:0x3fa49249; valaddr_reg:x3; val_offset:29871*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29871*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9958:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ab524 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x21a6cd and fs3 == 0 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ab524; op2val:0xa1a6cd;
op3val:0x3fb33333; valaddr_reg:x3; val_offset:29874*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29874*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9959:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ab524 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x21a6cd and fs3 == 0 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ab524; op2val:0xa1a6cd;
op3val:0x3fb6db6d; valaddr_reg:x3; val_offset:29877*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29877*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9960:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ab524 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x21a6cd and fs3 == 0 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ab524; op2val:0xa1a6cd;
op3val:0x3fbbbbbb; valaddr_reg:x3; val_offset:29880*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29880*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9961:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ab524 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x21a6cd and fs3 == 0 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ab524; op2val:0xa1a6cd;
op3val:0x3fc44444; valaddr_reg:x3; val_offset:29883*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29883*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9962:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ab524 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x21a6cd and fs3 == 0 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ab524; op2val:0xa1a6cd;
op3val:0x3fcccccc; valaddr_reg:x3; val_offset:29886*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29886*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9963:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ab524 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x21a6cd and fs3 == 0 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ab524; op2val:0xa1a6cd;
op3val:0x3fdb6db6; valaddr_reg:x3; val_offset:29889*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29889*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9964:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ab524 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x21a6cd and fs3 == 0 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ab524; op2val:0xa1a6cd;
op3val:0x3fe66666; valaddr_reg:x3; val_offset:29892*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29892*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9965:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ab524 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x21a6cd and fs3 == 0 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ab524; op2val:0xa1a6cd;
op3val:0x3fedb6db; valaddr_reg:x3; val_offset:29895*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29895*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9966:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ab524 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x21a6cd and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ab524; op2val:0xa1a6cd;
op3val:0x3ffffff8; valaddr_reg:x3; val_offset:29898*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29898*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9967:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ab524 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x21a6cd and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ab524; op2val:0xa1a6cd;
op3val:0x3ffffffc; valaddr_reg:x3; val_offset:29901*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29901*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9968:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ab524 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x21a6cd and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ab524; op2val:0xa1a6cd;
op3val:0x3ffffffe; valaddr_reg:x3; val_offset:29904*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29904*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9969:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c2a81 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x207f2f and fs3 == 0 and fe3 == 0x52 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c2a81; op2val:0xa07f2f;
op3val:0x29000000; valaddr_reg:x3; val_offset:29907*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29907*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9970:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c2a81 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x207f2f and fs3 == 0 and fe3 == 0x52 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c2a81; op2val:0xa07f2f;
op3val:0x29000001; valaddr_reg:x3; val_offset:29910*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29910*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9971:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c2a81 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x207f2f and fs3 == 0 and fe3 == 0x52 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c2a81; op2val:0xa07f2f;
op3val:0x29000003; valaddr_reg:x3; val_offset:29913*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29913*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9972:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c2a81 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x207f2f and fs3 == 0 and fe3 == 0x52 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c2a81; op2val:0xa07f2f;
op3val:0x29000007; valaddr_reg:x3; val_offset:29916*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29916*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9973:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c2a81 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x207f2f and fs3 == 0 and fe3 == 0x52 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c2a81; op2val:0xa07f2f;
op3val:0x2900000f; valaddr_reg:x3; val_offset:29919*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29919*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9974:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c2a81 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x207f2f and fs3 == 0 and fe3 == 0x52 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c2a81; op2val:0xa07f2f;
op3val:0x2900001f; valaddr_reg:x3; val_offset:29922*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29922*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9975:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c2a81 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x207f2f and fs3 == 0 and fe3 == 0x52 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c2a81; op2val:0xa07f2f;
op3val:0x2900003f; valaddr_reg:x3; val_offset:29925*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29925*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9976:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c2a81 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x207f2f and fs3 == 0 and fe3 == 0x52 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c2a81; op2val:0xa07f2f;
op3val:0x2900007f; valaddr_reg:x3; val_offset:29928*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29928*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9977:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c2a81 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x207f2f and fs3 == 0 and fe3 == 0x52 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c2a81; op2val:0xa07f2f;
op3val:0x290000ff; valaddr_reg:x3; val_offset:29931*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29931*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9978:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c2a81 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x207f2f and fs3 == 0 and fe3 == 0x52 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c2a81; op2val:0xa07f2f;
op3val:0x290001ff; valaddr_reg:x3; val_offset:29934*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29934*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9979:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c2a81 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x207f2f and fs3 == 0 and fe3 == 0x52 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c2a81; op2val:0xa07f2f;
op3val:0x290003ff; valaddr_reg:x3; val_offset:29937*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29937*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9980:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c2a81 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x207f2f and fs3 == 0 and fe3 == 0x52 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c2a81; op2val:0xa07f2f;
op3val:0x290007ff; valaddr_reg:x3; val_offset:29940*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29940*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9981:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c2a81 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x207f2f and fs3 == 0 and fe3 == 0x52 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c2a81; op2val:0xa07f2f;
op3val:0x29000fff; valaddr_reg:x3; val_offset:29943*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29943*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9982:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c2a81 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x207f2f and fs3 == 0 and fe3 == 0x52 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c2a81; op2val:0xa07f2f;
op3val:0x29001fff; valaddr_reg:x3; val_offset:29946*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29946*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9983:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c2a81 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x207f2f and fs3 == 0 and fe3 == 0x52 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c2a81; op2val:0xa07f2f;
op3val:0x29003fff; valaddr_reg:x3; val_offset:29949*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29949*0 + 3*77*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(2118753206,32,FLEN)
NAN_BOXED(3231877235,32,FLEN)
NAN_BOXED(3976202239,32,FLEN)
NAN_BOXED(2118753206,32,FLEN)
NAN_BOXED(3231877235,32,FLEN)
NAN_BOXED(3976204287,32,FLEN)
NAN_BOXED(2118753206,32,FLEN)
NAN_BOXED(3231877235,32,FLEN)
NAN_BOXED(3976208383,32,FLEN)
NAN_BOXED(2118753206,32,FLEN)
NAN_BOXED(3231877235,32,FLEN)
NAN_BOXED(3976216575,32,FLEN)
NAN_BOXED(2118753206,32,FLEN)
NAN_BOXED(3231877235,32,FLEN)
NAN_BOXED(3976232959,32,FLEN)
NAN_BOXED(2118753206,32,FLEN)
NAN_BOXED(3231877235,32,FLEN)
NAN_BOXED(3976265727,32,FLEN)
NAN_BOXED(2118753206,32,FLEN)
NAN_BOXED(3231877235,32,FLEN)
NAN_BOXED(3976331263,32,FLEN)
NAN_BOXED(2118753206,32,FLEN)
NAN_BOXED(3231877235,32,FLEN)
NAN_BOXED(3976462335,32,FLEN)
NAN_BOXED(2118753206,32,FLEN)
NAN_BOXED(3231877235,32,FLEN)
NAN_BOXED(3976724479,32,FLEN)
NAN_BOXED(2118753206,32,FLEN)
NAN_BOXED(3231877235,32,FLEN)
NAN_BOXED(3977248767,32,FLEN)
NAN_BOXED(2118753206,32,FLEN)
NAN_BOXED(3231877235,32,FLEN)
NAN_BOXED(3978297343,32,FLEN)
NAN_BOXED(2118753206,32,FLEN)
NAN_BOXED(3231877235,32,FLEN)
NAN_BOXED(3980394495,32,FLEN)
NAN_BOXED(2118753206,32,FLEN)
NAN_BOXED(3231877235,32,FLEN)
NAN_BOXED(3980394496,32,FLEN)
NAN_BOXED(2118753206,32,FLEN)
NAN_BOXED(3231877235,32,FLEN)
NAN_BOXED(3982491648,32,FLEN)
NAN_BOXED(2118753206,32,FLEN)
NAN_BOXED(3231877235,32,FLEN)
NAN_BOXED(3983540224,32,FLEN)
NAN_BOXED(2118753206,32,FLEN)
NAN_BOXED(3231877235,32,FLEN)
NAN_BOXED(3984064512,32,FLEN)
NAN_BOXED(2118753206,32,FLEN)
NAN_BOXED(3231877235,32,FLEN)
NAN_BOXED(3984326656,32,FLEN)
NAN_BOXED(2118753206,32,FLEN)
NAN_BOXED(3231877235,32,FLEN)
NAN_BOXED(3984457728,32,FLEN)
NAN_BOXED(2118753206,32,FLEN)
NAN_BOXED(3231877235,32,FLEN)
NAN_BOXED(3984523264,32,FLEN)
NAN_BOXED(2118753206,32,FLEN)
NAN_BOXED(3231877235,32,FLEN)
NAN_BOXED(3984556032,32,FLEN)
NAN_BOXED(2118753206,32,FLEN)
NAN_BOXED(3231877235,32,FLEN)
NAN_BOXED(3984572416,32,FLEN)
NAN_BOXED(2118753206,32,FLEN)
NAN_BOXED(3231877235,32,FLEN)
NAN_BOXED(3984580608,32,FLEN)
NAN_BOXED(2118753206,32,FLEN)
NAN_BOXED(3231877235,32,FLEN)
NAN_BOXED(3984584704,32,FLEN)
NAN_BOXED(2118753206,32,FLEN)
NAN_BOXED(3231877235,32,FLEN)
NAN_BOXED(3984586752,32,FLEN)
NAN_BOXED(2118753206,32,FLEN)
NAN_BOXED(3231877235,32,FLEN)
NAN_BOXED(3984587776,32,FLEN)
NAN_BOXED(2118753206,32,FLEN)
NAN_BOXED(3231877235,32,FLEN)
NAN_BOXED(3984588288,32,FLEN)
NAN_BOXED(2118753206,32,FLEN)
NAN_BOXED(3231877235,32,FLEN)
NAN_BOXED(3984588544,32,FLEN)
NAN_BOXED(2118753206,32,FLEN)
NAN_BOXED(3231877235,32,FLEN)
NAN_BOXED(3984588672,32,FLEN)
NAN_BOXED(2118753206,32,FLEN)
NAN_BOXED(3231877235,32,FLEN)
NAN_BOXED(3984588736,32,FLEN)
NAN_BOXED(2118753206,32,FLEN)
NAN_BOXED(3231877235,32,FLEN)
NAN_BOXED(3984588768,32,FLEN)
NAN_BOXED(2118753206,32,FLEN)
NAN_BOXED(3231877235,32,FLEN)
NAN_BOXED(3984588784,32,FLEN)
NAN_BOXED(2118753206,32,FLEN)
NAN_BOXED(3231877235,32,FLEN)
NAN_BOXED(3984588792,32,FLEN)
NAN_BOXED(2118753206,32,FLEN)
NAN_BOXED(3231877235,32,FLEN)
NAN_BOXED(3984588796,32,FLEN)
NAN_BOXED(2118753206,32,FLEN)
NAN_BOXED(3231877235,32,FLEN)
NAN_BOXED(3984588798,32,FLEN)
NAN_BOXED(2118753206,32,FLEN)
NAN_BOXED(3231877235,32,FLEN)
NAN_BOXED(3984588799,32,FLEN)
NAN_BOXED(2118753206,32,FLEN)
NAN_BOXED(3231877235,32,FLEN)
NAN_BOXED(4278190081,32,FLEN)
NAN_BOXED(2118753206,32,FLEN)
NAN_BOXED(3231877235,32,FLEN)
NAN_BOXED(4278190083,32,FLEN)
NAN_BOXED(2118753206,32,FLEN)
NAN_BOXED(3231877235,32,FLEN)
NAN_BOXED(4278190087,32,FLEN)
NAN_BOXED(2118753206,32,FLEN)
NAN_BOXED(3231877235,32,FLEN)
NAN_BOXED(4279867801,32,FLEN)
NAN_BOXED(2118753206,32,FLEN)
NAN_BOXED(3231877235,32,FLEN)
NAN_BOXED(4280586825,32,FLEN)
NAN_BOXED(2118753206,32,FLEN)
NAN_BOXED(3231877235,32,FLEN)
NAN_BOXED(4281545523,32,FLEN)
NAN_BOXED(2118753206,32,FLEN)
NAN_BOXED(3231877235,32,FLEN)
NAN_BOXED(4281785197,32,FLEN)
NAN_BOXED(2118753206,32,FLEN)
NAN_BOXED(3231877235,32,FLEN)
NAN_BOXED(4282104763,32,FLEN)
NAN_BOXED(2118753206,32,FLEN)
NAN_BOXED(3231877235,32,FLEN)
NAN_BOXED(4282664004,32,FLEN)
NAN_BOXED(2118753206,32,FLEN)
NAN_BOXED(3231877235,32,FLEN)
NAN_BOXED(4283223244,32,FLEN)
NAN_BOXED(2118753206,32,FLEN)
NAN_BOXED(3231877235,32,FLEN)
NAN_BOXED(4284181942,32,FLEN)
NAN_BOXED(2118753206,32,FLEN)
NAN_BOXED(3231877235,32,FLEN)
NAN_BOXED(4284900966,32,FLEN)
NAN_BOXED(2118753206,32,FLEN)
NAN_BOXED(3231877235,32,FLEN)
NAN_BOXED(4285380315,32,FLEN)
NAN_BOXED(2118753206,32,FLEN)
NAN_BOXED(3231877235,32,FLEN)
NAN_BOXED(4286578680,32,FLEN)
NAN_BOXED(2118753206,32,FLEN)
NAN_BOXED(3231877235,32,FLEN)
NAN_BOXED(4286578684,32,FLEN)
NAN_BOXED(2118753206,32,FLEN)
NAN_BOXED(3231877235,32,FLEN)
NAN_BOXED(4286578686,32,FLEN)
NAN_BOXED(2118825252,32,FLEN)
NAN_BOXED(10593997,32,FLEN)
NAN_BOXED(973078528,32,FLEN)
NAN_BOXED(2118825252,32,FLEN)
NAN_BOXED(10593997,32,FLEN)
NAN_BOXED(973078529,32,FLEN)
NAN_BOXED(2118825252,32,FLEN)
NAN_BOXED(10593997,32,FLEN)
NAN_BOXED(973078531,32,FLEN)
NAN_BOXED(2118825252,32,FLEN)
NAN_BOXED(10593997,32,FLEN)
NAN_BOXED(973078535,32,FLEN)
NAN_BOXED(2118825252,32,FLEN)
NAN_BOXED(10593997,32,FLEN)
NAN_BOXED(973078543,32,FLEN)
NAN_BOXED(2118825252,32,FLEN)
NAN_BOXED(10593997,32,FLEN)
NAN_BOXED(973078559,32,FLEN)
NAN_BOXED(2118825252,32,FLEN)
NAN_BOXED(10593997,32,FLEN)
NAN_BOXED(973078591,32,FLEN)
NAN_BOXED(2118825252,32,FLEN)
NAN_BOXED(10593997,32,FLEN)
NAN_BOXED(973078655,32,FLEN)
NAN_BOXED(2118825252,32,FLEN)
NAN_BOXED(10593997,32,FLEN)
NAN_BOXED(973078783,32,FLEN)
NAN_BOXED(2118825252,32,FLEN)
NAN_BOXED(10593997,32,FLEN)
NAN_BOXED(973079039,32,FLEN)
NAN_BOXED(2118825252,32,FLEN)
NAN_BOXED(10593997,32,FLEN)
NAN_BOXED(973079551,32,FLEN)
NAN_BOXED(2118825252,32,FLEN)
NAN_BOXED(10593997,32,FLEN)
NAN_BOXED(973080575,32,FLEN)
NAN_BOXED(2118825252,32,FLEN)
NAN_BOXED(10593997,32,FLEN)
NAN_BOXED(973082623,32,FLEN)
NAN_BOXED(2118825252,32,FLEN)
NAN_BOXED(10593997,32,FLEN)
NAN_BOXED(973086719,32,FLEN)
NAN_BOXED(2118825252,32,FLEN)
NAN_BOXED(10593997,32,FLEN)
NAN_BOXED(973094911,32,FLEN)
NAN_BOXED(2118825252,32,FLEN)
NAN_BOXED(10593997,32,FLEN)
NAN_BOXED(973111295,32,FLEN)
NAN_BOXED(2118825252,32,FLEN)
NAN_BOXED(10593997,32,FLEN)
NAN_BOXED(973144063,32,FLEN)
NAN_BOXED(2118825252,32,FLEN)
NAN_BOXED(10593997,32,FLEN)
NAN_BOXED(973209599,32,FLEN)
NAN_BOXED(2118825252,32,FLEN)
NAN_BOXED(10593997,32,FLEN)
NAN_BOXED(973340671,32,FLEN)
NAN_BOXED(2118825252,32,FLEN)
NAN_BOXED(10593997,32,FLEN)
NAN_BOXED(973602815,32,FLEN)
NAN_BOXED(2118825252,32,FLEN)
NAN_BOXED(10593997,32,FLEN)
NAN_BOXED(974127103,32,FLEN)
NAN_BOXED(2118825252,32,FLEN)
NAN_BOXED(10593997,32,FLEN)
NAN_BOXED(975175679,32,FLEN)
NAN_BOXED(2118825252,32,FLEN)
NAN_BOXED(10593997,32,FLEN)
NAN_BOXED(977272831,32,FLEN)
NAN_BOXED(2118825252,32,FLEN)
NAN_BOXED(10593997,32,FLEN)
NAN_BOXED(977272832,32,FLEN)
NAN_BOXED(2118825252,32,FLEN)
NAN_BOXED(10593997,32,FLEN)
NAN_BOXED(979369984,32,FLEN)
NAN_BOXED(2118825252,32,FLEN)
NAN_BOXED(10593997,32,FLEN)
NAN_BOXED(980418560,32,FLEN)
NAN_BOXED(2118825252,32,FLEN)
NAN_BOXED(10593997,32,FLEN)
NAN_BOXED(980942848,32,FLEN)
NAN_BOXED(2118825252,32,FLEN)
NAN_BOXED(10593997,32,FLEN)
NAN_BOXED(981204992,32,FLEN)
NAN_BOXED(2118825252,32,FLEN)
NAN_BOXED(10593997,32,FLEN)
NAN_BOXED(981336064,32,FLEN)
NAN_BOXED(2118825252,32,FLEN)
NAN_BOXED(10593997,32,FLEN)
NAN_BOXED(981401600,32,FLEN)
NAN_BOXED(2118825252,32,FLEN)
NAN_BOXED(10593997,32,FLEN)
NAN_BOXED(981434368,32,FLEN)
NAN_BOXED(2118825252,32,FLEN)
NAN_BOXED(10593997,32,FLEN)
NAN_BOXED(981450752,32,FLEN)
NAN_BOXED(2118825252,32,FLEN)
NAN_BOXED(10593997,32,FLEN)
NAN_BOXED(981458944,32,FLEN)
NAN_BOXED(2118825252,32,FLEN)
NAN_BOXED(10593997,32,FLEN)
NAN_BOXED(981463040,32,FLEN)
NAN_BOXED(2118825252,32,FLEN)
NAN_BOXED(10593997,32,FLEN)
NAN_BOXED(981465088,32,FLEN)
NAN_BOXED(2118825252,32,FLEN)
NAN_BOXED(10593997,32,FLEN)
NAN_BOXED(981466112,32,FLEN)
NAN_BOXED(2118825252,32,FLEN)
NAN_BOXED(10593997,32,FLEN)
NAN_BOXED(981466624,32,FLEN)
NAN_BOXED(2118825252,32,FLEN)
NAN_BOXED(10593997,32,FLEN)
NAN_BOXED(981466880,32,FLEN)
NAN_BOXED(2118825252,32,FLEN)
NAN_BOXED(10593997,32,FLEN)
NAN_BOXED(981467008,32,FLEN)
NAN_BOXED(2118825252,32,FLEN)
NAN_BOXED(10593997,32,FLEN)
NAN_BOXED(981467072,32,FLEN)
NAN_BOXED(2118825252,32,FLEN)
NAN_BOXED(10593997,32,FLEN)
NAN_BOXED(981467104,32,FLEN)
NAN_BOXED(2118825252,32,FLEN)
NAN_BOXED(10593997,32,FLEN)
NAN_BOXED(981467120,32,FLEN)
NAN_BOXED(2118825252,32,FLEN)
NAN_BOXED(10593997,32,FLEN)
NAN_BOXED(981467128,32,FLEN)
NAN_BOXED(2118825252,32,FLEN)
NAN_BOXED(10593997,32,FLEN)
NAN_BOXED(981467132,32,FLEN)
NAN_BOXED(2118825252,32,FLEN)
NAN_BOXED(10593997,32,FLEN)
NAN_BOXED(981467134,32,FLEN)
NAN_BOXED(2118825252,32,FLEN)
NAN_BOXED(10593997,32,FLEN)
NAN_BOXED(981467135,32,FLEN)
NAN_BOXED(2118825252,32,FLEN)
NAN_BOXED(10593997,32,FLEN)
NAN_BOXED(1065353217,32,FLEN)
NAN_BOXED(2118825252,32,FLEN)
NAN_BOXED(10593997,32,FLEN)
NAN_BOXED(1065353219,32,FLEN)
NAN_BOXED(2118825252,32,FLEN)
NAN_BOXED(10593997,32,FLEN)
NAN_BOXED(1065353223,32,FLEN)
NAN_BOXED(2118825252,32,FLEN)
NAN_BOXED(10593997,32,FLEN)
NAN_BOXED(1067030937,32,FLEN)
NAN_BOXED(2118825252,32,FLEN)
NAN_BOXED(10593997,32,FLEN)
NAN_BOXED(1067749961,32,FLEN)
NAN_BOXED(2118825252,32,FLEN)
NAN_BOXED(10593997,32,FLEN)
NAN_BOXED(1068708659,32,FLEN)
NAN_BOXED(2118825252,32,FLEN)
NAN_BOXED(10593997,32,FLEN)
NAN_BOXED(1068948333,32,FLEN)
NAN_BOXED(2118825252,32,FLEN)
NAN_BOXED(10593997,32,FLEN)
NAN_BOXED(1069267899,32,FLEN)
NAN_BOXED(2118825252,32,FLEN)
NAN_BOXED(10593997,32,FLEN)
NAN_BOXED(1069827140,32,FLEN)
NAN_BOXED(2118825252,32,FLEN)
NAN_BOXED(10593997,32,FLEN)
NAN_BOXED(1070386380,32,FLEN)
NAN_BOXED(2118825252,32,FLEN)
NAN_BOXED(10593997,32,FLEN)
NAN_BOXED(1071345078,32,FLEN)
NAN_BOXED(2118825252,32,FLEN)
NAN_BOXED(10593997,32,FLEN)
NAN_BOXED(1072064102,32,FLEN)
NAN_BOXED(2118825252,32,FLEN)
NAN_BOXED(10593997,32,FLEN)
NAN_BOXED(1072543451,32,FLEN)
NAN_BOXED(2118825252,32,FLEN)
NAN_BOXED(10593997,32,FLEN)
NAN_BOXED(1073741816,32,FLEN)
NAN_BOXED(2118825252,32,FLEN)
NAN_BOXED(10593997,32,FLEN)
NAN_BOXED(1073741820,32,FLEN)
NAN_BOXED(2118825252,32,FLEN)
NAN_BOXED(10593997,32,FLEN)
NAN_BOXED(1073741822,32,FLEN)
NAN_BOXED(2118920833,32,FLEN)
NAN_BOXED(10518319,32,FLEN)
NAN_BOXED(687865856,32,FLEN)
NAN_BOXED(2118920833,32,FLEN)
NAN_BOXED(10518319,32,FLEN)
NAN_BOXED(687865857,32,FLEN)
NAN_BOXED(2118920833,32,FLEN)
NAN_BOXED(10518319,32,FLEN)
NAN_BOXED(687865859,32,FLEN)
NAN_BOXED(2118920833,32,FLEN)
NAN_BOXED(10518319,32,FLEN)
NAN_BOXED(687865863,32,FLEN)
NAN_BOXED(2118920833,32,FLEN)
NAN_BOXED(10518319,32,FLEN)
NAN_BOXED(687865871,32,FLEN)
NAN_BOXED(2118920833,32,FLEN)
NAN_BOXED(10518319,32,FLEN)
NAN_BOXED(687865887,32,FLEN)
NAN_BOXED(2118920833,32,FLEN)
NAN_BOXED(10518319,32,FLEN)
NAN_BOXED(687865919,32,FLEN)
NAN_BOXED(2118920833,32,FLEN)
NAN_BOXED(10518319,32,FLEN)
NAN_BOXED(687865983,32,FLEN)
NAN_BOXED(2118920833,32,FLEN)
NAN_BOXED(10518319,32,FLEN)
NAN_BOXED(687866111,32,FLEN)
NAN_BOXED(2118920833,32,FLEN)
NAN_BOXED(10518319,32,FLEN)
NAN_BOXED(687866367,32,FLEN)
NAN_BOXED(2118920833,32,FLEN)
NAN_BOXED(10518319,32,FLEN)
NAN_BOXED(687866879,32,FLEN)
NAN_BOXED(2118920833,32,FLEN)
NAN_BOXED(10518319,32,FLEN)
NAN_BOXED(687867903,32,FLEN)
NAN_BOXED(2118920833,32,FLEN)
NAN_BOXED(10518319,32,FLEN)
NAN_BOXED(687869951,32,FLEN)
NAN_BOXED(2118920833,32,FLEN)
NAN_BOXED(10518319,32,FLEN)
NAN_BOXED(687874047,32,FLEN)
NAN_BOXED(2118920833,32,FLEN)
NAN_BOXED(10518319,32,FLEN)
NAN_BOXED(687882239,32,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
