
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 14:18:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32F/fmsub.s.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.s instruction of the RISC-V RV32F_Zicsr,RV32FD_Zicsr,RV64F_Zicsr,RV64FD_Zicsr extension for the fmsub_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF_Zicsr,RV32IFD_Zicsr,RV64IF_Zicsr,RV64IFD_Zicsr,RV32EF_Zicsr,RV32EFD_Zicsr,RV64EF_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fmsub_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*F.*);def TEST_CASE_1=True;",fmsub_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_10624:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x579c96 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0e and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e579c96; op2val:0x0;
op3val:0x707ffff; valaddr_reg:x3; val_offset:31872*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 31872*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10625:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x579c96 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0e and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e579c96; op2val:0x0;
op3val:0x70fffff; valaddr_reg:x3; val_offset:31875*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 31875*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10626:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x579c96 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0e and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e579c96; op2val:0x0;
op3val:0x71fffff; valaddr_reg:x3; val_offset:31878*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 31878*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10627:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x579c96 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0e and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e579c96; op2val:0x0;
op3val:0x73fffff; valaddr_reg:x3; val_offset:31881*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 31881*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10628:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x579c96 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0e and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e579c96; op2val:0x0;
op3val:0x7400000; valaddr_reg:x3; val_offset:31884*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 31884*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10629:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x579c96 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0e and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e579c96; op2val:0x0;
op3val:0x7600000; valaddr_reg:x3; val_offset:31887*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 31887*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10630:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x579c96 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0e and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e579c96; op2val:0x0;
op3val:0x7700000; valaddr_reg:x3; val_offset:31890*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 31890*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10631:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x579c96 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0e and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e579c96; op2val:0x0;
op3val:0x7780000; valaddr_reg:x3; val_offset:31893*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 31893*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10632:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x579c96 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0e and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e579c96; op2val:0x0;
op3val:0x77c0000; valaddr_reg:x3; val_offset:31896*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 31896*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10633:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x579c96 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0e and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e579c96; op2val:0x0;
op3val:0x77e0000; valaddr_reg:x3; val_offset:31899*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 31899*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10634:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x579c96 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0e and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e579c96; op2val:0x0;
op3val:0x77f0000; valaddr_reg:x3; val_offset:31902*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 31902*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10635:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x579c96 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0e and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e579c96; op2val:0x0;
op3val:0x77f8000; valaddr_reg:x3; val_offset:31905*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 31905*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10636:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x579c96 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0e and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e579c96; op2val:0x0;
op3val:0x77fc000; valaddr_reg:x3; val_offset:31908*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 31908*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10637:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x579c96 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0e and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e579c96; op2val:0x0;
op3val:0x77fe000; valaddr_reg:x3; val_offset:31911*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 31911*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10638:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x579c96 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0e and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e579c96; op2val:0x0;
op3val:0x77ff000; valaddr_reg:x3; val_offset:31914*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 31914*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10639:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x579c96 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0e and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e579c96; op2val:0x0;
op3val:0x77ff800; valaddr_reg:x3; val_offset:31917*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 31917*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10640:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x579c96 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0e and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e579c96; op2val:0x0;
op3val:0x77ffc00; valaddr_reg:x3; val_offset:31920*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 31920*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10641:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x579c96 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0e and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e579c96; op2val:0x0;
op3val:0x77ffe00; valaddr_reg:x3; val_offset:31923*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 31923*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10642:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x579c96 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0e and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e579c96; op2val:0x0;
op3val:0x77fff00; valaddr_reg:x3; val_offset:31926*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 31926*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10643:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x579c96 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0e and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e579c96; op2val:0x0;
op3val:0x77fff80; valaddr_reg:x3; val_offset:31929*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 31929*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10644:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x579c96 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0e and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e579c96; op2val:0x0;
op3val:0x77fffc0; valaddr_reg:x3; val_offset:31932*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 31932*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10645:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x579c96 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0e and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e579c96; op2val:0x0;
op3val:0x77fffe0; valaddr_reg:x3; val_offset:31935*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 31935*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10646:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x579c96 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0e and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e579c96; op2val:0x0;
op3val:0x77ffff0; valaddr_reg:x3; val_offset:31938*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 31938*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10647:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x579c96 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0e and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e579c96; op2val:0x0;
op3val:0x77ffff8; valaddr_reg:x3; val_offset:31941*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 31941*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10648:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x579c96 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0e and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e579c96; op2val:0x0;
op3val:0x77ffffc; valaddr_reg:x3; val_offset:31944*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 31944*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10649:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x579c96 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0e and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e579c96; op2val:0x0;
op3val:0x77ffffe; valaddr_reg:x3; val_offset:31947*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 31947*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10650:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x579c96 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0e and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e579c96; op2val:0x0;
op3val:0x77fffff; valaddr_reg:x3; val_offset:31950*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 31950*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10651:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x591432 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e591432; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:31953*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 31953*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10652:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x591432 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e591432; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:31956*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 31956*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10653:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x591432 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e591432; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:31959*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 31959*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10654:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x591432 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e591432; op2val:0x0;
op3val:0x199999; valaddr_reg:x3; val_offset:31962*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 31962*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10655:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x591432 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e591432; op2val:0x0;
op3val:0x249249; valaddr_reg:x3; val_offset:31965*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 31965*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10656:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x591432 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e591432; op2val:0x0;
op3val:0x333333; valaddr_reg:x3; val_offset:31968*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 31968*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10657:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x591432 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e591432; op2val:0x0;
op3val:0x36db6d; valaddr_reg:x3; val_offset:31971*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 31971*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10658:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x591432 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e591432; op2val:0x0;
op3val:0x3bbbbb; valaddr_reg:x3; val_offset:31974*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 31974*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10659:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x591432 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e591432; op2val:0x0;
op3val:0x444444; valaddr_reg:x3; val_offset:31977*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 31977*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10660:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x591432 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e591432; op2val:0x0;
op3val:0x4ccccc; valaddr_reg:x3; val_offset:31980*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 31980*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10661:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x591432 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e591432; op2val:0x0;
op3val:0x5b6db6; valaddr_reg:x3; val_offset:31983*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 31983*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10662:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x591432 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e591432; op2val:0x0;
op3val:0x666666; valaddr_reg:x3; val_offset:31986*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 31986*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10663:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x591432 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e591432; op2val:0x0;
op3val:0x6db6db; valaddr_reg:x3; val_offset:31989*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 31989*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10664:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x591432 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e591432; op2val:0x0;
op3val:0x7ffff8; valaddr_reg:x3; val_offset:31992*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 31992*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10665:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x591432 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e591432; op2val:0x0;
op3val:0x7ffffc; valaddr_reg:x3; val_offset:31995*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 31995*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10666:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x591432 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e591432; op2val:0x0;
op3val:0x7ffffe; valaddr_reg:x3; val_offset:31998*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 31998*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10667:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x591432 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e591432; op2val:0x0;
op3val:0xb800000; valaddr_reg:x3; val_offset:32001*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32001*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10668:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x591432 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e591432; op2val:0x0;
op3val:0xb800001; valaddr_reg:x3; val_offset:32004*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32004*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10669:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x591432 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e591432; op2val:0x0;
op3val:0xb800003; valaddr_reg:x3; val_offset:32007*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32007*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10670:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x591432 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e591432; op2val:0x0;
op3val:0xb800007; valaddr_reg:x3; val_offset:32010*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32010*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10671:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x591432 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e591432; op2val:0x0;
op3val:0xb80000f; valaddr_reg:x3; val_offset:32013*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32013*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10672:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x591432 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e591432; op2val:0x0;
op3val:0xb80001f; valaddr_reg:x3; val_offset:32016*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32016*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10673:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x591432 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e591432; op2val:0x0;
op3val:0xb80003f; valaddr_reg:x3; val_offset:32019*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32019*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10674:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x591432 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e591432; op2val:0x0;
op3val:0xb80007f; valaddr_reg:x3; val_offset:32022*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32022*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10675:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x591432 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e591432; op2val:0x0;
op3val:0xb8000ff; valaddr_reg:x3; val_offset:32025*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32025*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10676:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x591432 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e591432; op2val:0x0;
op3val:0xb8001ff; valaddr_reg:x3; val_offset:32028*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32028*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10677:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x591432 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e591432; op2val:0x0;
op3val:0xb8003ff; valaddr_reg:x3; val_offset:32031*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32031*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10678:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x591432 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e591432; op2val:0x0;
op3val:0xb8007ff; valaddr_reg:x3; val_offset:32034*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32034*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10679:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x591432 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e591432; op2val:0x0;
op3val:0xb800fff; valaddr_reg:x3; val_offset:32037*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32037*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10680:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x591432 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e591432; op2val:0x0;
op3val:0xb801fff; valaddr_reg:x3; val_offset:32040*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32040*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10681:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x591432 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e591432; op2val:0x0;
op3val:0xb803fff; valaddr_reg:x3; val_offset:32043*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32043*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10682:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x591432 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e591432; op2val:0x0;
op3val:0xb807fff; valaddr_reg:x3; val_offset:32046*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32046*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10683:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x591432 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e591432; op2val:0x0;
op3val:0xb80ffff; valaddr_reg:x3; val_offset:32049*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32049*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10684:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x591432 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e591432; op2val:0x0;
op3val:0xb81ffff; valaddr_reg:x3; val_offset:32052*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32052*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10685:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x591432 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e591432; op2val:0x0;
op3val:0xb83ffff; valaddr_reg:x3; val_offset:32055*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32055*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10686:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x591432 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e591432; op2val:0x0;
op3val:0xb87ffff; valaddr_reg:x3; val_offset:32058*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32058*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10687:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x591432 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e591432; op2val:0x0;
op3val:0xb8fffff; valaddr_reg:x3; val_offset:32061*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32061*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10688:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x591432 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e591432; op2val:0x0;
op3val:0xb9fffff; valaddr_reg:x3; val_offset:32064*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32064*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10689:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x591432 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e591432; op2val:0x0;
op3val:0xbbfffff; valaddr_reg:x3; val_offset:32067*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32067*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10690:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x591432 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e591432; op2val:0x0;
op3val:0xbc00000; valaddr_reg:x3; val_offset:32070*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32070*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10691:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x591432 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e591432; op2val:0x0;
op3val:0xbe00000; valaddr_reg:x3; val_offset:32073*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32073*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10692:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x591432 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e591432; op2val:0x0;
op3val:0xbf00000; valaddr_reg:x3; val_offset:32076*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32076*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10693:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x591432 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e591432; op2val:0x0;
op3val:0xbf80000; valaddr_reg:x3; val_offset:32079*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32079*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10694:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x591432 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e591432; op2val:0x0;
op3val:0xbfc0000; valaddr_reg:x3; val_offset:32082*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32082*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10695:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x591432 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e591432; op2val:0x0;
op3val:0xbfe0000; valaddr_reg:x3; val_offset:32085*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32085*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10696:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x591432 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e591432; op2val:0x0;
op3val:0xbff0000; valaddr_reg:x3; val_offset:32088*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32088*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10697:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x591432 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e591432; op2val:0x0;
op3val:0xbff8000; valaddr_reg:x3; val_offset:32091*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32091*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10698:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x591432 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e591432; op2val:0x0;
op3val:0xbffc000; valaddr_reg:x3; val_offset:32094*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32094*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10699:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x591432 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e591432; op2val:0x0;
op3val:0xbffe000; valaddr_reg:x3; val_offset:32097*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32097*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10700:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x591432 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e591432; op2val:0x0;
op3val:0xbfff000; valaddr_reg:x3; val_offset:32100*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32100*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10701:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x591432 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e591432; op2val:0x0;
op3val:0xbfff800; valaddr_reg:x3; val_offset:32103*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32103*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10702:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x591432 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e591432; op2val:0x0;
op3val:0xbfffc00; valaddr_reg:x3; val_offset:32106*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32106*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10703:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x591432 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e591432; op2val:0x0;
op3val:0xbfffe00; valaddr_reg:x3; val_offset:32109*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32109*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10704:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x591432 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e591432; op2val:0x0;
op3val:0xbffff00; valaddr_reg:x3; val_offset:32112*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32112*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10705:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x591432 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e591432; op2val:0x0;
op3val:0xbffff80; valaddr_reg:x3; val_offset:32115*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32115*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10706:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x591432 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e591432; op2val:0x0;
op3val:0xbffffc0; valaddr_reg:x3; val_offset:32118*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32118*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10707:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x591432 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e591432; op2val:0x0;
op3val:0xbffffe0; valaddr_reg:x3; val_offset:32121*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32121*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10708:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x591432 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e591432; op2val:0x0;
op3val:0xbfffff0; valaddr_reg:x3; val_offset:32124*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32124*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10709:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x591432 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e591432; op2val:0x0;
op3val:0xbfffff8; valaddr_reg:x3; val_offset:32127*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32127*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10710:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x591432 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e591432; op2val:0x0;
op3val:0xbfffffc; valaddr_reg:x3; val_offset:32130*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32130*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10711:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x591432 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e591432; op2val:0x0;
op3val:0xbfffffe; valaddr_reg:x3; val_offset:32133*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32133*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10712:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x591432 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e591432; op2val:0x0;
op3val:0xbffffff; valaddr_reg:x3; val_offset:32136*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32136*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10713:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5bab1f and fs2 == 0 and fe2 == 0x01 and fm2 == 0x152b96 and fs3 == 0 and fe3 == 0x6e and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5bab1f; op2val:0x952b96;
op3val:0x37000000; valaddr_reg:x3; val_offset:32139*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32139*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10714:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5bab1f and fs2 == 0 and fe2 == 0x01 and fm2 == 0x152b96 and fs3 == 0 and fe3 == 0x6e and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5bab1f; op2val:0x952b96;
op3val:0x37000001; valaddr_reg:x3; val_offset:32142*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32142*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10715:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5bab1f and fs2 == 0 and fe2 == 0x01 and fm2 == 0x152b96 and fs3 == 0 and fe3 == 0x6e and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5bab1f; op2val:0x952b96;
op3val:0x37000003; valaddr_reg:x3; val_offset:32145*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32145*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10716:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5bab1f and fs2 == 0 and fe2 == 0x01 and fm2 == 0x152b96 and fs3 == 0 and fe3 == 0x6e and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5bab1f; op2val:0x952b96;
op3val:0x37000007; valaddr_reg:x3; val_offset:32148*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32148*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10717:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5bab1f and fs2 == 0 and fe2 == 0x01 and fm2 == 0x152b96 and fs3 == 0 and fe3 == 0x6e and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5bab1f; op2val:0x952b96;
op3val:0x3700000f; valaddr_reg:x3; val_offset:32151*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32151*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10718:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5bab1f and fs2 == 0 and fe2 == 0x01 and fm2 == 0x152b96 and fs3 == 0 and fe3 == 0x6e and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5bab1f; op2val:0x952b96;
op3val:0x3700001f; valaddr_reg:x3; val_offset:32154*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32154*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10719:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5bab1f and fs2 == 0 and fe2 == 0x01 and fm2 == 0x152b96 and fs3 == 0 and fe3 == 0x6e and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5bab1f; op2val:0x952b96;
op3val:0x3700003f; valaddr_reg:x3; val_offset:32157*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32157*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10720:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5bab1f and fs2 == 0 and fe2 == 0x01 and fm2 == 0x152b96 and fs3 == 0 and fe3 == 0x6e and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5bab1f; op2val:0x952b96;
op3val:0x3700007f; valaddr_reg:x3; val_offset:32160*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32160*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10721:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5bab1f and fs2 == 0 and fe2 == 0x01 and fm2 == 0x152b96 and fs3 == 0 and fe3 == 0x6e and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5bab1f; op2val:0x952b96;
op3val:0x370000ff; valaddr_reg:x3; val_offset:32163*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32163*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10722:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5bab1f and fs2 == 0 and fe2 == 0x01 and fm2 == 0x152b96 and fs3 == 0 and fe3 == 0x6e and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5bab1f; op2val:0x952b96;
op3val:0x370001ff; valaddr_reg:x3; val_offset:32166*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32166*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10723:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5bab1f and fs2 == 0 and fe2 == 0x01 and fm2 == 0x152b96 and fs3 == 0 and fe3 == 0x6e and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5bab1f; op2val:0x952b96;
op3val:0x370003ff; valaddr_reg:x3; val_offset:32169*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32169*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10724:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5bab1f and fs2 == 0 and fe2 == 0x01 and fm2 == 0x152b96 and fs3 == 0 and fe3 == 0x6e and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5bab1f; op2val:0x952b96;
op3val:0x370007ff; valaddr_reg:x3; val_offset:32172*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32172*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10725:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5bab1f and fs2 == 0 and fe2 == 0x01 and fm2 == 0x152b96 and fs3 == 0 and fe3 == 0x6e and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5bab1f; op2val:0x952b96;
op3val:0x37000fff; valaddr_reg:x3; val_offset:32175*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32175*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10726:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5bab1f and fs2 == 0 and fe2 == 0x01 and fm2 == 0x152b96 and fs3 == 0 and fe3 == 0x6e and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5bab1f; op2val:0x952b96;
op3val:0x37001fff; valaddr_reg:x3; val_offset:32178*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32178*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10727:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5bab1f and fs2 == 0 and fe2 == 0x01 and fm2 == 0x152b96 and fs3 == 0 and fe3 == 0x6e and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5bab1f; op2val:0x952b96;
op3val:0x37003fff; valaddr_reg:x3; val_offset:32181*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32181*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10728:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5bab1f and fs2 == 0 and fe2 == 0x01 and fm2 == 0x152b96 and fs3 == 0 and fe3 == 0x6e and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5bab1f; op2val:0x952b96;
op3val:0x37007fff; valaddr_reg:x3; val_offset:32184*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32184*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10729:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5bab1f and fs2 == 0 and fe2 == 0x01 and fm2 == 0x152b96 and fs3 == 0 and fe3 == 0x6e and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5bab1f; op2val:0x952b96;
op3val:0x3700ffff; valaddr_reg:x3; val_offset:32187*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32187*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10730:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5bab1f and fs2 == 0 and fe2 == 0x01 and fm2 == 0x152b96 and fs3 == 0 and fe3 == 0x6e and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5bab1f; op2val:0x952b96;
op3val:0x3701ffff; valaddr_reg:x3; val_offset:32190*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32190*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10731:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5bab1f and fs2 == 0 and fe2 == 0x01 and fm2 == 0x152b96 and fs3 == 0 and fe3 == 0x6e and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5bab1f; op2val:0x952b96;
op3val:0x3703ffff; valaddr_reg:x3; val_offset:32193*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32193*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10732:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5bab1f and fs2 == 0 and fe2 == 0x01 and fm2 == 0x152b96 and fs3 == 0 and fe3 == 0x6e and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5bab1f; op2val:0x952b96;
op3val:0x3707ffff; valaddr_reg:x3; val_offset:32196*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32196*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10733:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5bab1f and fs2 == 0 and fe2 == 0x01 and fm2 == 0x152b96 and fs3 == 0 and fe3 == 0x6e and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5bab1f; op2val:0x952b96;
op3val:0x370fffff; valaddr_reg:x3; val_offset:32199*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32199*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10734:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5bab1f and fs2 == 0 and fe2 == 0x01 and fm2 == 0x152b96 and fs3 == 0 and fe3 == 0x6e and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5bab1f; op2val:0x952b96;
op3val:0x371fffff; valaddr_reg:x3; val_offset:32202*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32202*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10735:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5bab1f and fs2 == 0 and fe2 == 0x01 and fm2 == 0x152b96 and fs3 == 0 and fe3 == 0x6e and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5bab1f; op2val:0x952b96;
op3val:0x373fffff; valaddr_reg:x3; val_offset:32205*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32205*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10736:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5bab1f and fs2 == 0 and fe2 == 0x01 and fm2 == 0x152b96 and fs3 == 0 and fe3 == 0x6e and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5bab1f; op2val:0x952b96;
op3val:0x37400000; valaddr_reg:x3; val_offset:32208*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32208*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10737:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5bab1f and fs2 == 0 and fe2 == 0x01 and fm2 == 0x152b96 and fs3 == 0 and fe3 == 0x6e and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5bab1f; op2val:0x952b96;
op3val:0x37600000; valaddr_reg:x3; val_offset:32211*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32211*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10738:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5bab1f and fs2 == 0 and fe2 == 0x01 and fm2 == 0x152b96 and fs3 == 0 and fe3 == 0x6e and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5bab1f; op2val:0x952b96;
op3val:0x37700000; valaddr_reg:x3; val_offset:32214*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32214*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10739:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5bab1f and fs2 == 0 and fe2 == 0x01 and fm2 == 0x152b96 and fs3 == 0 and fe3 == 0x6e and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5bab1f; op2val:0x952b96;
op3val:0x37780000; valaddr_reg:x3; val_offset:32217*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32217*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10740:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5bab1f and fs2 == 0 and fe2 == 0x01 and fm2 == 0x152b96 and fs3 == 0 and fe3 == 0x6e and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5bab1f; op2val:0x952b96;
op3val:0x377c0000; valaddr_reg:x3; val_offset:32220*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32220*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10741:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5bab1f and fs2 == 0 and fe2 == 0x01 and fm2 == 0x152b96 and fs3 == 0 and fe3 == 0x6e and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5bab1f; op2val:0x952b96;
op3val:0x377e0000; valaddr_reg:x3; val_offset:32223*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32223*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10742:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5bab1f and fs2 == 0 and fe2 == 0x01 and fm2 == 0x152b96 and fs3 == 0 and fe3 == 0x6e and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5bab1f; op2val:0x952b96;
op3val:0x377f0000; valaddr_reg:x3; val_offset:32226*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32226*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10743:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5bab1f and fs2 == 0 and fe2 == 0x01 and fm2 == 0x152b96 and fs3 == 0 and fe3 == 0x6e and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5bab1f; op2val:0x952b96;
op3val:0x377f8000; valaddr_reg:x3; val_offset:32229*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32229*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10744:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5bab1f and fs2 == 0 and fe2 == 0x01 and fm2 == 0x152b96 and fs3 == 0 and fe3 == 0x6e and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5bab1f; op2val:0x952b96;
op3val:0x377fc000; valaddr_reg:x3; val_offset:32232*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32232*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10745:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5bab1f and fs2 == 0 and fe2 == 0x01 and fm2 == 0x152b96 and fs3 == 0 and fe3 == 0x6e and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5bab1f; op2val:0x952b96;
op3val:0x377fe000; valaddr_reg:x3; val_offset:32235*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32235*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10746:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5bab1f and fs2 == 0 and fe2 == 0x01 and fm2 == 0x152b96 and fs3 == 0 and fe3 == 0x6e and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5bab1f; op2val:0x952b96;
op3val:0x377ff000; valaddr_reg:x3; val_offset:32238*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32238*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10747:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5bab1f and fs2 == 0 and fe2 == 0x01 and fm2 == 0x152b96 and fs3 == 0 and fe3 == 0x6e and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5bab1f; op2val:0x952b96;
op3val:0x377ff800; valaddr_reg:x3; val_offset:32241*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32241*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10748:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5bab1f and fs2 == 0 and fe2 == 0x01 and fm2 == 0x152b96 and fs3 == 0 and fe3 == 0x6e and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5bab1f; op2val:0x952b96;
op3val:0x377ffc00; valaddr_reg:x3; val_offset:32244*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32244*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10749:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5bab1f and fs2 == 0 and fe2 == 0x01 and fm2 == 0x152b96 and fs3 == 0 and fe3 == 0x6e and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5bab1f; op2val:0x952b96;
op3val:0x377ffe00; valaddr_reg:x3; val_offset:32247*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32247*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10750:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5bab1f and fs2 == 0 and fe2 == 0x01 and fm2 == 0x152b96 and fs3 == 0 and fe3 == 0x6e and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5bab1f; op2val:0x952b96;
op3val:0x377fff00; valaddr_reg:x3; val_offset:32250*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32250*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10751:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5bab1f and fs2 == 0 and fe2 == 0x01 and fm2 == 0x152b96 and fs3 == 0 and fe3 == 0x6e and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5bab1f; op2val:0x952b96;
op3val:0x377fff80; valaddr_reg:x3; val_offset:32253*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32253*0 + 3*83*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(2119670934,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(117964799,32,FLEN)
NAN_BOXED(2119670934,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(118489087,32,FLEN)
NAN_BOXED(2119670934,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(119537663,32,FLEN)
NAN_BOXED(2119670934,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(121634815,32,FLEN)
NAN_BOXED(2119670934,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(121634816,32,FLEN)
NAN_BOXED(2119670934,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(123731968,32,FLEN)
NAN_BOXED(2119670934,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(124780544,32,FLEN)
NAN_BOXED(2119670934,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(125304832,32,FLEN)
NAN_BOXED(2119670934,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(125566976,32,FLEN)
NAN_BOXED(2119670934,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(125698048,32,FLEN)
NAN_BOXED(2119670934,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(125763584,32,FLEN)
NAN_BOXED(2119670934,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(125796352,32,FLEN)
NAN_BOXED(2119670934,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(125812736,32,FLEN)
NAN_BOXED(2119670934,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(125820928,32,FLEN)
NAN_BOXED(2119670934,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(125825024,32,FLEN)
NAN_BOXED(2119670934,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(125827072,32,FLEN)
NAN_BOXED(2119670934,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(125828096,32,FLEN)
NAN_BOXED(2119670934,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(125828608,32,FLEN)
NAN_BOXED(2119670934,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(125828864,32,FLEN)
NAN_BOXED(2119670934,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(125828992,32,FLEN)
NAN_BOXED(2119670934,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(125829056,32,FLEN)
NAN_BOXED(2119670934,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(125829088,32,FLEN)
NAN_BOXED(2119670934,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(125829104,32,FLEN)
NAN_BOXED(2119670934,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(125829112,32,FLEN)
NAN_BOXED(2119670934,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(125829116,32,FLEN)
NAN_BOXED(2119670934,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(125829118,32,FLEN)
NAN_BOXED(2119670934,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(125829119,32,FLEN)
NAN_BOXED(2119767090,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(2119767090,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3,32,FLEN)
NAN_BOXED(2119767090,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7,32,FLEN)
NAN_BOXED(2119767090,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1677721,32,FLEN)
NAN_BOXED(2119767090,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2396745,32,FLEN)
NAN_BOXED(2119767090,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3355443,32,FLEN)
NAN_BOXED(2119767090,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3595117,32,FLEN)
NAN_BOXED(2119767090,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3914683,32,FLEN)
NAN_BOXED(2119767090,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(4473924,32,FLEN)
NAN_BOXED(2119767090,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5033164,32,FLEN)
NAN_BOXED(2119767090,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5991862,32,FLEN)
NAN_BOXED(2119767090,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(6710886,32,FLEN)
NAN_BOXED(2119767090,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7190235,32,FLEN)
NAN_BOXED(2119767090,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388600,32,FLEN)
NAN_BOXED(2119767090,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388604,32,FLEN)
NAN_BOXED(2119767090,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388606,32,FLEN)
NAN_BOXED(2119767090,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(192937984,32,FLEN)
NAN_BOXED(2119767090,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(192937985,32,FLEN)
NAN_BOXED(2119767090,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(192937987,32,FLEN)
NAN_BOXED(2119767090,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(192937991,32,FLEN)
NAN_BOXED(2119767090,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(192937999,32,FLEN)
NAN_BOXED(2119767090,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(192938015,32,FLEN)
NAN_BOXED(2119767090,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(192938047,32,FLEN)
NAN_BOXED(2119767090,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(192938111,32,FLEN)
NAN_BOXED(2119767090,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(192938239,32,FLEN)
NAN_BOXED(2119767090,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(192938495,32,FLEN)
NAN_BOXED(2119767090,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(192939007,32,FLEN)
NAN_BOXED(2119767090,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(192940031,32,FLEN)
NAN_BOXED(2119767090,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(192942079,32,FLEN)
NAN_BOXED(2119767090,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(192946175,32,FLEN)
NAN_BOXED(2119767090,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(192954367,32,FLEN)
NAN_BOXED(2119767090,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(192970751,32,FLEN)
NAN_BOXED(2119767090,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(193003519,32,FLEN)
NAN_BOXED(2119767090,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(193069055,32,FLEN)
NAN_BOXED(2119767090,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(193200127,32,FLEN)
NAN_BOXED(2119767090,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(193462271,32,FLEN)
NAN_BOXED(2119767090,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(193986559,32,FLEN)
NAN_BOXED(2119767090,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(195035135,32,FLEN)
NAN_BOXED(2119767090,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(197132287,32,FLEN)
NAN_BOXED(2119767090,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(197132288,32,FLEN)
NAN_BOXED(2119767090,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(199229440,32,FLEN)
NAN_BOXED(2119767090,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(200278016,32,FLEN)
NAN_BOXED(2119767090,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(200802304,32,FLEN)
NAN_BOXED(2119767090,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(201064448,32,FLEN)
NAN_BOXED(2119767090,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(201195520,32,FLEN)
NAN_BOXED(2119767090,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(201261056,32,FLEN)
NAN_BOXED(2119767090,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(201293824,32,FLEN)
NAN_BOXED(2119767090,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(201310208,32,FLEN)
NAN_BOXED(2119767090,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(201318400,32,FLEN)
NAN_BOXED(2119767090,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(201322496,32,FLEN)
NAN_BOXED(2119767090,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(201324544,32,FLEN)
NAN_BOXED(2119767090,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(201325568,32,FLEN)
NAN_BOXED(2119767090,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(201326080,32,FLEN)
NAN_BOXED(2119767090,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(201326336,32,FLEN)
NAN_BOXED(2119767090,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(201326464,32,FLEN)
NAN_BOXED(2119767090,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(201326528,32,FLEN)
NAN_BOXED(2119767090,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(201326560,32,FLEN)
NAN_BOXED(2119767090,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(201326576,32,FLEN)
NAN_BOXED(2119767090,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(201326584,32,FLEN)
NAN_BOXED(2119767090,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(201326588,32,FLEN)
NAN_BOXED(2119767090,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(201326590,32,FLEN)
NAN_BOXED(2119767090,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(201326591,32,FLEN)
NAN_BOXED(2119936799,32,FLEN)
NAN_BOXED(9776022,32,FLEN)
NAN_BOXED(922746880,32,FLEN)
NAN_BOXED(2119936799,32,FLEN)
NAN_BOXED(9776022,32,FLEN)
NAN_BOXED(922746881,32,FLEN)
NAN_BOXED(2119936799,32,FLEN)
NAN_BOXED(9776022,32,FLEN)
NAN_BOXED(922746883,32,FLEN)
NAN_BOXED(2119936799,32,FLEN)
NAN_BOXED(9776022,32,FLEN)
NAN_BOXED(922746887,32,FLEN)
NAN_BOXED(2119936799,32,FLEN)
NAN_BOXED(9776022,32,FLEN)
NAN_BOXED(922746895,32,FLEN)
NAN_BOXED(2119936799,32,FLEN)
NAN_BOXED(9776022,32,FLEN)
NAN_BOXED(922746911,32,FLEN)
NAN_BOXED(2119936799,32,FLEN)
NAN_BOXED(9776022,32,FLEN)
NAN_BOXED(922746943,32,FLEN)
NAN_BOXED(2119936799,32,FLEN)
NAN_BOXED(9776022,32,FLEN)
NAN_BOXED(922747007,32,FLEN)
NAN_BOXED(2119936799,32,FLEN)
NAN_BOXED(9776022,32,FLEN)
NAN_BOXED(922747135,32,FLEN)
NAN_BOXED(2119936799,32,FLEN)
NAN_BOXED(9776022,32,FLEN)
NAN_BOXED(922747391,32,FLEN)
NAN_BOXED(2119936799,32,FLEN)
NAN_BOXED(9776022,32,FLEN)
NAN_BOXED(922747903,32,FLEN)
NAN_BOXED(2119936799,32,FLEN)
NAN_BOXED(9776022,32,FLEN)
NAN_BOXED(922748927,32,FLEN)
NAN_BOXED(2119936799,32,FLEN)
NAN_BOXED(9776022,32,FLEN)
NAN_BOXED(922750975,32,FLEN)
NAN_BOXED(2119936799,32,FLEN)
NAN_BOXED(9776022,32,FLEN)
NAN_BOXED(922755071,32,FLEN)
NAN_BOXED(2119936799,32,FLEN)
NAN_BOXED(9776022,32,FLEN)
NAN_BOXED(922763263,32,FLEN)
NAN_BOXED(2119936799,32,FLEN)
NAN_BOXED(9776022,32,FLEN)
NAN_BOXED(922779647,32,FLEN)
NAN_BOXED(2119936799,32,FLEN)
NAN_BOXED(9776022,32,FLEN)
NAN_BOXED(922812415,32,FLEN)
NAN_BOXED(2119936799,32,FLEN)
NAN_BOXED(9776022,32,FLEN)
NAN_BOXED(922877951,32,FLEN)
NAN_BOXED(2119936799,32,FLEN)
NAN_BOXED(9776022,32,FLEN)
NAN_BOXED(923009023,32,FLEN)
NAN_BOXED(2119936799,32,FLEN)
NAN_BOXED(9776022,32,FLEN)
NAN_BOXED(923271167,32,FLEN)
NAN_BOXED(2119936799,32,FLEN)
NAN_BOXED(9776022,32,FLEN)
NAN_BOXED(923795455,32,FLEN)
NAN_BOXED(2119936799,32,FLEN)
NAN_BOXED(9776022,32,FLEN)
NAN_BOXED(924844031,32,FLEN)
NAN_BOXED(2119936799,32,FLEN)
NAN_BOXED(9776022,32,FLEN)
NAN_BOXED(926941183,32,FLEN)
NAN_BOXED(2119936799,32,FLEN)
NAN_BOXED(9776022,32,FLEN)
NAN_BOXED(926941184,32,FLEN)
NAN_BOXED(2119936799,32,FLEN)
NAN_BOXED(9776022,32,FLEN)
NAN_BOXED(929038336,32,FLEN)
NAN_BOXED(2119936799,32,FLEN)
NAN_BOXED(9776022,32,FLEN)
NAN_BOXED(930086912,32,FLEN)
NAN_BOXED(2119936799,32,FLEN)
NAN_BOXED(9776022,32,FLEN)
NAN_BOXED(930611200,32,FLEN)
NAN_BOXED(2119936799,32,FLEN)
NAN_BOXED(9776022,32,FLEN)
NAN_BOXED(930873344,32,FLEN)
NAN_BOXED(2119936799,32,FLEN)
NAN_BOXED(9776022,32,FLEN)
NAN_BOXED(931004416,32,FLEN)
NAN_BOXED(2119936799,32,FLEN)
NAN_BOXED(9776022,32,FLEN)
NAN_BOXED(931069952,32,FLEN)
NAN_BOXED(2119936799,32,FLEN)
NAN_BOXED(9776022,32,FLEN)
NAN_BOXED(931102720,32,FLEN)
NAN_BOXED(2119936799,32,FLEN)
NAN_BOXED(9776022,32,FLEN)
NAN_BOXED(931119104,32,FLEN)
NAN_BOXED(2119936799,32,FLEN)
NAN_BOXED(9776022,32,FLEN)
NAN_BOXED(931127296,32,FLEN)
NAN_BOXED(2119936799,32,FLEN)
NAN_BOXED(9776022,32,FLEN)
NAN_BOXED(931131392,32,FLEN)
NAN_BOXED(2119936799,32,FLEN)
NAN_BOXED(9776022,32,FLEN)
NAN_BOXED(931133440,32,FLEN)
NAN_BOXED(2119936799,32,FLEN)
NAN_BOXED(9776022,32,FLEN)
NAN_BOXED(931134464,32,FLEN)
NAN_BOXED(2119936799,32,FLEN)
NAN_BOXED(9776022,32,FLEN)
NAN_BOXED(931134976,32,FLEN)
NAN_BOXED(2119936799,32,FLEN)
NAN_BOXED(9776022,32,FLEN)
NAN_BOXED(931135232,32,FLEN)
NAN_BOXED(2119936799,32,FLEN)
NAN_BOXED(9776022,32,FLEN)
NAN_BOXED(931135360,32,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
