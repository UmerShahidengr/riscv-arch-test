
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 14:18:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32F/fmsub.s.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.s instruction of the RISC-V RV32F_Zicsr,RV32FD_Zicsr,RV64F_Zicsr,RV64FD_Zicsr extension for the fmsub_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF_Zicsr,RV32IFD_Zicsr,RV64IF_Zicsr,RV64IFD_Zicsr,RV32EF_Zicsr,RV32EFD_Zicsr,RV64EF_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fmsub_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*F.*);def TEST_CASE_1=True;",fmsub_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_11392:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6ca617 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6ca617; op2val:0x0;
op3val:0x27ffffc; valaddr_reg:x3; val_offset:34176*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34176*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11393:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6ca617 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6ca617; op2val:0x0;
op3val:0x27ffffe; valaddr_reg:x3; val_offset:34179*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34179*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11394:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6ca617 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6ca617; op2val:0x0;
op3val:0x27fffff; valaddr_reg:x3; val_offset:34182*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34182*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11395:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xad000000; valaddr_reg:x3; val_offset:34185*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34185*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11396:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xad000001; valaddr_reg:x3; val_offset:34188*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34188*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11397:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xad000003; valaddr_reg:x3; val_offset:34191*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34191*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11398:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xad000007; valaddr_reg:x3; val_offset:34194*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34194*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11399:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xad00000f; valaddr_reg:x3; val_offset:34197*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34197*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11400:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xad00001f; valaddr_reg:x3; val_offset:34200*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34200*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11401:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xad00003f; valaddr_reg:x3; val_offset:34203*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34203*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11402:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xad00007f; valaddr_reg:x3; val_offset:34206*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34206*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11403:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xad0000ff; valaddr_reg:x3; val_offset:34209*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34209*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11404:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xad0001ff; valaddr_reg:x3; val_offset:34212*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34212*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11405:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xad0003ff; valaddr_reg:x3; val_offset:34215*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34215*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11406:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xad0007ff; valaddr_reg:x3; val_offset:34218*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34218*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11407:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xad000fff; valaddr_reg:x3; val_offset:34221*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34221*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11408:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xad001fff; valaddr_reg:x3; val_offset:34224*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34224*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11409:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xad003fff; valaddr_reg:x3; val_offset:34227*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34227*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11410:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xad007fff; valaddr_reg:x3; val_offset:34230*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34230*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11411:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xad00ffff; valaddr_reg:x3; val_offset:34233*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34233*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11412:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xad01ffff; valaddr_reg:x3; val_offset:34236*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34236*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11413:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xad03ffff; valaddr_reg:x3; val_offset:34239*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34239*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11414:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xad07ffff; valaddr_reg:x3; val_offset:34242*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34242*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11415:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xad0fffff; valaddr_reg:x3; val_offset:34245*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34245*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11416:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xad1fffff; valaddr_reg:x3; val_offset:34248*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34248*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11417:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xad3fffff; valaddr_reg:x3; val_offset:34251*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34251*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11418:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xad400000; valaddr_reg:x3; val_offset:34254*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34254*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11419:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xad600000; valaddr_reg:x3; val_offset:34257*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34257*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11420:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xad700000; valaddr_reg:x3; val_offset:34260*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34260*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11421:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xad780000; valaddr_reg:x3; val_offset:34263*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34263*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11422:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xad7c0000; valaddr_reg:x3; val_offset:34266*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34266*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11423:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xad7e0000; valaddr_reg:x3; val_offset:34269*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34269*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11424:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xad7f0000; valaddr_reg:x3; val_offset:34272*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34272*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11425:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xad7f8000; valaddr_reg:x3; val_offset:34275*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34275*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11426:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xad7fc000; valaddr_reg:x3; val_offset:34278*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34278*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11427:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xad7fe000; valaddr_reg:x3; val_offset:34281*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34281*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11428:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xad7ff000; valaddr_reg:x3; val_offset:34284*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34284*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11429:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xad7ff800; valaddr_reg:x3; val_offset:34287*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34287*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11430:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xad7ffc00; valaddr_reg:x3; val_offset:34290*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34290*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11431:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xad7ffe00; valaddr_reg:x3; val_offset:34293*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34293*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11432:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xad7fff00; valaddr_reg:x3; val_offset:34296*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34296*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11433:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xad7fff80; valaddr_reg:x3; val_offset:34299*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34299*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11434:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xad7fffc0; valaddr_reg:x3; val_offset:34302*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34302*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11435:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xad7fffe0; valaddr_reg:x3; val_offset:34305*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34305*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11436:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xad7ffff0; valaddr_reg:x3; val_offset:34308*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34308*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11437:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xad7ffff8; valaddr_reg:x3; val_offset:34311*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34311*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11438:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xad7ffffc; valaddr_reg:x3; val_offset:34314*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34314*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11439:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xad7ffffe; valaddr_reg:x3; val_offset:34317*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34317*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11440:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xad7fffff; valaddr_reg:x3; val_offset:34320*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34320*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11441:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xbf800001; valaddr_reg:x3; val_offset:34323*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34323*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11442:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xbf800003; valaddr_reg:x3; val_offset:34326*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34326*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11443:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xbf800007; valaddr_reg:x3; val_offset:34329*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34329*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11444:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xbf999999; valaddr_reg:x3; val_offset:34332*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34332*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11445:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xbfa49249; valaddr_reg:x3; val_offset:34335*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34335*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11446:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xbfb33333; valaddr_reg:x3; val_offset:34338*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34338*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11447:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xbfb6db6d; valaddr_reg:x3; val_offset:34341*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34341*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11448:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xbfbbbbbb; valaddr_reg:x3; val_offset:34344*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34344*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11449:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xbfc44444; valaddr_reg:x3; val_offset:34347*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34347*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11450:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xbfcccccc; valaddr_reg:x3; val_offset:34350*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34350*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11451:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xbfdb6db6; valaddr_reg:x3; val_offset:34353*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34353*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11452:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xbfe66666; valaddr_reg:x3; val_offset:34356*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34356*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11453:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xbfedb6db; valaddr_reg:x3; val_offset:34359*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34359*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11454:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xbffffff8; valaddr_reg:x3; val_offset:34362*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34362*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11455:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xbffffffc; valaddr_reg:x3; val_offset:34365*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34365*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11456:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xbffffffe; valaddr_reg:x3; val_offset:34368*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34368*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11457:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x70 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x38000000; valaddr_reg:x3; val_offset:34371*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34371*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11458:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x70 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x38000001; valaddr_reg:x3; val_offset:34374*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34374*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11459:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x70 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x38000003; valaddr_reg:x3; val_offset:34377*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34377*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11460:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x70 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x38000007; valaddr_reg:x3; val_offset:34380*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34380*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11461:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x70 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x3800000f; valaddr_reg:x3; val_offset:34383*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34383*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11462:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x70 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x3800001f; valaddr_reg:x3; val_offset:34386*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34386*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11463:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x70 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x3800003f; valaddr_reg:x3; val_offset:34389*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34389*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11464:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x70 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x3800007f; valaddr_reg:x3; val_offset:34392*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34392*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11465:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x70 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x380000ff; valaddr_reg:x3; val_offset:34395*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34395*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11466:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x70 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x380001ff; valaddr_reg:x3; val_offset:34398*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34398*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11467:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x70 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x380003ff; valaddr_reg:x3; val_offset:34401*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34401*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11468:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x70 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x380007ff; valaddr_reg:x3; val_offset:34404*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34404*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11469:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x70 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x38000fff; valaddr_reg:x3; val_offset:34407*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34407*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11470:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x70 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x38001fff; valaddr_reg:x3; val_offset:34410*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34410*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11471:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x70 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x38003fff; valaddr_reg:x3; val_offset:34413*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34413*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11472:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x70 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x38007fff; valaddr_reg:x3; val_offset:34416*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34416*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11473:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x70 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x3800ffff; valaddr_reg:x3; val_offset:34419*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34419*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11474:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x70 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x3801ffff; valaddr_reg:x3; val_offset:34422*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34422*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11475:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x70 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x3803ffff; valaddr_reg:x3; val_offset:34425*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34425*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11476:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x70 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x3807ffff; valaddr_reg:x3; val_offset:34428*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34428*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11477:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x70 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x380fffff; valaddr_reg:x3; val_offset:34431*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34431*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11478:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x70 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x381fffff; valaddr_reg:x3; val_offset:34434*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34434*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11479:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x70 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x383fffff; valaddr_reg:x3; val_offset:34437*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34437*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11480:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x70 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x38400000; valaddr_reg:x3; val_offset:34440*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34440*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11481:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x70 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x38600000; valaddr_reg:x3; val_offset:34443*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34443*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11482:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x70 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x38700000; valaddr_reg:x3; val_offset:34446*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34446*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11483:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x70 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x38780000; valaddr_reg:x3; val_offset:34449*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34449*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11484:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x70 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x387c0000; valaddr_reg:x3; val_offset:34452*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34452*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11485:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x70 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x387e0000; valaddr_reg:x3; val_offset:34455*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34455*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11486:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x70 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x387f0000; valaddr_reg:x3; val_offset:34458*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34458*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11487:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x70 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x387f8000; valaddr_reg:x3; val_offset:34461*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34461*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11488:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x70 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x387fc000; valaddr_reg:x3; val_offset:34464*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34464*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11489:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x70 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x387fe000; valaddr_reg:x3; val_offset:34467*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34467*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11490:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x70 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x387ff000; valaddr_reg:x3; val_offset:34470*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34470*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11491:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x70 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x387ff800; valaddr_reg:x3; val_offset:34473*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34473*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11492:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x70 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x387ffc00; valaddr_reg:x3; val_offset:34476*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34476*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11493:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x70 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x387ffe00; valaddr_reg:x3; val_offset:34479*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34479*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11494:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x70 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x387fff00; valaddr_reg:x3; val_offset:34482*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34482*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11495:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x70 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x387fff80; valaddr_reg:x3; val_offset:34485*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34485*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11496:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x70 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x387fffc0; valaddr_reg:x3; val_offset:34488*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34488*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11497:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x70 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x387fffe0; valaddr_reg:x3; val_offset:34491*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34491*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11498:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x70 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x387ffff0; valaddr_reg:x3; val_offset:34494*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34494*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11499:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x70 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x387ffff8; valaddr_reg:x3; val_offset:34497*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34497*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11500:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x70 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x387ffffc; valaddr_reg:x3; val_offset:34500*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34500*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11501:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x70 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x387ffffe; valaddr_reg:x3; val_offset:34503*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34503*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11502:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x70 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x387fffff; valaddr_reg:x3; val_offset:34506*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34506*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11503:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x3f800001; valaddr_reg:x3; val_offset:34509*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34509*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11504:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x3f800003; valaddr_reg:x3; val_offset:34512*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34512*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11505:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x3f800007; valaddr_reg:x3; val_offset:34515*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34515*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11506:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x3f999999; valaddr_reg:x3; val_offset:34518*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34518*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11507:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x3fa49249; valaddr_reg:x3; val_offset:34521*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34521*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11508:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x3fb33333; valaddr_reg:x3; val_offset:34524*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34524*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11509:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x3fb6db6d; valaddr_reg:x3; val_offset:34527*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34527*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11510:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x3fbbbbbb; valaddr_reg:x3; val_offset:34530*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34530*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11511:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x3fc44444; valaddr_reg:x3; val_offset:34533*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34533*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11512:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x3fcccccc; valaddr_reg:x3; val_offset:34536*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34536*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11513:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x3fdb6db6; valaddr_reg:x3; val_offset:34539*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34539*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11514:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x3fe66666; valaddr_reg:x3; val_offset:34542*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34542*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11515:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x3fedb6db; valaddr_reg:x3; val_offset:34545*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34545*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11516:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x3ffffff8; valaddr_reg:x3; val_offset:34548*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34548*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11517:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x3ffffffc; valaddr_reg:x3; val_offset:34551*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34551*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11518:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x3ffffffe; valaddr_reg:x3; val_offset:34554*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34554*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11519:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cfe66 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cfe66; op2val:0x0;
op3val:0x800001; valaddr_reg:x3; val_offset:34557*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34557*0 + 3*89*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(2121049623,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41943036,32,FLEN)
NAN_BOXED(2121049623,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41943038,32,FLEN)
NAN_BOXED(2121049623,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41943039,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(2902458368,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(2902458369,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(2902458371,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(2902458375,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(2902458383,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(2902458399,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(2902458431,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(2902458495,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(2902458623,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(2902458879,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(2902459391,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(2902460415,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(2902462463,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(2902466559,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(2902474751,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(2902491135,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(2902523903,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(2902589439,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(2902720511,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(2902982655,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(2903506943,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(2904555519,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(2906652671,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(2906652672,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(2908749824,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(2909798400,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(2910322688,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(2910584832,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(2910715904,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(2910781440,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(2910814208,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(2910830592,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(2910838784,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(2910842880,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(2910844928,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(2910845952,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(2910846464,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(2910846720,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(2910846848,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(2910846912,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(2910846944,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(2910846960,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(2910846968,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(2910846972,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(2910846974,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(2910846975,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(3212836865,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(3212836867,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(3212836871,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(3214514585,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(3215233609,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(3216192307,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(3216431981,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(3216751547,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(3217310788,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(3217870028,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(3218828726,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(3219547750,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(3220027099,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(3221225464,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(3221225468,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(3221225470,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(939524096,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(939524097,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(939524099,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(939524103,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(939524111,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(939524127,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(939524159,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(939524223,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(939524351,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(939524607,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(939525119,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(939526143,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(939528191,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(939532287,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(939540479,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(939556863,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(939589631,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(939655167,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(939786239,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(940048383,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(940572671,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(941621247,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(943718399,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(943718400,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(945815552,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(946864128,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(947388416,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(947650560,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(947781632,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(947847168,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(947879936,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(947896320,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(947904512,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(947908608,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(947910656,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(947911680,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(947912192,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(947912448,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(947912576,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(947912640,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(947912672,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(947912688,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(947912696,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(947912700,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(947912702,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(947912703,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(1065353217,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(1065353219,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(1065353223,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(1067030937,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(1067749961,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(1068708659,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(1068948333,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(1069267899,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(1069827140,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(1070386380,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(1071345078,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(1072064102,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(1072543451,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(1073741816,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(1073741820,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(1073741822,32,FLEN)
NAN_BOXED(2121072230,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388609,32,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
