
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 14:18:09 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32F/fnmadd.s.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmadd.s instruction of the RISC-V RV32F_Zicsr,RV32FD_Zicsr,RV64F_Zicsr,RV64FD_Zicsr extension for the fnmadd_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF_Zicsr,RV32IFD_Zicsr,RV64IF_Zicsr,RV64IFD_Zicsr,RV32EF_Zicsr,RV32EFD_Zicsr,RV64EF_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fnmadd_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*F.*);def TEST_CASE_1=True;",fnmadd_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_9216:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x47fc16 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x10 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e47fc16; op2val:0x80000000;
op3val:0x883fffff; valaddr_reg:x3; val_offset:27648*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27648*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9217:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x47fc16 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x10 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e47fc16; op2val:0x80000000;
op3val:0x88400000; valaddr_reg:x3; val_offset:27651*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27651*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9218:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x47fc16 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x10 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e47fc16; op2val:0x80000000;
op3val:0x88600000; valaddr_reg:x3; val_offset:27654*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27654*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9219:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x47fc16 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x10 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e47fc16; op2val:0x80000000;
op3val:0x88700000; valaddr_reg:x3; val_offset:27657*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27657*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9220:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x47fc16 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x10 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e47fc16; op2val:0x80000000;
op3val:0x88780000; valaddr_reg:x3; val_offset:27660*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27660*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9221:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x47fc16 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x10 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e47fc16; op2val:0x80000000;
op3val:0x887c0000; valaddr_reg:x3; val_offset:27663*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27663*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9222:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x47fc16 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x10 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e47fc16; op2val:0x80000000;
op3val:0x887e0000; valaddr_reg:x3; val_offset:27666*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27666*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9223:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x47fc16 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x10 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e47fc16; op2val:0x80000000;
op3val:0x887f0000; valaddr_reg:x3; val_offset:27669*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27669*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9224:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x47fc16 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x10 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e47fc16; op2val:0x80000000;
op3val:0x887f8000; valaddr_reg:x3; val_offset:27672*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27672*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9225:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x47fc16 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x10 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e47fc16; op2val:0x80000000;
op3val:0x887fc000; valaddr_reg:x3; val_offset:27675*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27675*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9226:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x47fc16 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x10 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e47fc16; op2val:0x80000000;
op3val:0x887fe000; valaddr_reg:x3; val_offset:27678*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27678*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9227:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x47fc16 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x10 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e47fc16; op2val:0x80000000;
op3val:0x887ff000; valaddr_reg:x3; val_offset:27681*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27681*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9228:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x47fc16 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x10 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e47fc16; op2val:0x80000000;
op3val:0x887ff800; valaddr_reg:x3; val_offset:27684*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27684*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9229:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x47fc16 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x10 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e47fc16; op2val:0x80000000;
op3val:0x887ffc00; valaddr_reg:x3; val_offset:27687*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27687*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9230:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x47fc16 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x10 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e47fc16; op2val:0x80000000;
op3val:0x887ffe00; valaddr_reg:x3; val_offset:27690*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27690*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9231:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x47fc16 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x10 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e47fc16; op2val:0x80000000;
op3val:0x887fff00; valaddr_reg:x3; val_offset:27693*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27693*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9232:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x47fc16 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x10 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e47fc16; op2val:0x80000000;
op3val:0x887fff80; valaddr_reg:x3; val_offset:27696*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27696*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9233:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x47fc16 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x10 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e47fc16; op2val:0x80000000;
op3val:0x887fffc0; valaddr_reg:x3; val_offset:27699*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27699*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9234:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x47fc16 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x10 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e47fc16; op2val:0x80000000;
op3val:0x887fffe0; valaddr_reg:x3; val_offset:27702*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27702*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9235:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x47fc16 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x10 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e47fc16; op2val:0x80000000;
op3val:0x887ffff0; valaddr_reg:x3; val_offset:27705*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27705*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9236:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x47fc16 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x10 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e47fc16; op2val:0x80000000;
op3val:0x887ffff8; valaddr_reg:x3; val_offset:27708*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27708*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9237:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x47fc16 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x10 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e47fc16; op2val:0x80000000;
op3val:0x887ffffc; valaddr_reg:x3; val_offset:27711*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27711*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9238:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x47fc16 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x10 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e47fc16; op2val:0x80000000;
op3val:0x887ffffe; valaddr_reg:x3; val_offset:27714*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27714*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9239:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x47fc16 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x10 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e47fc16; op2val:0x80000000;
op3val:0x887fffff; valaddr_reg:x3; val_offset:27717*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27717*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9240:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4b332e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x214287 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4b332e; op2val:0x40a14287;
op3val:0x7e000000; valaddr_reg:x3; val_offset:27720*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27720*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9241:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4b332e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x214287 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4b332e; op2val:0x40a14287;
op3val:0x7e000001; valaddr_reg:x3; val_offset:27723*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27723*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9242:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4b332e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x214287 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4b332e; op2val:0x40a14287;
op3val:0x7e000003; valaddr_reg:x3; val_offset:27726*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27726*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9243:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4b332e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x214287 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4b332e; op2val:0x40a14287;
op3val:0x7e000007; valaddr_reg:x3; val_offset:27729*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27729*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9244:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4b332e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x214287 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4b332e; op2val:0x40a14287;
op3val:0x7e00000f; valaddr_reg:x3; val_offset:27732*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27732*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9245:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4b332e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x214287 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4b332e; op2val:0x40a14287;
op3val:0x7e00001f; valaddr_reg:x3; val_offset:27735*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27735*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9246:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4b332e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x214287 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4b332e; op2val:0x40a14287;
op3val:0x7e00003f; valaddr_reg:x3; val_offset:27738*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27738*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9247:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4b332e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x214287 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4b332e; op2val:0x40a14287;
op3val:0x7e00007f; valaddr_reg:x3; val_offset:27741*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27741*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9248:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4b332e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x214287 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4b332e; op2val:0x40a14287;
op3val:0x7e0000ff; valaddr_reg:x3; val_offset:27744*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27744*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9249:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4b332e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x214287 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4b332e; op2val:0x40a14287;
op3val:0x7e0001ff; valaddr_reg:x3; val_offset:27747*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27747*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9250:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4b332e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x214287 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4b332e; op2val:0x40a14287;
op3val:0x7e0003ff; valaddr_reg:x3; val_offset:27750*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27750*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9251:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4b332e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x214287 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4b332e; op2val:0x40a14287;
op3val:0x7e0007ff; valaddr_reg:x3; val_offset:27753*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27753*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9252:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4b332e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x214287 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4b332e; op2val:0x40a14287;
op3val:0x7e000fff; valaddr_reg:x3; val_offset:27756*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27756*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9253:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4b332e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x214287 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4b332e; op2val:0x40a14287;
op3val:0x7e001fff; valaddr_reg:x3; val_offset:27759*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27759*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9254:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4b332e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x214287 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4b332e; op2val:0x40a14287;
op3val:0x7e003fff; valaddr_reg:x3; val_offset:27762*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27762*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9255:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4b332e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x214287 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4b332e; op2val:0x40a14287;
op3val:0x7e007fff; valaddr_reg:x3; val_offset:27765*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27765*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9256:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4b332e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x214287 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4b332e; op2val:0x40a14287;
op3val:0x7e00ffff; valaddr_reg:x3; val_offset:27768*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27768*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9257:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4b332e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x214287 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4b332e; op2val:0x40a14287;
op3val:0x7e01ffff; valaddr_reg:x3; val_offset:27771*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27771*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9258:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4b332e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x214287 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4b332e; op2val:0x40a14287;
op3val:0x7e03ffff; valaddr_reg:x3; val_offset:27774*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27774*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9259:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4b332e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x214287 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4b332e; op2val:0x40a14287;
op3val:0x7e07ffff; valaddr_reg:x3; val_offset:27777*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27777*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9260:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4b332e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x214287 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4b332e; op2val:0x40a14287;
op3val:0x7e0fffff; valaddr_reg:x3; val_offset:27780*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27780*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9261:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4b332e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x214287 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4b332e; op2val:0x40a14287;
op3val:0x7e1fffff; valaddr_reg:x3; val_offset:27783*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27783*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9262:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4b332e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x214287 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4b332e; op2val:0x40a14287;
op3val:0x7e3fffff; valaddr_reg:x3; val_offset:27786*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27786*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9263:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4b332e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x214287 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4b332e; op2val:0x40a14287;
op3val:0x7e400000; valaddr_reg:x3; val_offset:27789*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27789*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9264:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4b332e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x214287 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4b332e; op2val:0x40a14287;
op3val:0x7e600000; valaddr_reg:x3; val_offset:27792*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27792*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9265:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4b332e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x214287 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4b332e; op2val:0x40a14287;
op3val:0x7e700000; valaddr_reg:x3; val_offset:27795*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27795*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9266:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4b332e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x214287 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4b332e; op2val:0x40a14287;
op3val:0x7e780000; valaddr_reg:x3; val_offset:27798*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27798*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9267:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4b332e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x214287 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4b332e; op2val:0x40a14287;
op3val:0x7e7c0000; valaddr_reg:x3; val_offset:27801*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27801*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9268:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4b332e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x214287 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4b332e; op2val:0x40a14287;
op3val:0x7e7e0000; valaddr_reg:x3; val_offset:27804*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27804*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9269:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4b332e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x214287 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4b332e; op2val:0x40a14287;
op3val:0x7e7f0000; valaddr_reg:x3; val_offset:27807*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27807*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9270:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4b332e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x214287 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4b332e; op2val:0x40a14287;
op3val:0x7e7f8000; valaddr_reg:x3; val_offset:27810*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27810*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9271:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4b332e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x214287 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4b332e; op2val:0x40a14287;
op3val:0x7e7fc000; valaddr_reg:x3; val_offset:27813*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27813*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9272:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4b332e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x214287 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4b332e; op2val:0x40a14287;
op3val:0x7e7fe000; valaddr_reg:x3; val_offset:27816*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27816*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9273:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4b332e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x214287 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4b332e; op2val:0x40a14287;
op3val:0x7e7ff000; valaddr_reg:x3; val_offset:27819*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27819*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9274:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4b332e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x214287 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4b332e; op2val:0x40a14287;
op3val:0x7e7ff800; valaddr_reg:x3; val_offset:27822*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27822*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9275:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4b332e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x214287 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4b332e; op2val:0x40a14287;
op3val:0x7e7ffc00; valaddr_reg:x3; val_offset:27825*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27825*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9276:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4b332e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x214287 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4b332e; op2val:0x40a14287;
op3val:0x7e7ffe00; valaddr_reg:x3; val_offset:27828*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27828*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9277:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4b332e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x214287 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4b332e; op2val:0x40a14287;
op3val:0x7e7fff00; valaddr_reg:x3; val_offset:27831*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27831*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9278:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4b332e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x214287 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4b332e; op2val:0x40a14287;
op3val:0x7e7fff80; valaddr_reg:x3; val_offset:27834*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27834*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9279:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4b332e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x214287 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4b332e; op2val:0x40a14287;
op3val:0x7e7fffc0; valaddr_reg:x3; val_offset:27837*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27837*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9280:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4b332e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x214287 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4b332e; op2val:0x40a14287;
op3val:0x7e7fffe0; valaddr_reg:x3; val_offset:27840*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27840*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9281:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4b332e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x214287 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4b332e; op2val:0x40a14287;
op3val:0x7e7ffff0; valaddr_reg:x3; val_offset:27843*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27843*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9282:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4b332e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x214287 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4b332e; op2val:0x40a14287;
op3val:0x7e7ffff8; valaddr_reg:x3; val_offset:27846*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27846*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9283:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4b332e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x214287 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4b332e; op2val:0x40a14287;
op3val:0x7e7ffffc; valaddr_reg:x3; val_offset:27849*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27849*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9284:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4b332e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x214287 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4b332e; op2val:0x40a14287;
op3val:0x7e7ffffe; valaddr_reg:x3; val_offset:27852*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27852*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9285:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4b332e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x214287 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4b332e; op2val:0x40a14287;
op3val:0x7e7fffff; valaddr_reg:x3; val_offset:27855*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27855*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9286:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4b332e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x214287 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4b332e; op2val:0x40a14287;
op3val:0x7f000001; valaddr_reg:x3; val_offset:27858*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27858*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9287:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4b332e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x214287 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4b332e; op2val:0x40a14287;
op3val:0x7f000003; valaddr_reg:x3; val_offset:27861*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27861*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9288:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4b332e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x214287 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4b332e; op2val:0x40a14287;
op3val:0x7f000007; valaddr_reg:x3; val_offset:27864*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27864*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9289:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4b332e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x214287 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4b332e; op2val:0x40a14287;
op3val:0x7f199999; valaddr_reg:x3; val_offset:27867*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27867*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9290:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4b332e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x214287 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4b332e; op2val:0x40a14287;
op3val:0x7f249249; valaddr_reg:x3; val_offset:27870*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27870*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9291:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4b332e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x214287 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4b332e; op2val:0x40a14287;
op3val:0x7f333333; valaddr_reg:x3; val_offset:27873*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27873*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9292:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4b332e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x214287 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4b332e; op2val:0x40a14287;
op3val:0x7f36db6d; valaddr_reg:x3; val_offset:27876*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27876*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9293:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4b332e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x214287 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4b332e; op2val:0x40a14287;
op3val:0x7f3bbbbb; valaddr_reg:x3; val_offset:27879*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27879*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9294:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4b332e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x214287 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4b332e; op2val:0x40a14287;
op3val:0x7f444444; valaddr_reg:x3; val_offset:27882*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27882*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9295:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4b332e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x214287 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4b332e; op2val:0x40a14287;
op3val:0x7f4ccccc; valaddr_reg:x3; val_offset:27885*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27885*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9296:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4b332e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x214287 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4b332e; op2val:0x40a14287;
op3val:0x7f5b6db6; valaddr_reg:x3; val_offset:27888*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27888*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9297:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4b332e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x214287 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4b332e; op2val:0x40a14287;
op3val:0x7f666666; valaddr_reg:x3; val_offset:27891*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27891*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9298:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4b332e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x214287 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4b332e; op2val:0x40a14287;
op3val:0x7f6db6db; valaddr_reg:x3; val_offset:27894*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27894*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9299:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4b332e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x214287 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4b332e; op2val:0x40a14287;
op3val:0x7f7ffff8; valaddr_reg:x3; val_offset:27897*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27897*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9300:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4b332e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x214287 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4b332e; op2val:0x40a14287;
op3val:0x7f7ffffc; valaddr_reg:x3; val_offset:27900*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27900*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9301:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4b332e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x214287 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4b332e; op2val:0x40a14287;
op3val:0x7f7ffffe; valaddr_reg:x3; val_offset:27903*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27903*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9302:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c8ab7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c8ab7; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:27906*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27906*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9303:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c8ab7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c8ab7; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:27909*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27909*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9304:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c8ab7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c8ab7; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:27912*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27912*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9305:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c8ab7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c8ab7; op2val:0x0;
op3val:0x199999; valaddr_reg:x3; val_offset:27915*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27915*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9306:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c8ab7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c8ab7; op2val:0x0;
op3val:0x249249; valaddr_reg:x3; val_offset:27918*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27918*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9307:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c8ab7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c8ab7; op2val:0x0;
op3val:0x333333; valaddr_reg:x3; val_offset:27921*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27921*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9308:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c8ab7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c8ab7; op2val:0x0;
op3val:0x36db6d; valaddr_reg:x3; val_offset:27924*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27924*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9309:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c8ab7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c8ab7; op2val:0x0;
op3val:0x3bbbbb; valaddr_reg:x3; val_offset:27927*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27927*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9310:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c8ab7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c8ab7; op2val:0x0;
op3val:0x444444; valaddr_reg:x3; val_offset:27930*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27930*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9311:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c8ab7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c8ab7; op2val:0x0;
op3val:0x4ccccc; valaddr_reg:x3; val_offset:27933*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27933*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9312:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c8ab7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c8ab7; op2val:0x0;
op3val:0x5b6db6; valaddr_reg:x3; val_offset:27936*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27936*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9313:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c8ab7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c8ab7; op2val:0x0;
op3val:0x666666; valaddr_reg:x3; val_offset:27939*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27939*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9314:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c8ab7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c8ab7; op2val:0x0;
op3val:0x6db6db; valaddr_reg:x3; val_offset:27942*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27942*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9315:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c8ab7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c8ab7; op2val:0x0;
op3val:0x7ffff8; valaddr_reg:x3; val_offset:27945*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27945*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9316:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c8ab7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c8ab7; op2val:0x0;
op3val:0x7ffffc; valaddr_reg:x3; val_offset:27948*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27948*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9317:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c8ab7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c8ab7; op2val:0x0;
op3val:0x7ffffe; valaddr_reg:x3; val_offset:27951*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27951*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9318:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c8ab7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c8ab7; op2val:0x0;
op3val:0x6000000; valaddr_reg:x3; val_offset:27954*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27954*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9319:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c8ab7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c8ab7; op2val:0x0;
op3val:0x6000001; valaddr_reg:x3; val_offset:27957*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27957*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9320:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c8ab7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c8ab7; op2val:0x0;
op3val:0x6000003; valaddr_reg:x3; val_offset:27960*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27960*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9321:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c8ab7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c8ab7; op2val:0x0;
op3val:0x6000007; valaddr_reg:x3; val_offset:27963*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27963*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9322:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c8ab7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c8ab7; op2val:0x0;
op3val:0x600000f; valaddr_reg:x3; val_offset:27966*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27966*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9323:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c8ab7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c8ab7; op2val:0x0;
op3val:0x600001f; valaddr_reg:x3; val_offset:27969*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27969*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9324:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c8ab7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c8ab7; op2val:0x0;
op3val:0x600003f; valaddr_reg:x3; val_offset:27972*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27972*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9325:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c8ab7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c8ab7; op2val:0x0;
op3val:0x600007f; valaddr_reg:x3; val_offset:27975*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27975*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9326:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c8ab7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c8ab7; op2val:0x0;
op3val:0x60000ff; valaddr_reg:x3; val_offset:27978*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27978*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9327:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c8ab7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c8ab7; op2val:0x0;
op3val:0x60001ff; valaddr_reg:x3; val_offset:27981*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27981*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9328:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c8ab7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c8ab7; op2val:0x0;
op3val:0x60003ff; valaddr_reg:x3; val_offset:27984*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27984*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9329:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c8ab7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c8ab7; op2val:0x0;
op3val:0x60007ff; valaddr_reg:x3; val_offset:27987*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27987*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9330:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c8ab7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c8ab7; op2val:0x0;
op3val:0x6000fff; valaddr_reg:x3; val_offset:27990*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27990*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9331:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c8ab7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c8ab7; op2val:0x0;
op3val:0x6001fff; valaddr_reg:x3; val_offset:27993*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27993*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9332:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c8ab7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c8ab7; op2val:0x0;
op3val:0x6003fff; valaddr_reg:x3; val_offset:27996*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27996*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9333:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c8ab7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c8ab7; op2val:0x0;
op3val:0x6007fff; valaddr_reg:x3; val_offset:27999*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27999*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9334:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c8ab7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c8ab7; op2val:0x0;
op3val:0x600ffff; valaddr_reg:x3; val_offset:28002*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28002*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9335:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c8ab7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c8ab7; op2val:0x0;
op3val:0x601ffff; valaddr_reg:x3; val_offset:28005*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28005*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9336:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c8ab7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c8ab7; op2val:0x0;
op3val:0x603ffff; valaddr_reg:x3; val_offset:28008*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28008*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9337:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c8ab7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c8ab7; op2val:0x0;
op3val:0x607ffff; valaddr_reg:x3; val_offset:28011*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28011*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9338:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c8ab7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c8ab7; op2val:0x0;
op3val:0x60fffff; valaddr_reg:x3; val_offset:28014*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28014*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9339:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c8ab7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c8ab7; op2val:0x0;
op3val:0x61fffff; valaddr_reg:x3; val_offset:28017*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28017*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9340:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c8ab7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c8ab7; op2val:0x0;
op3val:0x63fffff; valaddr_reg:x3; val_offset:28020*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28020*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9341:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c8ab7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c8ab7; op2val:0x0;
op3val:0x6400000; valaddr_reg:x3; val_offset:28023*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28023*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9342:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c8ab7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c8ab7; op2val:0x0;
op3val:0x6600000; valaddr_reg:x3; val_offset:28026*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28026*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9343:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c8ab7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c8ab7; op2val:0x0;
op3val:0x6700000; valaddr_reg:x3; val_offset:28029*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28029*0 + 3*72*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(2118646806,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2285895679,32,FLEN)
NAN_BOXED(2118646806,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2285895680,32,FLEN)
NAN_BOXED(2118646806,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2287992832,32,FLEN)
NAN_BOXED(2118646806,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2289041408,32,FLEN)
NAN_BOXED(2118646806,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2289565696,32,FLEN)
NAN_BOXED(2118646806,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2289827840,32,FLEN)
NAN_BOXED(2118646806,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2289958912,32,FLEN)
NAN_BOXED(2118646806,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2290024448,32,FLEN)
NAN_BOXED(2118646806,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2290057216,32,FLEN)
NAN_BOXED(2118646806,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2290073600,32,FLEN)
NAN_BOXED(2118646806,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2290081792,32,FLEN)
NAN_BOXED(2118646806,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2290085888,32,FLEN)
NAN_BOXED(2118646806,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2290087936,32,FLEN)
NAN_BOXED(2118646806,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2290088960,32,FLEN)
NAN_BOXED(2118646806,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2290089472,32,FLEN)
NAN_BOXED(2118646806,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2290089728,32,FLEN)
NAN_BOXED(2118646806,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2290089856,32,FLEN)
NAN_BOXED(2118646806,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2290089920,32,FLEN)
NAN_BOXED(2118646806,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2290089952,32,FLEN)
NAN_BOXED(2118646806,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2290089968,32,FLEN)
NAN_BOXED(2118646806,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2290089976,32,FLEN)
NAN_BOXED(2118646806,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2290089980,32,FLEN)
NAN_BOXED(2118646806,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2290089982,32,FLEN)
NAN_BOXED(2118646806,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2290089983,32,FLEN)
NAN_BOXED(2118857518,32,FLEN)
NAN_BOXED(1084310151,32,FLEN)
NAN_BOXED(2113929216,32,FLEN)
NAN_BOXED(2118857518,32,FLEN)
NAN_BOXED(1084310151,32,FLEN)
NAN_BOXED(2113929217,32,FLEN)
NAN_BOXED(2118857518,32,FLEN)
NAN_BOXED(1084310151,32,FLEN)
NAN_BOXED(2113929219,32,FLEN)
NAN_BOXED(2118857518,32,FLEN)
NAN_BOXED(1084310151,32,FLEN)
NAN_BOXED(2113929223,32,FLEN)
NAN_BOXED(2118857518,32,FLEN)
NAN_BOXED(1084310151,32,FLEN)
NAN_BOXED(2113929231,32,FLEN)
NAN_BOXED(2118857518,32,FLEN)
NAN_BOXED(1084310151,32,FLEN)
NAN_BOXED(2113929247,32,FLEN)
NAN_BOXED(2118857518,32,FLEN)
NAN_BOXED(1084310151,32,FLEN)
NAN_BOXED(2113929279,32,FLEN)
NAN_BOXED(2118857518,32,FLEN)
NAN_BOXED(1084310151,32,FLEN)
NAN_BOXED(2113929343,32,FLEN)
NAN_BOXED(2118857518,32,FLEN)
NAN_BOXED(1084310151,32,FLEN)
NAN_BOXED(2113929471,32,FLEN)
NAN_BOXED(2118857518,32,FLEN)
NAN_BOXED(1084310151,32,FLEN)
NAN_BOXED(2113929727,32,FLEN)
NAN_BOXED(2118857518,32,FLEN)
NAN_BOXED(1084310151,32,FLEN)
NAN_BOXED(2113930239,32,FLEN)
NAN_BOXED(2118857518,32,FLEN)
NAN_BOXED(1084310151,32,FLEN)
NAN_BOXED(2113931263,32,FLEN)
NAN_BOXED(2118857518,32,FLEN)
NAN_BOXED(1084310151,32,FLEN)
NAN_BOXED(2113933311,32,FLEN)
NAN_BOXED(2118857518,32,FLEN)
NAN_BOXED(1084310151,32,FLEN)
NAN_BOXED(2113937407,32,FLEN)
NAN_BOXED(2118857518,32,FLEN)
NAN_BOXED(1084310151,32,FLEN)
NAN_BOXED(2113945599,32,FLEN)
NAN_BOXED(2118857518,32,FLEN)
NAN_BOXED(1084310151,32,FLEN)
NAN_BOXED(2113961983,32,FLEN)
NAN_BOXED(2118857518,32,FLEN)
NAN_BOXED(1084310151,32,FLEN)
NAN_BOXED(2113994751,32,FLEN)
NAN_BOXED(2118857518,32,FLEN)
NAN_BOXED(1084310151,32,FLEN)
NAN_BOXED(2114060287,32,FLEN)
NAN_BOXED(2118857518,32,FLEN)
NAN_BOXED(1084310151,32,FLEN)
NAN_BOXED(2114191359,32,FLEN)
NAN_BOXED(2118857518,32,FLEN)
NAN_BOXED(1084310151,32,FLEN)
NAN_BOXED(2114453503,32,FLEN)
NAN_BOXED(2118857518,32,FLEN)
NAN_BOXED(1084310151,32,FLEN)
NAN_BOXED(2114977791,32,FLEN)
NAN_BOXED(2118857518,32,FLEN)
NAN_BOXED(1084310151,32,FLEN)
NAN_BOXED(2116026367,32,FLEN)
NAN_BOXED(2118857518,32,FLEN)
NAN_BOXED(1084310151,32,FLEN)
NAN_BOXED(2118123519,32,FLEN)
NAN_BOXED(2118857518,32,FLEN)
NAN_BOXED(1084310151,32,FLEN)
NAN_BOXED(2118123520,32,FLEN)
NAN_BOXED(2118857518,32,FLEN)
NAN_BOXED(1084310151,32,FLEN)
NAN_BOXED(2120220672,32,FLEN)
NAN_BOXED(2118857518,32,FLEN)
NAN_BOXED(1084310151,32,FLEN)
NAN_BOXED(2121269248,32,FLEN)
NAN_BOXED(2118857518,32,FLEN)
NAN_BOXED(1084310151,32,FLEN)
NAN_BOXED(2121793536,32,FLEN)
NAN_BOXED(2118857518,32,FLEN)
NAN_BOXED(1084310151,32,FLEN)
NAN_BOXED(2122055680,32,FLEN)
NAN_BOXED(2118857518,32,FLEN)
NAN_BOXED(1084310151,32,FLEN)
NAN_BOXED(2122186752,32,FLEN)
NAN_BOXED(2118857518,32,FLEN)
NAN_BOXED(1084310151,32,FLEN)
NAN_BOXED(2122252288,32,FLEN)
NAN_BOXED(2118857518,32,FLEN)
NAN_BOXED(1084310151,32,FLEN)
NAN_BOXED(2122285056,32,FLEN)
NAN_BOXED(2118857518,32,FLEN)
NAN_BOXED(1084310151,32,FLEN)
NAN_BOXED(2122301440,32,FLEN)
NAN_BOXED(2118857518,32,FLEN)
NAN_BOXED(1084310151,32,FLEN)
NAN_BOXED(2122309632,32,FLEN)
NAN_BOXED(2118857518,32,FLEN)
NAN_BOXED(1084310151,32,FLEN)
NAN_BOXED(2122313728,32,FLEN)
NAN_BOXED(2118857518,32,FLEN)
NAN_BOXED(1084310151,32,FLEN)
NAN_BOXED(2122315776,32,FLEN)
NAN_BOXED(2118857518,32,FLEN)
NAN_BOXED(1084310151,32,FLEN)
NAN_BOXED(2122316800,32,FLEN)
NAN_BOXED(2118857518,32,FLEN)
NAN_BOXED(1084310151,32,FLEN)
NAN_BOXED(2122317312,32,FLEN)
NAN_BOXED(2118857518,32,FLEN)
NAN_BOXED(1084310151,32,FLEN)
NAN_BOXED(2122317568,32,FLEN)
NAN_BOXED(2118857518,32,FLEN)
NAN_BOXED(1084310151,32,FLEN)
NAN_BOXED(2122317696,32,FLEN)
NAN_BOXED(2118857518,32,FLEN)
NAN_BOXED(1084310151,32,FLEN)
NAN_BOXED(2122317760,32,FLEN)
NAN_BOXED(2118857518,32,FLEN)
NAN_BOXED(1084310151,32,FLEN)
NAN_BOXED(2122317792,32,FLEN)
NAN_BOXED(2118857518,32,FLEN)
NAN_BOXED(1084310151,32,FLEN)
NAN_BOXED(2122317808,32,FLEN)
NAN_BOXED(2118857518,32,FLEN)
NAN_BOXED(1084310151,32,FLEN)
NAN_BOXED(2122317816,32,FLEN)
NAN_BOXED(2118857518,32,FLEN)
NAN_BOXED(1084310151,32,FLEN)
NAN_BOXED(2122317820,32,FLEN)
NAN_BOXED(2118857518,32,FLEN)
NAN_BOXED(1084310151,32,FLEN)
NAN_BOXED(2122317822,32,FLEN)
NAN_BOXED(2118857518,32,FLEN)
NAN_BOXED(1084310151,32,FLEN)
NAN_BOXED(2122317823,32,FLEN)
NAN_BOXED(2118857518,32,FLEN)
NAN_BOXED(1084310151,32,FLEN)
NAN_BOXED(2130706433,32,FLEN)
NAN_BOXED(2118857518,32,FLEN)
NAN_BOXED(1084310151,32,FLEN)
NAN_BOXED(2130706435,32,FLEN)
NAN_BOXED(2118857518,32,FLEN)
NAN_BOXED(1084310151,32,FLEN)
NAN_BOXED(2130706439,32,FLEN)
NAN_BOXED(2118857518,32,FLEN)
NAN_BOXED(1084310151,32,FLEN)
NAN_BOXED(2132384153,32,FLEN)
NAN_BOXED(2118857518,32,FLEN)
NAN_BOXED(1084310151,32,FLEN)
NAN_BOXED(2133103177,32,FLEN)
NAN_BOXED(2118857518,32,FLEN)
NAN_BOXED(1084310151,32,FLEN)
NAN_BOXED(2134061875,32,FLEN)
NAN_BOXED(2118857518,32,FLEN)
NAN_BOXED(1084310151,32,FLEN)
NAN_BOXED(2134301549,32,FLEN)
NAN_BOXED(2118857518,32,FLEN)
NAN_BOXED(1084310151,32,FLEN)
NAN_BOXED(2134621115,32,FLEN)
NAN_BOXED(2118857518,32,FLEN)
NAN_BOXED(1084310151,32,FLEN)
NAN_BOXED(2135180356,32,FLEN)
NAN_BOXED(2118857518,32,FLEN)
NAN_BOXED(1084310151,32,FLEN)
NAN_BOXED(2135739596,32,FLEN)
NAN_BOXED(2118857518,32,FLEN)
NAN_BOXED(1084310151,32,FLEN)
NAN_BOXED(2136698294,32,FLEN)
NAN_BOXED(2118857518,32,FLEN)
NAN_BOXED(1084310151,32,FLEN)
NAN_BOXED(2137417318,32,FLEN)
NAN_BOXED(2118857518,32,FLEN)
NAN_BOXED(1084310151,32,FLEN)
NAN_BOXED(2137896667,32,FLEN)
NAN_BOXED(2118857518,32,FLEN)
NAN_BOXED(1084310151,32,FLEN)
NAN_BOXED(2139095032,32,FLEN)
NAN_BOXED(2118857518,32,FLEN)
NAN_BOXED(1084310151,32,FLEN)
NAN_BOXED(2139095036,32,FLEN)
NAN_BOXED(2118857518,32,FLEN)
NAN_BOXED(1084310151,32,FLEN)
NAN_BOXED(2139095038,32,FLEN)
NAN_BOXED(2118945463,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(2118945463,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3,32,FLEN)
NAN_BOXED(2118945463,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7,32,FLEN)
NAN_BOXED(2118945463,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1677721,32,FLEN)
NAN_BOXED(2118945463,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2396745,32,FLEN)
NAN_BOXED(2118945463,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3355443,32,FLEN)
NAN_BOXED(2118945463,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3595117,32,FLEN)
NAN_BOXED(2118945463,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3914683,32,FLEN)
NAN_BOXED(2118945463,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(4473924,32,FLEN)
NAN_BOXED(2118945463,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5033164,32,FLEN)
NAN_BOXED(2118945463,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5991862,32,FLEN)
NAN_BOXED(2118945463,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(6710886,32,FLEN)
NAN_BOXED(2118945463,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7190235,32,FLEN)
NAN_BOXED(2118945463,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388600,32,FLEN)
NAN_BOXED(2118945463,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388604,32,FLEN)
NAN_BOXED(2118945463,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388606,32,FLEN)
NAN_BOXED(2118945463,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(100663296,32,FLEN)
NAN_BOXED(2118945463,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(100663297,32,FLEN)
NAN_BOXED(2118945463,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(100663299,32,FLEN)
NAN_BOXED(2118945463,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(100663303,32,FLEN)
NAN_BOXED(2118945463,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(100663311,32,FLEN)
NAN_BOXED(2118945463,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(100663327,32,FLEN)
NAN_BOXED(2118945463,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(100663359,32,FLEN)
NAN_BOXED(2118945463,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(100663423,32,FLEN)
NAN_BOXED(2118945463,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(100663551,32,FLEN)
NAN_BOXED(2118945463,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(100663807,32,FLEN)
NAN_BOXED(2118945463,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(100664319,32,FLEN)
NAN_BOXED(2118945463,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(100665343,32,FLEN)
NAN_BOXED(2118945463,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(100667391,32,FLEN)
NAN_BOXED(2118945463,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(100671487,32,FLEN)
NAN_BOXED(2118945463,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(100679679,32,FLEN)
NAN_BOXED(2118945463,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(100696063,32,FLEN)
NAN_BOXED(2118945463,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(100728831,32,FLEN)
NAN_BOXED(2118945463,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(100794367,32,FLEN)
NAN_BOXED(2118945463,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(100925439,32,FLEN)
NAN_BOXED(2118945463,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(101187583,32,FLEN)
NAN_BOXED(2118945463,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(101711871,32,FLEN)
NAN_BOXED(2118945463,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(102760447,32,FLEN)
NAN_BOXED(2118945463,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(104857599,32,FLEN)
NAN_BOXED(2118945463,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(104857600,32,FLEN)
NAN_BOXED(2118945463,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(106954752,32,FLEN)
NAN_BOXED(2118945463,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(108003328,32,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
