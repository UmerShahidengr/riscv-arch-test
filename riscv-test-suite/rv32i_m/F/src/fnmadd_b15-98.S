
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 14:18:09 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32F/fnmadd.s.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmadd.s instruction of the RISC-V RV32F_Zicsr,RV32FD_Zicsr,RV64F_Zicsr,RV64FD_Zicsr extension for the fnmadd_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF_Zicsr,RV32IFD_Zicsr,RV64IF_Zicsr,RV64IFD_Zicsr,RV32EF_Zicsr,RV32EFD_Zicsr,RV64EF_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fnmadd_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*F.*);def TEST_CASE_1=True;",fnmadd_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_12416:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x03d7ef and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7c44bf and fs3 == 0 and fe3 == 0x81 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e83d7ef; op2val:0x7c44bf;
op3val:0x4080000f; valaddr_reg:x3; val_offset:37248*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37248*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12417:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x03d7ef and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7c44bf and fs3 == 0 and fe3 == 0x81 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e83d7ef; op2val:0x7c44bf;
op3val:0x4080001f; valaddr_reg:x3; val_offset:37251*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37251*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12418:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x03d7ef and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7c44bf and fs3 == 0 and fe3 == 0x81 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e83d7ef; op2val:0x7c44bf;
op3val:0x4080003f; valaddr_reg:x3; val_offset:37254*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37254*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12419:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x03d7ef and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7c44bf and fs3 == 0 and fe3 == 0x81 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e83d7ef; op2val:0x7c44bf;
op3val:0x4080007f; valaddr_reg:x3; val_offset:37257*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37257*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12420:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x03d7ef and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7c44bf and fs3 == 0 and fe3 == 0x81 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e83d7ef; op2val:0x7c44bf;
op3val:0x408000ff; valaddr_reg:x3; val_offset:37260*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37260*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12421:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x03d7ef and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7c44bf and fs3 == 0 and fe3 == 0x81 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e83d7ef; op2val:0x7c44bf;
op3val:0x408001ff; valaddr_reg:x3; val_offset:37263*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37263*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12422:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x03d7ef and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7c44bf and fs3 == 0 and fe3 == 0x81 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e83d7ef; op2val:0x7c44bf;
op3val:0x408003ff; valaddr_reg:x3; val_offset:37266*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37266*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12423:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x03d7ef and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7c44bf and fs3 == 0 and fe3 == 0x81 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e83d7ef; op2val:0x7c44bf;
op3val:0x408007ff; valaddr_reg:x3; val_offset:37269*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37269*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12424:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x03d7ef and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7c44bf and fs3 == 0 and fe3 == 0x81 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e83d7ef; op2val:0x7c44bf;
op3val:0x40800fff; valaddr_reg:x3; val_offset:37272*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37272*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12425:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x03d7ef and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7c44bf and fs3 == 0 and fe3 == 0x81 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e83d7ef; op2val:0x7c44bf;
op3val:0x40801fff; valaddr_reg:x3; val_offset:37275*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37275*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12426:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x03d7ef and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7c44bf and fs3 == 0 and fe3 == 0x81 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e83d7ef; op2val:0x7c44bf;
op3val:0x40803fff; valaddr_reg:x3; val_offset:37278*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37278*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12427:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x03d7ef and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7c44bf and fs3 == 0 and fe3 == 0x81 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e83d7ef; op2val:0x7c44bf;
op3val:0x40807fff; valaddr_reg:x3; val_offset:37281*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37281*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12428:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x03d7ef and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7c44bf and fs3 == 0 and fe3 == 0x81 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e83d7ef; op2val:0x7c44bf;
op3val:0x4080ffff; valaddr_reg:x3; val_offset:37284*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37284*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12429:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x03d7ef and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7c44bf and fs3 == 0 and fe3 == 0x81 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e83d7ef; op2val:0x7c44bf;
op3val:0x4081ffff; valaddr_reg:x3; val_offset:37287*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37287*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12430:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x03d7ef and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7c44bf and fs3 == 0 and fe3 == 0x81 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e83d7ef; op2val:0x7c44bf;
op3val:0x4083ffff; valaddr_reg:x3; val_offset:37290*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37290*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12431:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x03d7ef and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7c44bf and fs3 == 0 and fe3 == 0x81 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e83d7ef; op2val:0x7c44bf;
op3val:0x4087ffff; valaddr_reg:x3; val_offset:37293*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37293*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12432:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x03d7ef and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7c44bf and fs3 == 0 and fe3 == 0x81 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e83d7ef; op2val:0x7c44bf;
op3val:0x408fffff; valaddr_reg:x3; val_offset:37296*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37296*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12433:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x03d7ef and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7c44bf and fs3 == 0 and fe3 == 0x81 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e83d7ef; op2val:0x7c44bf;
op3val:0x409fffff; valaddr_reg:x3; val_offset:37299*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37299*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12434:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x03d7ef and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7c44bf and fs3 == 0 and fe3 == 0x81 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e83d7ef; op2val:0x7c44bf;
op3val:0x40bfffff; valaddr_reg:x3; val_offset:37302*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37302*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12435:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x03d7ef and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7c44bf and fs3 == 0 and fe3 == 0x81 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e83d7ef; op2val:0x7c44bf;
op3val:0x40c00000; valaddr_reg:x3; val_offset:37305*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37305*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12436:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x03d7ef and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7c44bf and fs3 == 0 and fe3 == 0x81 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e83d7ef; op2val:0x7c44bf;
op3val:0x40e00000; valaddr_reg:x3; val_offset:37308*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37308*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12437:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x03d7ef and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7c44bf and fs3 == 0 and fe3 == 0x81 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e83d7ef; op2val:0x7c44bf;
op3val:0x40f00000; valaddr_reg:x3; val_offset:37311*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37311*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12438:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x03d7ef and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7c44bf and fs3 == 0 and fe3 == 0x81 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e83d7ef; op2val:0x7c44bf;
op3val:0x40f80000; valaddr_reg:x3; val_offset:37314*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37314*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12439:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x03d7ef and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7c44bf and fs3 == 0 and fe3 == 0x81 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e83d7ef; op2val:0x7c44bf;
op3val:0x40fc0000; valaddr_reg:x3; val_offset:37317*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37317*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12440:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x03d7ef and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7c44bf and fs3 == 0 and fe3 == 0x81 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e83d7ef; op2val:0x7c44bf;
op3val:0x40fe0000; valaddr_reg:x3; val_offset:37320*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37320*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12441:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x03d7ef and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7c44bf and fs3 == 0 and fe3 == 0x81 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e83d7ef; op2val:0x7c44bf;
op3val:0x40ff0000; valaddr_reg:x3; val_offset:37323*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37323*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12442:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x03d7ef and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7c44bf and fs3 == 0 and fe3 == 0x81 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e83d7ef; op2val:0x7c44bf;
op3val:0x40ff8000; valaddr_reg:x3; val_offset:37326*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37326*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12443:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x03d7ef and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7c44bf and fs3 == 0 and fe3 == 0x81 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e83d7ef; op2val:0x7c44bf;
op3val:0x40ffc000; valaddr_reg:x3; val_offset:37329*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37329*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12444:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x03d7ef and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7c44bf and fs3 == 0 and fe3 == 0x81 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e83d7ef; op2val:0x7c44bf;
op3val:0x40ffe000; valaddr_reg:x3; val_offset:37332*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37332*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12445:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x03d7ef and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7c44bf and fs3 == 0 and fe3 == 0x81 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e83d7ef; op2val:0x7c44bf;
op3val:0x40fff000; valaddr_reg:x3; val_offset:37335*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37335*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12446:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x03d7ef and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7c44bf and fs3 == 0 and fe3 == 0x81 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e83d7ef; op2val:0x7c44bf;
op3val:0x40fff800; valaddr_reg:x3; val_offset:37338*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37338*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12447:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x03d7ef and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7c44bf and fs3 == 0 and fe3 == 0x81 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e83d7ef; op2val:0x7c44bf;
op3val:0x40fffc00; valaddr_reg:x3; val_offset:37341*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37341*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12448:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x03d7ef and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7c44bf and fs3 == 0 and fe3 == 0x81 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e83d7ef; op2val:0x7c44bf;
op3val:0x40fffe00; valaddr_reg:x3; val_offset:37344*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37344*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12449:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x03d7ef and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7c44bf and fs3 == 0 and fe3 == 0x81 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e83d7ef; op2val:0x7c44bf;
op3val:0x40ffff00; valaddr_reg:x3; val_offset:37347*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37347*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12450:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x03d7ef and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7c44bf and fs3 == 0 and fe3 == 0x81 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e83d7ef; op2val:0x7c44bf;
op3val:0x40ffff80; valaddr_reg:x3; val_offset:37350*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37350*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12451:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x03d7ef and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7c44bf and fs3 == 0 and fe3 == 0x81 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e83d7ef; op2val:0x7c44bf;
op3val:0x40ffffc0; valaddr_reg:x3; val_offset:37353*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37353*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12452:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x03d7ef and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7c44bf and fs3 == 0 and fe3 == 0x81 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e83d7ef; op2val:0x7c44bf;
op3val:0x40ffffe0; valaddr_reg:x3; val_offset:37356*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37356*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12453:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x03d7ef and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7c44bf and fs3 == 0 and fe3 == 0x81 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e83d7ef; op2val:0x7c44bf;
op3val:0x40fffff0; valaddr_reg:x3; val_offset:37359*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37359*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12454:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x03d7ef and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7c44bf and fs3 == 0 and fe3 == 0x81 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e83d7ef; op2val:0x7c44bf;
op3val:0x40fffff8; valaddr_reg:x3; val_offset:37362*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37362*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12455:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x03d7ef and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7c44bf and fs3 == 0 and fe3 == 0x81 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e83d7ef; op2val:0x7c44bf;
op3val:0x40fffffc; valaddr_reg:x3; val_offset:37365*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37365*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12456:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x03d7ef and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7c44bf and fs3 == 0 and fe3 == 0x81 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e83d7ef; op2val:0x7c44bf;
op3val:0x40fffffe; valaddr_reg:x3; val_offset:37368*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37368*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12457:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x03d7ef and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7c44bf and fs3 == 0 and fe3 == 0x81 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e83d7ef; op2val:0x7c44bf;
op3val:0x40ffffff; valaddr_reg:x3; val_offset:37371*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37371*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12458:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x040775 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7c1804 and fs3 == 0 and fe3 == 0x48 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e840775; op2val:0x7c1804;
op3val:0x24000000; valaddr_reg:x3; val_offset:37374*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37374*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12459:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x040775 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7c1804 and fs3 == 0 and fe3 == 0x48 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e840775; op2val:0x7c1804;
op3val:0x24000001; valaddr_reg:x3; val_offset:37377*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37377*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12460:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x040775 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7c1804 and fs3 == 0 and fe3 == 0x48 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e840775; op2val:0x7c1804;
op3val:0x24000003; valaddr_reg:x3; val_offset:37380*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37380*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12461:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x040775 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7c1804 and fs3 == 0 and fe3 == 0x48 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e840775; op2val:0x7c1804;
op3val:0x24000007; valaddr_reg:x3; val_offset:37383*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37383*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12462:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x040775 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7c1804 and fs3 == 0 and fe3 == 0x48 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e840775; op2val:0x7c1804;
op3val:0x2400000f; valaddr_reg:x3; val_offset:37386*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37386*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12463:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x040775 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7c1804 and fs3 == 0 and fe3 == 0x48 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e840775; op2val:0x7c1804;
op3val:0x2400001f; valaddr_reg:x3; val_offset:37389*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37389*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12464:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x040775 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7c1804 and fs3 == 0 and fe3 == 0x48 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e840775; op2val:0x7c1804;
op3val:0x2400003f; valaddr_reg:x3; val_offset:37392*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37392*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12465:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x040775 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7c1804 and fs3 == 0 and fe3 == 0x48 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e840775; op2val:0x7c1804;
op3val:0x2400007f; valaddr_reg:x3; val_offset:37395*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37395*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12466:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x040775 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7c1804 and fs3 == 0 and fe3 == 0x48 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e840775; op2val:0x7c1804;
op3val:0x240000ff; valaddr_reg:x3; val_offset:37398*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37398*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12467:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x040775 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7c1804 and fs3 == 0 and fe3 == 0x48 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e840775; op2val:0x7c1804;
op3val:0x240001ff; valaddr_reg:x3; val_offset:37401*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37401*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12468:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x040775 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7c1804 and fs3 == 0 and fe3 == 0x48 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e840775; op2val:0x7c1804;
op3val:0x240003ff; valaddr_reg:x3; val_offset:37404*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37404*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12469:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x040775 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7c1804 and fs3 == 0 and fe3 == 0x48 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e840775; op2val:0x7c1804;
op3val:0x240007ff; valaddr_reg:x3; val_offset:37407*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37407*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12470:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x040775 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7c1804 and fs3 == 0 and fe3 == 0x48 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e840775; op2val:0x7c1804;
op3val:0x24000fff; valaddr_reg:x3; val_offset:37410*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37410*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12471:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x040775 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7c1804 and fs3 == 0 and fe3 == 0x48 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e840775; op2val:0x7c1804;
op3val:0x24001fff; valaddr_reg:x3; val_offset:37413*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37413*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12472:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x040775 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7c1804 and fs3 == 0 and fe3 == 0x48 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e840775; op2val:0x7c1804;
op3val:0x24003fff; valaddr_reg:x3; val_offset:37416*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37416*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12473:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x040775 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7c1804 and fs3 == 0 and fe3 == 0x48 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e840775; op2val:0x7c1804;
op3val:0x24007fff; valaddr_reg:x3; val_offset:37419*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37419*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12474:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x040775 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7c1804 and fs3 == 0 and fe3 == 0x48 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e840775; op2val:0x7c1804;
op3val:0x2400ffff; valaddr_reg:x3; val_offset:37422*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37422*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12475:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x040775 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7c1804 and fs3 == 0 and fe3 == 0x48 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e840775; op2val:0x7c1804;
op3val:0x2401ffff; valaddr_reg:x3; val_offset:37425*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37425*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12476:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x040775 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7c1804 and fs3 == 0 and fe3 == 0x48 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e840775; op2val:0x7c1804;
op3val:0x2403ffff; valaddr_reg:x3; val_offset:37428*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37428*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12477:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x040775 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7c1804 and fs3 == 0 and fe3 == 0x48 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e840775; op2val:0x7c1804;
op3val:0x2407ffff; valaddr_reg:x3; val_offset:37431*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37431*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12478:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x040775 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7c1804 and fs3 == 0 and fe3 == 0x48 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e840775; op2val:0x7c1804;
op3val:0x240fffff; valaddr_reg:x3; val_offset:37434*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37434*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12479:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x040775 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7c1804 and fs3 == 0 and fe3 == 0x48 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e840775; op2val:0x7c1804;
op3val:0x241fffff; valaddr_reg:x3; val_offset:37437*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37437*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12480:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x040775 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7c1804 and fs3 == 0 and fe3 == 0x48 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e840775; op2val:0x7c1804;
op3val:0x243fffff; valaddr_reg:x3; val_offset:37440*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37440*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12481:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x040775 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7c1804 and fs3 == 0 and fe3 == 0x48 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e840775; op2val:0x7c1804;
op3val:0x24400000; valaddr_reg:x3; val_offset:37443*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37443*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12482:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x040775 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7c1804 and fs3 == 0 and fe3 == 0x48 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e840775; op2val:0x7c1804;
op3val:0x24600000; valaddr_reg:x3; val_offset:37446*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37446*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12483:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x040775 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7c1804 and fs3 == 0 and fe3 == 0x48 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e840775; op2val:0x7c1804;
op3val:0x24700000; valaddr_reg:x3; val_offset:37449*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37449*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12484:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x040775 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7c1804 and fs3 == 0 and fe3 == 0x48 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e840775; op2val:0x7c1804;
op3val:0x24780000; valaddr_reg:x3; val_offset:37452*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37452*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12485:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x040775 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7c1804 and fs3 == 0 and fe3 == 0x48 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e840775; op2val:0x7c1804;
op3val:0x247c0000; valaddr_reg:x3; val_offset:37455*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37455*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12486:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x040775 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7c1804 and fs3 == 0 and fe3 == 0x48 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e840775; op2val:0x7c1804;
op3val:0x247e0000; valaddr_reg:x3; val_offset:37458*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37458*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12487:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x040775 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7c1804 and fs3 == 0 and fe3 == 0x48 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e840775; op2val:0x7c1804;
op3val:0x247f0000; valaddr_reg:x3; val_offset:37461*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37461*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12488:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x040775 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7c1804 and fs3 == 0 and fe3 == 0x48 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e840775; op2val:0x7c1804;
op3val:0x247f8000; valaddr_reg:x3; val_offset:37464*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37464*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12489:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x040775 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7c1804 and fs3 == 0 and fe3 == 0x48 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e840775; op2val:0x7c1804;
op3val:0x247fc000; valaddr_reg:x3; val_offset:37467*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37467*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12490:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x040775 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7c1804 and fs3 == 0 and fe3 == 0x48 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e840775; op2val:0x7c1804;
op3val:0x247fe000; valaddr_reg:x3; val_offset:37470*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37470*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12491:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x040775 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7c1804 and fs3 == 0 and fe3 == 0x48 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e840775; op2val:0x7c1804;
op3val:0x247ff000; valaddr_reg:x3; val_offset:37473*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37473*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12492:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x040775 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7c1804 and fs3 == 0 and fe3 == 0x48 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e840775; op2val:0x7c1804;
op3val:0x247ff800; valaddr_reg:x3; val_offset:37476*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37476*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12493:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x040775 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7c1804 and fs3 == 0 and fe3 == 0x48 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e840775; op2val:0x7c1804;
op3val:0x247ffc00; valaddr_reg:x3; val_offset:37479*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37479*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12494:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x040775 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7c1804 and fs3 == 0 and fe3 == 0x48 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e840775; op2val:0x7c1804;
op3val:0x247ffe00; valaddr_reg:x3; val_offset:37482*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37482*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12495:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x040775 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7c1804 and fs3 == 0 and fe3 == 0x48 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e840775; op2val:0x7c1804;
op3val:0x247fff00; valaddr_reg:x3; val_offset:37485*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37485*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12496:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x040775 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7c1804 and fs3 == 0 and fe3 == 0x48 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e840775; op2val:0x7c1804;
op3val:0x247fff80; valaddr_reg:x3; val_offset:37488*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37488*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12497:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x040775 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7c1804 and fs3 == 0 and fe3 == 0x48 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e840775; op2val:0x7c1804;
op3val:0x247fffc0; valaddr_reg:x3; val_offset:37491*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37491*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12498:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x040775 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7c1804 and fs3 == 0 and fe3 == 0x48 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e840775; op2val:0x7c1804;
op3val:0x247fffe0; valaddr_reg:x3; val_offset:37494*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37494*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12499:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x040775 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7c1804 and fs3 == 0 and fe3 == 0x48 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e840775; op2val:0x7c1804;
op3val:0x247ffff0; valaddr_reg:x3; val_offset:37497*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37497*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12500:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x040775 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7c1804 and fs3 == 0 and fe3 == 0x48 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e840775; op2val:0x7c1804;
op3val:0x247ffff8; valaddr_reg:x3; val_offset:37500*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37500*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12501:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x040775 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7c1804 and fs3 == 0 and fe3 == 0x48 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e840775; op2val:0x7c1804;
op3val:0x247ffffc; valaddr_reg:x3; val_offset:37503*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37503*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12502:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x040775 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7c1804 and fs3 == 0 and fe3 == 0x48 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e840775; op2val:0x7c1804;
op3val:0x247ffffe; valaddr_reg:x3; val_offset:37506*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37506*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12503:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x040775 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7c1804 and fs3 == 0 and fe3 == 0x48 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e840775; op2val:0x7c1804;
op3val:0x247fffff; valaddr_reg:x3; val_offset:37509*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37509*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12504:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x040775 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7c1804 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e840775; op2val:0x7c1804;
op3val:0x3f800001; valaddr_reg:x3; val_offset:37512*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37512*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12505:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x040775 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7c1804 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e840775; op2val:0x7c1804;
op3val:0x3f800003; valaddr_reg:x3; val_offset:37515*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37515*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12506:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x040775 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7c1804 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e840775; op2val:0x7c1804;
op3val:0x3f800007; valaddr_reg:x3; val_offset:37518*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37518*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12507:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x040775 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7c1804 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e840775; op2val:0x7c1804;
op3val:0x3f999999; valaddr_reg:x3; val_offset:37521*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37521*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12508:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x040775 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7c1804 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e840775; op2val:0x7c1804;
op3val:0x3fa49249; valaddr_reg:x3; val_offset:37524*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37524*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12509:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x040775 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7c1804 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e840775; op2val:0x7c1804;
op3val:0x3fb33333; valaddr_reg:x3; val_offset:37527*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37527*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12510:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x040775 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7c1804 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e840775; op2val:0x7c1804;
op3val:0x3fb6db6d; valaddr_reg:x3; val_offset:37530*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37530*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12511:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x040775 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7c1804 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e840775; op2val:0x7c1804;
op3val:0x3fbbbbbb; valaddr_reg:x3; val_offset:37533*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37533*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12512:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x040775 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7c1804 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e840775; op2val:0x7c1804;
op3val:0x3fc44444; valaddr_reg:x3; val_offset:37536*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37536*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12513:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x040775 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7c1804 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e840775; op2val:0x7c1804;
op3val:0x3fcccccc; valaddr_reg:x3; val_offset:37539*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37539*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12514:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x040775 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7c1804 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e840775; op2val:0x7c1804;
op3val:0x3fdb6db6; valaddr_reg:x3; val_offset:37542*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37542*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12515:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x040775 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7c1804 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e840775; op2val:0x7c1804;
op3val:0x3fe66666; valaddr_reg:x3; val_offset:37545*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37545*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12516:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x040775 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7c1804 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e840775; op2val:0x7c1804;
op3val:0x3fedb6db; valaddr_reg:x3; val_offset:37548*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37548*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12517:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x040775 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7c1804 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e840775; op2val:0x7c1804;
op3val:0x3ffffff8; valaddr_reg:x3; val_offset:37551*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37551*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12518:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x040775 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7c1804 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e840775; op2val:0x7c1804;
op3val:0x3ffffffc; valaddr_reg:x3; val_offset:37554*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37554*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12519:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x040775 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7c1804 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e840775; op2val:0x7c1804;
op3val:0x3ffffffe; valaddr_reg:x3; val_offset:37557*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37557*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12520:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x04bfbb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e84bfbb; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:37560*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37560*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12521:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x04bfbb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e84bfbb; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:37563*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37563*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12522:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x04bfbb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e84bfbb; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:37566*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37566*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12523:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x04bfbb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e84bfbb; op2val:0x0;
op3val:0x199999; valaddr_reg:x3; val_offset:37569*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37569*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12524:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x04bfbb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e84bfbb; op2val:0x0;
op3val:0x249249; valaddr_reg:x3; val_offset:37572*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37572*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12525:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x04bfbb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e84bfbb; op2val:0x0;
op3val:0x333333; valaddr_reg:x3; val_offset:37575*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37575*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12526:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x04bfbb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e84bfbb; op2val:0x0;
op3val:0x36db6d; valaddr_reg:x3; val_offset:37578*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37578*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12527:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x04bfbb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e84bfbb; op2val:0x0;
op3val:0x3bbbbb; valaddr_reg:x3; val_offset:37581*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37581*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12528:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x04bfbb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e84bfbb; op2val:0x0;
op3val:0x444444; valaddr_reg:x3; val_offset:37584*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37584*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12529:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x04bfbb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e84bfbb; op2val:0x0;
op3val:0x4ccccc; valaddr_reg:x3; val_offset:37587*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37587*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12530:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x04bfbb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e84bfbb; op2val:0x0;
op3val:0x5b6db6; valaddr_reg:x3; val_offset:37590*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37590*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12531:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x04bfbb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e84bfbb; op2val:0x0;
op3val:0x666666; valaddr_reg:x3; val_offset:37593*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37593*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12532:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x04bfbb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e84bfbb; op2val:0x0;
op3val:0x6db6db; valaddr_reg:x3; val_offset:37596*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37596*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12533:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x04bfbb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e84bfbb; op2val:0x0;
op3val:0x7ffff8; valaddr_reg:x3; val_offset:37599*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37599*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12534:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x04bfbb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e84bfbb; op2val:0x0;
op3val:0x7ffffc; valaddr_reg:x3; val_offset:37602*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37602*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12535:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x04bfbb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e84bfbb; op2val:0x0;
op3val:0x7ffffe; valaddr_reg:x3; val_offset:37605*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37605*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12536:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x04bfbb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e84bfbb; op2val:0x0;
op3val:0xe000000; valaddr_reg:x3; val_offset:37608*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37608*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12537:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x04bfbb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e84bfbb; op2val:0x0;
op3val:0xe000001; valaddr_reg:x3; val_offset:37611*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37611*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12538:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x04bfbb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e84bfbb; op2val:0x0;
op3val:0xe000003; valaddr_reg:x3; val_offset:37614*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37614*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12539:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x04bfbb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e84bfbb; op2val:0x0;
op3val:0xe000007; valaddr_reg:x3; val_offset:37617*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37617*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12540:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x04bfbb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e84bfbb; op2val:0x0;
op3val:0xe00000f; valaddr_reg:x3; val_offset:37620*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37620*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12541:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x04bfbb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e84bfbb; op2val:0x0;
op3val:0xe00001f; valaddr_reg:x3; val_offset:37623*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37623*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12542:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x04bfbb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e84bfbb; op2val:0x0;
op3val:0xe00003f; valaddr_reg:x3; val_offset:37626*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37626*0 + 3*97*FLEN/8, x4, x1, x2)

inst_12543:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x04bfbb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e84bfbb; op2val:0x0;
op3val:0xe00007f; valaddr_reg:x3; val_offset:37629*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 37629*0 + 3*97*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(2122569711,32,FLEN)
NAN_BOXED(8144063,32,FLEN)
NAN_BOXED(1082130447,32,FLEN)
NAN_BOXED(2122569711,32,FLEN)
NAN_BOXED(8144063,32,FLEN)
NAN_BOXED(1082130463,32,FLEN)
NAN_BOXED(2122569711,32,FLEN)
NAN_BOXED(8144063,32,FLEN)
NAN_BOXED(1082130495,32,FLEN)
NAN_BOXED(2122569711,32,FLEN)
NAN_BOXED(8144063,32,FLEN)
NAN_BOXED(1082130559,32,FLEN)
NAN_BOXED(2122569711,32,FLEN)
NAN_BOXED(8144063,32,FLEN)
NAN_BOXED(1082130687,32,FLEN)
NAN_BOXED(2122569711,32,FLEN)
NAN_BOXED(8144063,32,FLEN)
NAN_BOXED(1082130943,32,FLEN)
NAN_BOXED(2122569711,32,FLEN)
NAN_BOXED(8144063,32,FLEN)
NAN_BOXED(1082131455,32,FLEN)
NAN_BOXED(2122569711,32,FLEN)
NAN_BOXED(8144063,32,FLEN)
NAN_BOXED(1082132479,32,FLEN)
NAN_BOXED(2122569711,32,FLEN)
NAN_BOXED(8144063,32,FLEN)
NAN_BOXED(1082134527,32,FLEN)
NAN_BOXED(2122569711,32,FLEN)
NAN_BOXED(8144063,32,FLEN)
NAN_BOXED(1082138623,32,FLEN)
NAN_BOXED(2122569711,32,FLEN)
NAN_BOXED(8144063,32,FLEN)
NAN_BOXED(1082146815,32,FLEN)
NAN_BOXED(2122569711,32,FLEN)
NAN_BOXED(8144063,32,FLEN)
NAN_BOXED(1082163199,32,FLEN)
NAN_BOXED(2122569711,32,FLEN)
NAN_BOXED(8144063,32,FLEN)
NAN_BOXED(1082195967,32,FLEN)
NAN_BOXED(2122569711,32,FLEN)
NAN_BOXED(8144063,32,FLEN)
NAN_BOXED(1082261503,32,FLEN)
NAN_BOXED(2122569711,32,FLEN)
NAN_BOXED(8144063,32,FLEN)
NAN_BOXED(1082392575,32,FLEN)
NAN_BOXED(2122569711,32,FLEN)
NAN_BOXED(8144063,32,FLEN)
NAN_BOXED(1082654719,32,FLEN)
NAN_BOXED(2122569711,32,FLEN)
NAN_BOXED(8144063,32,FLEN)
NAN_BOXED(1083179007,32,FLEN)
NAN_BOXED(2122569711,32,FLEN)
NAN_BOXED(8144063,32,FLEN)
NAN_BOXED(1084227583,32,FLEN)
NAN_BOXED(2122569711,32,FLEN)
NAN_BOXED(8144063,32,FLEN)
NAN_BOXED(1086324735,32,FLEN)
NAN_BOXED(2122569711,32,FLEN)
NAN_BOXED(8144063,32,FLEN)
NAN_BOXED(1086324736,32,FLEN)
NAN_BOXED(2122569711,32,FLEN)
NAN_BOXED(8144063,32,FLEN)
NAN_BOXED(1088421888,32,FLEN)
NAN_BOXED(2122569711,32,FLEN)
NAN_BOXED(8144063,32,FLEN)
NAN_BOXED(1089470464,32,FLEN)
NAN_BOXED(2122569711,32,FLEN)
NAN_BOXED(8144063,32,FLEN)
NAN_BOXED(1089994752,32,FLEN)
NAN_BOXED(2122569711,32,FLEN)
NAN_BOXED(8144063,32,FLEN)
NAN_BOXED(1090256896,32,FLEN)
NAN_BOXED(2122569711,32,FLEN)
NAN_BOXED(8144063,32,FLEN)
NAN_BOXED(1090387968,32,FLEN)
NAN_BOXED(2122569711,32,FLEN)
NAN_BOXED(8144063,32,FLEN)
NAN_BOXED(1090453504,32,FLEN)
NAN_BOXED(2122569711,32,FLEN)
NAN_BOXED(8144063,32,FLEN)
NAN_BOXED(1090486272,32,FLEN)
NAN_BOXED(2122569711,32,FLEN)
NAN_BOXED(8144063,32,FLEN)
NAN_BOXED(1090502656,32,FLEN)
NAN_BOXED(2122569711,32,FLEN)
NAN_BOXED(8144063,32,FLEN)
NAN_BOXED(1090510848,32,FLEN)
NAN_BOXED(2122569711,32,FLEN)
NAN_BOXED(8144063,32,FLEN)
NAN_BOXED(1090514944,32,FLEN)
NAN_BOXED(2122569711,32,FLEN)
NAN_BOXED(8144063,32,FLEN)
NAN_BOXED(1090516992,32,FLEN)
NAN_BOXED(2122569711,32,FLEN)
NAN_BOXED(8144063,32,FLEN)
NAN_BOXED(1090518016,32,FLEN)
NAN_BOXED(2122569711,32,FLEN)
NAN_BOXED(8144063,32,FLEN)
NAN_BOXED(1090518528,32,FLEN)
NAN_BOXED(2122569711,32,FLEN)
NAN_BOXED(8144063,32,FLEN)
NAN_BOXED(1090518784,32,FLEN)
NAN_BOXED(2122569711,32,FLEN)
NAN_BOXED(8144063,32,FLEN)
NAN_BOXED(1090518912,32,FLEN)
NAN_BOXED(2122569711,32,FLEN)
NAN_BOXED(8144063,32,FLEN)
NAN_BOXED(1090518976,32,FLEN)
NAN_BOXED(2122569711,32,FLEN)
NAN_BOXED(8144063,32,FLEN)
NAN_BOXED(1090519008,32,FLEN)
NAN_BOXED(2122569711,32,FLEN)
NAN_BOXED(8144063,32,FLEN)
NAN_BOXED(1090519024,32,FLEN)
NAN_BOXED(2122569711,32,FLEN)
NAN_BOXED(8144063,32,FLEN)
NAN_BOXED(1090519032,32,FLEN)
NAN_BOXED(2122569711,32,FLEN)
NAN_BOXED(8144063,32,FLEN)
NAN_BOXED(1090519036,32,FLEN)
NAN_BOXED(2122569711,32,FLEN)
NAN_BOXED(8144063,32,FLEN)
NAN_BOXED(1090519038,32,FLEN)
NAN_BOXED(2122569711,32,FLEN)
NAN_BOXED(8144063,32,FLEN)
NAN_BOXED(1090519039,32,FLEN)
NAN_BOXED(2122581877,32,FLEN)
NAN_BOXED(8132612,32,FLEN)
NAN_BOXED(603979776,32,FLEN)
NAN_BOXED(2122581877,32,FLEN)
NAN_BOXED(8132612,32,FLEN)
NAN_BOXED(603979777,32,FLEN)
NAN_BOXED(2122581877,32,FLEN)
NAN_BOXED(8132612,32,FLEN)
NAN_BOXED(603979779,32,FLEN)
NAN_BOXED(2122581877,32,FLEN)
NAN_BOXED(8132612,32,FLEN)
NAN_BOXED(603979783,32,FLEN)
NAN_BOXED(2122581877,32,FLEN)
NAN_BOXED(8132612,32,FLEN)
NAN_BOXED(603979791,32,FLEN)
NAN_BOXED(2122581877,32,FLEN)
NAN_BOXED(8132612,32,FLEN)
NAN_BOXED(603979807,32,FLEN)
NAN_BOXED(2122581877,32,FLEN)
NAN_BOXED(8132612,32,FLEN)
NAN_BOXED(603979839,32,FLEN)
NAN_BOXED(2122581877,32,FLEN)
NAN_BOXED(8132612,32,FLEN)
NAN_BOXED(603979903,32,FLEN)
NAN_BOXED(2122581877,32,FLEN)
NAN_BOXED(8132612,32,FLEN)
NAN_BOXED(603980031,32,FLEN)
NAN_BOXED(2122581877,32,FLEN)
NAN_BOXED(8132612,32,FLEN)
NAN_BOXED(603980287,32,FLEN)
NAN_BOXED(2122581877,32,FLEN)
NAN_BOXED(8132612,32,FLEN)
NAN_BOXED(603980799,32,FLEN)
NAN_BOXED(2122581877,32,FLEN)
NAN_BOXED(8132612,32,FLEN)
NAN_BOXED(603981823,32,FLEN)
NAN_BOXED(2122581877,32,FLEN)
NAN_BOXED(8132612,32,FLEN)
NAN_BOXED(603983871,32,FLEN)
NAN_BOXED(2122581877,32,FLEN)
NAN_BOXED(8132612,32,FLEN)
NAN_BOXED(603987967,32,FLEN)
NAN_BOXED(2122581877,32,FLEN)
NAN_BOXED(8132612,32,FLEN)
NAN_BOXED(603996159,32,FLEN)
NAN_BOXED(2122581877,32,FLEN)
NAN_BOXED(8132612,32,FLEN)
NAN_BOXED(604012543,32,FLEN)
NAN_BOXED(2122581877,32,FLEN)
NAN_BOXED(8132612,32,FLEN)
NAN_BOXED(604045311,32,FLEN)
NAN_BOXED(2122581877,32,FLEN)
NAN_BOXED(8132612,32,FLEN)
NAN_BOXED(604110847,32,FLEN)
NAN_BOXED(2122581877,32,FLEN)
NAN_BOXED(8132612,32,FLEN)
NAN_BOXED(604241919,32,FLEN)
NAN_BOXED(2122581877,32,FLEN)
NAN_BOXED(8132612,32,FLEN)
NAN_BOXED(604504063,32,FLEN)
NAN_BOXED(2122581877,32,FLEN)
NAN_BOXED(8132612,32,FLEN)
NAN_BOXED(605028351,32,FLEN)
NAN_BOXED(2122581877,32,FLEN)
NAN_BOXED(8132612,32,FLEN)
NAN_BOXED(606076927,32,FLEN)
NAN_BOXED(2122581877,32,FLEN)
NAN_BOXED(8132612,32,FLEN)
NAN_BOXED(608174079,32,FLEN)
NAN_BOXED(2122581877,32,FLEN)
NAN_BOXED(8132612,32,FLEN)
NAN_BOXED(608174080,32,FLEN)
NAN_BOXED(2122581877,32,FLEN)
NAN_BOXED(8132612,32,FLEN)
NAN_BOXED(610271232,32,FLEN)
NAN_BOXED(2122581877,32,FLEN)
NAN_BOXED(8132612,32,FLEN)
NAN_BOXED(611319808,32,FLEN)
NAN_BOXED(2122581877,32,FLEN)
NAN_BOXED(8132612,32,FLEN)
NAN_BOXED(611844096,32,FLEN)
NAN_BOXED(2122581877,32,FLEN)
NAN_BOXED(8132612,32,FLEN)
NAN_BOXED(612106240,32,FLEN)
NAN_BOXED(2122581877,32,FLEN)
NAN_BOXED(8132612,32,FLEN)
NAN_BOXED(612237312,32,FLEN)
NAN_BOXED(2122581877,32,FLEN)
NAN_BOXED(8132612,32,FLEN)
NAN_BOXED(612302848,32,FLEN)
NAN_BOXED(2122581877,32,FLEN)
NAN_BOXED(8132612,32,FLEN)
NAN_BOXED(612335616,32,FLEN)
NAN_BOXED(2122581877,32,FLEN)
NAN_BOXED(8132612,32,FLEN)
NAN_BOXED(612352000,32,FLEN)
NAN_BOXED(2122581877,32,FLEN)
NAN_BOXED(8132612,32,FLEN)
NAN_BOXED(612360192,32,FLEN)
NAN_BOXED(2122581877,32,FLEN)
NAN_BOXED(8132612,32,FLEN)
NAN_BOXED(612364288,32,FLEN)
NAN_BOXED(2122581877,32,FLEN)
NAN_BOXED(8132612,32,FLEN)
NAN_BOXED(612366336,32,FLEN)
NAN_BOXED(2122581877,32,FLEN)
NAN_BOXED(8132612,32,FLEN)
NAN_BOXED(612367360,32,FLEN)
NAN_BOXED(2122581877,32,FLEN)
NAN_BOXED(8132612,32,FLEN)
NAN_BOXED(612367872,32,FLEN)
NAN_BOXED(2122581877,32,FLEN)
NAN_BOXED(8132612,32,FLEN)
NAN_BOXED(612368128,32,FLEN)
NAN_BOXED(2122581877,32,FLEN)
NAN_BOXED(8132612,32,FLEN)
NAN_BOXED(612368256,32,FLEN)
NAN_BOXED(2122581877,32,FLEN)
NAN_BOXED(8132612,32,FLEN)
NAN_BOXED(612368320,32,FLEN)
NAN_BOXED(2122581877,32,FLEN)
NAN_BOXED(8132612,32,FLEN)
NAN_BOXED(612368352,32,FLEN)
NAN_BOXED(2122581877,32,FLEN)
NAN_BOXED(8132612,32,FLEN)
NAN_BOXED(612368368,32,FLEN)
NAN_BOXED(2122581877,32,FLEN)
NAN_BOXED(8132612,32,FLEN)
NAN_BOXED(612368376,32,FLEN)
NAN_BOXED(2122581877,32,FLEN)
NAN_BOXED(8132612,32,FLEN)
NAN_BOXED(612368380,32,FLEN)
NAN_BOXED(2122581877,32,FLEN)
NAN_BOXED(8132612,32,FLEN)
NAN_BOXED(612368382,32,FLEN)
NAN_BOXED(2122581877,32,FLEN)
NAN_BOXED(8132612,32,FLEN)
NAN_BOXED(612368383,32,FLEN)
NAN_BOXED(2122581877,32,FLEN)
NAN_BOXED(8132612,32,FLEN)
NAN_BOXED(1065353217,32,FLEN)
NAN_BOXED(2122581877,32,FLEN)
NAN_BOXED(8132612,32,FLEN)
NAN_BOXED(1065353219,32,FLEN)
NAN_BOXED(2122581877,32,FLEN)
NAN_BOXED(8132612,32,FLEN)
NAN_BOXED(1065353223,32,FLEN)
NAN_BOXED(2122581877,32,FLEN)
NAN_BOXED(8132612,32,FLEN)
NAN_BOXED(1067030937,32,FLEN)
NAN_BOXED(2122581877,32,FLEN)
NAN_BOXED(8132612,32,FLEN)
NAN_BOXED(1067749961,32,FLEN)
NAN_BOXED(2122581877,32,FLEN)
NAN_BOXED(8132612,32,FLEN)
NAN_BOXED(1068708659,32,FLEN)
NAN_BOXED(2122581877,32,FLEN)
NAN_BOXED(8132612,32,FLEN)
NAN_BOXED(1068948333,32,FLEN)
NAN_BOXED(2122581877,32,FLEN)
NAN_BOXED(8132612,32,FLEN)
NAN_BOXED(1069267899,32,FLEN)
NAN_BOXED(2122581877,32,FLEN)
NAN_BOXED(8132612,32,FLEN)
NAN_BOXED(1069827140,32,FLEN)
NAN_BOXED(2122581877,32,FLEN)
NAN_BOXED(8132612,32,FLEN)
NAN_BOXED(1070386380,32,FLEN)
NAN_BOXED(2122581877,32,FLEN)
NAN_BOXED(8132612,32,FLEN)
NAN_BOXED(1071345078,32,FLEN)
NAN_BOXED(2122581877,32,FLEN)
NAN_BOXED(8132612,32,FLEN)
NAN_BOXED(1072064102,32,FLEN)
NAN_BOXED(2122581877,32,FLEN)
NAN_BOXED(8132612,32,FLEN)
NAN_BOXED(1072543451,32,FLEN)
NAN_BOXED(2122581877,32,FLEN)
NAN_BOXED(8132612,32,FLEN)
NAN_BOXED(1073741816,32,FLEN)
NAN_BOXED(2122581877,32,FLEN)
NAN_BOXED(8132612,32,FLEN)
NAN_BOXED(1073741820,32,FLEN)
NAN_BOXED(2122581877,32,FLEN)
NAN_BOXED(8132612,32,FLEN)
NAN_BOXED(1073741822,32,FLEN)
NAN_BOXED(2122629051,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(2122629051,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3,32,FLEN)
NAN_BOXED(2122629051,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7,32,FLEN)
NAN_BOXED(2122629051,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1677721,32,FLEN)
NAN_BOXED(2122629051,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2396745,32,FLEN)
NAN_BOXED(2122629051,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3355443,32,FLEN)
NAN_BOXED(2122629051,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3595117,32,FLEN)
NAN_BOXED(2122629051,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3914683,32,FLEN)
NAN_BOXED(2122629051,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(4473924,32,FLEN)
NAN_BOXED(2122629051,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5033164,32,FLEN)
NAN_BOXED(2122629051,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5991862,32,FLEN)
NAN_BOXED(2122629051,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(6710886,32,FLEN)
NAN_BOXED(2122629051,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7190235,32,FLEN)
NAN_BOXED(2122629051,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388600,32,FLEN)
NAN_BOXED(2122629051,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388604,32,FLEN)
NAN_BOXED(2122629051,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388606,32,FLEN)
NAN_BOXED(2122629051,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(234881024,32,FLEN)
NAN_BOXED(2122629051,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(234881025,32,FLEN)
NAN_BOXED(2122629051,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(234881027,32,FLEN)
NAN_BOXED(2122629051,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(234881031,32,FLEN)
NAN_BOXED(2122629051,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(234881039,32,FLEN)
NAN_BOXED(2122629051,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(234881055,32,FLEN)
NAN_BOXED(2122629051,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(234881087,32,FLEN)
NAN_BOXED(2122629051,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(234881151,32,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
