
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 14:18:08 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32F/fnmsub.s.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmsub.s instruction of the RISC-V RV32F_Zicsr,RV32FD_Zicsr,RV64F_Zicsr,RV64FD_Zicsr extension for the fnmsub_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF_Zicsr,RV32IFD_Zicsr,RV64IF_Zicsr,RV64IFD_Zicsr,RV32EF_Zicsr,RV32EFD_Zicsr,RV64EF_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fnmsub_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*F.*);def TEST_CASE_1=True;",fnmsub_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_896:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1cc6f3 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x510291 and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9cc6f3; op2val:0x42510291;
op3val:0x7bfe0000; valaddr_reg:x3; val_offset:2688*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2688*0 + 3*7*FLEN/8, x4, x1, x2)

inst_897:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1cc6f3 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x510291 and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9cc6f3; op2val:0x42510291;
op3val:0x7bff0000; valaddr_reg:x3; val_offset:2691*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2691*0 + 3*7*FLEN/8, x4, x1, x2)

inst_898:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1cc6f3 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x510291 and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9cc6f3; op2val:0x42510291;
op3val:0x7bff8000; valaddr_reg:x3; val_offset:2694*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2694*0 + 3*7*FLEN/8, x4, x1, x2)

inst_899:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1cc6f3 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x510291 and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9cc6f3; op2val:0x42510291;
op3val:0x7bffc000; valaddr_reg:x3; val_offset:2697*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2697*0 + 3*7*FLEN/8, x4, x1, x2)

inst_900:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1cc6f3 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x510291 and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9cc6f3; op2val:0x42510291;
op3val:0x7bffe000; valaddr_reg:x3; val_offset:2700*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2700*0 + 3*7*FLEN/8, x4, x1, x2)

inst_901:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1cc6f3 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x510291 and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9cc6f3; op2val:0x42510291;
op3val:0x7bfff000; valaddr_reg:x3; val_offset:2703*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2703*0 + 3*7*FLEN/8, x4, x1, x2)

inst_902:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1cc6f3 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x510291 and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9cc6f3; op2val:0x42510291;
op3val:0x7bfff800; valaddr_reg:x3; val_offset:2706*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2706*0 + 3*7*FLEN/8, x4, x1, x2)

inst_903:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1cc6f3 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x510291 and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9cc6f3; op2val:0x42510291;
op3val:0x7bfffc00; valaddr_reg:x3; val_offset:2709*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2709*0 + 3*7*FLEN/8, x4, x1, x2)

inst_904:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1cc6f3 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x510291 and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9cc6f3; op2val:0x42510291;
op3val:0x7bfffe00; valaddr_reg:x3; val_offset:2712*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2712*0 + 3*7*FLEN/8, x4, x1, x2)

inst_905:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1cc6f3 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x510291 and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9cc6f3; op2val:0x42510291;
op3val:0x7bffff00; valaddr_reg:x3; val_offset:2715*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2715*0 + 3*7*FLEN/8, x4, x1, x2)

inst_906:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1cc6f3 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x510291 and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9cc6f3; op2val:0x42510291;
op3val:0x7bffff80; valaddr_reg:x3; val_offset:2718*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2718*0 + 3*7*FLEN/8, x4, x1, x2)

inst_907:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1cc6f3 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x510291 and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9cc6f3; op2val:0x42510291;
op3val:0x7bffffc0; valaddr_reg:x3; val_offset:2721*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2721*0 + 3*7*FLEN/8, x4, x1, x2)

inst_908:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1cc6f3 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x510291 and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9cc6f3; op2val:0x42510291;
op3val:0x7bffffe0; valaddr_reg:x3; val_offset:2724*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2724*0 + 3*7*FLEN/8, x4, x1, x2)

inst_909:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1cc6f3 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x510291 and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9cc6f3; op2val:0x42510291;
op3val:0x7bfffff0; valaddr_reg:x3; val_offset:2727*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2727*0 + 3*7*FLEN/8, x4, x1, x2)

inst_910:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1cc6f3 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x510291 and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9cc6f3; op2val:0x42510291;
op3val:0x7bfffff8; valaddr_reg:x3; val_offset:2730*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2730*0 + 3*7*FLEN/8, x4, x1, x2)

inst_911:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1cc6f3 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x510291 and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9cc6f3; op2val:0x42510291;
op3val:0x7bfffffc; valaddr_reg:x3; val_offset:2733*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2733*0 + 3*7*FLEN/8, x4, x1, x2)

inst_912:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1cc6f3 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x510291 and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9cc6f3; op2val:0x42510291;
op3val:0x7bfffffe; valaddr_reg:x3; val_offset:2736*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2736*0 + 3*7*FLEN/8, x4, x1, x2)

inst_913:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1cc6f3 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x510291 and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9cc6f3; op2val:0x42510291;
op3val:0x7bffffff; valaddr_reg:x3; val_offset:2739*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2739*0 + 3*7*FLEN/8, x4, x1, x2)

inst_914:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1cc6f3 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x510291 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9cc6f3; op2val:0x42510291;
op3val:0x7f000001; valaddr_reg:x3; val_offset:2742*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2742*0 + 3*7*FLEN/8, x4, x1, x2)

inst_915:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1cc6f3 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x510291 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9cc6f3; op2val:0x42510291;
op3val:0x7f000003; valaddr_reg:x3; val_offset:2745*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2745*0 + 3*7*FLEN/8, x4, x1, x2)

inst_916:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1cc6f3 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x510291 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9cc6f3; op2val:0x42510291;
op3val:0x7f000007; valaddr_reg:x3; val_offset:2748*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2748*0 + 3*7*FLEN/8, x4, x1, x2)

inst_917:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1cc6f3 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x510291 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9cc6f3; op2val:0x42510291;
op3val:0x7f199999; valaddr_reg:x3; val_offset:2751*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2751*0 + 3*7*FLEN/8, x4, x1, x2)

inst_918:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1cc6f3 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x510291 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9cc6f3; op2val:0x42510291;
op3val:0x7f249249; valaddr_reg:x3; val_offset:2754*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2754*0 + 3*7*FLEN/8, x4, x1, x2)

inst_919:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1cc6f3 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x510291 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9cc6f3; op2val:0x42510291;
op3val:0x7f333333; valaddr_reg:x3; val_offset:2757*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2757*0 + 3*7*FLEN/8, x4, x1, x2)

inst_920:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1cc6f3 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x510291 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9cc6f3; op2val:0x42510291;
op3val:0x7f36db6d; valaddr_reg:x3; val_offset:2760*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2760*0 + 3*7*FLEN/8, x4, x1, x2)

inst_921:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1cc6f3 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x510291 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9cc6f3; op2val:0x42510291;
op3val:0x7f3bbbbb; valaddr_reg:x3; val_offset:2763*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2763*0 + 3*7*FLEN/8, x4, x1, x2)

inst_922:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1cc6f3 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x510291 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9cc6f3; op2val:0x42510291;
op3val:0x7f444444; valaddr_reg:x3; val_offset:2766*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2766*0 + 3*7*FLEN/8, x4, x1, x2)

inst_923:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1cc6f3 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x510291 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9cc6f3; op2val:0x42510291;
op3val:0x7f4ccccc; valaddr_reg:x3; val_offset:2769*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2769*0 + 3*7*FLEN/8, x4, x1, x2)

inst_924:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1cc6f3 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x510291 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9cc6f3; op2val:0x42510291;
op3val:0x7f5b6db6; valaddr_reg:x3; val_offset:2772*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2772*0 + 3*7*FLEN/8, x4, x1, x2)

inst_925:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1cc6f3 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x510291 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9cc6f3; op2val:0x42510291;
op3val:0x7f666666; valaddr_reg:x3; val_offset:2775*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2775*0 + 3*7*FLEN/8, x4, x1, x2)

inst_926:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1cc6f3 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x510291 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9cc6f3; op2val:0x42510291;
op3val:0x7f6db6db; valaddr_reg:x3; val_offset:2778*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2778*0 + 3*7*FLEN/8, x4, x1, x2)

inst_927:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1cc6f3 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x510291 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9cc6f3; op2val:0x42510291;
op3val:0x7f7ffff8; valaddr_reg:x3; val_offset:2781*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2781*0 + 3*7*FLEN/8, x4, x1, x2)

inst_928:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1cc6f3 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x510291 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9cc6f3; op2val:0x42510291;
op3val:0x7f7ffffc; valaddr_reg:x3; val_offset:2784*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2784*0 + 3*7*FLEN/8, x4, x1, x2)

inst_929:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1cc6f3 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x510291 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9cc6f3; op2val:0x42510291;
op3val:0x7f7ffffe; valaddr_reg:x3; val_offset:2787*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2787*0 + 3*7*FLEN/8, x4, x1, x2)

inst_930:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xf4 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xfa000000; valaddr_reg:x3; val_offset:2790*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2790*0 + 3*7*FLEN/8, x4, x1, x2)

inst_931:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xf4 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xfa000001; valaddr_reg:x3; val_offset:2793*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2793*0 + 3*7*FLEN/8, x4, x1, x2)

inst_932:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xf4 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xfa000003; valaddr_reg:x3; val_offset:2796*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2796*0 + 3*7*FLEN/8, x4, x1, x2)

inst_933:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xf4 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xfa000007; valaddr_reg:x3; val_offset:2799*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2799*0 + 3*7*FLEN/8, x4, x1, x2)

inst_934:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xf4 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xfa00000f; valaddr_reg:x3; val_offset:2802*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2802*0 + 3*7*FLEN/8, x4, x1, x2)

inst_935:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xf4 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xfa00001f; valaddr_reg:x3; val_offset:2805*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2805*0 + 3*7*FLEN/8, x4, x1, x2)

inst_936:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xf4 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xfa00003f; valaddr_reg:x3; val_offset:2808*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2808*0 + 3*7*FLEN/8, x4, x1, x2)

inst_937:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xf4 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xfa00007f; valaddr_reg:x3; val_offset:2811*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2811*0 + 3*7*FLEN/8, x4, x1, x2)

inst_938:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xf4 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xfa0000ff; valaddr_reg:x3; val_offset:2814*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2814*0 + 3*7*FLEN/8, x4, x1, x2)

inst_939:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xf4 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xfa0001ff; valaddr_reg:x3; val_offset:2817*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2817*0 + 3*7*FLEN/8, x4, x1, x2)

inst_940:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xf4 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xfa0003ff; valaddr_reg:x3; val_offset:2820*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2820*0 + 3*7*FLEN/8, x4, x1, x2)

inst_941:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xf4 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xfa0007ff; valaddr_reg:x3; val_offset:2823*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2823*0 + 3*7*FLEN/8, x4, x1, x2)

inst_942:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xf4 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xfa000fff; valaddr_reg:x3; val_offset:2826*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2826*0 + 3*7*FLEN/8, x4, x1, x2)

inst_943:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xf4 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xfa001fff; valaddr_reg:x3; val_offset:2829*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2829*0 + 3*7*FLEN/8, x4, x1, x2)

inst_944:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xf4 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xfa003fff; valaddr_reg:x3; val_offset:2832*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2832*0 + 3*7*FLEN/8, x4, x1, x2)

inst_945:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xf4 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xfa007fff; valaddr_reg:x3; val_offset:2835*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2835*0 + 3*7*FLEN/8, x4, x1, x2)

inst_946:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xf4 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xfa00ffff; valaddr_reg:x3; val_offset:2838*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2838*0 + 3*7*FLEN/8, x4, x1, x2)

inst_947:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xf4 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xfa01ffff; valaddr_reg:x3; val_offset:2841*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2841*0 + 3*7*FLEN/8, x4, x1, x2)

inst_948:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xf4 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xfa03ffff; valaddr_reg:x3; val_offset:2844*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2844*0 + 3*7*FLEN/8, x4, x1, x2)

inst_949:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xf4 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xfa07ffff; valaddr_reg:x3; val_offset:2847*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2847*0 + 3*7*FLEN/8, x4, x1, x2)

inst_950:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xf4 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xfa0fffff; valaddr_reg:x3; val_offset:2850*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2850*0 + 3*7*FLEN/8, x4, x1, x2)

inst_951:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xf4 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xfa1fffff; valaddr_reg:x3; val_offset:2853*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2853*0 + 3*7*FLEN/8, x4, x1, x2)

inst_952:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xf4 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xfa3fffff; valaddr_reg:x3; val_offset:2856*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2856*0 + 3*7*FLEN/8, x4, x1, x2)

inst_953:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xf4 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xfa400000; valaddr_reg:x3; val_offset:2859*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2859*0 + 3*7*FLEN/8, x4, x1, x2)

inst_954:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xf4 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xfa600000; valaddr_reg:x3; val_offset:2862*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2862*0 + 3*7*FLEN/8, x4, x1, x2)

inst_955:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xf4 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xfa700000; valaddr_reg:x3; val_offset:2865*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2865*0 + 3*7*FLEN/8, x4, x1, x2)

inst_956:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xf4 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xfa780000; valaddr_reg:x3; val_offset:2868*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2868*0 + 3*7*FLEN/8, x4, x1, x2)

inst_957:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xf4 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xfa7c0000; valaddr_reg:x3; val_offset:2871*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2871*0 + 3*7*FLEN/8, x4, x1, x2)

inst_958:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xf4 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xfa7e0000; valaddr_reg:x3; val_offset:2874*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2874*0 + 3*7*FLEN/8, x4, x1, x2)

inst_959:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xf4 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xfa7f0000; valaddr_reg:x3; val_offset:2877*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2877*0 + 3*7*FLEN/8, x4, x1, x2)

inst_960:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xf4 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xfa7f8000; valaddr_reg:x3; val_offset:2880*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2880*0 + 3*7*FLEN/8, x4, x1, x2)

inst_961:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xf4 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xfa7fc000; valaddr_reg:x3; val_offset:2883*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2883*0 + 3*7*FLEN/8, x4, x1, x2)

inst_962:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xf4 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xfa7fe000; valaddr_reg:x3; val_offset:2886*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2886*0 + 3*7*FLEN/8, x4, x1, x2)

inst_963:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xf4 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xfa7ff000; valaddr_reg:x3; val_offset:2889*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2889*0 + 3*7*FLEN/8, x4, x1, x2)

inst_964:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xf4 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xfa7ff800; valaddr_reg:x3; val_offset:2892*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2892*0 + 3*7*FLEN/8, x4, x1, x2)

inst_965:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xf4 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xfa7ffc00; valaddr_reg:x3; val_offset:2895*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2895*0 + 3*7*FLEN/8, x4, x1, x2)

inst_966:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xf4 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xfa7ffe00; valaddr_reg:x3; val_offset:2898*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2898*0 + 3*7*FLEN/8, x4, x1, x2)

inst_967:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xf4 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xfa7fff00; valaddr_reg:x3; val_offset:2901*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2901*0 + 3*7*FLEN/8, x4, x1, x2)

inst_968:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xf4 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xfa7fff80; valaddr_reg:x3; val_offset:2904*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2904*0 + 3*7*FLEN/8, x4, x1, x2)

inst_969:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xf4 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xfa7fffc0; valaddr_reg:x3; val_offset:2907*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2907*0 + 3*7*FLEN/8, x4, x1, x2)

inst_970:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xf4 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xfa7fffe0; valaddr_reg:x3; val_offset:2910*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2910*0 + 3*7*FLEN/8, x4, x1, x2)

inst_971:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xf4 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xfa7ffff0; valaddr_reg:x3; val_offset:2913*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2913*0 + 3*7*FLEN/8, x4, x1, x2)

inst_972:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xf4 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xfa7ffff8; valaddr_reg:x3; val_offset:2916*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2916*0 + 3*7*FLEN/8, x4, x1, x2)

inst_973:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xf4 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xfa7ffffc; valaddr_reg:x3; val_offset:2919*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2919*0 + 3*7*FLEN/8, x4, x1, x2)

inst_974:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xf4 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xfa7ffffe; valaddr_reg:x3; val_offset:2922*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2922*0 + 3*7*FLEN/8, x4, x1, x2)

inst_975:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xf4 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xfa7fffff; valaddr_reg:x3; val_offset:2925*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2925*0 + 3*7*FLEN/8, x4, x1, x2)

inst_976:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xff000001; valaddr_reg:x3; val_offset:2928*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2928*0 + 3*7*FLEN/8, x4, x1, x2)

inst_977:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xff000003; valaddr_reg:x3; val_offset:2931*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2931*0 + 3*7*FLEN/8, x4, x1, x2)

inst_978:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xff000007; valaddr_reg:x3; val_offset:2934*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2934*0 + 3*7*FLEN/8, x4, x1, x2)

inst_979:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xff199999; valaddr_reg:x3; val_offset:2937*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2937*0 + 3*7*FLEN/8, x4, x1, x2)

inst_980:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xff249249; valaddr_reg:x3; val_offset:2940*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2940*0 + 3*7*FLEN/8, x4, x1, x2)

inst_981:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xff333333; valaddr_reg:x3; val_offset:2943*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2943*0 + 3*7*FLEN/8, x4, x1, x2)

inst_982:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xff36db6d; valaddr_reg:x3; val_offset:2946*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2946*0 + 3*7*FLEN/8, x4, x1, x2)

inst_983:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xff3bbbbb; valaddr_reg:x3; val_offset:2949*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2949*0 + 3*7*FLEN/8, x4, x1, x2)

inst_984:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xff444444; valaddr_reg:x3; val_offset:2952*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2952*0 + 3*7*FLEN/8, x4, x1, x2)

inst_985:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xff4ccccc; valaddr_reg:x3; val_offset:2955*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2955*0 + 3*7*FLEN/8, x4, x1, x2)

inst_986:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xff5b6db6; valaddr_reg:x3; val_offset:2958*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2958*0 + 3*7*FLEN/8, x4, x1, x2)

inst_987:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xff666666; valaddr_reg:x3; val_offset:2961*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2961*0 + 3*7*FLEN/8, x4, x1, x2)

inst_988:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xff6db6db; valaddr_reg:x3; val_offset:2964*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2964*0 + 3*7*FLEN/8, x4, x1, x2)

inst_989:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xff7ffff8; valaddr_reg:x3; val_offset:2967*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2967*0 + 3*7*FLEN/8, x4, x1, x2)

inst_990:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xff7ffffc; valaddr_reg:x3; val_offset:2970*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2970*0 + 3*7*FLEN/8, x4, x1, x2)

inst_991:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xff7ffffe; valaddr_reg:x3; val_offset:2973*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2973*0 + 3*7*FLEN/8, x4, x1, x2)

inst_992:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x256764 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x461be8 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca56764; op2val:0x2461be8;
op3val:0x3f800001; valaddr_reg:x3; val_offset:2976*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2976*0 + 3*7*FLEN/8, x4, x1, x2)

inst_993:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x256764 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x461be8 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca56764; op2val:0x2461be8;
op3val:0x3f800003; valaddr_reg:x3; val_offset:2979*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2979*0 + 3*7*FLEN/8, x4, x1, x2)

inst_994:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x256764 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x461be8 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca56764; op2val:0x2461be8;
op3val:0x3f800007; valaddr_reg:x3; val_offset:2982*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2982*0 + 3*7*FLEN/8, x4, x1, x2)

inst_995:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x256764 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x461be8 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca56764; op2val:0x2461be8;
op3val:0x3f999999; valaddr_reg:x3; val_offset:2985*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2985*0 + 3*7*FLEN/8, x4, x1, x2)

inst_996:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x256764 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x461be8 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca56764; op2val:0x2461be8;
op3val:0x3fa49249; valaddr_reg:x3; val_offset:2988*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2988*0 + 3*7*FLEN/8, x4, x1, x2)

inst_997:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x256764 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x461be8 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca56764; op2val:0x2461be8;
op3val:0x3fb33333; valaddr_reg:x3; val_offset:2991*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2991*0 + 3*7*FLEN/8, x4, x1, x2)

inst_998:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x256764 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x461be8 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca56764; op2val:0x2461be8;
op3val:0x3fb6db6d; valaddr_reg:x3; val_offset:2994*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2994*0 + 3*7*FLEN/8, x4, x1, x2)

inst_999:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x256764 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x461be8 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca56764; op2val:0x2461be8;
op3val:0x3fbbbbbb; valaddr_reg:x3; val_offset:2997*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2997*0 + 3*7*FLEN/8, x4, x1, x2)

inst_1000:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x256764 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x461be8 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca56764; op2val:0x2461be8;
op3val:0x3fc44444; valaddr_reg:x3; val_offset:3000*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3000*0 + 3*7*FLEN/8, x4, x1, x2)

inst_1001:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x256764 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x461be8 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca56764; op2val:0x2461be8;
op3val:0x3fcccccc; valaddr_reg:x3; val_offset:3003*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3003*0 + 3*7*FLEN/8, x4, x1, x2)

inst_1002:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x256764 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x461be8 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca56764; op2val:0x2461be8;
op3val:0x3fdb6db6; valaddr_reg:x3; val_offset:3006*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3006*0 + 3*7*FLEN/8, x4, x1, x2)

inst_1003:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x256764 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x461be8 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca56764; op2val:0x2461be8;
op3val:0x3fe66666; valaddr_reg:x3; val_offset:3009*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3009*0 + 3*7*FLEN/8, x4, x1, x2)

inst_1004:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x256764 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x461be8 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca56764; op2val:0x2461be8;
op3val:0x3fedb6db; valaddr_reg:x3; val_offset:3012*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3012*0 + 3*7*FLEN/8, x4, x1, x2)

inst_1005:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x256764 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x461be8 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca56764; op2val:0x2461be8;
op3val:0x3ffffff8; valaddr_reg:x3; val_offset:3015*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3015*0 + 3*7*FLEN/8, x4, x1, x2)

inst_1006:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x256764 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x461be8 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca56764; op2val:0x2461be8;
op3val:0x3ffffffc; valaddr_reg:x3; val_offset:3018*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3018*0 + 3*7*FLEN/8, x4, x1, x2)

inst_1007:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x256764 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x461be8 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca56764; op2val:0x2461be8;
op3val:0x3ffffffe; valaddr_reg:x3; val_offset:3021*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3021*0 + 3*7*FLEN/8, x4, x1, x2)

inst_1008:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x256764 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x461be8 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca56764; op2val:0x2461be8;
op3val:0x40800000; valaddr_reg:x3; val_offset:3024*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3024*0 + 3*7*FLEN/8, x4, x1, x2)

inst_1009:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x256764 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x461be8 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca56764; op2val:0x2461be8;
op3val:0x40800001; valaddr_reg:x3; val_offset:3027*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3027*0 + 3*7*FLEN/8, x4, x1, x2)

inst_1010:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x256764 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x461be8 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca56764; op2val:0x2461be8;
op3val:0x40800003; valaddr_reg:x3; val_offset:3030*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3030*0 + 3*7*FLEN/8, x4, x1, x2)

inst_1011:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x256764 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x461be8 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca56764; op2val:0x2461be8;
op3val:0x40800007; valaddr_reg:x3; val_offset:3033*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3033*0 + 3*7*FLEN/8, x4, x1, x2)

inst_1012:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x256764 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x461be8 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca56764; op2val:0x2461be8;
op3val:0x4080000f; valaddr_reg:x3; val_offset:3036*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3036*0 + 3*7*FLEN/8, x4, x1, x2)

inst_1013:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x256764 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x461be8 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca56764; op2val:0x2461be8;
op3val:0x4080001f; valaddr_reg:x3; val_offset:3039*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3039*0 + 3*7*FLEN/8, x4, x1, x2)

inst_1014:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x256764 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x461be8 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca56764; op2val:0x2461be8;
op3val:0x4080003f; valaddr_reg:x3; val_offset:3042*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3042*0 + 3*7*FLEN/8, x4, x1, x2)

inst_1015:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x256764 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x461be8 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca56764; op2val:0x2461be8;
op3val:0x4080007f; valaddr_reg:x3; val_offset:3045*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3045*0 + 3*7*FLEN/8, x4, x1, x2)

inst_1016:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x256764 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x461be8 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca56764; op2val:0x2461be8;
op3val:0x408000ff; valaddr_reg:x3; val_offset:3048*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3048*0 + 3*7*FLEN/8, x4, x1, x2)

inst_1017:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x256764 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x461be8 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca56764; op2val:0x2461be8;
op3val:0x408001ff; valaddr_reg:x3; val_offset:3051*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3051*0 + 3*7*FLEN/8, x4, x1, x2)

inst_1018:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x256764 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x461be8 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca56764; op2val:0x2461be8;
op3val:0x408003ff; valaddr_reg:x3; val_offset:3054*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3054*0 + 3*7*FLEN/8, x4, x1, x2)

inst_1019:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x256764 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x461be8 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca56764; op2val:0x2461be8;
op3val:0x408007ff; valaddr_reg:x3; val_offset:3057*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3057*0 + 3*7*FLEN/8, x4, x1, x2)

inst_1020:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x256764 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x461be8 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca56764; op2val:0x2461be8;
op3val:0x40800fff; valaddr_reg:x3; val_offset:3060*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3060*0 + 3*7*FLEN/8, x4, x1, x2)

inst_1021:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x256764 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x461be8 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca56764; op2val:0x2461be8;
op3val:0x40801fff; valaddr_reg:x3; val_offset:3063*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3063*0 + 3*7*FLEN/8, x4, x1, x2)

inst_1022:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x256764 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x461be8 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca56764; op2val:0x2461be8;
op3val:0x40803fff; valaddr_reg:x3; val_offset:3066*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3066*0 + 3*7*FLEN/8, x4, x1, x2)

inst_1023:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x256764 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x461be8 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca56764; op2val:0x2461be8;
op3val:0x40807fff; valaddr_reg:x3; val_offset:3069*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3069*0 + 3*7*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(2090649331,32,FLEN)
NAN_BOXED(1112605329,32,FLEN)
NAN_BOXED(2080243712,32,FLEN)
NAN_BOXED(2090649331,32,FLEN)
NAN_BOXED(1112605329,32,FLEN)
NAN_BOXED(2080309248,32,FLEN)
NAN_BOXED(2090649331,32,FLEN)
NAN_BOXED(1112605329,32,FLEN)
NAN_BOXED(2080342016,32,FLEN)
NAN_BOXED(2090649331,32,FLEN)
NAN_BOXED(1112605329,32,FLEN)
NAN_BOXED(2080358400,32,FLEN)
NAN_BOXED(2090649331,32,FLEN)
NAN_BOXED(1112605329,32,FLEN)
NAN_BOXED(2080366592,32,FLEN)
NAN_BOXED(2090649331,32,FLEN)
NAN_BOXED(1112605329,32,FLEN)
NAN_BOXED(2080370688,32,FLEN)
NAN_BOXED(2090649331,32,FLEN)
NAN_BOXED(1112605329,32,FLEN)
NAN_BOXED(2080372736,32,FLEN)
NAN_BOXED(2090649331,32,FLEN)
NAN_BOXED(1112605329,32,FLEN)
NAN_BOXED(2080373760,32,FLEN)
NAN_BOXED(2090649331,32,FLEN)
NAN_BOXED(1112605329,32,FLEN)
NAN_BOXED(2080374272,32,FLEN)
NAN_BOXED(2090649331,32,FLEN)
NAN_BOXED(1112605329,32,FLEN)
NAN_BOXED(2080374528,32,FLEN)
NAN_BOXED(2090649331,32,FLEN)
NAN_BOXED(1112605329,32,FLEN)
NAN_BOXED(2080374656,32,FLEN)
NAN_BOXED(2090649331,32,FLEN)
NAN_BOXED(1112605329,32,FLEN)
NAN_BOXED(2080374720,32,FLEN)
NAN_BOXED(2090649331,32,FLEN)
NAN_BOXED(1112605329,32,FLEN)
NAN_BOXED(2080374752,32,FLEN)
NAN_BOXED(2090649331,32,FLEN)
NAN_BOXED(1112605329,32,FLEN)
NAN_BOXED(2080374768,32,FLEN)
NAN_BOXED(2090649331,32,FLEN)
NAN_BOXED(1112605329,32,FLEN)
NAN_BOXED(2080374776,32,FLEN)
NAN_BOXED(2090649331,32,FLEN)
NAN_BOXED(1112605329,32,FLEN)
NAN_BOXED(2080374780,32,FLEN)
NAN_BOXED(2090649331,32,FLEN)
NAN_BOXED(1112605329,32,FLEN)
NAN_BOXED(2080374782,32,FLEN)
NAN_BOXED(2090649331,32,FLEN)
NAN_BOXED(1112605329,32,FLEN)
NAN_BOXED(2080374783,32,FLEN)
NAN_BOXED(2090649331,32,FLEN)
NAN_BOXED(1112605329,32,FLEN)
NAN_BOXED(2130706433,32,FLEN)
NAN_BOXED(2090649331,32,FLEN)
NAN_BOXED(1112605329,32,FLEN)
NAN_BOXED(2130706435,32,FLEN)
NAN_BOXED(2090649331,32,FLEN)
NAN_BOXED(1112605329,32,FLEN)
NAN_BOXED(2130706439,32,FLEN)
NAN_BOXED(2090649331,32,FLEN)
NAN_BOXED(1112605329,32,FLEN)
NAN_BOXED(2132384153,32,FLEN)
NAN_BOXED(2090649331,32,FLEN)
NAN_BOXED(1112605329,32,FLEN)
NAN_BOXED(2133103177,32,FLEN)
NAN_BOXED(2090649331,32,FLEN)
NAN_BOXED(1112605329,32,FLEN)
NAN_BOXED(2134061875,32,FLEN)
NAN_BOXED(2090649331,32,FLEN)
NAN_BOXED(1112605329,32,FLEN)
NAN_BOXED(2134301549,32,FLEN)
NAN_BOXED(2090649331,32,FLEN)
NAN_BOXED(1112605329,32,FLEN)
NAN_BOXED(2134621115,32,FLEN)
NAN_BOXED(2090649331,32,FLEN)
NAN_BOXED(1112605329,32,FLEN)
NAN_BOXED(2135180356,32,FLEN)
NAN_BOXED(2090649331,32,FLEN)
NAN_BOXED(1112605329,32,FLEN)
NAN_BOXED(2135739596,32,FLEN)
NAN_BOXED(2090649331,32,FLEN)
NAN_BOXED(1112605329,32,FLEN)
NAN_BOXED(2136698294,32,FLEN)
NAN_BOXED(2090649331,32,FLEN)
NAN_BOXED(1112605329,32,FLEN)
NAN_BOXED(2137417318,32,FLEN)
NAN_BOXED(2090649331,32,FLEN)
NAN_BOXED(1112605329,32,FLEN)
NAN_BOXED(2137896667,32,FLEN)
NAN_BOXED(2090649331,32,FLEN)
NAN_BOXED(1112605329,32,FLEN)
NAN_BOXED(2139095032,32,FLEN)
NAN_BOXED(2090649331,32,FLEN)
NAN_BOXED(1112605329,32,FLEN)
NAN_BOXED(2139095036,32,FLEN)
NAN_BOXED(2090649331,32,FLEN)
NAN_BOXED(1112605329,32,FLEN)
NAN_BOXED(2139095038,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4194304000,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4194304001,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4194304003,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4194304007,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4194304015,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4194304031,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4194304063,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4194304127,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4194304255,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4194304511,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4194305023,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4194306047,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4194308095,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4194312191,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4194320383,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4194336767,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4194369535,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4194435071,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4194566143,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4194828287,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4195352575,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4196401151,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4198498303,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4198498304,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4200595456,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4201644032,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4202168320,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4202430464,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4202561536,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4202627072,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4202659840,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4202676224,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4202684416,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4202688512,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4202690560,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4202691584,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4202692096,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4202692352,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4202692480,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4202692544,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4202692576,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4202692592,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4202692600,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4202692604,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4202692606,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4202692607,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4278190081,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4278190083,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4278190087,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4279867801,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4280586825,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4281545523,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4281785197,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4282104763,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4282664004,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4283223244,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4284181942,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4284900966,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4285380315,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4286578680,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4286578684,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4286578686,32,FLEN)
NAN_BOXED(2091214692,32,FLEN)
NAN_BOXED(38149096,32,FLEN)
NAN_BOXED(1065353217,32,FLEN)
NAN_BOXED(2091214692,32,FLEN)
NAN_BOXED(38149096,32,FLEN)
NAN_BOXED(1065353219,32,FLEN)
NAN_BOXED(2091214692,32,FLEN)
NAN_BOXED(38149096,32,FLEN)
NAN_BOXED(1065353223,32,FLEN)
NAN_BOXED(2091214692,32,FLEN)
NAN_BOXED(38149096,32,FLEN)
NAN_BOXED(1067030937,32,FLEN)
NAN_BOXED(2091214692,32,FLEN)
NAN_BOXED(38149096,32,FLEN)
NAN_BOXED(1067749961,32,FLEN)
NAN_BOXED(2091214692,32,FLEN)
NAN_BOXED(38149096,32,FLEN)
NAN_BOXED(1068708659,32,FLEN)
NAN_BOXED(2091214692,32,FLEN)
NAN_BOXED(38149096,32,FLEN)
NAN_BOXED(1068948333,32,FLEN)
NAN_BOXED(2091214692,32,FLEN)
NAN_BOXED(38149096,32,FLEN)
NAN_BOXED(1069267899,32,FLEN)
NAN_BOXED(2091214692,32,FLEN)
NAN_BOXED(38149096,32,FLEN)
NAN_BOXED(1069827140,32,FLEN)
NAN_BOXED(2091214692,32,FLEN)
NAN_BOXED(38149096,32,FLEN)
NAN_BOXED(1070386380,32,FLEN)
NAN_BOXED(2091214692,32,FLEN)
NAN_BOXED(38149096,32,FLEN)
NAN_BOXED(1071345078,32,FLEN)
NAN_BOXED(2091214692,32,FLEN)
NAN_BOXED(38149096,32,FLEN)
NAN_BOXED(1072064102,32,FLEN)
NAN_BOXED(2091214692,32,FLEN)
NAN_BOXED(38149096,32,FLEN)
NAN_BOXED(1072543451,32,FLEN)
NAN_BOXED(2091214692,32,FLEN)
NAN_BOXED(38149096,32,FLEN)
NAN_BOXED(1073741816,32,FLEN)
NAN_BOXED(2091214692,32,FLEN)
NAN_BOXED(38149096,32,FLEN)
NAN_BOXED(1073741820,32,FLEN)
NAN_BOXED(2091214692,32,FLEN)
NAN_BOXED(38149096,32,FLEN)
NAN_BOXED(1073741822,32,FLEN)
NAN_BOXED(2091214692,32,FLEN)
NAN_BOXED(38149096,32,FLEN)
NAN_BOXED(1082130432,32,FLEN)
NAN_BOXED(2091214692,32,FLEN)
NAN_BOXED(38149096,32,FLEN)
NAN_BOXED(1082130433,32,FLEN)
NAN_BOXED(2091214692,32,FLEN)
NAN_BOXED(38149096,32,FLEN)
NAN_BOXED(1082130435,32,FLEN)
NAN_BOXED(2091214692,32,FLEN)
NAN_BOXED(38149096,32,FLEN)
NAN_BOXED(1082130439,32,FLEN)
NAN_BOXED(2091214692,32,FLEN)
NAN_BOXED(38149096,32,FLEN)
NAN_BOXED(1082130447,32,FLEN)
NAN_BOXED(2091214692,32,FLEN)
NAN_BOXED(38149096,32,FLEN)
NAN_BOXED(1082130463,32,FLEN)
NAN_BOXED(2091214692,32,FLEN)
NAN_BOXED(38149096,32,FLEN)
NAN_BOXED(1082130495,32,FLEN)
NAN_BOXED(2091214692,32,FLEN)
NAN_BOXED(38149096,32,FLEN)
NAN_BOXED(1082130559,32,FLEN)
NAN_BOXED(2091214692,32,FLEN)
NAN_BOXED(38149096,32,FLEN)
NAN_BOXED(1082130687,32,FLEN)
NAN_BOXED(2091214692,32,FLEN)
NAN_BOXED(38149096,32,FLEN)
NAN_BOXED(1082130943,32,FLEN)
NAN_BOXED(2091214692,32,FLEN)
NAN_BOXED(38149096,32,FLEN)
NAN_BOXED(1082131455,32,FLEN)
NAN_BOXED(2091214692,32,FLEN)
NAN_BOXED(38149096,32,FLEN)
NAN_BOXED(1082132479,32,FLEN)
NAN_BOXED(2091214692,32,FLEN)
NAN_BOXED(38149096,32,FLEN)
NAN_BOXED(1082134527,32,FLEN)
NAN_BOXED(2091214692,32,FLEN)
NAN_BOXED(38149096,32,FLEN)
NAN_BOXED(1082138623,32,FLEN)
NAN_BOXED(2091214692,32,FLEN)
NAN_BOXED(38149096,32,FLEN)
NAN_BOXED(1082146815,32,FLEN)
NAN_BOXED(2091214692,32,FLEN)
NAN_BOXED(38149096,32,FLEN)
NAN_BOXED(1082163199,32,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
