
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 14:18:08 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32F/fnmsub.s.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmsub.s instruction of the RISC-V RV32F_Zicsr,RV32FD_Zicsr,RV64F_Zicsr,RV64FD_Zicsr extension for the fnmsub_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF_Zicsr,RV32IFD_Zicsr,RV64IF_Zicsr,RV64IFD_Zicsr,RV32EF_Zicsr,RV32EFD_Zicsr,RV64EF_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fnmsub_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*F.*);def TEST_CASE_1=True;",fnmsub_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_13696:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0ce6f5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x688ef9 and fs3 == 1 and fe3 == 0xd9 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8ce6f5; op2val:0xc0688ef9;
op3val:0xecfffff8; valaddr_reg:x3; val_offset:41088*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41088*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13697:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0ce6f5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x688ef9 and fs3 == 1 and fe3 == 0xd9 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8ce6f5; op2val:0xc0688ef9;
op3val:0xecfffffc; valaddr_reg:x3; val_offset:41091*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41091*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13698:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0ce6f5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x688ef9 and fs3 == 1 and fe3 == 0xd9 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8ce6f5; op2val:0xc0688ef9;
op3val:0xecfffffe; valaddr_reg:x3; val_offset:41094*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41094*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13699:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0ce6f5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x688ef9 and fs3 == 1 and fe3 == 0xd9 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8ce6f5; op2val:0xc0688ef9;
op3val:0xecffffff; valaddr_reg:x3; val_offset:41097*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41097*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13700:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0ce6f5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x688ef9 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8ce6f5; op2val:0xc0688ef9;
op3val:0xff000001; valaddr_reg:x3; val_offset:41100*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41100*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13701:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0ce6f5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x688ef9 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8ce6f5; op2val:0xc0688ef9;
op3val:0xff000003; valaddr_reg:x3; val_offset:41103*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41103*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13702:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0ce6f5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x688ef9 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8ce6f5; op2val:0xc0688ef9;
op3val:0xff000007; valaddr_reg:x3; val_offset:41106*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41106*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13703:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0ce6f5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x688ef9 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8ce6f5; op2val:0xc0688ef9;
op3val:0xff199999; valaddr_reg:x3; val_offset:41109*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41109*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13704:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0ce6f5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x688ef9 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8ce6f5; op2val:0xc0688ef9;
op3val:0xff249249; valaddr_reg:x3; val_offset:41112*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41112*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13705:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0ce6f5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x688ef9 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8ce6f5; op2val:0xc0688ef9;
op3val:0xff333333; valaddr_reg:x3; val_offset:41115*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41115*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13706:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0ce6f5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x688ef9 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8ce6f5; op2val:0xc0688ef9;
op3val:0xff36db6d; valaddr_reg:x3; val_offset:41118*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41118*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13707:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0ce6f5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x688ef9 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8ce6f5; op2val:0xc0688ef9;
op3val:0xff3bbbbb; valaddr_reg:x3; val_offset:41121*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41121*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13708:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0ce6f5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x688ef9 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8ce6f5; op2val:0xc0688ef9;
op3val:0xff444444; valaddr_reg:x3; val_offset:41124*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41124*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13709:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0ce6f5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x688ef9 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8ce6f5; op2val:0xc0688ef9;
op3val:0xff4ccccc; valaddr_reg:x3; val_offset:41127*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41127*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13710:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0ce6f5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x688ef9 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8ce6f5; op2val:0xc0688ef9;
op3val:0xff5b6db6; valaddr_reg:x3; val_offset:41130*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41130*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13711:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0ce6f5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x688ef9 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8ce6f5; op2val:0xc0688ef9;
op3val:0xff666666; valaddr_reg:x3; val_offset:41133*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41133*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13712:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0ce6f5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x688ef9 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8ce6f5; op2val:0xc0688ef9;
op3val:0xff6db6db; valaddr_reg:x3; val_offset:41136*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41136*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13713:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0ce6f5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x688ef9 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8ce6f5; op2val:0xc0688ef9;
op3val:0xff7ffff8; valaddr_reg:x3; val_offset:41139*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41139*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13714:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0ce6f5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x688ef9 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8ce6f5; op2val:0xc0688ef9;
op3val:0xff7ffffc; valaddr_reg:x3; val_offset:41142*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41142*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13715:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0ce6f5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x688ef9 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8ce6f5; op2val:0xc0688ef9;
op3val:0xff7ffffe; valaddr_reg:x3; val_offset:41145*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41145*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13716:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0d1be6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8d1be6; op2val:0x80000000;
op3val:0x80000001; valaddr_reg:x3; val_offset:41148*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41148*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13717:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0d1be6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8d1be6; op2val:0x80000000;
op3val:0x80000003; valaddr_reg:x3; val_offset:41151*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41151*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13718:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0d1be6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8d1be6; op2val:0x80000000;
op3val:0x80000007; valaddr_reg:x3; val_offset:41154*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41154*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13719:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0d1be6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8d1be6; op2val:0x80000000;
op3val:0x80199999; valaddr_reg:x3; val_offset:41157*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41157*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13720:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0d1be6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8d1be6; op2val:0x80000000;
op3val:0x80249249; valaddr_reg:x3; val_offset:41160*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41160*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13721:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0d1be6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8d1be6; op2val:0x80000000;
op3val:0x80333333; valaddr_reg:x3; val_offset:41163*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41163*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13722:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0d1be6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8d1be6; op2val:0x80000000;
op3val:0x8036db6d; valaddr_reg:x3; val_offset:41166*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41166*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13723:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0d1be6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8d1be6; op2val:0x80000000;
op3val:0x803bbbbb; valaddr_reg:x3; val_offset:41169*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41169*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13724:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0d1be6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8d1be6; op2val:0x80000000;
op3val:0x80444444; valaddr_reg:x3; val_offset:41172*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41172*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13725:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0d1be6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8d1be6; op2val:0x80000000;
op3val:0x804ccccc; valaddr_reg:x3; val_offset:41175*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41175*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13726:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0d1be6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8d1be6; op2val:0x80000000;
op3val:0x805b6db6; valaddr_reg:x3; val_offset:41178*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41178*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13727:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0d1be6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8d1be6; op2val:0x80000000;
op3val:0x80666666; valaddr_reg:x3; val_offset:41181*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41181*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13728:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0d1be6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8d1be6; op2val:0x80000000;
op3val:0x806db6db; valaddr_reg:x3; val_offset:41184*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41184*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13729:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0d1be6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8d1be6; op2val:0x80000000;
op3val:0x807ffff8; valaddr_reg:x3; val_offset:41187*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41187*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13730:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0d1be6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8d1be6; op2val:0x80000000;
op3val:0x807ffffc; valaddr_reg:x3; val_offset:41190*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41190*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13731:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0d1be6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8d1be6; op2val:0x80000000;
op3val:0x807ffffe; valaddr_reg:x3; val_offset:41193*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41193*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13732:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0d1be6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8d1be6; op2val:0x80000000;
op3val:0x8c800000; valaddr_reg:x3; val_offset:41196*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41196*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13733:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0d1be6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8d1be6; op2val:0x80000000;
op3val:0x8c800001; valaddr_reg:x3; val_offset:41199*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41199*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13734:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0d1be6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8d1be6; op2val:0x80000000;
op3val:0x8c800003; valaddr_reg:x3; val_offset:41202*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41202*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13735:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0d1be6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8d1be6; op2val:0x80000000;
op3val:0x8c800007; valaddr_reg:x3; val_offset:41205*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41205*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13736:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0d1be6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8d1be6; op2val:0x80000000;
op3val:0x8c80000f; valaddr_reg:x3; val_offset:41208*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41208*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13737:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0d1be6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8d1be6; op2val:0x80000000;
op3val:0x8c80001f; valaddr_reg:x3; val_offset:41211*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41211*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13738:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0d1be6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8d1be6; op2val:0x80000000;
op3val:0x8c80003f; valaddr_reg:x3; val_offset:41214*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41214*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13739:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0d1be6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8d1be6; op2val:0x80000000;
op3val:0x8c80007f; valaddr_reg:x3; val_offset:41217*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41217*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13740:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0d1be6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8d1be6; op2val:0x80000000;
op3val:0x8c8000ff; valaddr_reg:x3; val_offset:41220*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41220*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13741:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0d1be6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8d1be6; op2val:0x80000000;
op3val:0x8c8001ff; valaddr_reg:x3; val_offset:41223*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41223*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13742:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0d1be6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8d1be6; op2val:0x80000000;
op3val:0x8c8003ff; valaddr_reg:x3; val_offset:41226*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41226*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13743:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0d1be6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8d1be6; op2val:0x80000000;
op3val:0x8c8007ff; valaddr_reg:x3; val_offset:41229*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41229*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13744:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0d1be6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8d1be6; op2val:0x80000000;
op3val:0x8c800fff; valaddr_reg:x3; val_offset:41232*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41232*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13745:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0d1be6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8d1be6; op2val:0x80000000;
op3val:0x8c801fff; valaddr_reg:x3; val_offset:41235*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41235*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13746:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0d1be6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8d1be6; op2val:0x80000000;
op3val:0x8c803fff; valaddr_reg:x3; val_offset:41238*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41238*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13747:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0d1be6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8d1be6; op2val:0x80000000;
op3val:0x8c807fff; valaddr_reg:x3; val_offset:41241*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41241*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13748:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0d1be6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8d1be6; op2val:0x80000000;
op3val:0x8c80ffff; valaddr_reg:x3; val_offset:41244*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41244*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13749:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0d1be6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8d1be6; op2val:0x80000000;
op3val:0x8c81ffff; valaddr_reg:x3; val_offset:41247*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41247*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13750:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0d1be6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8d1be6; op2val:0x80000000;
op3val:0x8c83ffff; valaddr_reg:x3; val_offset:41250*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41250*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13751:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0d1be6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8d1be6; op2val:0x80000000;
op3val:0x8c87ffff; valaddr_reg:x3; val_offset:41253*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41253*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13752:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0d1be6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8d1be6; op2val:0x80000000;
op3val:0x8c8fffff; valaddr_reg:x3; val_offset:41256*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41256*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13753:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0d1be6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8d1be6; op2val:0x80000000;
op3val:0x8c9fffff; valaddr_reg:x3; val_offset:41259*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41259*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13754:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0d1be6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8d1be6; op2val:0x80000000;
op3val:0x8cbfffff; valaddr_reg:x3; val_offset:41262*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41262*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13755:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0d1be6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8d1be6; op2val:0x80000000;
op3val:0x8cc00000; valaddr_reg:x3; val_offset:41265*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41265*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13756:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0d1be6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8d1be6; op2val:0x80000000;
op3val:0x8ce00000; valaddr_reg:x3; val_offset:41268*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41268*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13757:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0d1be6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8d1be6; op2val:0x80000000;
op3val:0x8cf00000; valaddr_reg:x3; val_offset:41271*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41271*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13758:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0d1be6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8d1be6; op2val:0x80000000;
op3val:0x8cf80000; valaddr_reg:x3; val_offset:41274*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41274*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13759:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0d1be6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8d1be6; op2val:0x80000000;
op3val:0x8cfc0000; valaddr_reg:x3; val_offset:41277*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41277*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13760:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0d1be6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8d1be6; op2val:0x80000000;
op3val:0x8cfe0000; valaddr_reg:x3; val_offset:41280*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41280*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13761:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0d1be6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8d1be6; op2val:0x80000000;
op3val:0x8cff0000; valaddr_reg:x3; val_offset:41283*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41283*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13762:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0d1be6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8d1be6; op2val:0x80000000;
op3val:0x8cff8000; valaddr_reg:x3; val_offset:41286*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41286*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13763:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0d1be6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8d1be6; op2val:0x80000000;
op3val:0x8cffc000; valaddr_reg:x3; val_offset:41289*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41289*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13764:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0d1be6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8d1be6; op2val:0x80000000;
op3val:0x8cffe000; valaddr_reg:x3; val_offset:41292*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41292*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13765:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0d1be6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8d1be6; op2val:0x80000000;
op3val:0x8cfff000; valaddr_reg:x3; val_offset:41295*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41295*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13766:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0d1be6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8d1be6; op2val:0x80000000;
op3val:0x8cfff800; valaddr_reg:x3; val_offset:41298*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41298*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13767:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0d1be6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8d1be6; op2val:0x80000000;
op3val:0x8cfffc00; valaddr_reg:x3; val_offset:41301*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41301*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13768:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0d1be6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8d1be6; op2val:0x80000000;
op3val:0x8cfffe00; valaddr_reg:x3; val_offset:41304*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41304*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13769:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0d1be6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8d1be6; op2val:0x80000000;
op3val:0x8cffff00; valaddr_reg:x3; val_offset:41307*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41307*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13770:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0d1be6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8d1be6; op2val:0x80000000;
op3val:0x8cffff80; valaddr_reg:x3; val_offset:41310*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41310*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13771:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0d1be6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8d1be6; op2val:0x80000000;
op3val:0x8cffffc0; valaddr_reg:x3; val_offset:41313*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41313*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13772:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0d1be6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8d1be6; op2val:0x80000000;
op3val:0x8cffffe0; valaddr_reg:x3; val_offset:41316*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41316*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13773:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0d1be6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8d1be6; op2val:0x80000000;
op3val:0x8cfffff0; valaddr_reg:x3; val_offset:41319*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41319*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13774:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0d1be6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8d1be6; op2val:0x80000000;
op3val:0x8cfffff8; valaddr_reg:x3; val_offset:41322*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41322*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13775:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0d1be6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8d1be6; op2val:0x80000000;
op3val:0x8cfffffc; valaddr_reg:x3; val_offset:41325*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41325*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13776:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0d1be6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8d1be6; op2val:0x80000000;
op3val:0x8cfffffe; valaddr_reg:x3; val_offset:41328*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41328*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13777:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0d1be6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8d1be6; op2val:0x80000000;
op3val:0x8cffffff; valaddr_reg:x3; val_offset:41331*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41331*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13778:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0d7a6f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8d7a6f; op2val:0x0;
op3val:0x800001; valaddr_reg:x3; val_offset:41334*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41334*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13779:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0d7a6f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8d7a6f; op2val:0x0;
op3val:0x800003; valaddr_reg:x3; val_offset:41337*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41337*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13780:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0d7a6f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8d7a6f; op2val:0x0;
op3val:0x800007; valaddr_reg:x3; val_offset:41340*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41340*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13781:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0d7a6f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8d7a6f; op2val:0x0;
op3val:0x999999; valaddr_reg:x3; val_offset:41343*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41343*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13782:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0d7a6f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8d7a6f; op2val:0x0;
op3val:0xa49249; valaddr_reg:x3; val_offset:41346*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41346*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13783:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0d7a6f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8d7a6f; op2val:0x0;
op3val:0xb33333; valaddr_reg:x3; val_offset:41349*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41349*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13784:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0d7a6f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8d7a6f; op2val:0x0;
op3val:0xb6db6d; valaddr_reg:x3; val_offset:41352*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41352*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13785:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0d7a6f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8d7a6f; op2val:0x0;
op3val:0xbbbbbb; valaddr_reg:x3; val_offset:41355*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41355*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13786:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0d7a6f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8d7a6f; op2val:0x0;
op3val:0xc44444; valaddr_reg:x3; val_offset:41358*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41358*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13787:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0d7a6f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8d7a6f; op2val:0x0;
op3val:0xcccccc; valaddr_reg:x3; val_offset:41361*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41361*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13788:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0d7a6f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8d7a6f; op2val:0x0;
op3val:0xdb6db6; valaddr_reg:x3; val_offset:41364*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41364*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13789:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0d7a6f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8d7a6f; op2val:0x0;
op3val:0xe66666; valaddr_reg:x3; val_offset:41367*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41367*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13790:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0d7a6f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8d7a6f; op2val:0x0;
op3val:0xedb6db; valaddr_reg:x3; val_offset:41370*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41370*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13791:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0d7a6f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8d7a6f; op2val:0x0;
op3val:0xfffff8; valaddr_reg:x3; val_offset:41373*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41373*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13792:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0d7a6f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8d7a6f; op2val:0x0;
op3val:0xfffffc; valaddr_reg:x3; val_offset:41376*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41376*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13793:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0d7a6f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8d7a6f; op2val:0x0;
op3val:0xfffffe; valaddr_reg:x3; val_offset:41379*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41379*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13794:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0d7a6f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8d7a6f; op2val:0x0;
op3val:0xb800000; valaddr_reg:x3; val_offset:41382*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41382*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13795:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0d7a6f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8d7a6f; op2val:0x0;
op3val:0xb800001; valaddr_reg:x3; val_offset:41385*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41385*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13796:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0d7a6f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8d7a6f; op2val:0x0;
op3val:0xb800003; valaddr_reg:x3; val_offset:41388*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41388*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13797:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0d7a6f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8d7a6f; op2val:0x0;
op3val:0xb800007; valaddr_reg:x3; val_offset:41391*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41391*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13798:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0d7a6f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8d7a6f; op2val:0x0;
op3val:0xb80000f; valaddr_reg:x3; val_offset:41394*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41394*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13799:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0d7a6f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8d7a6f; op2val:0x0;
op3val:0xb80001f; valaddr_reg:x3; val_offset:41397*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41397*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13800:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0d7a6f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8d7a6f; op2val:0x0;
op3val:0xb80003f; valaddr_reg:x3; val_offset:41400*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41400*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13801:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0d7a6f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8d7a6f; op2val:0x0;
op3val:0xb80007f; valaddr_reg:x3; val_offset:41403*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41403*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13802:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0d7a6f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8d7a6f; op2val:0x0;
op3val:0xb8000ff; valaddr_reg:x3; val_offset:41406*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41406*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13803:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0d7a6f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8d7a6f; op2val:0x0;
op3val:0xb8001ff; valaddr_reg:x3; val_offset:41409*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41409*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13804:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0d7a6f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8d7a6f; op2val:0x0;
op3val:0xb8003ff; valaddr_reg:x3; val_offset:41412*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41412*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13805:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0d7a6f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8d7a6f; op2val:0x0;
op3val:0xb8007ff; valaddr_reg:x3; val_offset:41415*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41415*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13806:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0d7a6f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8d7a6f; op2val:0x0;
op3val:0xb800fff; valaddr_reg:x3; val_offset:41418*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41418*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13807:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0d7a6f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8d7a6f; op2val:0x0;
op3val:0xb801fff; valaddr_reg:x3; val_offset:41421*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41421*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13808:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0d7a6f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8d7a6f; op2val:0x0;
op3val:0xb803fff; valaddr_reg:x3; val_offset:41424*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41424*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13809:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0d7a6f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8d7a6f; op2val:0x0;
op3val:0xb807fff; valaddr_reg:x3; val_offset:41427*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41427*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13810:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0d7a6f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8d7a6f; op2val:0x0;
op3val:0xb80ffff; valaddr_reg:x3; val_offset:41430*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41430*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13811:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0d7a6f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8d7a6f; op2val:0x0;
op3val:0xb81ffff; valaddr_reg:x3; val_offset:41433*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41433*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13812:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0d7a6f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8d7a6f; op2val:0x0;
op3val:0xb83ffff; valaddr_reg:x3; val_offset:41436*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41436*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13813:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0d7a6f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8d7a6f; op2val:0x0;
op3val:0xb87ffff; valaddr_reg:x3; val_offset:41439*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41439*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13814:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0d7a6f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8d7a6f; op2val:0x0;
op3val:0xb8fffff; valaddr_reg:x3; val_offset:41442*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41442*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13815:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0d7a6f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8d7a6f; op2val:0x0;
op3val:0xb9fffff; valaddr_reg:x3; val_offset:41445*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41445*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13816:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0d7a6f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8d7a6f; op2val:0x0;
op3val:0xbbfffff; valaddr_reg:x3; val_offset:41448*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41448*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13817:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0d7a6f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8d7a6f; op2val:0x0;
op3val:0xbc00000; valaddr_reg:x3; val_offset:41451*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41451*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13818:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0d7a6f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8d7a6f; op2val:0x0;
op3val:0xbe00000; valaddr_reg:x3; val_offset:41454*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41454*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13819:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0d7a6f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8d7a6f; op2val:0x0;
op3val:0xbf00000; valaddr_reg:x3; val_offset:41457*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41457*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13820:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0d7a6f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8d7a6f; op2val:0x0;
op3val:0xbf80000; valaddr_reg:x3; val_offset:41460*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41460*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13821:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0d7a6f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8d7a6f; op2val:0x0;
op3val:0xbfc0000; valaddr_reg:x3; val_offset:41463*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41463*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13822:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0d7a6f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8d7a6f; op2val:0x0;
op3val:0xbfe0000; valaddr_reg:x3; val_offset:41466*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41466*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13823:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0d7a6f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8d7a6f; op2val:0x0;
op3val:0xbff0000; valaddr_reg:x3; val_offset:41469*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 41469*0 + 3*107*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(2123163381,32,FLEN)
NAN_BOXED(3228077817,32,FLEN)
NAN_BOXED(3976200184,32,FLEN)
NAN_BOXED(2123163381,32,FLEN)
NAN_BOXED(3228077817,32,FLEN)
NAN_BOXED(3976200188,32,FLEN)
NAN_BOXED(2123163381,32,FLEN)
NAN_BOXED(3228077817,32,FLEN)
NAN_BOXED(3976200190,32,FLEN)
NAN_BOXED(2123163381,32,FLEN)
NAN_BOXED(3228077817,32,FLEN)
NAN_BOXED(3976200191,32,FLEN)
NAN_BOXED(2123163381,32,FLEN)
NAN_BOXED(3228077817,32,FLEN)
NAN_BOXED(4278190081,32,FLEN)
NAN_BOXED(2123163381,32,FLEN)
NAN_BOXED(3228077817,32,FLEN)
NAN_BOXED(4278190083,32,FLEN)
NAN_BOXED(2123163381,32,FLEN)
NAN_BOXED(3228077817,32,FLEN)
NAN_BOXED(4278190087,32,FLEN)
NAN_BOXED(2123163381,32,FLEN)
NAN_BOXED(3228077817,32,FLEN)
NAN_BOXED(4279867801,32,FLEN)
NAN_BOXED(2123163381,32,FLEN)
NAN_BOXED(3228077817,32,FLEN)
NAN_BOXED(4280586825,32,FLEN)
NAN_BOXED(2123163381,32,FLEN)
NAN_BOXED(3228077817,32,FLEN)
NAN_BOXED(4281545523,32,FLEN)
NAN_BOXED(2123163381,32,FLEN)
NAN_BOXED(3228077817,32,FLEN)
NAN_BOXED(4281785197,32,FLEN)
NAN_BOXED(2123163381,32,FLEN)
NAN_BOXED(3228077817,32,FLEN)
NAN_BOXED(4282104763,32,FLEN)
NAN_BOXED(2123163381,32,FLEN)
NAN_BOXED(3228077817,32,FLEN)
NAN_BOXED(4282664004,32,FLEN)
NAN_BOXED(2123163381,32,FLEN)
NAN_BOXED(3228077817,32,FLEN)
NAN_BOXED(4283223244,32,FLEN)
NAN_BOXED(2123163381,32,FLEN)
NAN_BOXED(3228077817,32,FLEN)
NAN_BOXED(4284181942,32,FLEN)
NAN_BOXED(2123163381,32,FLEN)
NAN_BOXED(3228077817,32,FLEN)
NAN_BOXED(4284900966,32,FLEN)
NAN_BOXED(2123163381,32,FLEN)
NAN_BOXED(3228077817,32,FLEN)
NAN_BOXED(4285380315,32,FLEN)
NAN_BOXED(2123163381,32,FLEN)
NAN_BOXED(3228077817,32,FLEN)
NAN_BOXED(4286578680,32,FLEN)
NAN_BOXED(2123163381,32,FLEN)
NAN_BOXED(3228077817,32,FLEN)
NAN_BOXED(4286578684,32,FLEN)
NAN_BOXED(2123163381,32,FLEN)
NAN_BOXED(3228077817,32,FLEN)
NAN_BOXED(4286578686,32,FLEN)
NAN_BOXED(2123176934,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2123176934,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483651,32,FLEN)
NAN_BOXED(2123176934,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483655,32,FLEN)
NAN_BOXED(2123176934,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149161369,32,FLEN)
NAN_BOXED(2123176934,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149880393,32,FLEN)
NAN_BOXED(2123176934,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2150839091,32,FLEN)
NAN_BOXED(2123176934,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151078765,32,FLEN)
NAN_BOXED(2123176934,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151398331,32,FLEN)
NAN_BOXED(2123176934,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151957572,32,FLEN)
NAN_BOXED(2123176934,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2152516812,32,FLEN)
NAN_BOXED(2123176934,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2153475510,32,FLEN)
NAN_BOXED(2123176934,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154194534,32,FLEN)
NAN_BOXED(2123176934,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154673883,32,FLEN)
NAN_BOXED(2123176934,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872248,32,FLEN)
NAN_BOXED(2123176934,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872252,32,FLEN)
NAN_BOXED(2123176934,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872254,32,FLEN)
NAN_BOXED(2123176934,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2357198848,32,FLEN)
NAN_BOXED(2123176934,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2357198849,32,FLEN)
NAN_BOXED(2123176934,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2357198851,32,FLEN)
NAN_BOXED(2123176934,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2357198855,32,FLEN)
NAN_BOXED(2123176934,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2357198863,32,FLEN)
NAN_BOXED(2123176934,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2357198879,32,FLEN)
NAN_BOXED(2123176934,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2357198911,32,FLEN)
NAN_BOXED(2123176934,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2357198975,32,FLEN)
NAN_BOXED(2123176934,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2357199103,32,FLEN)
NAN_BOXED(2123176934,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2357199359,32,FLEN)
NAN_BOXED(2123176934,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2357199871,32,FLEN)
NAN_BOXED(2123176934,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2357200895,32,FLEN)
NAN_BOXED(2123176934,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2357202943,32,FLEN)
NAN_BOXED(2123176934,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2357207039,32,FLEN)
NAN_BOXED(2123176934,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2357215231,32,FLEN)
NAN_BOXED(2123176934,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2357231615,32,FLEN)
NAN_BOXED(2123176934,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2357264383,32,FLEN)
NAN_BOXED(2123176934,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2357329919,32,FLEN)
NAN_BOXED(2123176934,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2357460991,32,FLEN)
NAN_BOXED(2123176934,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2357723135,32,FLEN)
NAN_BOXED(2123176934,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2358247423,32,FLEN)
NAN_BOXED(2123176934,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2359295999,32,FLEN)
NAN_BOXED(2123176934,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2361393151,32,FLEN)
NAN_BOXED(2123176934,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2361393152,32,FLEN)
NAN_BOXED(2123176934,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2363490304,32,FLEN)
NAN_BOXED(2123176934,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2364538880,32,FLEN)
NAN_BOXED(2123176934,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2365063168,32,FLEN)
NAN_BOXED(2123176934,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2365325312,32,FLEN)
NAN_BOXED(2123176934,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2365456384,32,FLEN)
NAN_BOXED(2123176934,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2365521920,32,FLEN)
NAN_BOXED(2123176934,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2365554688,32,FLEN)
NAN_BOXED(2123176934,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2365571072,32,FLEN)
NAN_BOXED(2123176934,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2365579264,32,FLEN)
NAN_BOXED(2123176934,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2365583360,32,FLEN)
NAN_BOXED(2123176934,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2365585408,32,FLEN)
NAN_BOXED(2123176934,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2365586432,32,FLEN)
NAN_BOXED(2123176934,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2365586944,32,FLEN)
NAN_BOXED(2123176934,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2365587200,32,FLEN)
NAN_BOXED(2123176934,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2365587328,32,FLEN)
NAN_BOXED(2123176934,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2365587392,32,FLEN)
NAN_BOXED(2123176934,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2365587424,32,FLEN)
NAN_BOXED(2123176934,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2365587440,32,FLEN)
NAN_BOXED(2123176934,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2365587448,32,FLEN)
NAN_BOXED(2123176934,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2365587452,32,FLEN)
NAN_BOXED(2123176934,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2365587454,32,FLEN)
NAN_BOXED(2123176934,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2365587455,32,FLEN)
NAN_BOXED(2123201135,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388609,32,FLEN)
NAN_BOXED(2123201135,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388611,32,FLEN)
NAN_BOXED(2123201135,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388615,32,FLEN)
NAN_BOXED(2123201135,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(10066329,32,FLEN)
NAN_BOXED(2123201135,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(10785353,32,FLEN)
NAN_BOXED(2123201135,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(11744051,32,FLEN)
NAN_BOXED(2123201135,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(11983725,32,FLEN)
NAN_BOXED(2123201135,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(12303291,32,FLEN)
NAN_BOXED(2123201135,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(12862532,32,FLEN)
NAN_BOXED(2123201135,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(13421772,32,FLEN)
NAN_BOXED(2123201135,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(14380470,32,FLEN)
NAN_BOXED(2123201135,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(15099494,32,FLEN)
NAN_BOXED(2123201135,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(15578843,32,FLEN)
NAN_BOXED(2123201135,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777208,32,FLEN)
NAN_BOXED(2123201135,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777212,32,FLEN)
NAN_BOXED(2123201135,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777214,32,FLEN)
NAN_BOXED(2123201135,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(192937984,32,FLEN)
NAN_BOXED(2123201135,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(192937985,32,FLEN)
NAN_BOXED(2123201135,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(192937987,32,FLEN)
NAN_BOXED(2123201135,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(192937991,32,FLEN)
NAN_BOXED(2123201135,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(192937999,32,FLEN)
NAN_BOXED(2123201135,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(192938015,32,FLEN)
NAN_BOXED(2123201135,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(192938047,32,FLEN)
NAN_BOXED(2123201135,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(192938111,32,FLEN)
NAN_BOXED(2123201135,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(192938239,32,FLEN)
NAN_BOXED(2123201135,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(192938495,32,FLEN)
NAN_BOXED(2123201135,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(192939007,32,FLEN)
NAN_BOXED(2123201135,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(192940031,32,FLEN)
NAN_BOXED(2123201135,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(192942079,32,FLEN)
NAN_BOXED(2123201135,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(192946175,32,FLEN)
NAN_BOXED(2123201135,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(192954367,32,FLEN)
NAN_BOXED(2123201135,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(192970751,32,FLEN)
NAN_BOXED(2123201135,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(193003519,32,FLEN)
NAN_BOXED(2123201135,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(193069055,32,FLEN)
NAN_BOXED(2123201135,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(193200127,32,FLEN)
NAN_BOXED(2123201135,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(193462271,32,FLEN)
NAN_BOXED(2123201135,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(193986559,32,FLEN)
NAN_BOXED(2123201135,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(195035135,32,FLEN)
NAN_BOXED(2123201135,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(197132287,32,FLEN)
NAN_BOXED(2123201135,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(197132288,32,FLEN)
NAN_BOXED(2123201135,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(199229440,32,FLEN)
NAN_BOXED(2123201135,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(200278016,32,FLEN)
NAN_BOXED(2123201135,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(200802304,32,FLEN)
NAN_BOXED(2123201135,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(201064448,32,FLEN)
NAN_BOXED(2123201135,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(201195520,32,FLEN)
NAN_BOXED(2123201135,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(201261056,32,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
