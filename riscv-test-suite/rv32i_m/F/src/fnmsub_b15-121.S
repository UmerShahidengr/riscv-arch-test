
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 14:18:08 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32F/fnmsub.s.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmsub.s instruction of the RISC-V RV32F_Zicsr,RV32FD_Zicsr,RV64F_Zicsr,RV64FD_Zicsr extension for the fnmsub_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF_Zicsr,RV32IFD_Zicsr,RV64IF_Zicsr,RV64IFD_Zicsr,RV32EF_Zicsr,RV32EFD_Zicsr,RV64EF_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fnmsub_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*F.*);def TEST_CASE_1=True;",fnmsub_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_15360:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1a28e8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x548f03 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9a28e8; op2val:0xc0548f03;
op3val:0xff249249; valaddr_reg:x3; val_offset:46080*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46080*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15361:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1a28e8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x548f03 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9a28e8; op2val:0xc0548f03;
op3val:0xff333333; valaddr_reg:x3; val_offset:46083*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46083*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15362:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1a28e8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x548f03 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9a28e8; op2val:0xc0548f03;
op3val:0xff36db6d; valaddr_reg:x3; val_offset:46086*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46086*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15363:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1a28e8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x548f03 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9a28e8; op2val:0xc0548f03;
op3val:0xff3bbbbb; valaddr_reg:x3; val_offset:46089*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46089*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15364:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1a28e8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x548f03 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9a28e8; op2val:0xc0548f03;
op3val:0xff444444; valaddr_reg:x3; val_offset:46092*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46092*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15365:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1a28e8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x548f03 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9a28e8; op2val:0xc0548f03;
op3val:0xff4ccccc; valaddr_reg:x3; val_offset:46095*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46095*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15366:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1a28e8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x548f03 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9a28e8; op2val:0xc0548f03;
op3val:0xff5b6db6; valaddr_reg:x3; val_offset:46098*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46098*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15367:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1a28e8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x548f03 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9a28e8; op2val:0xc0548f03;
op3val:0xff666666; valaddr_reg:x3; val_offset:46101*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46101*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15368:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1a28e8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x548f03 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9a28e8; op2val:0xc0548f03;
op3val:0xff6db6db; valaddr_reg:x3; val_offset:46104*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46104*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15369:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1a28e8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x548f03 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9a28e8; op2val:0xc0548f03;
op3val:0xff7ffff8; valaddr_reg:x3; val_offset:46107*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46107*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15370:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1a28e8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x548f03 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9a28e8; op2val:0xc0548f03;
op3val:0xff7ffffc; valaddr_reg:x3; val_offset:46110*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46110*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15371:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1a28e8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x548f03 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9a28e8; op2val:0xc0548f03;
op3val:0xff7ffffe; valaddr_reg:x3; val_offset:46113*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46113*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15372:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xf9000000; valaddr_reg:x3; val_offset:46116*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46116*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15373:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xf9000001; valaddr_reg:x3; val_offset:46119*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46119*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15374:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xf9000003; valaddr_reg:x3; val_offset:46122*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46122*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15375:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xf9000007; valaddr_reg:x3; val_offset:46125*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46125*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15376:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xf900000f; valaddr_reg:x3; val_offset:46128*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46128*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15377:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xf900001f; valaddr_reg:x3; val_offset:46131*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46131*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15378:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xf900003f; valaddr_reg:x3; val_offset:46134*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46134*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15379:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xf900007f; valaddr_reg:x3; val_offset:46137*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46137*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15380:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xf90000ff; valaddr_reg:x3; val_offset:46140*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46140*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15381:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xf90001ff; valaddr_reg:x3; val_offset:46143*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46143*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15382:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xf90003ff; valaddr_reg:x3; val_offset:46146*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46146*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15383:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xf90007ff; valaddr_reg:x3; val_offset:46149*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46149*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15384:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xf9000fff; valaddr_reg:x3; val_offset:46152*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46152*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15385:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xf9001fff; valaddr_reg:x3; val_offset:46155*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46155*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15386:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xf9003fff; valaddr_reg:x3; val_offset:46158*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46158*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15387:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xf9007fff; valaddr_reg:x3; val_offset:46161*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46161*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15388:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xf900ffff; valaddr_reg:x3; val_offset:46164*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46164*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15389:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xf901ffff; valaddr_reg:x3; val_offset:46167*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46167*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15390:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xf903ffff; valaddr_reg:x3; val_offset:46170*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46170*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15391:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xf907ffff; valaddr_reg:x3; val_offset:46173*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46173*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15392:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xf90fffff; valaddr_reg:x3; val_offset:46176*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46176*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15393:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xf91fffff; valaddr_reg:x3; val_offset:46179*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46179*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15394:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xf93fffff; valaddr_reg:x3; val_offset:46182*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46182*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15395:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xf9400000; valaddr_reg:x3; val_offset:46185*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46185*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15396:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xf9600000; valaddr_reg:x3; val_offset:46188*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46188*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15397:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xf9700000; valaddr_reg:x3; val_offset:46191*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46191*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15398:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xf9780000; valaddr_reg:x3; val_offset:46194*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46194*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15399:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xf97c0000; valaddr_reg:x3; val_offset:46197*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46197*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15400:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xf97e0000; valaddr_reg:x3; val_offset:46200*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46200*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15401:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xf97f0000; valaddr_reg:x3; val_offset:46203*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46203*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15402:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xf97f8000; valaddr_reg:x3; val_offset:46206*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46206*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15403:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xf97fc000; valaddr_reg:x3; val_offset:46209*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46209*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15404:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xf97fe000; valaddr_reg:x3; val_offset:46212*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46212*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15405:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xf97ff000; valaddr_reg:x3; val_offset:46215*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46215*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15406:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xf97ff800; valaddr_reg:x3; val_offset:46218*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46218*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15407:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xf97ffc00; valaddr_reg:x3; val_offset:46221*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46221*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15408:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xf97ffe00; valaddr_reg:x3; val_offset:46224*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46224*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15409:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xf97fff00; valaddr_reg:x3; val_offset:46227*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46227*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15410:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xf97fff80; valaddr_reg:x3; val_offset:46230*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46230*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15411:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xf97fffc0; valaddr_reg:x3; val_offset:46233*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46233*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15412:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xf97fffe0; valaddr_reg:x3; val_offset:46236*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46236*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15413:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xf97ffff0; valaddr_reg:x3; val_offset:46239*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46239*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15414:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xf97ffff8; valaddr_reg:x3; val_offset:46242*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46242*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15415:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xf97ffffc; valaddr_reg:x3; val_offset:46245*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46245*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15416:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xf97ffffe; valaddr_reg:x3; val_offset:46248*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46248*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15417:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xf97fffff; valaddr_reg:x3; val_offset:46251*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46251*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15418:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xff000001; valaddr_reg:x3; val_offset:46254*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46254*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15419:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xff000003; valaddr_reg:x3; val_offset:46257*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46257*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15420:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xff000007; valaddr_reg:x3; val_offset:46260*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46260*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15421:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xff199999; valaddr_reg:x3; val_offset:46263*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46263*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15422:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xff249249; valaddr_reg:x3; val_offset:46266*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46266*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15423:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xff333333; valaddr_reg:x3; val_offset:46269*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46269*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15424:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xff36db6d; valaddr_reg:x3; val_offset:46272*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46272*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15425:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xff3bbbbb; valaddr_reg:x3; val_offset:46275*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46275*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15426:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xff444444; valaddr_reg:x3; val_offset:46278*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46278*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15427:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xff4ccccc; valaddr_reg:x3; val_offset:46281*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46281*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15428:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xff5b6db6; valaddr_reg:x3; val_offset:46284*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46284*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15429:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xff666666; valaddr_reg:x3; val_offset:46287*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46287*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15430:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xff6db6db; valaddr_reg:x3; val_offset:46290*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46290*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15431:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xff7ffff8; valaddr_reg:x3; val_offset:46293*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46293*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15432:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xff7ffffc; valaddr_reg:x3; val_offset:46296*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46296*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15433:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xff7ffffe; valaddr_reg:x3; val_offset:46299*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46299*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15434:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b09f8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x535a74 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b09f8; op2val:0xc0535a74;
op3val:0xf3000000; valaddr_reg:x3; val_offset:46302*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46302*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15435:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b09f8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x535a74 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b09f8; op2val:0xc0535a74;
op3val:0xf3000001; valaddr_reg:x3; val_offset:46305*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46305*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15436:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b09f8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x535a74 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b09f8; op2val:0xc0535a74;
op3val:0xf3000003; valaddr_reg:x3; val_offset:46308*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46308*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15437:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b09f8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x535a74 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b09f8; op2val:0xc0535a74;
op3val:0xf3000007; valaddr_reg:x3; val_offset:46311*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46311*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15438:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b09f8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x535a74 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b09f8; op2val:0xc0535a74;
op3val:0xf300000f; valaddr_reg:x3; val_offset:46314*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46314*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15439:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b09f8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x535a74 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b09f8; op2val:0xc0535a74;
op3val:0xf300001f; valaddr_reg:x3; val_offset:46317*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46317*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15440:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b09f8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x535a74 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b09f8; op2val:0xc0535a74;
op3val:0xf300003f; valaddr_reg:x3; val_offset:46320*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46320*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15441:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b09f8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x535a74 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b09f8; op2val:0xc0535a74;
op3val:0xf300007f; valaddr_reg:x3; val_offset:46323*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46323*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15442:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b09f8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x535a74 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b09f8; op2val:0xc0535a74;
op3val:0xf30000ff; valaddr_reg:x3; val_offset:46326*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46326*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15443:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b09f8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x535a74 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b09f8; op2val:0xc0535a74;
op3val:0xf30001ff; valaddr_reg:x3; val_offset:46329*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46329*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15444:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b09f8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x535a74 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b09f8; op2val:0xc0535a74;
op3val:0xf30003ff; valaddr_reg:x3; val_offset:46332*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46332*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15445:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b09f8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x535a74 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b09f8; op2val:0xc0535a74;
op3val:0xf30007ff; valaddr_reg:x3; val_offset:46335*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46335*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15446:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b09f8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x535a74 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b09f8; op2val:0xc0535a74;
op3val:0xf3000fff; valaddr_reg:x3; val_offset:46338*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46338*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15447:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b09f8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x535a74 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b09f8; op2val:0xc0535a74;
op3val:0xf3001fff; valaddr_reg:x3; val_offset:46341*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46341*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15448:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b09f8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x535a74 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b09f8; op2val:0xc0535a74;
op3val:0xf3003fff; valaddr_reg:x3; val_offset:46344*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46344*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15449:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b09f8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x535a74 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b09f8; op2val:0xc0535a74;
op3val:0xf3007fff; valaddr_reg:x3; val_offset:46347*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46347*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15450:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b09f8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x535a74 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b09f8; op2val:0xc0535a74;
op3val:0xf300ffff; valaddr_reg:x3; val_offset:46350*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46350*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15451:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b09f8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x535a74 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b09f8; op2val:0xc0535a74;
op3val:0xf301ffff; valaddr_reg:x3; val_offset:46353*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46353*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15452:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b09f8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x535a74 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b09f8; op2val:0xc0535a74;
op3val:0xf303ffff; valaddr_reg:x3; val_offset:46356*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46356*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15453:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b09f8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x535a74 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b09f8; op2val:0xc0535a74;
op3val:0xf307ffff; valaddr_reg:x3; val_offset:46359*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46359*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15454:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b09f8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x535a74 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b09f8; op2val:0xc0535a74;
op3val:0xf30fffff; valaddr_reg:x3; val_offset:46362*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46362*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15455:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b09f8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x535a74 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b09f8; op2val:0xc0535a74;
op3val:0xf31fffff; valaddr_reg:x3; val_offset:46365*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46365*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15456:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b09f8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x535a74 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b09f8; op2val:0xc0535a74;
op3val:0xf33fffff; valaddr_reg:x3; val_offset:46368*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46368*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15457:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b09f8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x535a74 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b09f8; op2val:0xc0535a74;
op3val:0xf3400000; valaddr_reg:x3; val_offset:46371*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46371*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15458:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b09f8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x535a74 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b09f8; op2val:0xc0535a74;
op3val:0xf3600000; valaddr_reg:x3; val_offset:46374*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46374*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15459:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b09f8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x535a74 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b09f8; op2val:0xc0535a74;
op3val:0xf3700000; valaddr_reg:x3; val_offset:46377*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46377*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15460:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b09f8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x535a74 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b09f8; op2val:0xc0535a74;
op3val:0xf3780000; valaddr_reg:x3; val_offset:46380*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46380*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15461:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b09f8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x535a74 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b09f8; op2val:0xc0535a74;
op3val:0xf37c0000; valaddr_reg:x3; val_offset:46383*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46383*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15462:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b09f8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x535a74 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b09f8; op2val:0xc0535a74;
op3val:0xf37e0000; valaddr_reg:x3; val_offset:46386*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46386*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15463:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b09f8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x535a74 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b09f8; op2val:0xc0535a74;
op3val:0xf37f0000; valaddr_reg:x3; val_offset:46389*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46389*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15464:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b09f8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x535a74 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b09f8; op2val:0xc0535a74;
op3val:0xf37f8000; valaddr_reg:x3; val_offset:46392*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46392*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15465:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b09f8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x535a74 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b09f8; op2val:0xc0535a74;
op3val:0xf37fc000; valaddr_reg:x3; val_offset:46395*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46395*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15466:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b09f8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x535a74 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b09f8; op2val:0xc0535a74;
op3val:0xf37fe000; valaddr_reg:x3; val_offset:46398*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46398*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15467:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b09f8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x535a74 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b09f8; op2val:0xc0535a74;
op3val:0xf37ff000; valaddr_reg:x3; val_offset:46401*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46401*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15468:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b09f8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x535a74 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b09f8; op2val:0xc0535a74;
op3val:0xf37ff800; valaddr_reg:x3; val_offset:46404*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46404*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15469:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b09f8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x535a74 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b09f8; op2val:0xc0535a74;
op3val:0xf37ffc00; valaddr_reg:x3; val_offset:46407*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46407*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15470:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b09f8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x535a74 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b09f8; op2val:0xc0535a74;
op3val:0xf37ffe00; valaddr_reg:x3; val_offset:46410*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46410*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15471:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b09f8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x535a74 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b09f8; op2val:0xc0535a74;
op3val:0xf37fff00; valaddr_reg:x3; val_offset:46413*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46413*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15472:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b09f8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x535a74 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b09f8; op2val:0xc0535a74;
op3val:0xf37fff80; valaddr_reg:x3; val_offset:46416*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46416*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15473:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b09f8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x535a74 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b09f8; op2val:0xc0535a74;
op3val:0xf37fffc0; valaddr_reg:x3; val_offset:46419*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46419*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15474:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b09f8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x535a74 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b09f8; op2val:0xc0535a74;
op3val:0xf37fffe0; valaddr_reg:x3; val_offset:46422*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46422*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15475:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b09f8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x535a74 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b09f8; op2val:0xc0535a74;
op3val:0xf37ffff0; valaddr_reg:x3; val_offset:46425*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46425*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15476:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b09f8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x535a74 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b09f8; op2val:0xc0535a74;
op3val:0xf37ffff8; valaddr_reg:x3; val_offset:46428*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46428*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15477:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b09f8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x535a74 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b09f8; op2val:0xc0535a74;
op3val:0xf37ffffc; valaddr_reg:x3; val_offset:46431*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46431*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15478:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b09f8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x535a74 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b09f8; op2val:0xc0535a74;
op3val:0xf37ffffe; valaddr_reg:x3; val_offset:46434*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46434*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15479:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b09f8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x535a74 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b09f8; op2val:0xc0535a74;
op3val:0xf37fffff; valaddr_reg:x3; val_offset:46437*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46437*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15480:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b09f8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x535a74 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b09f8; op2val:0xc0535a74;
op3val:0xff000001; valaddr_reg:x3; val_offset:46440*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46440*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15481:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b09f8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x535a74 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b09f8; op2val:0xc0535a74;
op3val:0xff000003; valaddr_reg:x3; val_offset:46443*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46443*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15482:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b09f8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x535a74 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b09f8; op2val:0xc0535a74;
op3val:0xff000007; valaddr_reg:x3; val_offset:46446*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46446*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15483:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b09f8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x535a74 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b09f8; op2val:0xc0535a74;
op3val:0xff199999; valaddr_reg:x3; val_offset:46449*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46449*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15484:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b09f8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x535a74 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b09f8; op2val:0xc0535a74;
op3val:0xff249249; valaddr_reg:x3; val_offset:46452*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46452*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15485:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b09f8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x535a74 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b09f8; op2val:0xc0535a74;
op3val:0xff333333; valaddr_reg:x3; val_offset:46455*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46455*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15486:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b09f8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x535a74 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b09f8; op2val:0xc0535a74;
op3val:0xff36db6d; valaddr_reg:x3; val_offset:46458*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46458*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15487:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b09f8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x535a74 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b09f8; op2val:0xc0535a74;
op3val:0xff3bbbbb; valaddr_reg:x3; val_offset:46461*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46461*0 + 3*120*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(2124032232,32,FLEN)
NAN_BOXED(3226767107,32,FLEN)
NAN_BOXED(4280586825,32,FLEN)
NAN_BOXED(2124032232,32,FLEN)
NAN_BOXED(3226767107,32,FLEN)
NAN_BOXED(4281545523,32,FLEN)
NAN_BOXED(2124032232,32,FLEN)
NAN_BOXED(3226767107,32,FLEN)
NAN_BOXED(4281785197,32,FLEN)
NAN_BOXED(2124032232,32,FLEN)
NAN_BOXED(3226767107,32,FLEN)
NAN_BOXED(4282104763,32,FLEN)
NAN_BOXED(2124032232,32,FLEN)
NAN_BOXED(3226767107,32,FLEN)
NAN_BOXED(4282664004,32,FLEN)
NAN_BOXED(2124032232,32,FLEN)
NAN_BOXED(3226767107,32,FLEN)
NAN_BOXED(4283223244,32,FLEN)
NAN_BOXED(2124032232,32,FLEN)
NAN_BOXED(3226767107,32,FLEN)
NAN_BOXED(4284181942,32,FLEN)
NAN_BOXED(2124032232,32,FLEN)
NAN_BOXED(3226767107,32,FLEN)
NAN_BOXED(4284900966,32,FLEN)
NAN_BOXED(2124032232,32,FLEN)
NAN_BOXED(3226767107,32,FLEN)
NAN_BOXED(4285380315,32,FLEN)
NAN_BOXED(2124032232,32,FLEN)
NAN_BOXED(3226767107,32,FLEN)
NAN_BOXED(4286578680,32,FLEN)
NAN_BOXED(2124032232,32,FLEN)
NAN_BOXED(3226767107,32,FLEN)
NAN_BOXED(4286578684,32,FLEN)
NAN_BOXED(2124032232,32,FLEN)
NAN_BOXED(3226767107,32,FLEN)
NAN_BOXED(4286578686,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4177526784,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4177526785,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4177526787,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4177526791,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4177526799,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4177526815,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4177526847,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4177526911,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4177527039,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4177527295,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4177527807,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4177528831,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4177530879,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4177534975,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4177543167,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4177559551,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4177592319,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4177657855,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4177788927,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4178051071,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4178575359,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4179623935,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4181721087,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4181721088,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4183818240,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4184866816,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4185391104,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4185653248,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4185784320,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4185849856,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4185882624,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4185899008,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4185907200,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4185911296,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4185913344,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4185914368,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4185914880,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4185915136,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4185915264,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4185915328,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4185915360,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4185915376,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4185915384,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4185915388,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4185915390,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4185915391,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4278190081,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4278190083,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4278190087,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4279867801,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4280586825,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4281545523,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4281785197,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4282104763,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4282664004,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4283223244,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4284181942,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4284900966,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4285380315,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4286578680,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4286578684,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4286578686,32,FLEN)
NAN_BOXED(2124089848,32,FLEN)
NAN_BOXED(3226688116,32,FLEN)
NAN_BOXED(4076863488,32,FLEN)
NAN_BOXED(2124089848,32,FLEN)
NAN_BOXED(3226688116,32,FLEN)
NAN_BOXED(4076863489,32,FLEN)
NAN_BOXED(2124089848,32,FLEN)
NAN_BOXED(3226688116,32,FLEN)
NAN_BOXED(4076863491,32,FLEN)
NAN_BOXED(2124089848,32,FLEN)
NAN_BOXED(3226688116,32,FLEN)
NAN_BOXED(4076863495,32,FLEN)
NAN_BOXED(2124089848,32,FLEN)
NAN_BOXED(3226688116,32,FLEN)
NAN_BOXED(4076863503,32,FLEN)
NAN_BOXED(2124089848,32,FLEN)
NAN_BOXED(3226688116,32,FLEN)
NAN_BOXED(4076863519,32,FLEN)
NAN_BOXED(2124089848,32,FLEN)
NAN_BOXED(3226688116,32,FLEN)
NAN_BOXED(4076863551,32,FLEN)
NAN_BOXED(2124089848,32,FLEN)
NAN_BOXED(3226688116,32,FLEN)
NAN_BOXED(4076863615,32,FLEN)
NAN_BOXED(2124089848,32,FLEN)
NAN_BOXED(3226688116,32,FLEN)
NAN_BOXED(4076863743,32,FLEN)
NAN_BOXED(2124089848,32,FLEN)
NAN_BOXED(3226688116,32,FLEN)
NAN_BOXED(4076863999,32,FLEN)
NAN_BOXED(2124089848,32,FLEN)
NAN_BOXED(3226688116,32,FLEN)
NAN_BOXED(4076864511,32,FLEN)
NAN_BOXED(2124089848,32,FLEN)
NAN_BOXED(3226688116,32,FLEN)
NAN_BOXED(4076865535,32,FLEN)
NAN_BOXED(2124089848,32,FLEN)
NAN_BOXED(3226688116,32,FLEN)
NAN_BOXED(4076867583,32,FLEN)
NAN_BOXED(2124089848,32,FLEN)
NAN_BOXED(3226688116,32,FLEN)
NAN_BOXED(4076871679,32,FLEN)
NAN_BOXED(2124089848,32,FLEN)
NAN_BOXED(3226688116,32,FLEN)
NAN_BOXED(4076879871,32,FLEN)
NAN_BOXED(2124089848,32,FLEN)
NAN_BOXED(3226688116,32,FLEN)
NAN_BOXED(4076896255,32,FLEN)
NAN_BOXED(2124089848,32,FLEN)
NAN_BOXED(3226688116,32,FLEN)
NAN_BOXED(4076929023,32,FLEN)
NAN_BOXED(2124089848,32,FLEN)
NAN_BOXED(3226688116,32,FLEN)
NAN_BOXED(4076994559,32,FLEN)
NAN_BOXED(2124089848,32,FLEN)
NAN_BOXED(3226688116,32,FLEN)
NAN_BOXED(4077125631,32,FLEN)
NAN_BOXED(2124089848,32,FLEN)
NAN_BOXED(3226688116,32,FLEN)
NAN_BOXED(4077387775,32,FLEN)
NAN_BOXED(2124089848,32,FLEN)
NAN_BOXED(3226688116,32,FLEN)
NAN_BOXED(4077912063,32,FLEN)
NAN_BOXED(2124089848,32,FLEN)
NAN_BOXED(3226688116,32,FLEN)
NAN_BOXED(4078960639,32,FLEN)
NAN_BOXED(2124089848,32,FLEN)
NAN_BOXED(3226688116,32,FLEN)
NAN_BOXED(4081057791,32,FLEN)
NAN_BOXED(2124089848,32,FLEN)
NAN_BOXED(3226688116,32,FLEN)
NAN_BOXED(4081057792,32,FLEN)
NAN_BOXED(2124089848,32,FLEN)
NAN_BOXED(3226688116,32,FLEN)
NAN_BOXED(4083154944,32,FLEN)
NAN_BOXED(2124089848,32,FLEN)
NAN_BOXED(3226688116,32,FLEN)
NAN_BOXED(4084203520,32,FLEN)
NAN_BOXED(2124089848,32,FLEN)
NAN_BOXED(3226688116,32,FLEN)
NAN_BOXED(4084727808,32,FLEN)
NAN_BOXED(2124089848,32,FLEN)
NAN_BOXED(3226688116,32,FLEN)
NAN_BOXED(4084989952,32,FLEN)
NAN_BOXED(2124089848,32,FLEN)
NAN_BOXED(3226688116,32,FLEN)
NAN_BOXED(4085121024,32,FLEN)
NAN_BOXED(2124089848,32,FLEN)
NAN_BOXED(3226688116,32,FLEN)
NAN_BOXED(4085186560,32,FLEN)
NAN_BOXED(2124089848,32,FLEN)
NAN_BOXED(3226688116,32,FLEN)
NAN_BOXED(4085219328,32,FLEN)
NAN_BOXED(2124089848,32,FLEN)
NAN_BOXED(3226688116,32,FLEN)
NAN_BOXED(4085235712,32,FLEN)
NAN_BOXED(2124089848,32,FLEN)
NAN_BOXED(3226688116,32,FLEN)
NAN_BOXED(4085243904,32,FLEN)
NAN_BOXED(2124089848,32,FLEN)
NAN_BOXED(3226688116,32,FLEN)
NAN_BOXED(4085248000,32,FLEN)
NAN_BOXED(2124089848,32,FLEN)
NAN_BOXED(3226688116,32,FLEN)
NAN_BOXED(4085250048,32,FLEN)
NAN_BOXED(2124089848,32,FLEN)
NAN_BOXED(3226688116,32,FLEN)
NAN_BOXED(4085251072,32,FLEN)
NAN_BOXED(2124089848,32,FLEN)
NAN_BOXED(3226688116,32,FLEN)
NAN_BOXED(4085251584,32,FLEN)
NAN_BOXED(2124089848,32,FLEN)
NAN_BOXED(3226688116,32,FLEN)
NAN_BOXED(4085251840,32,FLEN)
NAN_BOXED(2124089848,32,FLEN)
NAN_BOXED(3226688116,32,FLEN)
NAN_BOXED(4085251968,32,FLEN)
NAN_BOXED(2124089848,32,FLEN)
NAN_BOXED(3226688116,32,FLEN)
NAN_BOXED(4085252032,32,FLEN)
NAN_BOXED(2124089848,32,FLEN)
NAN_BOXED(3226688116,32,FLEN)
NAN_BOXED(4085252064,32,FLEN)
NAN_BOXED(2124089848,32,FLEN)
NAN_BOXED(3226688116,32,FLEN)
NAN_BOXED(4085252080,32,FLEN)
NAN_BOXED(2124089848,32,FLEN)
NAN_BOXED(3226688116,32,FLEN)
NAN_BOXED(4085252088,32,FLEN)
NAN_BOXED(2124089848,32,FLEN)
NAN_BOXED(3226688116,32,FLEN)
NAN_BOXED(4085252092,32,FLEN)
NAN_BOXED(2124089848,32,FLEN)
NAN_BOXED(3226688116,32,FLEN)
NAN_BOXED(4085252094,32,FLEN)
NAN_BOXED(2124089848,32,FLEN)
NAN_BOXED(3226688116,32,FLEN)
NAN_BOXED(4085252095,32,FLEN)
NAN_BOXED(2124089848,32,FLEN)
NAN_BOXED(3226688116,32,FLEN)
NAN_BOXED(4278190081,32,FLEN)
NAN_BOXED(2124089848,32,FLEN)
NAN_BOXED(3226688116,32,FLEN)
NAN_BOXED(4278190083,32,FLEN)
NAN_BOXED(2124089848,32,FLEN)
NAN_BOXED(3226688116,32,FLEN)
NAN_BOXED(4278190087,32,FLEN)
NAN_BOXED(2124089848,32,FLEN)
NAN_BOXED(3226688116,32,FLEN)
NAN_BOXED(4279867801,32,FLEN)
NAN_BOXED(2124089848,32,FLEN)
NAN_BOXED(3226688116,32,FLEN)
NAN_BOXED(4280586825,32,FLEN)
NAN_BOXED(2124089848,32,FLEN)
NAN_BOXED(3226688116,32,FLEN)
NAN_BOXED(4281545523,32,FLEN)
NAN_BOXED(2124089848,32,FLEN)
NAN_BOXED(3226688116,32,FLEN)
NAN_BOXED(4281785197,32,FLEN)
NAN_BOXED(2124089848,32,FLEN)
NAN_BOXED(3226688116,32,FLEN)
NAN_BOXED(4282104763,32,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
