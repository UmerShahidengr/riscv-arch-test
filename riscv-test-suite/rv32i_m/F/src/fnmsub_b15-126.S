
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 14:18:08 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32F/fnmsub.s.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmsub.s instruction of the RISC-V RV32F_Zicsr,RV32FD_Zicsr,RV64F_Zicsr,RV64FD_Zicsr extension for the fnmsub_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF_Zicsr,RV32IFD_Zicsr,RV64IF_Zicsr,RV64IFD_Zicsr,RV32EF_Zicsr,RV32EFD_Zicsr,RV64EF_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fnmsub_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*F.*);def TEST_CASE_1=True;",fnmsub_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_16000:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f76cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f76cd; op2val:0x0;
op3val:0x444444; valaddr_reg:x3; val_offset:48000*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48000*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16001:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f76cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f76cd; op2val:0x0;
op3val:0x4ccccc; valaddr_reg:x3; val_offset:48003*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48003*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16002:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f76cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f76cd; op2val:0x0;
op3val:0x5b6db6; valaddr_reg:x3; val_offset:48006*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48006*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16003:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f76cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f76cd; op2val:0x0;
op3val:0x666666; valaddr_reg:x3; val_offset:48009*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48009*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16004:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f76cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f76cd; op2val:0x0;
op3val:0x6db6db; valaddr_reg:x3; val_offset:48012*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48012*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16005:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f76cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f76cd; op2val:0x0;
op3val:0x7ffff8; valaddr_reg:x3; val_offset:48015*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48015*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16006:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f76cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f76cd; op2val:0x0;
op3val:0x7ffffc; valaddr_reg:x3; val_offset:48018*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48018*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16007:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f76cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f76cd; op2val:0x0;
op3val:0x7ffffe; valaddr_reg:x3; val_offset:48021*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48021*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16008:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f76cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x4a and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f76cd; op2val:0x0;
op3val:0x25000000; valaddr_reg:x3; val_offset:48024*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48024*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16009:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f76cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x4a and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f76cd; op2val:0x0;
op3val:0x25000001; valaddr_reg:x3; val_offset:48027*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48027*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16010:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f76cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x4a and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f76cd; op2val:0x0;
op3val:0x25000003; valaddr_reg:x3; val_offset:48030*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48030*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16011:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f76cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x4a and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f76cd; op2val:0x0;
op3val:0x25000007; valaddr_reg:x3; val_offset:48033*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48033*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16012:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f76cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x4a and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f76cd; op2val:0x0;
op3val:0x2500000f; valaddr_reg:x3; val_offset:48036*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48036*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16013:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f76cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x4a and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f76cd; op2val:0x0;
op3val:0x2500001f; valaddr_reg:x3; val_offset:48039*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48039*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16014:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f76cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x4a and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f76cd; op2val:0x0;
op3val:0x2500003f; valaddr_reg:x3; val_offset:48042*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48042*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16015:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f76cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x4a and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f76cd; op2val:0x0;
op3val:0x2500007f; valaddr_reg:x3; val_offset:48045*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48045*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16016:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f76cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x4a and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f76cd; op2val:0x0;
op3val:0x250000ff; valaddr_reg:x3; val_offset:48048*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48048*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16017:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f76cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x4a and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f76cd; op2val:0x0;
op3val:0x250001ff; valaddr_reg:x3; val_offset:48051*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48051*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16018:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f76cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x4a and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f76cd; op2val:0x0;
op3val:0x250003ff; valaddr_reg:x3; val_offset:48054*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48054*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16019:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f76cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x4a and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f76cd; op2val:0x0;
op3val:0x250007ff; valaddr_reg:x3; val_offset:48057*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48057*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16020:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f76cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x4a and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f76cd; op2val:0x0;
op3val:0x25000fff; valaddr_reg:x3; val_offset:48060*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48060*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16021:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f76cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x4a and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f76cd; op2val:0x0;
op3val:0x25001fff; valaddr_reg:x3; val_offset:48063*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48063*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16022:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f76cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x4a and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f76cd; op2val:0x0;
op3val:0x25003fff; valaddr_reg:x3; val_offset:48066*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48066*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16023:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f76cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x4a and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f76cd; op2val:0x0;
op3val:0x25007fff; valaddr_reg:x3; val_offset:48069*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48069*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16024:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f76cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x4a and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f76cd; op2val:0x0;
op3val:0x2500ffff; valaddr_reg:x3; val_offset:48072*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48072*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16025:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f76cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x4a and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f76cd; op2val:0x0;
op3val:0x2501ffff; valaddr_reg:x3; val_offset:48075*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48075*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16026:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f76cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x4a and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f76cd; op2val:0x0;
op3val:0x2503ffff; valaddr_reg:x3; val_offset:48078*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48078*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16027:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f76cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x4a and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f76cd; op2val:0x0;
op3val:0x2507ffff; valaddr_reg:x3; val_offset:48081*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48081*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16028:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f76cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x4a and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f76cd; op2val:0x0;
op3val:0x250fffff; valaddr_reg:x3; val_offset:48084*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48084*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16029:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f76cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x4a and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f76cd; op2val:0x0;
op3val:0x251fffff; valaddr_reg:x3; val_offset:48087*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48087*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16030:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f76cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x4a and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f76cd; op2val:0x0;
op3val:0x253fffff; valaddr_reg:x3; val_offset:48090*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48090*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16031:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f76cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x4a and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f76cd; op2val:0x0;
op3val:0x25400000; valaddr_reg:x3; val_offset:48093*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48093*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16032:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f76cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x4a and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f76cd; op2val:0x0;
op3val:0x25600000; valaddr_reg:x3; val_offset:48096*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48096*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16033:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f76cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x4a and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f76cd; op2val:0x0;
op3val:0x25700000; valaddr_reg:x3; val_offset:48099*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48099*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16034:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f76cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x4a and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f76cd; op2val:0x0;
op3val:0x25780000; valaddr_reg:x3; val_offset:48102*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48102*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16035:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f76cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x4a and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f76cd; op2val:0x0;
op3val:0x257c0000; valaddr_reg:x3; val_offset:48105*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48105*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16036:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f76cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x4a and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f76cd; op2val:0x0;
op3val:0x257e0000; valaddr_reg:x3; val_offset:48108*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48108*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16037:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f76cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x4a and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f76cd; op2val:0x0;
op3val:0x257f0000; valaddr_reg:x3; val_offset:48111*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48111*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16038:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f76cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x4a and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f76cd; op2val:0x0;
op3val:0x257f8000; valaddr_reg:x3; val_offset:48114*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48114*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16039:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f76cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x4a and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f76cd; op2val:0x0;
op3val:0x257fc000; valaddr_reg:x3; val_offset:48117*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48117*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16040:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f76cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x4a and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f76cd; op2val:0x0;
op3val:0x257fe000; valaddr_reg:x3; val_offset:48120*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48120*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16041:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f76cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x4a and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f76cd; op2val:0x0;
op3val:0x257ff000; valaddr_reg:x3; val_offset:48123*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48123*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16042:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f76cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x4a and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f76cd; op2val:0x0;
op3val:0x257ff800; valaddr_reg:x3; val_offset:48126*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48126*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16043:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f76cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x4a and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f76cd; op2val:0x0;
op3val:0x257ffc00; valaddr_reg:x3; val_offset:48129*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48129*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16044:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f76cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x4a and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f76cd; op2val:0x0;
op3val:0x257ffe00; valaddr_reg:x3; val_offset:48132*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48132*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16045:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f76cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x4a and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f76cd; op2val:0x0;
op3val:0x257fff00; valaddr_reg:x3; val_offset:48135*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48135*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16046:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f76cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x4a and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f76cd; op2val:0x0;
op3val:0x257fff80; valaddr_reg:x3; val_offset:48138*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48138*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16047:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f76cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x4a and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f76cd; op2val:0x0;
op3val:0x257fffc0; valaddr_reg:x3; val_offset:48141*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48141*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16048:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f76cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x4a and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f76cd; op2val:0x0;
op3val:0x257fffe0; valaddr_reg:x3; val_offset:48144*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48144*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16049:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f76cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x4a and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f76cd; op2val:0x0;
op3val:0x257ffff0; valaddr_reg:x3; val_offset:48147*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48147*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16050:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f76cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x4a and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f76cd; op2val:0x0;
op3val:0x257ffff8; valaddr_reg:x3; val_offset:48150*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48150*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16051:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f76cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x4a and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f76cd; op2val:0x0;
op3val:0x257ffffc; valaddr_reg:x3; val_offset:48153*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48153*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16052:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f76cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x4a and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f76cd; op2val:0x0;
op3val:0x257ffffe; valaddr_reg:x3; val_offset:48156*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48156*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16053:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f76cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x4a and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f76cd; op2val:0x0;
op3val:0x257fffff; valaddr_reg:x3; val_offset:48159*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48159*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16054:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x42 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xa1000000; valaddr_reg:x3; val_offset:48162*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48162*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16055:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x42 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xa1000001; valaddr_reg:x3; val_offset:48165*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48165*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16056:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x42 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xa1000003; valaddr_reg:x3; val_offset:48168*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48168*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16057:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x42 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xa1000007; valaddr_reg:x3; val_offset:48171*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48171*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16058:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x42 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xa100000f; valaddr_reg:x3; val_offset:48174*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48174*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16059:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x42 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xa100001f; valaddr_reg:x3; val_offset:48177*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48177*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16060:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x42 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xa100003f; valaddr_reg:x3; val_offset:48180*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48180*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16061:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x42 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xa100007f; valaddr_reg:x3; val_offset:48183*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48183*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16062:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x42 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xa10000ff; valaddr_reg:x3; val_offset:48186*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48186*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16063:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x42 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xa10001ff; valaddr_reg:x3; val_offset:48189*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48189*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16064:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x42 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xa10003ff; valaddr_reg:x3; val_offset:48192*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48192*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16065:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x42 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xa10007ff; valaddr_reg:x3; val_offset:48195*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48195*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16066:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x42 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xa1000fff; valaddr_reg:x3; val_offset:48198*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48198*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16067:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x42 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xa1001fff; valaddr_reg:x3; val_offset:48201*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48201*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16068:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x42 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xa1003fff; valaddr_reg:x3; val_offset:48204*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48204*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16069:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x42 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xa1007fff; valaddr_reg:x3; val_offset:48207*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48207*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16070:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x42 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xa100ffff; valaddr_reg:x3; val_offset:48210*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48210*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16071:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x42 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xa101ffff; valaddr_reg:x3; val_offset:48213*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48213*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16072:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x42 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xa103ffff; valaddr_reg:x3; val_offset:48216*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48216*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16073:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x42 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xa107ffff; valaddr_reg:x3; val_offset:48219*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48219*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16074:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x42 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xa10fffff; valaddr_reg:x3; val_offset:48222*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48222*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16075:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x42 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xa11fffff; valaddr_reg:x3; val_offset:48225*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48225*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16076:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x42 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xa13fffff; valaddr_reg:x3; val_offset:48228*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48228*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16077:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x42 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xa1400000; valaddr_reg:x3; val_offset:48231*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48231*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16078:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x42 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xa1600000; valaddr_reg:x3; val_offset:48234*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48234*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16079:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x42 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xa1700000; valaddr_reg:x3; val_offset:48237*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48237*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16080:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x42 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xa1780000; valaddr_reg:x3; val_offset:48240*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48240*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16081:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x42 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xa17c0000; valaddr_reg:x3; val_offset:48243*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48243*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16082:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x42 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xa17e0000; valaddr_reg:x3; val_offset:48246*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48246*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16083:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x42 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xa17f0000; valaddr_reg:x3; val_offset:48249*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48249*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16084:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x42 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xa17f8000; valaddr_reg:x3; val_offset:48252*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48252*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16085:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x42 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xa17fc000; valaddr_reg:x3; val_offset:48255*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48255*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16086:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x42 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xa17fe000; valaddr_reg:x3; val_offset:48258*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48258*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16087:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x42 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xa17ff000; valaddr_reg:x3; val_offset:48261*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48261*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16088:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x42 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xa17ff800; valaddr_reg:x3; val_offset:48264*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48264*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16089:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x42 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xa17ffc00; valaddr_reg:x3; val_offset:48267*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48267*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16090:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x42 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xa17ffe00; valaddr_reg:x3; val_offset:48270*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48270*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16091:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x42 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xa17fff00; valaddr_reg:x3; val_offset:48273*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48273*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16092:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x42 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xa17fff80; valaddr_reg:x3; val_offset:48276*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48276*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16093:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x42 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xa17fffc0; valaddr_reg:x3; val_offset:48279*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48279*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16094:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x42 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xa17fffe0; valaddr_reg:x3; val_offset:48282*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48282*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16095:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x42 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xa17ffff0; valaddr_reg:x3; val_offset:48285*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48285*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16096:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x42 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xa17ffff8; valaddr_reg:x3; val_offset:48288*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48288*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16097:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x42 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xa17ffffc; valaddr_reg:x3; val_offset:48291*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48291*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16098:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x42 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xa17ffffe; valaddr_reg:x3; val_offset:48294*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48294*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16099:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x42 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xa17fffff; valaddr_reg:x3; val_offset:48297*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48297*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16100:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xbf800001; valaddr_reg:x3; val_offset:48300*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48300*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16101:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xbf800003; valaddr_reg:x3; val_offset:48303*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48303*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16102:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xbf800007; valaddr_reg:x3; val_offset:48306*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48306*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16103:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xbf999999; valaddr_reg:x3; val_offset:48309*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48309*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16104:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xbfa49249; valaddr_reg:x3; val_offset:48312*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48312*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16105:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xbfb33333; valaddr_reg:x3; val_offset:48315*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48315*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16106:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xbfb6db6d; valaddr_reg:x3; val_offset:48318*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48318*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16107:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xbfbbbbbb; valaddr_reg:x3; val_offset:48321*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48321*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16108:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xbfc44444; valaddr_reg:x3; val_offset:48324*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48324*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16109:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xbfcccccc; valaddr_reg:x3; val_offset:48327*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48327*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16110:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xbfdb6db6; valaddr_reg:x3; val_offset:48330*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48330*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16111:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xbfe66666; valaddr_reg:x3; val_offset:48333*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48333*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16112:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xbfedb6db; valaddr_reg:x3; val_offset:48336*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48336*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16113:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xbffffff8; valaddr_reg:x3; val_offset:48339*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48339*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16114:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xbffffffc; valaddr_reg:x3; val_offset:48342*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48342*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16115:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xbffffffe; valaddr_reg:x3; val_offset:48345*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48345*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16116:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x209877 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea09877; op2val:0x80000000;
op3val:0x80000001; valaddr_reg:x3; val_offset:48348*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48348*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16117:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x209877 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea09877; op2val:0x80000000;
op3val:0x80000003; valaddr_reg:x3; val_offset:48351*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48351*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16118:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x209877 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea09877; op2val:0x80000000;
op3val:0x80000007; valaddr_reg:x3; val_offset:48354*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48354*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16119:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x209877 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea09877; op2val:0x80000000;
op3val:0x80199999; valaddr_reg:x3; val_offset:48357*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48357*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16120:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x209877 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea09877; op2val:0x80000000;
op3val:0x80249249; valaddr_reg:x3; val_offset:48360*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48360*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16121:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x209877 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea09877; op2val:0x80000000;
op3val:0x80333333; valaddr_reg:x3; val_offset:48363*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48363*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16122:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x209877 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea09877; op2val:0x80000000;
op3val:0x8036db6d; valaddr_reg:x3; val_offset:48366*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48366*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16123:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x209877 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea09877; op2val:0x80000000;
op3val:0x803bbbbb; valaddr_reg:x3; val_offset:48369*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48369*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16124:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x209877 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea09877; op2val:0x80000000;
op3val:0x80444444; valaddr_reg:x3; val_offset:48372*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48372*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16125:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x209877 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea09877; op2val:0x80000000;
op3val:0x804ccccc; valaddr_reg:x3; val_offset:48375*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48375*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16126:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x209877 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea09877; op2val:0x80000000;
op3val:0x805b6db6; valaddr_reg:x3; val_offset:48378*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48378*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16127:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x209877 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea09877; op2val:0x80000000;
op3val:0x80666666; valaddr_reg:x3; val_offset:48381*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48381*0 + 3*125*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(2124379853,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(4473924,32,FLEN)
NAN_BOXED(2124379853,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5033164,32,FLEN)
NAN_BOXED(2124379853,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5991862,32,FLEN)
NAN_BOXED(2124379853,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(6710886,32,FLEN)
NAN_BOXED(2124379853,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7190235,32,FLEN)
NAN_BOXED(2124379853,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388600,32,FLEN)
NAN_BOXED(2124379853,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388604,32,FLEN)
NAN_BOXED(2124379853,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388606,32,FLEN)
NAN_BOXED(2124379853,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(620756992,32,FLEN)
NAN_BOXED(2124379853,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(620756993,32,FLEN)
NAN_BOXED(2124379853,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(620756995,32,FLEN)
NAN_BOXED(2124379853,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(620756999,32,FLEN)
NAN_BOXED(2124379853,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(620757007,32,FLEN)
NAN_BOXED(2124379853,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(620757023,32,FLEN)
NAN_BOXED(2124379853,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(620757055,32,FLEN)
NAN_BOXED(2124379853,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(620757119,32,FLEN)
NAN_BOXED(2124379853,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(620757247,32,FLEN)
NAN_BOXED(2124379853,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(620757503,32,FLEN)
NAN_BOXED(2124379853,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(620758015,32,FLEN)
NAN_BOXED(2124379853,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(620759039,32,FLEN)
NAN_BOXED(2124379853,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(620761087,32,FLEN)
NAN_BOXED(2124379853,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(620765183,32,FLEN)
NAN_BOXED(2124379853,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(620773375,32,FLEN)
NAN_BOXED(2124379853,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(620789759,32,FLEN)
NAN_BOXED(2124379853,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(620822527,32,FLEN)
NAN_BOXED(2124379853,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(620888063,32,FLEN)
NAN_BOXED(2124379853,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(621019135,32,FLEN)
NAN_BOXED(2124379853,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(621281279,32,FLEN)
NAN_BOXED(2124379853,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(621805567,32,FLEN)
NAN_BOXED(2124379853,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(622854143,32,FLEN)
NAN_BOXED(2124379853,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(624951295,32,FLEN)
NAN_BOXED(2124379853,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(624951296,32,FLEN)
NAN_BOXED(2124379853,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(627048448,32,FLEN)
NAN_BOXED(2124379853,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(628097024,32,FLEN)
NAN_BOXED(2124379853,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(628621312,32,FLEN)
NAN_BOXED(2124379853,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(628883456,32,FLEN)
NAN_BOXED(2124379853,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(629014528,32,FLEN)
NAN_BOXED(2124379853,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(629080064,32,FLEN)
NAN_BOXED(2124379853,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(629112832,32,FLEN)
NAN_BOXED(2124379853,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(629129216,32,FLEN)
NAN_BOXED(2124379853,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(629137408,32,FLEN)
NAN_BOXED(2124379853,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(629141504,32,FLEN)
NAN_BOXED(2124379853,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(629143552,32,FLEN)
NAN_BOXED(2124379853,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(629144576,32,FLEN)
NAN_BOXED(2124379853,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(629145088,32,FLEN)
NAN_BOXED(2124379853,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(629145344,32,FLEN)
NAN_BOXED(2124379853,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(629145472,32,FLEN)
NAN_BOXED(2124379853,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(629145536,32,FLEN)
NAN_BOXED(2124379853,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(629145568,32,FLEN)
NAN_BOXED(2124379853,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(629145584,32,FLEN)
NAN_BOXED(2124379853,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(629145592,32,FLEN)
NAN_BOXED(2124379853,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(629145596,32,FLEN)
NAN_BOXED(2124379853,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(629145598,32,FLEN)
NAN_BOXED(2124379853,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(629145599,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(2701131776,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(2701131777,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(2701131779,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(2701131783,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(2701131791,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(2701131807,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(2701131839,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(2701131903,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(2701132031,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(2701132287,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(2701132799,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(2701133823,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(2701135871,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(2701139967,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(2701148159,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(2701164543,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(2701197311,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(2701262847,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(2701393919,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(2701656063,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(2702180351,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(2703228927,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(2705326079,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(2705326080,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(2707423232,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(2708471808,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(2708996096,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(2709258240,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(2709389312,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(2709454848,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(2709487616,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(2709504000,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(2709512192,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(2709516288,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(2709518336,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(2709519360,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(2709519872,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(2709520128,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(2709520256,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(2709520320,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(2709520352,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(2709520368,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(2709520376,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(2709520380,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(2709520382,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(2709520383,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(3212836865,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(3212836867,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(3212836871,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(3214514585,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(3215233609,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(3216192307,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(3216431981,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(3216751547,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(3217310788,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(3217870028,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(3218828726,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(3219547750,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(3220027099,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(3221225464,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(3221225468,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(3221225470,32,FLEN)
NAN_BOXED(2124454007,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2124454007,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483651,32,FLEN)
NAN_BOXED(2124454007,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483655,32,FLEN)
NAN_BOXED(2124454007,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149161369,32,FLEN)
NAN_BOXED(2124454007,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149880393,32,FLEN)
NAN_BOXED(2124454007,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2150839091,32,FLEN)
NAN_BOXED(2124454007,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151078765,32,FLEN)
NAN_BOXED(2124454007,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151398331,32,FLEN)
NAN_BOXED(2124454007,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151957572,32,FLEN)
NAN_BOXED(2124454007,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2152516812,32,FLEN)
NAN_BOXED(2124454007,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2153475510,32,FLEN)
NAN_BOXED(2124454007,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154194534,32,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
