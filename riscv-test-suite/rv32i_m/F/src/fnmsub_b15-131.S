
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 14:18:08 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32F/fnmsub.s.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmsub.s instruction of the RISC-V RV32F_Zicsr,RV32FD_Zicsr,RV64F_Zicsr,RV64FD_Zicsr extension for the fnmsub_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF_Zicsr,RV32IFD_Zicsr,RV64IF_Zicsr,RV64IFD_Zicsr,RV32EF_Zicsr,RV32EFD_Zicsr,RV64EF_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fnmsub_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*F.*);def TEST_CASE_1=True;",fnmsub_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_16640:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x25bb60 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x62dbc2 and fs3 == 1 and fe3 == 0x9f and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea5bb60; op2val:0x8062dbc2;
op3val:0xcf83ffff; valaddr_reg:x3; val_offset:49920*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49920*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16641:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x25bb60 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x62dbc2 and fs3 == 1 and fe3 == 0x9f and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea5bb60; op2val:0x8062dbc2;
op3val:0xcf87ffff; valaddr_reg:x3; val_offset:49923*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49923*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16642:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x25bb60 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x62dbc2 and fs3 == 1 and fe3 == 0x9f and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea5bb60; op2val:0x8062dbc2;
op3val:0xcf8fffff; valaddr_reg:x3; val_offset:49926*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49926*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16643:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x25bb60 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x62dbc2 and fs3 == 1 and fe3 == 0x9f and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea5bb60; op2val:0x8062dbc2;
op3val:0xcf9fffff; valaddr_reg:x3; val_offset:49929*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49929*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16644:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x25bb60 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x62dbc2 and fs3 == 1 and fe3 == 0x9f and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea5bb60; op2val:0x8062dbc2;
op3val:0xcfbfffff; valaddr_reg:x3; val_offset:49932*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49932*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16645:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x25bb60 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x62dbc2 and fs3 == 1 and fe3 == 0x9f and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea5bb60; op2val:0x8062dbc2;
op3val:0xcfc00000; valaddr_reg:x3; val_offset:49935*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49935*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16646:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x25bb60 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x62dbc2 and fs3 == 1 and fe3 == 0x9f and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea5bb60; op2val:0x8062dbc2;
op3val:0xcfe00000; valaddr_reg:x3; val_offset:49938*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49938*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16647:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x25bb60 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x62dbc2 and fs3 == 1 and fe3 == 0x9f and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea5bb60; op2val:0x8062dbc2;
op3val:0xcff00000; valaddr_reg:x3; val_offset:49941*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49941*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16648:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x25bb60 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x62dbc2 and fs3 == 1 and fe3 == 0x9f and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea5bb60; op2val:0x8062dbc2;
op3val:0xcff80000; valaddr_reg:x3; val_offset:49944*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49944*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16649:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x25bb60 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x62dbc2 and fs3 == 1 and fe3 == 0x9f and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea5bb60; op2val:0x8062dbc2;
op3val:0xcffc0000; valaddr_reg:x3; val_offset:49947*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49947*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16650:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x25bb60 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x62dbc2 and fs3 == 1 and fe3 == 0x9f and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea5bb60; op2val:0x8062dbc2;
op3val:0xcffe0000; valaddr_reg:x3; val_offset:49950*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49950*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16651:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x25bb60 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x62dbc2 and fs3 == 1 and fe3 == 0x9f and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea5bb60; op2val:0x8062dbc2;
op3val:0xcfff0000; valaddr_reg:x3; val_offset:49953*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49953*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16652:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x25bb60 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x62dbc2 and fs3 == 1 and fe3 == 0x9f and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea5bb60; op2val:0x8062dbc2;
op3val:0xcfff8000; valaddr_reg:x3; val_offset:49956*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49956*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16653:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x25bb60 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x62dbc2 and fs3 == 1 and fe3 == 0x9f and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea5bb60; op2val:0x8062dbc2;
op3val:0xcfffc000; valaddr_reg:x3; val_offset:49959*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49959*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16654:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x25bb60 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x62dbc2 and fs3 == 1 and fe3 == 0x9f and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea5bb60; op2val:0x8062dbc2;
op3val:0xcfffe000; valaddr_reg:x3; val_offset:49962*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49962*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16655:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x25bb60 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x62dbc2 and fs3 == 1 and fe3 == 0x9f and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea5bb60; op2val:0x8062dbc2;
op3val:0xcffff000; valaddr_reg:x3; val_offset:49965*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49965*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16656:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x25bb60 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x62dbc2 and fs3 == 1 and fe3 == 0x9f and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea5bb60; op2val:0x8062dbc2;
op3val:0xcffff800; valaddr_reg:x3; val_offset:49968*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49968*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16657:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x25bb60 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x62dbc2 and fs3 == 1 and fe3 == 0x9f and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea5bb60; op2val:0x8062dbc2;
op3val:0xcffffc00; valaddr_reg:x3; val_offset:49971*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49971*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16658:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x25bb60 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x62dbc2 and fs3 == 1 and fe3 == 0x9f and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea5bb60; op2val:0x8062dbc2;
op3val:0xcffffe00; valaddr_reg:x3; val_offset:49974*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49974*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16659:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x25bb60 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x62dbc2 and fs3 == 1 and fe3 == 0x9f and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea5bb60; op2val:0x8062dbc2;
op3val:0xcfffff00; valaddr_reg:x3; val_offset:49977*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49977*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16660:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x25bb60 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x62dbc2 and fs3 == 1 and fe3 == 0x9f and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea5bb60; op2val:0x8062dbc2;
op3val:0xcfffff80; valaddr_reg:x3; val_offset:49980*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49980*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16661:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x25bb60 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x62dbc2 and fs3 == 1 and fe3 == 0x9f and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea5bb60; op2val:0x8062dbc2;
op3val:0xcfffffc0; valaddr_reg:x3; val_offset:49983*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49983*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16662:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x25bb60 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x62dbc2 and fs3 == 1 and fe3 == 0x9f and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea5bb60; op2val:0x8062dbc2;
op3val:0xcfffffe0; valaddr_reg:x3; val_offset:49986*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49986*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16663:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x25bb60 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x62dbc2 and fs3 == 1 and fe3 == 0x9f and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea5bb60; op2val:0x8062dbc2;
op3val:0xcffffff0; valaddr_reg:x3; val_offset:49989*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49989*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16664:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x25bb60 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x62dbc2 and fs3 == 1 and fe3 == 0x9f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea5bb60; op2val:0x8062dbc2;
op3val:0xcffffff8; valaddr_reg:x3; val_offset:49992*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49992*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16665:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x25bb60 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x62dbc2 and fs3 == 1 and fe3 == 0x9f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea5bb60; op2val:0x8062dbc2;
op3val:0xcffffffc; valaddr_reg:x3; val_offset:49995*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49995*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16666:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x25bb60 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x62dbc2 and fs3 == 1 and fe3 == 0x9f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea5bb60; op2val:0x8062dbc2;
op3val:0xcffffffe; valaddr_reg:x3; val_offset:49998*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49998*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16667:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x25bb60 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x62dbc2 and fs3 == 1 and fe3 == 0x9f and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea5bb60; op2val:0x8062dbc2;
op3val:0xcfffffff; valaddr_reg:x3; val_offset:50001*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50001*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16668:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x261a7f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea61a7f; op2val:0x0;
op3val:0x800001; valaddr_reg:x3; val_offset:50004*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50004*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16669:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x261a7f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea61a7f; op2val:0x0;
op3val:0x800003; valaddr_reg:x3; val_offset:50007*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50007*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16670:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x261a7f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea61a7f; op2val:0x0;
op3val:0x800007; valaddr_reg:x3; val_offset:50010*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50010*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16671:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x261a7f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea61a7f; op2val:0x0;
op3val:0x999999; valaddr_reg:x3; val_offset:50013*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50013*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16672:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x261a7f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea61a7f; op2val:0x0;
op3val:0xa49249; valaddr_reg:x3; val_offset:50016*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50016*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16673:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x261a7f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea61a7f; op2val:0x0;
op3val:0xb33333; valaddr_reg:x3; val_offset:50019*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50019*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16674:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x261a7f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea61a7f; op2val:0x0;
op3val:0xb6db6d; valaddr_reg:x3; val_offset:50022*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50022*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16675:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x261a7f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea61a7f; op2val:0x0;
op3val:0xbbbbbb; valaddr_reg:x3; val_offset:50025*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50025*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16676:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x261a7f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea61a7f; op2val:0x0;
op3val:0xc44444; valaddr_reg:x3; val_offset:50028*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50028*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16677:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x261a7f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea61a7f; op2val:0x0;
op3val:0xcccccc; valaddr_reg:x3; val_offset:50031*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50031*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16678:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x261a7f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea61a7f; op2val:0x0;
op3val:0xdb6db6; valaddr_reg:x3; val_offset:50034*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50034*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16679:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x261a7f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea61a7f; op2val:0x0;
op3val:0xe66666; valaddr_reg:x3; val_offset:50037*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50037*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16680:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x261a7f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea61a7f; op2val:0x0;
op3val:0xedb6db; valaddr_reg:x3; val_offset:50040*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50040*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16681:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x261a7f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea61a7f; op2val:0x0;
op3val:0xfffff8; valaddr_reg:x3; val_offset:50043*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50043*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16682:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x261a7f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea61a7f; op2val:0x0;
op3val:0xfffffc; valaddr_reg:x3; val_offset:50046*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50046*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16683:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x261a7f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea61a7f; op2val:0x0;
op3val:0xfffffe; valaddr_reg:x3; val_offset:50049*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50049*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16684:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x261a7f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x10 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea61a7f; op2val:0x0;
op3val:0x8000000; valaddr_reg:x3; val_offset:50052*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50052*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16685:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x261a7f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x10 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea61a7f; op2val:0x0;
op3val:0x8000001; valaddr_reg:x3; val_offset:50055*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50055*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16686:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x261a7f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x10 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea61a7f; op2val:0x0;
op3val:0x8000003; valaddr_reg:x3; val_offset:50058*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50058*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16687:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x261a7f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x10 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea61a7f; op2val:0x0;
op3val:0x8000007; valaddr_reg:x3; val_offset:50061*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50061*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16688:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x261a7f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x10 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea61a7f; op2val:0x0;
op3val:0x800000f; valaddr_reg:x3; val_offset:50064*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50064*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16689:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x261a7f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x10 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea61a7f; op2val:0x0;
op3val:0x800001f; valaddr_reg:x3; val_offset:50067*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50067*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16690:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x261a7f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x10 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea61a7f; op2val:0x0;
op3val:0x800003f; valaddr_reg:x3; val_offset:50070*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50070*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16691:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x261a7f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x10 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea61a7f; op2val:0x0;
op3val:0x800007f; valaddr_reg:x3; val_offset:50073*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50073*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16692:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x261a7f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x10 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea61a7f; op2val:0x0;
op3val:0x80000ff; valaddr_reg:x3; val_offset:50076*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50076*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16693:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x261a7f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x10 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea61a7f; op2val:0x0;
op3val:0x80001ff; valaddr_reg:x3; val_offset:50079*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50079*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16694:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x261a7f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x10 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea61a7f; op2val:0x0;
op3val:0x80003ff; valaddr_reg:x3; val_offset:50082*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50082*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16695:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x261a7f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x10 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea61a7f; op2val:0x0;
op3val:0x80007ff; valaddr_reg:x3; val_offset:50085*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50085*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16696:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x261a7f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x10 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea61a7f; op2val:0x0;
op3val:0x8000fff; valaddr_reg:x3; val_offset:50088*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50088*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16697:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x261a7f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x10 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea61a7f; op2val:0x0;
op3val:0x8001fff; valaddr_reg:x3; val_offset:50091*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50091*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16698:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x261a7f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x10 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea61a7f; op2val:0x0;
op3val:0x8003fff; valaddr_reg:x3; val_offset:50094*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50094*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16699:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x261a7f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x10 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea61a7f; op2val:0x0;
op3val:0x8007fff; valaddr_reg:x3; val_offset:50097*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50097*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16700:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x261a7f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x10 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea61a7f; op2val:0x0;
op3val:0x800ffff; valaddr_reg:x3; val_offset:50100*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50100*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16701:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x261a7f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x10 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea61a7f; op2val:0x0;
op3val:0x801ffff; valaddr_reg:x3; val_offset:50103*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50103*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16702:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x261a7f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x10 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea61a7f; op2val:0x0;
op3val:0x803ffff; valaddr_reg:x3; val_offset:50106*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50106*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16703:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x261a7f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x10 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea61a7f; op2val:0x0;
op3val:0x807ffff; valaddr_reg:x3; val_offset:50109*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50109*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16704:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x261a7f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x10 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea61a7f; op2val:0x0;
op3val:0x80fffff; valaddr_reg:x3; val_offset:50112*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50112*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16705:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x261a7f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x10 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea61a7f; op2val:0x0;
op3val:0x81fffff; valaddr_reg:x3; val_offset:50115*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50115*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16706:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x261a7f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x10 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea61a7f; op2val:0x0;
op3val:0x83fffff; valaddr_reg:x3; val_offset:50118*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50118*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16707:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x261a7f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x10 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea61a7f; op2val:0x0;
op3val:0x8400000; valaddr_reg:x3; val_offset:50121*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50121*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16708:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x261a7f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x10 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea61a7f; op2val:0x0;
op3val:0x8600000; valaddr_reg:x3; val_offset:50124*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50124*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16709:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x261a7f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x10 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea61a7f; op2val:0x0;
op3val:0x8700000; valaddr_reg:x3; val_offset:50127*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50127*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16710:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x261a7f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x10 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea61a7f; op2val:0x0;
op3val:0x8780000; valaddr_reg:x3; val_offset:50130*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50130*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16711:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x261a7f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x10 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea61a7f; op2val:0x0;
op3val:0x87c0000; valaddr_reg:x3; val_offset:50133*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50133*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16712:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x261a7f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x10 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea61a7f; op2val:0x0;
op3val:0x87e0000; valaddr_reg:x3; val_offset:50136*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50136*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16713:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x261a7f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x10 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea61a7f; op2val:0x0;
op3val:0x87f0000; valaddr_reg:x3; val_offset:50139*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50139*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16714:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x261a7f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x10 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea61a7f; op2val:0x0;
op3val:0x87f8000; valaddr_reg:x3; val_offset:50142*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50142*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16715:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x261a7f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x10 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea61a7f; op2val:0x0;
op3val:0x87fc000; valaddr_reg:x3; val_offset:50145*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50145*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16716:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x261a7f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x10 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea61a7f; op2val:0x0;
op3val:0x87fe000; valaddr_reg:x3; val_offset:50148*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50148*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16717:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x261a7f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x10 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea61a7f; op2val:0x0;
op3val:0x87ff000; valaddr_reg:x3; val_offset:50151*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50151*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16718:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x261a7f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x10 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea61a7f; op2val:0x0;
op3val:0x87ff800; valaddr_reg:x3; val_offset:50154*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50154*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16719:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x261a7f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x10 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea61a7f; op2val:0x0;
op3val:0x87ffc00; valaddr_reg:x3; val_offset:50157*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50157*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16720:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x261a7f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x10 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea61a7f; op2val:0x0;
op3val:0x87ffe00; valaddr_reg:x3; val_offset:50160*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50160*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16721:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x261a7f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x10 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea61a7f; op2val:0x0;
op3val:0x87fff00; valaddr_reg:x3; val_offset:50163*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50163*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16722:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x261a7f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x10 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea61a7f; op2val:0x0;
op3val:0x87fff80; valaddr_reg:x3; val_offset:50166*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50166*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16723:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x261a7f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x10 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea61a7f; op2val:0x0;
op3val:0x87fffc0; valaddr_reg:x3; val_offset:50169*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50169*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16724:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x261a7f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x10 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea61a7f; op2val:0x0;
op3val:0x87fffe0; valaddr_reg:x3; val_offset:50172*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50172*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16725:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x261a7f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x10 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea61a7f; op2val:0x0;
op3val:0x87ffff0; valaddr_reg:x3; val_offset:50175*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50175*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16726:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x261a7f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x10 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea61a7f; op2val:0x0;
op3val:0x87ffff8; valaddr_reg:x3; val_offset:50178*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50178*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16727:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x261a7f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x10 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea61a7f; op2val:0x0;
op3val:0x87ffffc; valaddr_reg:x3; val_offset:50181*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50181*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16728:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x261a7f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x10 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea61a7f; op2val:0x0;
op3val:0x87ffffe; valaddr_reg:x3; val_offset:50184*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50184*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16729:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x261a7f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x10 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea61a7f; op2val:0x0;
op3val:0x87fffff; valaddr_reg:x3; val_offset:50187*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50187*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16730:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x26ca91 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x623b05 and fs3 == 1 and fe3 == 0x4b and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea6ca91; op2val:0x80623b05;
op3val:0xa5800000; valaddr_reg:x3; val_offset:50190*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50190*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16731:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x26ca91 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x623b05 and fs3 == 1 and fe3 == 0x4b and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea6ca91; op2val:0x80623b05;
op3val:0xa5800001; valaddr_reg:x3; val_offset:50193*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50193*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16732:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x26ca91 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x623b05 and fs3 == 1 and fe3 == 0x4b and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea6ca91; op2val:0x80623b05;
op3val:0xa5800003; valaddr_reg:x3; val_offset:50196*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50196*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16733:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x26ca91 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x623b05 and fs3 == 1 and fe3 == 0x4b and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea6ca91; op2val:0x80623b05;
op3val:0xa5800007; valaddr_reg:x3; val_offset:50199*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50199*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16734:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x26ca91 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x623b05 and fs3 == 1 and fe3 == 0x4b and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea6ca91; op2val:0x80623b05;
op3val:0xa580000f; valaddr_reg:x3; val_offset:50202*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50202*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16735:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x26ca91 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x623b05 and fs3 == 1 and fe3 == 0x4b and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea6ca91; op2val:0x80623b05;
op3val:0xa580001f; valaddr_reg:x3; val_offset:50205*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50205*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16736:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x26ca91 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x623b05 and fs3 == 1 and fe3 == 0x4b and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea6ca91; op2val:0x80623b05;
op3val:0xa580003f; valaddr_reg:x3; val_offset:50208*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50208*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16737:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x26ca91 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x623b05 and fs3 == 1 and fe3 == 0x4b and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea6ca91; op2val:0x80623b05;
op3val:0xa580007f; valaddr_reg:x3; val_offset:50211*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50211*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16738:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x26ca91 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x623b05 and fs3 == 1 and fe3 == 0x4b and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea6ca91; op2val:0x80623b05;
op3val:0xa58000ff; valaddr_reg:x3; val_offset:50214*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50214*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16739:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x26ca91 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x623b05 and fs3 == 1 and fe3 == 0x4b and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea6ca91; op2val:0x80623b05;
op3val:0xa58001ff; valaddr_reg:x3; val_offset:50217*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50217*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16740:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x26ca91 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x623b05 and fs3 == 1 and fe3 == 0x4b and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea6ca91; op2val:0x80623b05;
op3val:0xa58003ff; valaddr_reg:x3; val_offset:50220*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50220*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16741:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x26ca91 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x623b05 and fs3 == 1 and fe3 == 0x4b and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea6ca91; op2val:0x80623b05;
op3val:0xa58007ff; valaddr_reg:x3; val_offset:50223*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50223*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16742:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x26ca91 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x623b05 and fs3 == 1 and fe3 == 0x4b and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea6ca91; op2val:0x80623b05;
op3val:0xa5800fff; valaddr_reg:x3; val_offset:50226*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50226*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16743:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x26ca91 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x623b05 and fs3 == 1 and fe3 == 0x4b and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea6ca91; op2val:0x80623b05;
op3val:0xa5801fff; valaddr_reg:x3; val_offset:50229*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50229*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16744:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x26ca91 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x623b05 and fs3 == 1 and fe3 == 0x4b and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea6ca91; op2val:0x80623b05;
op3val:0xa5803fff; valaddr_reg:x3; val_offset:50232*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50232*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16745:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x26ca91 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x623b05 and fs3 == 1 and fe3 == 0x4b and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea6ca91; op2val:0x80623b05;
op3val:0xa5807fff; valaddr_reg:x3; val_offset:50235*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50235*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16746:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x26ca91 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x623b05 and fs3 == 1 and fe3 == 0x4b and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea6ca91; op2val:0x80623b05;
op3val:0xa580ffff; valaddr_reg:x3; val_offset:50238*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50238*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16747:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x26ca91 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x623b05 and fs3 == 1 and fe3 == 0x4b and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea6ca91; op2val:0x80623b05;
op3val:0xa581ffff; valaddr_reg:x3; val_offset:50241*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50241*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16748:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x26ca91 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x623b05 and fs3 == 1 and fe3 == 0x4b and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea6ca91; op2val:0x80623b05;
op3val:0xa583ffff; valaddr_reg:x3; val_offset:50244*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50244*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16749:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x26ca91 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x623b05 and fs3 == 1 and fe3 == 0x4b and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea6ca91; op2val:0x80623b05;
op3val:0xa587ffff; valaddr_reg:x3; val_offset:50247*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50247*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16750:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x26ca91 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x623b05 and fs3 == 1 and fe3 == 0x4b and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea6ca91; op2val:0x80623b05;
op3val:0xa58fffff; valaddr_reg:x3; val_offset:50250*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50250*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16751:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x26ca91 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x623b05 and fs3 == 1 and fe3 == 0x4b and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea6ca91; op2val:0x80623b05;
op3val:0xa59fffff; valaddr_reg:x3; val_offset:50253*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50253*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16752:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x26ca91 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x623b05 and fs3 == 1 and fe3 == 0x4b and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea6ca91; op2val:0x80623b05;
op3val:0xa5bfffff; valaddr_reg:x3; val_offset:50256*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50256*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16753:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x26ca91 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x623b05 and fs3 == 1 and fe3 == 0x4b and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea6ca91; op2val:0x80623b05;
op3val:0xa5c00000; valaddr_reg:x3; val_offset:50259*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50259*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16754:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x26ca91 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x623b05 and fs3 == 1 and fe3 == 0x4b and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea6ca91; op2val:0x80623b05;
op3val:0xa5e00000; valaddr_reg:x3; val_offset:50262*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50262*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16755:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x26ca91 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x623b05 and fs3 == 1 and fe3 == 0x4b and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea6ca91; op2val:0x80623b05;
op3val:0xa5f00000; valaddr_reg:x3; val_offset:50265*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50265*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16756:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x26ca91 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x623b05 and fs3 == 1 and fe3 == 0x4b and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea6ca91; op2val:0x80623b05;
op3val:0xa5f80000; valaddr_reg:x3; val_offset:50268*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50268*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16757:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x26ca91 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x623b05 and fs3 == 1 and fe3 == 0x4b and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea6ca91; op2val:0x80623b05;
op3val:0xa5fc0000; valaddr_reg:x3; val_offset:50271*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50271*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16758:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x26ca91 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x623b05 and fs3 == 1 and fe3 == 0x4b and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea6ca91; op2val:0x80623b05;
op3val:0xa5fe0000; valaddr_reg:x3; val_offset:50274*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50274*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16759:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x26ca91 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x623b05 and fs3 == 1 and fe3 == 0x4b and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea6ca91; op2val:0x80623b05;
op3val:0xa5ff0000; valaddr_reg:x3; val_offset:50277*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50277*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16760:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x26ca91 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x623b05 and fs3 == 1 and fe3 == 0x4b and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea6ca91; op2val:0x80623b05;
op3val:0xa5ff8000; valaddr_reg:x3; val_offset:50280*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50280*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16761:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x26ca91 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x623b05 and fs3 == 1 and fe3 == 0x4b and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea6ca91; op2val:0x80623b05;
op3val:0xa5ffc000; valaddr_reg:x3; val_offset:50283*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50283*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16762:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x26ca91 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x623b05 and fs3 == 1 and fe3 == 0x4b and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea6ca91; op2val:0x80623b05;
op3val:0xa5ffe000; valaddr_reg:x3; val_offset:50286*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50286*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16763:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x26ca91 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x623b05 and fs3 == 1 and fe3 == 0x4b and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea6ca91; op2val:0x80623b05;
op3val:0xa5fff000; valaddr_reg:x3; val_offset:50289*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50289*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16764:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x26ca91 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x623b05 and fs3 == 1 and fe3 == 0x4b and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea6ca91; op2val:0x80623b05;
op3val:0xa5fff800; valaddr_reg:x3; val_offset:50292*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50292*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16765:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x26ca91 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x623b05 and fs3 == 1 and fe3 == 0x4b and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea6ca91; op2val:0x80623b05;
op3val:0xa5fffc00; valaddr_reg:x3; val_offset:50295*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50295*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16766:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x26ca91 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x623b05 and fs3 == 1 and fe3 == 0x4b and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea6ca91; op2val:0x80623b05;
op3val:0xa5fffe00; valaddr_reg:x3; val_offset:50298*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50298*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16767:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x26ca91 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x623b05 and fs3 == 1 and fe3 == 0x4b and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea6ca91; op2val:0x80623b05;
op3val:0xa5ffff00; valaddr_reg:x3; val_offset:50301*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50301*0 + 3*130*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(2124790624,32,FLEN)
NAN_BOXED(2153962434,32,FLEN)
NAN_BOXED(3481534463,32,FLEN)
NAN_BOXED(2124790624,32,FLEN)
NAN_BOXED(2153962434,32,FLEN)
NAN_BOXED(3481796607,32,FLEN)
NAN_BOXED(2124790624,32,FLEN)
NAN_BOXED(2153962434,32,FLEN)
NAN_BOXED(3482320895,32,FLEN)
NAN_BOXED(2124790624,32,FLEN)
NAN_BOXED(2153962434,32,FLEN)
NAN_BOXED(3483369471,32,FLEN)
NAN_BOXED(2124790624,32,FLEN)
NAN_BOXED(2153962434,32,FLEN)
NAN_BOXED(3485466623,32,FLEN)
NAN_BOXED(2124790624,32,FLEN)
NAN_BOXED(2153962434,32,FLEN)
NAN_BOXED(3485466624,32,FLEN)
NAN_BOXED(2124790624,32,FLEN)
NAN_BOXED(2153962434,32,FLEN)
NAN_BOXED(3487563776,32,FLEN)
NAN_BOXED(2124790624,32,FLEN)
NAN_BOXED(2153962434,32,FLEN)
NAN_BOXED(3488612352,32,FLEN)
NAN_BOXED(2124790624,32,FLEN)
NAN_BOXED(2153962434,32,FLEN)
NAN_BOXED(3489136640,32,FLEN)
NAN_BOXED(2124790624,32,FLEN)
NAN_BOXED(2153962434,32,FLEN)
NAN_BOXED(3489398784,32,FLEN)
NAN_BOXED(2124790624,32,FLEN)
NAN_BOXED(2153962434,32,FLEN)
NAN_BOXED(3489529856,32,FLEN)
NAN_BOXED(2124790624,32,FLEN)
NAN_BOXED(2153962434,32,FLEN)
NAN_BOXED(3489595392,32,FLEN)
NAN_BOXED(2124790624,32,FLEN)
NAN_BOXED(2153962434,32,FLEN)
NAN_BOXED(3489628160,32,FLEN)
NAN_BOXED(2124790624,32,FLEN)
NAN_BOXED(2153962434,32,FLEN)
NAN_BOXED(3489644544,32,FLEN)
NAN_BOXED(2124790624,32,FLEN)
NAN_BOXED(2153962434,32,FLEN)
NAN_BOXED(3489652736,32,FLEN)
NAN_BOXED(2124790624,32,FLEN)
NAN_BOXED(2153962434,32,FLEN)
NAN_BOXED(3489656832,32,FLEN)
NAN_BOXED(2124790624,32,FLEN)
NAN_BOXED(2153962434,32,FLEN)
NAN_BOXED(3489658880,32,FLEN)
NAN_BOXED(2124790624,32,FLEN)
NAN_BOXED(2153962434,32,FLEN)
NAN_BOXED(3489659904,32,FLEN)
NAN_BOXED(2124790624,32,FLEN)
NAN_BOXED(2153962434,32,FLEN)
NAN_BOXED(3489660416,32,FLEN)
NAN_BOXED(2124790624,32,FLEN)
NAN_BOXED(2153962434,32,FLEN)
NAN_BOXED(3489660672,32,FLEN)
NAN_BOXED(2124790624,32,FLEN)
NAN_BOXED(2153962434,32,FLEN)
NAN_BOXED(3489660800,32,FLEN)
NAN_BOXED(2124790624,32,FLEN)
NAN_BOXED(2153962434,32,FLEN)
NAN_BOXED(3489660864,32,FLEN)
NAN_BOXED(2124790624,32,FLEN)
NAN_BOXED(2153962434,32,FLEN)
NAN_BOXED(3489660896,32,FLEN)
NAN_BOXED(2124790624,32,FLEN)
NAN_BOXED(2153962434,32,FLEN)
NAN_BOXED(3489660912,32,FLEN)
NAN_BOXED(2124790624,32,FLEN)
NAN_BOXED(2153962434,32,FLEN)
NAN_BOXED(3489660920,32,FLEN)
NAN_BOXED(2124790624,32,FLEN)
NAN_BOXED(2153962434,32,FLEN)
NAN_BOXED(3489660924,32,FLEN)
NAN_BOXED(2124790624,32,FLEN)
NAN_BOXED(2153962434,32,FLEN)
NAN_BOXED(3489660926,32,FLEN)
NAN_BOXED(2124790624,32,FLEN)
NAN_BOXED(2153962434,32,FLEN)
NAN_BOXED(3489660927,32,FLEN)
NAN_BOXED(2124814975,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388609,32,FLEN)
NAN_BOXED(2124814975,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388611,32,FLEN)
NAN_BOXED(2124814975,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388615,32,FLEN)
NAN_BOXED(2124814975,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(10066329,32,FLEN)
NAN_BOXED(2124814975,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(10785353,32,FLEN)
NAN_BOXED(2124814975,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(11744051,32,FLEN)
NAN_BOXED(2124814975,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(11983725,32,FLEN)
NAN_BOXED(2124814975,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(12303291,32,FLEN)
NAN_BOXED(2124814975,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(12862532,32,FLEN)
NAN_BOXED(2124814975,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(13421772,32,FLEN)
NAN_BOXED(2124814975,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(14380470,32,FLEN)
NAN_BOXED(2124814975,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(15099494,32,FLEN)
NAN_BOXED(2124814975,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(15578843,32,FLEN)
NAN_BOXED(2124814975,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777208,32,FLEN)
NAN_BOXED(2124814975,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777212,32,FLEN)
NAN_BOXED(2124814975,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777214,32,FLEN)
NAN_BOXED(2124814975,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134217728,32,FLEN)
NAN_BOXED(2124814975,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134217729,32,FLEN)
NAN_BOXED(2124814975,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134217731,32,FLEN)
NAN_BOXED(2124814975,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134217735,32,FLEN)
NAN_BOXED(2124814975,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134217743,32,FLEN)
NAN_BOXED(2124814975,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134217759,32,FLEN)
NAN_BOXED(2124814975,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134217791,32,FLEN)
NAN_BOXED(2124814975,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134217855,32,FLEN)
NAN_BOXED(2124814975,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134217983,32,FLEN)
NAN_BOXED(2124814975,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134218239,32,FLEN)
NAN_BOXED(2124814975,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134218751,32,FLEN)
NAN_BOXED(2124814975,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134219775,32,FLEN)
NAN_BOXED(2124814975,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134221823,32,FLEN)
NAN_BOXED(2124814975,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134225919,32,FLEN)
NAN_BOXED(2124814975,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134234111,32,FLEN)
NAN_BOXED(2124814975,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134250495,32,FLEN)
NAN_BOXED(2124814975,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134283263,32,FLEN)
NAN_BOXED(2124814975,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134348799,32,FLEN)
NAN_BOXED(2124814975,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134479871,32,FLEN)
NAN_BOXED(2124814975,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134742015,32,FLEN)
NAN_BOXED(2124814975,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(135266303,32,FLEN)
NAN_BOXED(2124814975,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(136314879,32,FLEN)
NAN_BOXED(2124814975,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(138412031,32,FLEN)
NAN_BOXED(2124814975,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(138412032,32,FLEN)
NAN_BOXED(2124814975,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(140509184,32,FLEN)
NAN_BOXED(2124814975,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(141557760,32,FLEN)
NAN_BOXED(2124814975,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(142082048,32,FLEN)
NAN_BOXED(2124814975,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(142344192,32,FLEN)
NAN_BOXED(2124814975,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(142475264,32,FLEN)
NAN_BOXED(2124814975,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(142540800,32,FLEN)
NAN_BOXED(2124814975,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(142573568,32,FLEN)
NAN_BOXED(2124814975,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(142589952,32,FLEN)
NAN_BOXED(2124814975,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(142598144,32,FLEN)
NAN_BOXED(2124814975,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(142602240,32,FLEN)
NAN_BOXED(2124814975,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(142604288,32,FLEN)
NAN_BOXED(2124814975,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(142605312,32,FLEN)
NAN_BOXED(2124814975,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(142605824,32,FLEN)
NAN_BOXED(2124814975,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(142606080,32,FLEN)
NAN_BOXED(2124814975,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(142606208,32,FLEN)
NAN_BOXED(2124814975,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(142606272,32,FLEN)
NAN_BOXED(2124814975,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(142606304,32,FLEN)
NAN_BOXED(2124814975,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(142606320,32,FLEN)
NAN_BOXED(2124814975,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(142606328,32,FLEN)
NAN_BOXED(2124814975,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(142606332,32,FLEN)
NAN_BOXED(2124814975,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(142606334,32,FLEN)
NAN_BOXED(2124814975,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(142606335,32,FLEN)
NAN_BOXED(2124860049,32,FLEN)
NAN_BOXED(2153921285,32,FLEN)
NAN_BOXED(2776629248,32,FLEN)
NAN_BOXED(2124860049,32,FLEN)
NAN_BOXED(2153921285,32,FLEN)
NAN_BOXED(2776629249,32,FLEN)
NAN_BOXED(2124860049,32,FLEN)
NAN_BOXED(2153921285,32,FLEN)
NAN_BOXED(2776629251,32,FLEN)
NAN_BOXED(2124860049,32,FLEN)
NAN_BOXED(2153921285,32,FLEN)
NAN_BOXED(2776629255,32,FLEN)
NAN_BOXED(2124860049,32,FLEN)
NAN_BOXED(2153921285,32,FLEN)
NAN_BOXED(2776629263,32,FLEN)
NAN_BOXED(2124860049,32,FLEN)
NAN_BOXED(2153921285,32,FLEN)
NAN_BOXED(2776629279,32,FLEN)
NAN_BOXED(2124860049,32,FLEN)
NAN_BOXED(2153921285,32,FLEN)
NAN_BOXED(2776629311,32,FLEN)
NAN_BOXED(2124860049,32,FLEN)
NAN_BOXED(2153921285,32,FLEN)
NAN_BOXED(2776629375,32,FLEN)
NAN_BOXED(2124860049,32,FLEN)
NAN_BOXED(2153921285,32,FLEN)
NAN_BOXED(2776629503,32,FLEN)
NAN_BOXED(2124860049,32,FLEN)
NAN_BOXED(2153921285,32,FLEN)
NAN_BOXED(2776629759,32,FLEN)
NAN_BOXED(2124860049,32,FLEN)
NAN_BOXED(2153921285,32,FLEN)
NAN_BOXED(2776630271,32,FLEN)
NAN_BOXED(2124860049,32,FLEN)
NAN_BOXED(2153921285,32,FLEN)
NAN_BOXED(2776631295,32,FLEN)
NAN_BOXED(2124860049,32,FLEN)
NAN_BOXED(2153921285,32,FLEN)
NAN_BOXED(2776633343,32,FLEN)
NAN_BOXED(2124860049,32,FLEN)
NAN_BOXED(2153921285,32,FLEN)
NAN_BOXED(2776637439,32,FLEN)
NAN_BOXED(2124860049,32,FLEN)
NAN_BOXED(2153921285,32,FLEN)
NAN_BOXED(2776645631,32,FLEN)
NAN_BOXED(2124860049,32,FLEN)
NAN_BOXED(2153921285,32,FLEN)
NAN_BOXED(2776662015,32,FLEN)
NAN_BOXED(2124860049,32,FLEN)
NAN_BOXED(2153921285,32,FLEN)
NAN_BOXED(2776694783,32,FLEN)
NAN_BOXED(2124860049,32,FLEN)
NAN_BOXED(2153921285,32,FLEN)
NAN_BOXED(2776760319,32,FLEN)
NAN_BOXED(2124860049,32,FLEN)
NAN_BOXED(2153921285,32,FLEN)
NAN_BOXED(2776891391,32,FLEN)
NAN_BOXED(2124860049,32,FLEN)
NAN_BOXED(2153921285,32,FLEN)
NAN_BOXED(2777153535,32,FLEN)
NAN_BOXED(2124860049,32,FLEN)
NAN_BOXED(2153921285,32,FLEN)
NAN_BOXED(2777677823,32,FLEN)
NAN_BOXED(2124860049,32,FLEN)
NAN_BOXED(2153921285,32,FLEN)
NAN_BOXED(2778726399,32,FLEN)
NAN_BOXED(2124860049,32,FLEN)
NAN_BOXED(2153921285,32,FLEN)
NAN_BOXED(2780823551,32,FLEN)
NAN_BOXED(2124860049,32,FLEN)
NAN_BOXED(2153921285,32,FLEN)
NAN_BOXED(2780823552,32,FLEN)
NAN_BOXED(2124860049,32,FLEN)
NAN_BOXED(2153921285,32,FLEN)
NAN_BOXED(2782920704,32,FLEN)
NAN_BOXED(2124860049,32,FLEN)
NAN_BOXED(2153921285,32,FLEN)
NAN_BOXED(2783969280,32,FLEN)
NAN_BOXED(2124860049,32,FLEN)
NAN_BOXED(2153921285,32,FLEN)
NAN_BOXED(2784493568,32,FLEN)
NAN_BOXED(2124860049,32,FLEN)
NAN_BOXED(2153921285,32,FLEN)
NAN_BOXED(2784755712,32,FLEN)
NAN_BOXED(2124860049,32,FLEN)
NAN_BOXED(2153921285,32,FLEN)
NAN_BOXED(2784886784,32,FLEN)
NAN_BOXED(2124860049,32,FLEN)
NAN_BOXED(2153921285,32,FLEN)
NAN_BOXED(2784952320,32,FLEN)
NAN_BOXED(2124860049,32,FLEN)
NAN_BOXED(2153921285,32,FLEN)
NAN_BOXED(2784985088,32,FLEN)
NAN_BOXED(2124860049,32,FLEN)
NAN_BOXED(2153921285,32,FLEN)
NAN_BOXED(2785001472,32,FLEN)
NAN_BOXED(2124860049,32,FLEN)
NAN_BOXED(2153921285,32,FLEN)
NAN_BOXED(2785009664,32,FLEN)
NAN_BOXED(2124860049,32,FLEN)
NAN_BOXED(2153921285,32,FLEN)
NAN_BOXED(2785013760,32,FLEN)
NAN_BOXED(2124860049,32,FLEN)
NAN_BOXED(2153921285,32,FLEN)
NAN_BOXED(2785015808,32,FLEN)
NAN_BOXED(2124860049,32,FLEN)
NAN_BOXED(2153921285,32,FLEN)
NAN_BOXED(2785016832,32,FLEN)
NAN_BOXED(2124860049,32,FLEN)
NAN_BOXED(2153921285,32,FLEN)
NAN_BOXED(2785017344,32,FLEN)
NAN_BOXED(2124860049,32,FLEN)
NAN_BOXED(2153921285,32,FLEN)
NAN_BOXED(2785017600,32,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
