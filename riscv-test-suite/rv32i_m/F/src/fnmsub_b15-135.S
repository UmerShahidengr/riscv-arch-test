
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 14:18:08 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32F/fnmsub.s.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmsub.s instruction of the RISC-V RV32F_Zicsr,RV32FD_Zicsr,RV64F_Zicsr,RV64FD_Zicsr extension for the fnmsub_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF_Zicsr,RV32IFD_Zicsr,RV64IF_Zicsr,RV64IFD_Zicsr,RV32EF_Zicsr,RV32EFD_Zicsr,RV64EF_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fnmsub_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*F.*);def TEST_CASE_1=True;",fnmsub_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_17152:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ad137 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3fd4aa and fs3 == 0 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaad137; op2val:0x403fd4aa;
op3val:0x7f249249; valaddr_reg:x3; val_offset:51456*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51456*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17153:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ad137 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3fd4aa and fs3 == 0 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaad137; op2val:0x403fd4aa;
op3val:0x7f333333; valaddr_reg:x3; val_offset:51459*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51459*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17154:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ad137 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3fd4aa and fs3 == 0 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaad137; op2val:0x403fd4aa;
op3val:0x7f36db6d; valaddr_reg:x3; val_offset:51462*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51462*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17155:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ad137 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3fd4aa and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaad137; op2val:0x403fd4aa;
op3val:0x7f3bbbbb; valaddr_reg:x3; val_offset:51465*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51465*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17156:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ad137 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3fd4aa and fs3 == 0 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaad137; op2val:0x403fd4aa;
op3val:0x7f444444; valaddr_reg:x3; val_offset:51468*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51468*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17157:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ad137 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3fd4aa and fs3 == 0 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaad137; op2val:0x403fd4aa;
op3val:0x7f4ccccc; valaddr_reg:x3; val_offset:51471*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51471*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17158:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ad137 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3fd4aa and fs3 == 0 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaad137; op2val:0x403fd4aa;
op3val:0x7f5b6db6; valaddr_reg:x3; val_offset:51474*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51474*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17159:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ad137 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3fd4aa and fs3 == 0 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaad137; op2val:0x403fd4aa;
op3val:0x7f666666; valaddr_reg:x3; val_offset:51477*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51477*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17160:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ad137 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3fd4aa and fs3 == 0 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaad137; op2val:0x403fd4aa;
op3val:0x7f6db6db; valaddr_reg:x3; val_offset:51480*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51480*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17161:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ad137 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3fd4aa and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaad137; op2val:0x403fd4aa;
op3val:0x7f7ffff8; valaddr_reg:x3; val_offset:51483*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51483*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17162:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ad137 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3fd4aa and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaad137; op2val:0x403fd4aa;
op3val:0x7f7ffffc; valaddr_reg:x3; val_offset:51486*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51486*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17163:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ad137 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3fd4aa and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaad137; op2val:0x403fd4aa;
op3val:0x7f7ffffe; valaddr_reg:x3; val_offset:51489*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51489*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17164:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0a73 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3e7766 and fs3 == 1 and fe3 == 0xee and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0a73; op2val:0xc03e7766;
op3val:0xf7000000; valaddr_reg:x3; val_offset:51492*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51492*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17165:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0a73 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3e7766 and fs3 == 1 and fe3 == 0xee and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0a73; op2val:0xc03e7766;
op3val:0xf7000001; valaddr_reg:x3; val_offset:51495*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51495*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17166:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0a73 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3e7766 and fs3 == 1 and fe3 == 0xee and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0a73; op2val:0xc03e7766;
op3val:0xf7000003; valaddr_reg:x3; val_offset:51498*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51498*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17167:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0a73 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3e7766 and fs3 == 1 and fe3 == 0xee and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0a73; op2val:0xc03e7766;
op3val:0xf7000007; valaddr_reg:x3; val_offset:51501*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51501*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17168:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0a73 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3e7766 and fs3 == 1 and fe3 == 0xee and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0a73; op2val:0xc03e7766;
op3val:0xf700000f; valaddr_reg:x3; val_offset:51504*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51504*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17169:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0a73 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3e7766 and fs3 == 1 and fe3 == 0xee and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0a73; op2val:0xc03e7766;
op3val:0xf700001f; valaddr_reg:x3; val_offset:51507*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51507*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17170:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0a73 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3e7766 and fs3 == 1 and fe3 == 0xee and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0a73; op2val:0xc03e7766;
op3val:0xf700003f; valaddr_reg:x3; val_offset:51510*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51510*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17171:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0a73 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3e7766 and fs3 == 1 and fe3 == 0xee and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0a73; op2val:0xc03e7766;
op3val:0xf700007f; valaddr_reg:x3; val_offset:51513*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51513*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17172:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0a73 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3e7766 and fs3 == 1 and fe3 == 0xee and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0a73; op2val:0xc03e7766;
op3val:0xf70000ff; valaddr_reg:x3; val_offset:51516*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51516*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17173:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0a73 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3e7766 and fs3 == 1 and fe3 == 0xee and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0a73; op2val:0xc03e7766;
op3val:0xf70001ff; valaddr_reg:x3; val_offset:51519*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51519*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17174:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0a73 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3e7766 and fs3 == 1 and fe3 == 0xee and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0a73; op2val:0xc03e7766;
op3val:0xf70003ff; valaddr_reg:x3; val_offset:51522*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51522*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17175:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0a73 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3e7766 and fs3 == 1 and fe3 == 0xee and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0a73; op2val:0xc03e7766;
op3val:0xf70007ff; valaddr_reg:x3; val_offset:51525*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51525*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17176:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0a73 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3e7766 and fs3 == 1 and fe3 == 0xee and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0a73; op2val:0xc03e7766;
op3val:0xf7000fff; valaddr_reg:x3; val_offset:51528*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51528*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17177:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0a73 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3e7766 and fs3 == 1 and fe3 == 0xee and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0a73; op2val:0xc03e7766;
op3val:0xf7001fff; valaddr_reg:x3; val_offset:51531*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51531*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17178:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0a73 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3e7766 and fs3 == 1 and fe3 == 0xee and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0a73; op2val:0xc03e7766;
op3val:0xf7003fff; valaddr_reg:x3; val_offset:51534*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51534*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17179:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0a73 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3e7766 and fs3 == 1 and fe3 == 0xee and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0a73; op2val:0xc03e7766;
op3val:0xf7007fff; valaddr_reg:x3; val_offset:51537*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51537*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17180:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0a73 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3e7766 and fs3 == 1 and fe3 == 0xee and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0a73; op2val:0xc03e7766;
op3val:0xf700ffff; valaddr_reg:x3; val_offset:51540*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51540*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17181:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0a73 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3e7766 and fs3 == 1 and fe3 == 0xee and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0a73; op2val:0xc03e7766;
op3val:0xf701ffff; valaddr_reg:x3; val_offset:51543*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51543*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17182:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0a73 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3e7766 and fs3 == 1 and fe3 == 0xee and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0a73; op2val:0xc03e7766;
op3val:0xf703ffff; valaddr_reg:x3; val_offset:51546*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51546*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17183:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0a73 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3e7766 and fs3 == 1 and fe3 == 0xee and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0a73; op2val:0xc03e7766;
op3val:0xf707ffff; valaddr_reg:x3; val_offset:51549*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51549*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17184:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0a73 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3e7766 and fs3 == 1 and fe3 == 0xee and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0a73; op2val:0xc03e7766;
op3val:0xf70fffff; valaddr_reg:x3; val_offset:51552*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51552*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17185:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0a73 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3e7766 and fs3 == 1 and fe3 == 0xee and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0a73; op2val:0xc03e7766;
op3val:0xf71fffff; valaddr_reg:x3; val_offset:51555*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51555*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17186:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0a73 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3e7766 and fs3 == 1 and fe3 == 0xee and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0a73; op2val:0xc03e7766;
op3val:0xf73fffff; valaddr_reg:x3; val_offset:51558*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51558*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17187:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0a73 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3e7766 and fs3 == 1 and fe3 == 0xee and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0a73; op2val:0xc03e7766;
op3val:0xf7400000; valaddr_reg:x3; val_offset:51561*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51561*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17188:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0a73 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3e7766 and fs3 == 1 and fe3 == 0xee and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0a73; op2val:0xc03e7766;
op3val:0xf7600000; valaddr_reg:x3; val_offset:51564*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51564*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17189:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0a73 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3e7766 and fs3 == 1 and fe3 == 0xee and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0a73; op2val:0xc03e7766;
op3val:0xf7700000; valaddr_reg:x3; val_offset:51567*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51567*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17190:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0a73 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3e7766 and fs3 == 1 and fe3 == 0xee and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0a73; op2val:0xc03e7766;
op3val:0xf7780000; valaddr_reg:x3; val_offset:51570*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51570*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17191:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0a73 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3e7766 and fs3 == 1 and fe3 == 0xee and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0a73; op2val:0xc03e7766;
op3val:0xf77c0000; valaddr_reg:x3; val_offset:51573*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51573*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17192:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0a73 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3e7766 and fs3 == 1 and fe3 == 0xee and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0a73; op2val:0xc03e7766;
op3val:0xf77e0000; valaddr_reg:x3; val_offset:51576*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51576*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17193:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0a73 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3e7766 and fs3 == 1 and fe3 == 0xee and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0a73; op2val:0xc03e7766;
op3val:0xf77f0000; valaddr_reg:x3; val_offset:51579*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51579*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17194:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0a73 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3e7766 and fs3 == 1 and fe3 == 0xee and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0a73; op2val:0xc03e7766;
op3val:0xf77f8000; valaddr_reg:x3; val_offset:51582*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51582*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17195:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0a73 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3e7766 and fs3 == 1 and fe3 == 0xee and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0a73; op2val:0xc03e7766;
op3val:0xf77fc000; valaddr_reg:x3; val_offset:51585*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51585*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17196:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0a73 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3e7766 and fs3 == 1 and fe3 == 0xee and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0a73; op2val:0xc03e7766;
op3val:0xf77fe000; valaddr_reg:x3; val_offset:51588*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51588*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17197:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0a73 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3e7766 and fs3 == 1 and fe3 == 0xee and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0a73; op2val:0xc03e7766;
op3val:0xf77ff000; valaddr_reg:x3; val_offset:51591*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51591*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17198:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0a73 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3e7766 and fs3 == 1 and fe3 == 0xee and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0a73; op2val:0xc03e7766;
op3val:0xf77ff800; valaddr_reg:x3; val_offset:51594*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51594*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17199:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0a73 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3e7766 and fs3 == 1 and fe3 == 0xee and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0a73; op2val:0xc03e7766;
op3val:0xf77ffc00; valaddr_reg:x3; val_offset:51597*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51597*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17200:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0a73 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3e7766 and fs3 == 1 and fe3 == 0xee and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0a73; op2val:0xc03e7766;
op3val:0xf77ffe00; valaddr_reg:x3; val_offset:51600*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51600*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17201:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0a73 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3e7766 and fs3 == 1 and fe3 == 0xee and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0a73; op2val:0xc03e7766;
op3val:0xf77fff00; valaddr_reg:x3; val_offset:51603*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51603*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17202:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0a73 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3e7766 and fs3 == 1 and fe3 == 0xee and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0a73; op2val:0xc03e7766;
op3val:0xf77fff80; valaddr_reg:x3; val_offset:51606*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51606*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17203:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0a73 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3e7766 and fs3 == 1 and fe3 == 0xee and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0a73; op2val:0xc03e7766;
op3val:0xf77fffc0; valaddr_reg:x3; val_offset:51609*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51609*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17204:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0a73 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3e7766 and fs3 == 1 and fe3 == 0xee and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0a73; op2val:0xc03e7766;
op3val:0xf77fffe0; valaddr_reg:x3; val_offset:51612*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51612*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17205:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0a73 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3e7766 and fs3 == 1 and fe3 == 0xee and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0a73; op2val:0xc03e7766;
op3val:0xf77ffff0; valaddr_reg:x3; val_offset:51615*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51615*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17206:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0a73 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3e7766 and fs3 == 1 and fe3 == 0xee and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0a73; op2val:0xc03e7766;
op3val:0xf77ffff8; valaddr_reg:x3; val_offset:51618*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51618*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17207:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0a73 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3e7766 and fs3 == 1 and fe3 == 0xee and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0a73; op2val:0xc03e7766;
op3val:0xf77ffffc; valaddr_reg:x3; val_offset:51621*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51621*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17208:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0a73 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3e7766 and fs3 == 1 and fe3 == 0xee and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0a73; op2val:0xc03e7766;
op3val:0xf77ffffe; valaddr_reg:x3; val_offset:51624*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51624*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17209:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0a73 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3e7766 and fs3 == 1 and fe3 == 0xee and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0a73; op2val:0xc03e7766;
op3val:0xf77fffff; valaddr_reg:x3; val_offset:51627*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51627*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17210:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0a73 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3e7766 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0a73; op2val:0xc03e7766;
op3val:0xff000001; valaddr_reg:x3; val_offset:51630*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51630*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17211:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0a73 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3e7766 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0a73; op2val:0xc03e7766;
op3val:0xff000003; valaddr_reg:x3; val_offset:51633*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51633*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17212:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0a73 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3e7766 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0a73; op2val:0xc03e7766;
op3val:0xff000007; valaddr_reg:x3; val_offset:51636*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51636*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17213:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0a73 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3e7766 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0a73; op2val:0xc03e7766;
op3val:0xff199999; valaddr_reg:x3; val_offset:51639*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51639*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17214:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0a73 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3e7766 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0a73; op2val:0xc03e7766;
op3val:0xff249249; valaddr_reg:x3; val_offset:51642*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51642*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17215:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0a73 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3e7766 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0a73; op2val:0xc03e7766;
op3val:0xff333333; valaddr_reg:x3; val_offset:51645*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51645*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17216:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0a73 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3e7766 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0a73; op2val:0xc03e7766;
op3val:0xff36db6d; valaddr_reg:x3; val_offset:51648*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51648*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17217:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0a73 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3e7766 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0a73; op2val:0xc03e7766;
op3val:0xff3bbbbb; valaddr_reg:x3; val_offset:51651*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51651*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17218:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0a73 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3e7766 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0a73; op2val:0xc03e7766;
op3val:0xff444444; valaddr_reg:x3; val_offset:51654*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51654*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17219:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0a73 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3e7766 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0a73; op2val:0xc03e7766;
op3val:0xff4ccccc; valaddr_reg:x3; val_offset:51657*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51657*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17220:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0a73 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3e7766 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0a73; op2val:0xc03e7766;
op3val:0xff5b6db6; valaddr_reg:x3; val_offset:51660*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51660*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17221:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0a73 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3e7766 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0a73; op2val:0xc03e7766;
op3val:0xff666666; valaddr_reg:x3; val_offset:51663*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51663*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17222:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0a73 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3e7766 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0a73; op2val:0xc03e7766;
op3val:0xff6db6db; valaddr_reg:x3; val_offset:51666*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51666*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17223:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0a73 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3e7766 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0a73; op2val:0xc03e7766;
op3val:0xff7ffff8; valaddr_reg:x3; val_offset:51669*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51669*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17224:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0a73 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3e7766 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0a73; op2val:0xc03e7766;
op3val:0xff7ffffc; valaddr_reg:x3; val_offset:51672*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51672*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17225:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0a73 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3e7766 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0a73; op2val:0xc03e7766;
op3val:0xff7ffffe; valaddr_reg:x3; val_offset:51675*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51675*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17226:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c1f00 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3e60a8 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac1f00; op2val:0x403e60a8;
op3val:0x7f000001; valaddr_reg:x3; val_offset:51678*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51678*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17227:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c1f00 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3e60a8 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac1f00; op2val:0x403e60a8;
op3val:0x7f000003; valaddr_reg:x3; val_offset:51681*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51681*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17228:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c1f00 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3e60a8 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac1f00; op2val:0x403e60a8;
op3val:0x7f000007; valaddr_reg:x3; val_offset:51684*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51684*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17229:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c1f00 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3e60a8 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac1f00; op2val:0x403e60a8;
op3val:0x7f199999; valaddr_reg:x3; val_offset:51687*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51687*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17230:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c1f00 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3e60a8 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac1f00; op2val:0x403e60a8;
op3val:0x7f249249; valaddr_reg:x3; val_offset:51690*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51690*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17231:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c1f00 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3e60a8 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac1f00; op2val:0x403e60a8;
op3val:0x7f333333; valaddr_reg:x3; val_offset:51693*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51693*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17232:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c1f00 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3e60a8 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac1f00; op2val:0x403e60a8;
op3val:0x7f36db6d; valaddr_reg:x3; val_offset:51696*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51696*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17233:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c1f00 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3e60a8 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac1f00; op2val:0x403e60a8;
op3val:0x7f3bbbbb; valaddr_reg:x3; val_offset:51699*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51699*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17234:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c1f00 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3e60a8 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac1f00; op2val:0x403e60a8;
op3val:0x7f444444; valaddr_reg:x3; val_offset:51702*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51702*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17235:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c1f00 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3e60a8 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac1f00; op2val:0x403e60a8;
op3val:0x7f4ccccc; valaddr_reg:x3; val_offset:51705*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51705*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17236:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c1f00 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3e60a8 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac1f00; op2val:0x403e60a8;
op3val:0x7f5b6db6; valaddr_reg:x3; val_offset:51708*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51708*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17237:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c1f00 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3e60a8 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac1f00; op2val:0x403e60a8;
op3val:0x7f666666; valaddr_reg:x3; val_offset:51711*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51711*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17238:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c1f00 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3e60a8 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac1f00; op2val:0x403e60a8;
op3val:0x7f6db6db; valaddr_reg:x3; val_offset:51714*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51714*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17239:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c1f00 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3e60a8 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac1f00; op2val:0x403e60a8;
op3val:0x7f7ffff8; valaddr_reg:x3; val_offset:51717*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51717*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17240:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c1f00 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3e60a8 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac1f00; op2val:0x403e60a8;
op3val:0x7f7ffffc; valaddr_reg:x3; val_offset:51720*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51720*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17241:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c1f00 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3e60a8 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac1f00; op2val:0x403e60a8;
op3val:0x7f7ffffe; valaddr_reg:x3; val_offset:51723*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51723*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17242:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c1f00 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3e60a8 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac1f00; op2val:0x403e60a8;
op3val:0x7f7fffff; valaddr_reg:x3; val_offset:51726*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51726*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17243:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2cf546 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eacf546; op2val:0x0;
op3val:0x800001; valaddr_reg:x3; val_offset:51729*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51729*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17244:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2cf546 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eacf546; op2val:0x0;
op3val:0x800003; valaddr_reg:x3; val_offset:51732*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51732*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17245:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2cf546 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eacf546; op2val:0x0;
op3val:0x800007; valaddr_reg:x3; val_offset:51735*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51735*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17246:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2cf546 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eacf546; op2val:0x0;
op3val:0x999999; valaddr_reg:x3; val_offset:51738*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51738*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17247:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2cf546 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eacf546; op2val:0x0;
op3val:0xa49249; valaddr_reg:x3; val_offset:51741*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51741*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17248:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2cf546 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eacf546; op2val:0x0;
op3val:0xb33333; valaddr_reg:x3; val_offset:51744*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51744*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17249:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2cf546 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eacf546; op2val:0x0;
op3val:0xb6db6d; valaddr_reg:x3; val_offset:51747*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51747*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17250:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2cf546 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eacf546; op2val:0x0;
op3val:0xbbbbbb; valaddr_reg:x3; val_offset:51750*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51750*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17251:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2cf546 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eacf546; op2val:0x0;
op3val:0xc44444; valaddr_reg:x3; val_offset:51753*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51753*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17252:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2cf546 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eacf546; op2val:0x0;
op3val:0xcccccc; valaddr_reg:x3; val_offset:51756*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51756*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17253:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2cf546 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eacf546; op2val:0x0;
op3val:0xdb6db6; valaddr_reg:x3; val_offset:51759*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51759*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17254:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2cf546 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eacf546; op2val:0x0;
op3val:0xe66666; valaddr_reg:x3; val_offset:51762*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51762*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17255:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2cf546 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eacf546; op2val:0x0;
op3val:0xedb6db; valaddr_reg:x3; val_offset:51765*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51765*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17256:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2cf546 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eacf546; op2val:0x0;
op3val:0xfffff8; valaddr_reg:x3; val_offset:51768*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51768*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17257:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2cf546 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eacf546; op2val:0x0;
op3val:0xfffffc; valaddr_reg:x3; val_offset:51771*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51771*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17258:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2cf546 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eacf546; op2val:0x0;
op3val:0xfffffe; valaddr_reg:x3; val_offset:51774*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51774*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17259:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2cf546 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x18 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eacf546; op2val:0x0;
op3val:0xc000000; valaddr_reg:x3; val_offset:51777*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51777*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17260:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2cf546 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x18 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eacf546; op2val:0x0;
op3val:0xc000001; valaddr_reg:x3; val_offset:51780*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51780*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17261:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2cf546 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x18 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eacf546; op2val:0x0;
op3val:0xc000003; valaddr_reg:x3; val_offset:51783*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51783*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17262:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2cf546 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x18 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eacf546; op2val:0x0;
op3val:0xc000007; valaddr_reg:x3; val_offset:51786*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51786*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17263:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2cf546 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x18 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eacf546; op2val:0x0;
op3val:0xc00000f; valaddr_reg:x3; val_offset:51789*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51789*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17264:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2cf546 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x18 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eacf546; op2val:0x0;
op3val:0xc00001f; valaddr_reg:x3; val_offset:51792*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51792*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17265:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2cf546 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x18 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eacf546; op2val:0x0;
op3val:0xc00003f; valaddr_reg:x3; val_offset:51795*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51795*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17266:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2cf546 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x18 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eacf546; op2val:0x0;
op3val:0xc00007f; valaddr_reg:x3; val_offset:51798*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51798*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17267:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2cf546 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x18 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eacf546; op2val:0x0;
op3val:0xc0000ff; valaddr_reg:x3; val_offset:51801*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51801*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17268:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2cf546 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x18 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eacf546; op2val:0x0;
op3val:0xc0001ff; valaddr_reg:x3; val_offset:51804*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51804*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17269:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2cf546 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x18 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eacf546; op2val:0x0;
op3val:0xc0003ff; valaddr_reg:x3; val_offset:51807*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51807*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17270:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2cf546 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x18 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eacf546; op2val:0x0;
op3val:0xc0007ff; valaddr_reg:x3; val_offset:51810*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51810*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17271:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2cf546 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x18 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eacf546; op2val:0x0;
op3val:0xc000fff; valaddr_reg:x3; val_offset:51813*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51813*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17272:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2cf546 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x18 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eacf546; op2val:0x0;
op3val:0xc001fff; valaddr_reg:x3; val_offset:51816*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51816*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17273:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2cf546 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x18 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eacf546; op2val:0x0;
op3val:0xc003fff; valaddr_reg:x3; val_offset:51819*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51819*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17274:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2cf546 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x18 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eacf546; op2val:0x0;
op3val:0xc007fff; valaddr_reg:x3; val_offset:51822*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51822*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17275:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2cf546 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x18 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eacf546; op2val:0x0;
op3val:0xc00ffff; valaddr_reg:x3; val_offset:51825*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51825*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17276:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2cf546 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x18 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eacf546; op2val:0x0;
op3val:0xc01ffff; valaddr_reg:x3; val_offset:51828*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51828*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17277:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2cf546 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x18 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eacf546; op2val:0x0;
op3val:0xc03ffff; valaddr_reg:x3; val_offset:51831*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51831*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17278:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2cf546 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x18 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eacf546; op2val:0x0;
op3val:0xc07ffff; valaddr_reg:x3; val_offset:51834*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51834*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17279:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2cf546 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x18 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eacf546; op2val:0x0;
op3val:0xc0fffff; valaddr_reg:x3; val_offset:51837*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51837*0 + 3*134*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(2125123895,32,FLEN)
NAN_BOXED(1077925034,32,FLEN)
NAN_BOXED(2133103177,32,FLEN)
NAN_BOXED(2125123895,32,FLEN)
NAN_BOXED(1077925034,32,FLEN)
NAN_BOXED(2134061875,32,FLEN)
NAN_BOXED(2125123895,32,FLEN)
NAN_BOXED(1077925034,32,FLEN)
NAN_BOXED(2134301549,32,FLEN)
NAN_BOXED(2125123895,32,FLEN)
NAN_BOXED(1077925034,32,FLEN)
NAN_BOXED(2134621115,32,FLEN)
NAN_BOXED(2125123895,32,FLEN)
NAN_BOXED(1077925034,32,FLEN)
NAN_BOXED(2135180356,32,FLEN)
NAN_BOXED(2125123895,32,FLEN)
NAN_BOXED(1077925034,32,FLEN)
NAN_BOXED(2135739596,32,FLEN)
NAN_BOXED(2125123895,32,FLEN)
NAN_BOXED(1077925034,32,FLEN)
NAN_BOXED(2136698294,32,FLEN)
NAN_BOXED(2125123895,32,FLEN)
NAN_BOXED(1077925034,32,FLEN)
NAN_BOXED(2137417318,32,FLEN)
NAN_BOXED(2125123895,32,FLEN)
NAN_BOXED(1077925034,32,FLEN)
NAN_BOXED(2137896667,32,FLEN)
NAN_BOXED(2125123895,32,FLEN)
NAN_BOXED(1077925034,32,FLEN)
NAN_BOXED(2139095032,32,FLEN)
NAN_BOXED(2125123895,32,FLEN)
NAN_BOXED(1077925034,32,FLEN)
NAN_BOXED(2139095036,32,FLEN)
NAN_BOXED(2125123895,32,FLEN)
NAN_BOXED(1077925034,32,FLEN)
NAN_BOXED(2139095038,32,FLEN)
NAN_BOXED(2125204083,32,FLEN)
NAN_BOXED(3225319270,32,FLEN)
NAN_BOXED(4143972352,32,FLEN)
NAN_BOXED(2125204083,32,FLEN)
NAN_BOXED(3225319270,32,FLEN)
NAN_BOXED(4143972353,32,FLEN)
NAN_BOXED(2125204083,32,FLEN)
NAN_BOXED(3225319270,32,FLEN)
NAN_BOXED(4143972355,32,FLEN)
NAN_BOXED(2125204083,32,FLEN)
NAN_BOXED(3225319270,32,FLEN)
NAN_BOXED(4143972359,32,FLEN)
NAN_BOXED(2125204083,32,FLEN)
NAN_BOXED(3225319270,32,FLEN)
NAN_BOXED(4143972367,32,FLEN)
NAN_BOXED(2125204083,32,FLEN)
NAN_BOXED(3225319270,32,FLEN)
NAN_BOXED(4143972383,32,FLEN)
NAN_BOXED(2125204083,32,FLEN)
NAN_BOXED(3225319270,32,FLEN)
NAN_BOXED(4143972415,32,FLEN)
NAN_BOXED(2125204083,32,FLEN)
NAN_BOXED(3225319270,32,FLEN)
NAN_BOXED(4143972479,32,FLEN)
NAN_BOXED(2125204083,32,FLEN)
NAN_BOXED(3225319270,32,FLEN)
NAN_BOXED(4143972607,32,FLEN)
NAN_BOXED(2125204083,32,FLEN)
NAN_BOXED(3225319270,32,FLEN)
NAN_BOXED(4143972863,32,FLEN)
NAN_BOXED(2125204083,32,FLEN)
NAN_BOXED(3225319270,32,FLEN)
NAN_BOXED(4143973375,32,FLEN)
NAN_BOXED(2125204083,32,FLEN)
NAN_BOXED(3225319270,32,FLEN)
NAN_BOXED(4143974399,32,FLEN)
NAN_BOXED(2125204083,32,FLEN)
NAN_BOXED(3225319270,32,FLEN)
NAN_BOXED(4143976447,32,FLEN)
NAN_BOXED(2125204083,32,FLEN)
NAN_BOXED(3225319270,32,FLEN)
NAN_BOXED(4143980543,32,FLEN)
NAN_BOXED(2125204083,32,FLEN)
NAN_BOXED(3225319270,32,FLEN)
NAN_BOXED(4143988735,32,FLEN)
NAN_BOXED(2125204083,32,FLEN)
NAN_BOXED(3225319270,32,FLEN)
NAN_BOXED(4144005119,32,FLEN)
NAN_BOXED(2125204083,32,FLEN)
NAN_BOXED(3225319270,32,FLEN)
NAN_BOXED(4144037887,32,FLEN)
NAN_BOXED(2125204083,32,FLEN)
NAN_BOXED(3225319270,32,FLEN)
NAN_BOXED(4144103423,32,FLEN)
NAN_BOXED(2125204083,32,FLEN)
NAN_BOXED(3225319270,32,FLEN)
NAN_BOXED(4144234495,32,FLEN)
NAN_BOXED(2125204083,32,FLEN)
NAN_BOXED(3225319270,32,FLEN)
NAN_BOXED(4144496639,32,FLEN)
NAN_BOXED(2125204083,32,FLEN)
NAN_BOXED(3225319270,32,FLEN)
NAN_BOXED(4145020927,32,FLEN)
NAN_BOXED(2125204083,32,FLEN)
NAN_BOXED(3225319270,32,FLEN)
NAN_BOXED(4146069503,32,FLEN)
NAN_BOXED(2125204083,32,FLEN)
NAN_BOXED(3225319270,32,FLEN)
NAN_BOXED(4148166655,32,FLEN)
NAN_BOXED(2125204083,32,FLEN)
NAN_BOXED(3225319270,32,FLEN)
NAN_BOXED(4148166656,32,FLEN)
NAN_BOXED(2125204083,32,FLEN)
NAN_BOXED(3225319270,32,FLEN)
NAN_BOXED(4150263808,32,FLEN)
NAN_BOXED(2125204083,32,FLEN)
NAN_BOXED(3225319270,32,FLEN)
NAN_BOXED(4151312384,32,FLEN)
NAN_BOXED(2125204083,32,FLEN)
NAN_BOXED(3225319270,32,FLEN)
NAN_BOXED(4151836672,32,FLEN)
NAN_BOXED(2125204083,32,FLEN)
NAN_BOXED(3225319270,32,FLEN)
NAN_BOXED(4152098816,32,FLEN)
NAN_BOXED(2125204083,32,FLEN)
NAN_BOXED(3225319270,32,FLEN)
NAN_BOXED(4152229888,32,FLEN)
NAN_BOXED(2125204083,32,FLEN)
NAN_BOXED(3225319270,32,FLEN)
NAN_BOXED(4152295424,32,FLEN)
NAN_BOXED(2125204083,32,FLEN)
NAN_BOXED(3225319270,32,FLEN)
NAN_BOXED(4152328192,32,FLEN)
NAN_BOXED(2125204083,32,FLEN)
NAN_BOXED(3225319270,32,FLEN)
NAN_BOXED(4152344576,32,FLEN)
NAN_BOXED(2125204083,32,FLEN)
NAN_BOXED(3225319270,32,FLEN)
NAN_BOXED(4152352768,32,FLEN)
NAN_BOXED(2125204083,32,FLEN)
NAN_BOXED(3225319270,32,FLEN)
NAN_BOXED(4152356864,32,FLEN)
NAN_BOXED(2125204083,32,FLEN)
NAN_BOXED(3225319270,32,FLEN)
NAN_BOXED(4152358912,32,FLEN)
NAN_BOXED(2125204083,32,FLEN)
NAN_BOXED(3225319270,32,FLEN)
NAN_BOXED(4152359936,32,FLEN)
NAN_BOXED(2125204083,32,FLEN)
NAN_BOXED(3225319270,32,FLEN)
NAN_BOXED(4152360448,32,FLEN)
NAN_BOXED(2125204083,32,FLEN)
NAN_BOXED(3225319270,32,FLEN)
NAN_BOXED(4152360704,32,FLEN)
NAN_BOXED(2125204083,32,FLEN)
NAN_BOXED(3225319270,32,FLEN)
NAN_BOXED(4152360832,32,FLEN)
NAN_BOXED(2125204083,32,FLEN)
NAN_BOXED(3225319270,32,FLEN)
NAN_BOXED(4152360896,32,FLEN)
NAN_BOXED(2125204083,32,FLEN)
NAN_BOXED(3225319270,32,FLEN)
NAN_BOXED(4152360928,32,FLEN)
NAN_BOXED(2125204083,32,FLEN)
NAN_BOXED(3225319270,32,FLEN)
NAN_BOXED(4152360944,32,FLEN)
NAN_BOXED(2125204083,32,FLEN)
NAN_BOXED(3225319270,32,FLEN)
NAN_BOXED(4152360952,32,FLEN)
NAN_BOXED(2125204083,32,FLEN)
NAN_BOXED(3225319270,32,FLEN)
NAN_BOXED(4152360956,32,FLEN)
NAN_BOXED(2125204083,32,FLEN)
NAN_BOXED(3225319270,32,FLEN)
NAN_BOXED(4152360958,32,FLEN)
NAN_BOXED(2125204083,32,FLEN)
NAN_BOXED(3225319270,32,FLEN)
NAN_BOXED(4152360959,32,FLEN)
NAN_BOXED(2125204083,32,FLEN)
NAN_BOXED(3225319270,32,FLEN)
NAN_BOXED(4278190081,32,FLEN)
NAN_BOXED(2125204083,32,FLEN)
NAN_BOXED(3225319270,32,FLEN)
NAN_BOXED(4278190083,32,FLEN)
NAN_BOXED(2125204083,32,FLEN)
NAN_BOXED(3225319270,32,FLEN)
NAN_BOXED(4278190087,32,FLEN)
NAN_BOXED(2125204083,32,FLEN)
NAN_BOXED(3225319270,32,FLEN)
NAN_BOXED(4279867801,32,FLEN)
NAN_BOXED(2125204083,32,FLEN)
NAN_BOXED(3225319270,32,FLEN)
NAN_BOXED(4280586825,32,FLEN)
NAN_BOXED(2125204083,32,FLEN)
NAN_BOXED(3225319270,32,FLEN)
NAN_BOXED(4281545523,32,FLEN)
NAN_BOXED(2125204083,32,FLEN)
NAN_BOXED(3225319270,32,FLEN)
NAN_BOXED(4281785197,32,FLEN)
NAN_BOXED(2125204083,32,FLEN)
NAN_BOXED(3225319270,32,FLEN)
NAN_BOXED(4282104763,32,FLEN)
NAN_BOXED(2125204083,32,FLEN)
NAN_BOXED(3225319270,32,FLEN)
NAN_BOXED(4282664004,32,FLEN)
NAN_BOXED(2125204083,32,FLEN)
NAN_BOXED(3225319270,32,FLEN)
NAN_BOXED(4283223244,32,FLEN)
NAN_BOXED(2125204083,32,FLEN)
NAN_BOXED(3225319270,32,FLEN)
NAN_BOXED(4284181942,32,FLEN)
NAN_BOXED(2125204083,32,FLEN)
NAN_BOXED(3225319270,32,FLEN)
NAN_BOXED(4284900966,32,FLEN)
NAN_BOXED(2125204083,32,FLEN)
NAN_BOXED(3225319270,32,FLEN)
NAN_BOXED(4285380315,32,FLEN)
NAN_BOXED(2125204083,32,FLEN)
NAN_BOXED(3225319270,32,FLEN)
NAN_BOXED(4286578680,32,FLEN)
NAN_BOXED(2125204083,32,FLEN)
NAN_BOXED(3225319270,32,FLEN)
NAN_BOXED(4286578684,32,FLEN)
NAN_BOXED(2125204083,32,FLEN)
NAN_BOXED(3225319270,32,FLEN)
NAN_BOXED(4286578686,32,FLEN)
NAN_BOXED(2125209344,32,FLEN)
NAN_BOXED(1077829800,32,FLEN)
NAN_BOXED(2130706433,32,FLEN)
NAN_BOXED(2125209344,32,FLEN)
NAN_BOXED(1077829800,32,FLEN)
NAN_BOXED(2130706435,32,FLEN)
NAN_BOXED(2125209344,32,FLEN)
NAN_BOXED(1077829800,32,FLEN)
NAN_BOXED(2130706439,32,FLEN)
NAN_BOXED(2125209344,32,FLEN)
NAN_BOXED(1077829800,32,FLEN)
NAN_BOXED(2132384153,32,FLEN)
NAN_BOXED(2125209344,32,FLEN)
NAN_BOXED(1077829800,32,FLEN)
NAN_BOXED(2133103177,32,FLEN)
NAN_BOXED(2125209344,32,FLEN)
NAN_BOXED(1077829800,32,FLEN)
NAN_BOXED(2134061875,32,FLEN)
NAN_BOXED(2125209344,32,FLEN)
NAN_BOXED(1077829800,32,FLEN)
NAN_BOXED(2134301549,32,FLEN)
NAN_BOXED(2125209344,32,FLEN)
NAN_BOXED(1077829800,32,FLEN)
NAN_BOXED(2134621115,32,FLEN)
NAN_BOXED(2125209344,32,FLEN)
NAN_BOXED(1077829800,32,FLEN)
NAN_BOXED(2135180356,32,FLEN)
NAN_BOXED(2125209344,32,FLEN)
NAN_BOXED(1077829800,32,FLEN)
NAN_BOXED(2135739596,32,FLEN)
NAN_BOXED(2125209344,32,FLEN)
NAN_BOXED(1077829800,32,FLEN)
NAN_BOXED(2136698294,32,FLEN)
NAN_BOXED(2125209344,32,FLEN)
NAN_BOXED(1077829800,32,FLEN)
NAN_BOXED(2137417318,32,FLEN)
NAN_BOXED(2125209344,32,FLEN)
NAN_BOXED(1077829800,32,FLEN)
NAN_BOXED(2137896667,32,FLEN)
NAN_BOXED(2125209344,32,FLEN)
NAN_BOXED(1077829800,32,FLEN)
NAN_BOXED(2139095032,32,FLEN)
NAN_BOXED(2125209344,32,FLEN)
NAN_BOXED(1077829800,32,FLEN)
NAN_BOXED(2139095036,32,FLEN)
NAN_BOXED(2125209344,32,FLEN)
NAN_BOXED(1077829800,32,FLEN)
NAN_BOXED(2139095038,32,FLEN)
NAN_BOXED(2125209344,32,FLEN)
NAN_BOXED(1077829800,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2125264198,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388609,32,FLEN)
NAN_BOXED(2125264198,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388611,32,FLEN)
NAN_BOXED(2125264198,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388615,32,FLEN)
NAN_BOXED(2125264198,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(10066329,32,FLEN)
NAN_BOXED(2125264198,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(10785353,32,FLEN)
NAN_BOXED(2125264198,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(11744051,32,FLEN)
NAN_BOXED(2125264198,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(11983725,32,FLEN)
NAN_BOXED(2125264198,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(12303291,32,FLEN)
NAN_BOXED(2125264198,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(12862532,32,FLEN)
NAN_BOXED(2125264198,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(13421772,32,FLEN)
NAN_BOXED(2125264198,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(14380470,32,FLEN)
NAN_BOXED(2125264198,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(15099494,32,FLEN)
NAN_BOXED(2125264198,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(15578843,32,FLEN)
NAN_BOXED(2125264198,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777208,32,FLEN)
NAN_BOXED(2125264198,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777212,32,FLEN)
NAN_BOXED(2125264198,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777214,32,FLEN)
NAN_BOXED(2125264198,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(201326592,32,FLEN)
NAN_BOXED(2125264198,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(201326593,32,FLEN)
NAN_BOXED(2125264198,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(201326595,32,FLEN)
NAN_BOXED(2125264198,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(201326599,32,FLEN)
NAN_BOXED(2125264198,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(201326607,32,FLEN)
NAN_BOXED(2125264198,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(201326623,32,FLEN)
NAN_BOXED(2125264198,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(201326655,32,FLEN)
NAN_BOXED(2125264198,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(201326719,32,FLEN)
NAN_BOXED(2125264198,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(201326847,32,FLEN)
NAN_BOXED(2125264198,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(201327103,32,FLEN)
NAN_BOXED(2125264198,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(201327615,32,FLEN)
NAN_BOXED(2125264198,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(201328639,32,FLEN)
NAN_BOXED(2125264198,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(201330687,32,FLEN)
NAN_BOXED(2125264198,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(201334783,32,FLEN)
NAN_BOXED(2125264198,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(201342975,32,FLEN)
NAN_BOXED(2125264198,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(201359359,32,FLEN)
NAN_BOXED(2125264198,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(201392127,32,FLEN)
NAN_BOXED(2125264198,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(201457663,32,FLEN)
NAN_BOXED(2125264198,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(201588735,32,FLEN)
NAN_BOXED(2125264198,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(201850879,32,FLEN)
NAN_BOXED(2125264198,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(202375167,32,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
