
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 14:18:08 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32F/fnmsub.s.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmsub.s instruction of the RISC-V RV32F_Zicsr,RV32FD_Zicsr,RV64F_Zicsr,RV64FD_Zicsr extension for the fnmsub_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF_Zicsr,RV32IFD_Zicsr,RV64IF_Zicsr,RV64IFD_Zicsr,RV32EF_Zicsr,RV32EFD_Zicsr,RV64EF_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fnmsub_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*F.*);def TEST_CASE_1=True;",fnmsub_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_17536:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2fc21e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x11 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eafc21e; op2val:0x80000000;
op3val:0x88ff0000; valaddr_reg:x3; val_offset:52608*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52608*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17537:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2fc21e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x11 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eafc21e; op2val:0x80000000;
op3val:0x88ff8000; valaddr_reg:x3; val_offset:52611*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52611*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17538:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2fc21e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x11 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eafc21e; op2val:0x80000000;
op3val:0x88ffc000; valaddr_reg:x3; val_offset:52614*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52614*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17539:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2fc21e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x11 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eafc21e; op2val:0x80000000;
op3val:0x88ffe000; valaddr_reg:x3; val_offset:52617*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52617*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17540:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2fc21e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x11 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eafc21e; op2val:0x80000000;
op3val:0x88fff000; valaddr_reg:x3; val_offset:52620*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52620*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17541:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2fc21e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x11 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eafc21e; op2val:0x80000000;
op3val:0x88fff800; valaddr_reg:x3; val_offset:52623*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52623*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17542:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2fc21e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x11 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eafc21e; op2val:0x80000000;
op3val:0x88fffc00; valaddr_reg:x3; val_offset:52626*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52626*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17543:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2fc21e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x11 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eafc21e; op2val:0x80000000;
op3val:0x88fffe00; valaddr_reg:x3; val_offset:52629*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52629*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17544:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2fc21e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x11 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eafc21e; op2val:0x80000000;
op3val:0x88ffff00; valaddr_reg:x3; val_offset:52632*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52632*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17545:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2fc21e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x11 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eafc21e; op2val:0x80000000;
op3val:0x88ffff80; valaddr_reg:x3; val_offset:52635*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52635*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17546:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2fc21e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x11 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eafc21e; op2val:0x80000000;
op3val:0x88ffffc0; valaddr_reg:x3; val_offset:52638*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52638*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17547:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2fc21e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x11 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eafc21e; op2val:0x80000000;
op3val:0x88ffffe0; valaddr_reg:x3; val_offset:52641*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52641*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17548:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2fc21e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x11 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eafc21e; op2val:0x80000000;
op3val:0x88fffff0; valaddr_reg:x3; val_offset:52644*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52644*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17549:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2fc21e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x11 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eafc21e; op2val:0x80000000;
op3val:0x88fffff8; valaddr_reg:x3; val_offset:52647*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52647*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17550:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2fc21e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x11 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eafc21e; op2val:0x80000000;
op3val:0x88fffffc; valaddr_reg:x3; val_offset:52650*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52650*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17551:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2fc21e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x11 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eafc21e; op2val:0x80000000;
op3val:0x88fffffe; valaddr_reg:x3; val_offset:52653*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52653*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17552:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2fc21e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x11 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eafc21e; op2val:0x80000000;
op3val:0x88ffffff; valaddr_reg:x3; val_offset:52656*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52656*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17553:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30a2a2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x39831e and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0a2a2; op2val:0xc039831e;
op3val:0xf1000000; valaddr_reg:x3; val_offset:52659*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52659*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17554:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30a2a2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x39831e and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0a2a2; op2val:0xc039831e;
op3val:0xf1000001; valaddr_reg:x3; val_offset:52662*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52662*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17555:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30a2a2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x39831e and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0a2a2; op2val:0xc039831e;
op3val:0xf1000003; valaddr_reg:x3; val_offset:52665*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52665*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17556:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30a2a2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x39831e and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0a2a2; op2val:0xc039831e;
op3val:0xf1000007; valaddr_reg:x3; val_offset:52668*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52668*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17557:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30a2a2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x39831e and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0a2a2; op2val:0xc039831e;
op3val:0xf100000f; valaddr_reg:x3; val_offset:52671*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52671*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17558:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30a2a2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x39831e and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0a2a2; op2val:0xc039831e;
op3val:0xf100001f; valaddr_reg:x3; val_offset:52674*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52674*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17559:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30a2a2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x39831e and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0a2a2; op2val:0xc039831e;
op3val:0xf100003f; valaddr_reg:x3; val_offset:52677*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52677*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17560:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30a2a2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x39831e and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0a2a2; op2val:0xc039831e;
op3val:0xf100007f; valaddr_reg:x3; val_offset:52680*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52680*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17561:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30a2a2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x39831e and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0a2a2; op2val:0xc039831e;
op3val:0xf10000ff; valaddr_reg:x3; val_offset:52683*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52683*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17562:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30a2a2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x39831e and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0a2a2; op2val:0xc039831e;
op3val:0xf10001ff; valaddr_reg:x3; val_offset:52686*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52686*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17563:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30a2a2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x39831e and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0a2a2; op2val:0xc039831e;
op3val:0xf10003ff; valaddr_reg:x3; val_offset:52689*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52689*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17564:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30a2a2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x39831e and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0a2a2; op2val:0xc039831e;
op3val:0xf10007ff; valaddr_reg:x3; val_offset:52692*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52692*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17565:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30a2a2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x39831e and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0a2a2; op2val:0xc039831e;
op3val:0xf1000fff; valaddr_reg:x3; val_offset:52695*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52695*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17566:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30a2a2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x39831e and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0a2a2; op2val:0xc039831e;
op3val:0xf1001fff; valaddr_reg:x3; val_offset:52698*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52698*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17567:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30a2a2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x39831e and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0a2a2; op2val:0xc039831e;
op3val:0xf1003fff; valaddr_reg:x3; val_offset:52701*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52701*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17568:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30a2a2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x39831e and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0a2a2; op2val:0xc039831e;
op3val:0xf1007fff; valaddr_reg:x3; val_offset:52704*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52704*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17569:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30a2a2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x39831e and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0a2a2; op2val:0xc039831e;
op3val:0xf100ffff; valaddr_reg:x3; val_offset:52707*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52707*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17570:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30a2a2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x39831e and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0a2a2; op2val:0xc039831e;
op3val:0xf101ffff; valaddr_reg:x3; val_offset:52710*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52710*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17571:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30a2a2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x39831e and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0a2a2; op2val:0xc039831e;
op3val:0xf103ffff; valaddr_reg:x3; val_offset:52713*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52713*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17572:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30a2a2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x39831e and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0a2a2; op2val:0xc039831e;
op3val:0xf107ffff; valaddr_reg:x3; val_offset:52716*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52716*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17573:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30a2a2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x39831e and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0a2a2; op2val:0xc039831e;
op3val:0xf10fffff; valaddr_reg:x3; val_offset:52719*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52719*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17574:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30a2a2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x39831e and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0a2a2; op2val:0xc039831e;
op3val:0xf11fffff; valaddr_reg:x3; val_offset:52722*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52722*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17575:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30a2a2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x39831e and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0a2a2; op2val:0xc039831e;
op3val:0xf13fffff; valaddr_reg:x3; val_offset:52725*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52725*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17576:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30a2a2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x39831e and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0a2a2; op2val:0xc039831e;
op3val:0xf1400000; valaddr_reg:x3; val_offset:52728*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52728*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17577:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30a2a2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x39831e and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0a2a2; op2val:0xc039831e;
op3val:0xf1600000; valaddr_reg:x3; val_offset:52731*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52731*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17578:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30a2a2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x39831e and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0a2a2; op2val:0xc039831e;
op3val:0xf1700000; valaddr_reg:x3; val_offset:52734*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52734*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17579:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30a2a2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x39831e and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0a2a2; op2val:0xc039831e;
op3val:0xf1780000; valaddr_reg:x3; val_offset:52737*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52737*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17580:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30a2a2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x39831e and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0a2a2; op2val:0xc039831e;
op3val:0xf17c0000; valaddr_reg:x3; val_offset:52740*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52740*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17581:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30a2a2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x39831e and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0a2a2; op2val:0xc039831e;
op3val:0xf17e0000; valaddr_reg:x3; val_offset:52743*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52743*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17582:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30a2a2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x39831e and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0a2a2; op2val:0xc039831e;
op3val:0xf17f0000; valaddr_reg:x3; val_offset:52746*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52746*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17583:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30a2a2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x39831e and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0a2a2; op2val:0xc039831e;
op3val:0xf17f8000; valaddr_reg:x3; val_offset:52749*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52749*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17584:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30a2a2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x39831e and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0a2a2; op2val:0xc039831e;
op3val:0xf17fc000; valaddr_reg:x3; val_offset:52752*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52752*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17585:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30a2a2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x39831e and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0a2a2; op2val:0xc039831e;
op3val:0xf17fe000; valaddr_reg:x3; val_offset:52755*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52755*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17586:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30a2a2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x39831e and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0a2a2; op2val:0xc039831e;
op3val:0xf17ff000; valaddr_reg:x3; val_offset:52758*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52758*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17587:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30a2a2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x39831e and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0a2a2; op2val:0xc039831e;
op3val:0xf17ff800; valaddr_reg:x3; val_offset:52761*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52761*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17588:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30a2a2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x39831e and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0a2a2; op2val:0xc039831e;
op3val:0xf17ffc00; valaddr_reg:x3; val_offset:52764*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52764*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17589:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30a2a2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x39831e and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0a2a2; op2val:0xc039831e;
op3val:0xf17ffe00; valaddr_reg:x3; val_offset:52767*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52767*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17590:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30a2a2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x39831e and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0a2a2; op2val:0xc039831e;
op3val:0xf17fff00; valaddr_reg:x3; val_offset:52770*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52770*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17591:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30a2a2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x39831e and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0a2a2; op2val:0xc039831e;
op3val:0xf17fff80; valaddr_reg:x3; val_offset:52773*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52773*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17592:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30a2a2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x39831e and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0a2a2; op2val:0xc039831e;
op3val:0xf17fffc0; valaddr_reg:x3; val_offset:52776*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52776*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17593:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30a2a2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x39831e and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0a2a2; op2val:0xc039831e;
op3val:0xf17fffe0; valaddr_reg:x3; val_offset:52779*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52779*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17594:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30a2a2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x39831e and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0a2a2; op2val:0xc039831e;
op3val:0xf17ffff0; valaddr_reg:x3; val_offset:52782*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52782*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17595:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30a2a2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x39831e and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0a2a2; op2val:0xc039831e;
op3val:0xf17ffff8; valaddr_reg:x3; val_offset:52785*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52785*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17596:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30a2a2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x39831e and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0a2a2; op2val:0xc039831e;
op3val:0xf17ffffc; valaddr_reg:x3; val_offset:52788*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52788*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17597:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30a2a2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x39831e and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0a2a2; op2val:0xc039831e;
op3val:0xf17ffffe; valaddr_reg:x3; val_offset:52791*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52791*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17598:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30a2a2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x39831e and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0a2a2; op2val:0xc039831e;
op3val:0xf17fffff; valaddr_reg:x3; val_offset:52794*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52794*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17599:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30a2a2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x39831e and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0a2a2; op2val:0xc039831e;
op3val:0xff000001; valaddr_reg:x3; val_offset:52797*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52797*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17600:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30a2a2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x39831e and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0a2a2; op2val:0xc039831e;
op3val:0xff000003; valaddr_reg:x3; val_offset:52800*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52800*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17601:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30a2a2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x39831e and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0a2a2; op2val:0xc039831e;
op3val:0xff000007; valaddr_reg:x3; val_offset:52803*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52803*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17602:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30a2a2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x39831e and fs3 == 1 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0a2a2; op2val:0xc039831e;
op3val:0xff199999; valaddr_reg:x3; val_offset:52806*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52806*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17603:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30a2a2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x39831e and fs3 == 1 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0a2a2; op2val:0xc039831e;
op3val:0xff249249; valaddr_reg:x3; val_offset:52809*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52809*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17604:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30a2a2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x39831e and fs3 == 1 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0a2a2; op2val:0xc039831e;
op3val:0xff333333; valaddr_reg:x3; val_offset:52812*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52812*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17605:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30a2a2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x39831e and fs3 == 1 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0a2a2; op2val:0xc039831e;
op3val:0xff36db6d; valaddr_reg:x3; val_offset:52815*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52815*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17606:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30a2a2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x39831e and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0a2a2; op2val:0xc039831e;
op3val:0xff3bbbbb; valaddr_reg:x3; val_offset:52818*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52818*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17607:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30a2a2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x39831e and fs3 == 1 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0a2a2; op2val:0xc039831e;
op3val:0xff444444; valaddr_reg:x3; val_offset:52821*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52821*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17608:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30a2a2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x39831e and fs3 == 1 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0a2a2; op2val:0xc039831e;
op3val:0xff4ccccc; valaddr_reg:x3; val_offset:52824*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52824*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17609:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30a2a2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x39831e and fs3 == 1 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0a2a2; op2val:0xc039831e;
op3val:0xff5b6db6; valaddr_reg:x3; val_offset:52827*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52827*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17610:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30a2a2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x39831e and fs3 == 1 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0a2a2; op2val:0xc039831e;
op3val:0xff666666; valaddr_reg:x3; val_offset:52830*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52830*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17611:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30a2a2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x39831e and fs3 == 1 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0a2a2; op2val:0xc039831e;
op3val:0xff6db6db; valaddr_reg:x3; val_offset:52833*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52833*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17612:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30a2a2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x39831e and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0a2a2; op2val:0xc039831e;
op3val:0xff7ffff8; valaddr_reg:x3; val_offset:52836*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52836*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17613:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30a2a2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x39831e and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0a2a2; op2val:0xc039831e;
op3val:0xff7ffffc; valaddr_reg:x3; val_offset:52839*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52839*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17614:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30a2a2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x39831e and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0a2a2; op2val:0xc039831e;
op3val:0xff7ffffe; valaddr_reg:x3; val_offset:52842*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52842*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17615:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30cc1b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5cabcd and fs3 == 0 and fe3 == 0x56 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0cc1b; op2val:0x5cabcd;
op3val:0x2b000000; valaddr_reg:x3; val_offset:52845*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52845*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17616:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30cc1b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5cabcd and fs3 == 0 and fe3 == 0x56 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0cc1b; op2val:0x5cabcd;
op3val:0x2b000001; valaddr_reg:x3; val_offset:52848*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52848*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17617:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30cc1b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5cabcd and fs3 == 0 and fe3 == 0x56 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0cc1b; op2val:0x5cabcd;
op3val:0x2b000003; valaddr_reg:x3; val_offset:52851*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52851*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17618:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30cc1b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5cabcd and fs3 == 0 and fe3 == 0x56 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0cc1b; op2val:0x5cabcd;
op3val:0x2b000007; valaddr_reg:x3; val_offset:52854*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52854*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17619:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30cc1b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5cabcd and fs3 == 0 and fe3 == 0x56 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0cc1b; op2val:0x5cabcd;
op3val:0x2b00000f; valaddr_reg:x3; val_offset:52857*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52857*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17620:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30cc1b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5cabcd and fs3 == 0 and fe3 == 0x56 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0cc1b; op2val:0x5cabcd;
op3val:0x2b00001f; valaddr_reg:x3; val_offset:52860*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52860*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17621:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30cc1b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5cabcd and fs3 == 0 and fe3 == 0x56 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0cc1b; op2val:0x5cabcd;
op3val:0x2b00003f; valaddr_reg:x3; val_offset:52863*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52863*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17622:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30cc1b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5cabcd and fs3 == 0 and fe3 == 0x56 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0cc1b; op2val:0x5cabcd;
op3val:0x2b00007f; valaddr_reg:x3; val_offset:52866*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52866*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17623:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30cc1b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5cabcd and fs3 == 0 and fe3 == 0x56 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0cc1b; op2val:0x5cabcd;
op3val:0x2b0000ff; valaddr_reg:x3; val_offset:52869*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52869*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17624:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30cc1b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5cabcd and fs3 == 0 and fe3 == 0x56 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0cc1b; op2val:0x5cabcd;
op3val:0x2b0001ff; valaddr_reg:x3; val_offset:52872*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52872*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17625:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30cc1b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5cabcd and fs3 == 0 and fe3 == 0x56 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0cc1b; op2val:0x5cabcd;
op3val:0x2b0003ff; valaddr_reg:x3; val_offset:52875*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52875*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17626:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30cc1b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5cabcd and fs3 == 0 and fe3 == 0x56 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0cc1b; op2val:0x5cabcd;
op3val:0x2b0007ff; valaddr_reg:x3; val_offset:52878*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52878*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17627:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30cc1b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5cabcd and fs3 == 0 and fe3 == 0x56 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0cc1b; op2val:0x5cabcd;
op3val:0x2b000fff; valaddr_reg:x3; val_offset:52881*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52881*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17628:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30cc1b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5cabcd and fs3 == 0 and fe3 == 0x56 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0cc1b; op2val:0x5cabcd;
op3val:0x2b001fff; valaddr_reg:x3; val_offset:52884*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52884*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17629:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30cc1b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5cabcd and fs3 == 0 and fe3 == 0x56 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0cc1b; op2val:0x5cabcd;
op3val:0x2b003fff; valaddr_reg:x3; val_offset:52887*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52887*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17630:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30cc1b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5cabcd and fs3 == 0 and fe3 == 0x56 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0cc1b; op2val:0x5cabcd;
op3val:0x2b007fff; valaddr_reg:x3; val_offset:52890*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52890*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17631:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30cc1b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5cabcd and fs3 == 0 and fe3 == 0x56 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0cc1b; op2val:0x5cabcd;
op3val:0x2b00ffff; valaddr_reg:x3; val_offset:52893*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52893*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17632:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30cc1b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5cabcd and fs3 == 0 and fe3 == 0x56 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0cc1b; op2val:0x5cabcd;
op3val:0x2b01ffff; valaddr_reg:x3; val_offset:52896*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52896*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17633:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30cc1b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5cabcd and fs3 == 0 and fe3 == 0x56 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0cc1b; op2val:0x5cabcd;
op3val:0x2b03ffff; valaddr_reg:x3; val_offset:52899*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52899*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17634:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30cc1b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5cabcd and fs3 == 0 and fe3 == 0x56 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0cc1b; op2val:0x5cabcd;
op3val:0x2b07ffff; valaddr_reg:x3; val_offset:52902*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52902*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17635:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30cc1b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5cabcd and fs3 == 0 and fe3 == 0x56 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0cc1b; op2val:0x5cabcd;
op3val:0x2b0fffff; valaddr_reg:x3; val_offset:52905*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52905*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17636:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30cc1b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5cabcd and fs3 == 0 and fe3 == 0x56 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0cc1b; op2val:0x5cabcd;
op3val:0x2b1fffff; valaddr_reg:x3; val_offset:52908*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52908*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17637:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30cc1b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5cabcd and fs3 == 0 and fe3 == 0x56 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0cc1b; op2val:0x5cabcd;
op3val:0x2b3fffff; valaddr_reg:x3; val_offset:52911*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52911*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17638:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30cc1b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5cabcd and fs3 == 0 and fe3 == 0x56 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0cc1b; op2val:0x5cabcd;
op3val:0x2b400000; valaddr_reg:x3; val_offset:52914*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52914*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17639:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30cc1b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5cabcd and fs3 == 0 and fe3 == 0x56 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0cc1b; op2val:0x5cabcd;
op3val:0x2b600000; valaddr_reg:x3; val_offset:52917*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52917*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17640:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30cc1b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5cabcd and fs3 == 0 and fe3 == 0x56 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0cc1b; op2val:0x5cabcd;
op3val:0x2b700000; valaddr_reg:x3; val_offset:52920*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52920*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17641:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30cc1b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5cabcd and fs3 == 0 and fe3 == 0x56 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0cc1b; op2val:0x5cabcd;
op3val:0x2b780000; valaddr_reg:x3; val_offset:52923*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52923*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17642:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30cc1b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5cabcd and fs3 == 0 and fe3 == 0x56 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0cc1b; op2val:0x5cabcd;
op3val:0x2b7c0000; valaddr_reg:x3; val_offset:52926*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52926*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17643:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30cc1b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5cabcd and fs3 == 0 and fe3 == 0x56 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0cc1b; op2val:0x5cabcd;
op3val:0x2b7e0000; valaddr_reg:x3; val_offset:52929*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52929*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17644:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30cc1b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5cabcd and fs3 == 0 and fe3 == 0x56 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0cc1b; op2val:0x5cabcd;
op3val:0x2b7f0000; valaddr_reg:x3; val_offset:52932*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52932*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17645:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30cc1b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5cabcd and fs3 == 0 and fe3 == 0x56 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0cc1b; op2val:0x5cabcd;
op3val:0x2b7f8000; valaddr_reg:x3; val_offset:52935*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52935*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17646:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30cc1b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5cabcd and fs3 == 0 and fe3 == 0x56 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0cc1b; op2val:0x5cabcd;
op3val:0x2b7fc000; valaddr_reg:x3; val_offset:52938*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52938*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17647:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30cc1b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5cabcd and fs3 == 0 and fe3 == 0x56 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0cc1b; op2val:0x5cabcd;
op3val:0x2b7fe000; valaddr_reg:x3; val_offset:52941*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52941*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17648:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30cc1b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5cabcd and fs3 == 0 and fe3 == 0x56 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0cc1b; op2val:0x5cabcd;
op3val:0x2b7ff000; valaddr_reg:x3; val_offset:52944*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52944*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17649:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30cc1b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5cabcd and fs3 == 0 and fe3 == 0x56 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0cc1b; op2val:0x5cabcd;
op3val:0x2b7ff800; valaddr_reg:x3; val_offset:52947*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52947*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17650:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30cc1b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5cabcd and fs3 == 0 and fe3 == 0x56 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0cc1b; op2val:0x5cabcd;
op3val:0x2b7ffc00; valaddr_reg:x3; val_offset:52950*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52950*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17651:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30cc1b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5cabcd and fs3 == 0 and fe3 == 0x56 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0cc1b; op2val:0x5cabcd;
op3val:0x2b7ffe00; valaddr_reg:x3; val_offset:52953*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52953*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17652:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30cc1b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5cabcd and fs3 == 0 and fe3 == 0x56 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0cc1b; op2val:0x5cabcd;
op3val:0x2b7fff00; valaddr_reg:x3; val_offset:52956*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52956*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17653:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30cc1b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5cabcd and fs3 == 0 and fe3 == 0x56 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0cc1b; op2val:0x5cabcd;
op3val:0x2b7fff80; valaddr_reg:x3; val_offset:52959*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52959*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17654:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30cc1b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5cabcd and fs3 == 0 and fe3 == 0x56 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0cc1b; op2val:0x5cabcd;
op3val:0x2b7fffc0; valaddr_reg:x3; val_offset:52962*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52962*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17655:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30cc1b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5cabcd and fs3 == 0 and fe3 == 0x56 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0cc1b; op2val:0x5cabcd;
op3val:0x2b7fffe0; valaddr_reg:x3; val_offset:52965*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52965*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17656:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30cc1b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5cabcd and fs3 == 0 and fe3 == 0x56 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0cc1b; op2val:0x5cabcd;
op3val:0x2b7ffff0; valaddr_reg:x3; val_offset:52968*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52968*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17657:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30cc1b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5cabcd and fs3 == 0 and fe3 == 0x56 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0cc1b; op2val:0x5cabcd;
op3val:0x2b7ffff8; valaddr_reg:x3; val_offset:52971*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52971*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17658:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30cc1b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5cabcd and fs3 == 0 and fe3 == 0x56 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0cc1b; op2val:0x5cabcd;
op3val:0x2b7ffffc; valaddr_reg:x3; val_offset:52974*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52974*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17659:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30cc1b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5cabcd and fs3 == 0 and fe3 == 0x56 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0cc1b; op2val:0x5cabcd;
op3val:0x2b7ffffe; valaddr_reg:x3; val_offset:52977*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52977*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17660:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30cc1b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5cabcd and fs3 == 0 and fe3 == 0x56 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0cc1b; op2val:0x5cabcd;
op3val:0x2b7fffff; valaddr_reg:x3; val_offset:52980*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52980*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17661:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30cc1b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5cabcd and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0cc1b; op2val:0x5cabcd;
op3val:0x3f800001; valaddr_reg:x3; val_offset:52983*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52983*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17662:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30cc1b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5cabcd and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0cc1b; op2val:0x5cabcd;
op3val:0x3f800003; valaddr_reg:x3; val_offset:52986*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52986*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17663:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30cc1b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5cabcd and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0cc1b; op2val:0x5cabcd;
op3val:0x3f800007; valaddr_reg:x3; val_offset:52989*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52989*0 + 3*137*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(2125447710,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2298413056,32,FLEN)
NAN_BOXED(2125447710,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2298445824,32,FLEN)
NAN_BOXED(2125447710,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2298462208,32,FLEN)
NAN_BOXED(2125447710,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2298470400,32,FLEN)
NAN_BOXED(2125447710,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2298474496,32,FLEN)
NAN_BOXED(2125447710,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2298476544,32,FLEN)
NAN_BOXED(2125447710,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2298477568,32,FLEN)
NAN_BOXED(2125447710,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2298478080,32,FLEN)
NAN_BOXED(2125447710,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2298478336,32,FLEN)
NAN_BOXED(2125447710,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2298478464,32,FLEN)
NAN_BOXED(2125447710,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2298478528,32,FLEN)
NAN_BOXED(2125447710,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2298478560,32,FLEN)
NAN_BOXED(2125447710,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2298478576,32,FLEN)
NAN_BOXED(2125447710,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2298478584,32,FLEN)
NAN_BOXED(2125447710,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2298478588,32,FLEN)
NAN_BOXED(2125447710,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2298478590,32,FLEN)
NAN_BOXED(2125447710,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2298478591,32,FLEN)
NAN_BOXED(2125505186,32,FLEN)
NAN_BOXED(3224994590,32,FLEN)
NAN_BOXED(4043309056,32,FLEN)
NAN_BOXED(2125505186,32,FLEN)
NAN_BOXED(3224994590,32,FLEN)
NAN_BOXED(4043309057,32,FLEN)
NAN_BOXED(2125505186,32,FLEN)
NAN_BOXED(3224994590,32,FLEN)
NAN_BOXED(4043309059,32,FLEN)
NAN_BOXED(2125505186,32,FLEN)
NAN_BOXED(3224994590,32,FLEN)
NAN_BOXED(4043309063,32,FLEN)
NAN_BOXED(2125505186,32,FLEN)
NAN_BOXED(3224994590,32,FLEN)
NAN_BOXED(4043309071,32,FLEN)
NAN_BOXED(2125505186,32,FLEN)
NAN_BOXED(3224994590,32,FLEN)
NAN_BOXED(4043309087,32,FLEN)
NAN_BOXED(2125505186,32,FLEN)
NAN_BOXED(3224994590,32,FLEN)
NAN_BOXED(4043309119,32,FLEN)
NAN_BOXED(2125505186,32,FLEN)
NAN_BOXED(3224994590,32,FLEN)
NAN_BOXED(4043309183,32,FLEN)
NAN_BOXED(2125505186,32,FLEN)
NAN_BOXED(3224994590,32,FLEN)
NAN_BOXED(4043309311,32,FLEN)
NAN_BOXED(2125505186,32,FLEN)
NAN_BOXED(3224994590,32,FLEN)
NAN_BOXED(4043309567,32,FLEN)
NAN_BOXED(2125505186,32,FLEN)
NAN_BOXED(3224994590,32,FLEN)
NAN_BOXED(4043310079,32,FLEN)
NAN_BOXED(2125505186,32,FLEN)
NAN_BOXED(3224994590,32,FLEN)
NAN_BOXED(4043311103,32,FLEN)
NAN_BOXED(2125505186,32,FLEN)
NAN_BOXED(3224994590,32,FLEN)
NAN_BOXED(4043313151,32,FLEN)
NAN_BOXED(2125505186,32,FLEN)
NAN_BOXED(3224994590,32,FLEN)
NAN_BOXED(4043317247,32,FLEN)
NAN_BOXED(2125505186,32,FLEN)
NAN_BOXED(3224994590,32,FLEN)
NAN_BOXED(4043325439,32,FLEN)
NAN_BOXED(2125505186,32,FLEN)
NAN_BOXED(3224994590,32,FLEN)
NAN_BOXED(4043341823,32,FLEN)
NAN_BOXED(2125505186,32,FLEN)
NAN_BOXED(3224994590,32,FLEN)
NAN_BOXED(4043374591,32,FLEN)
NAN_BOXED(2125505186,32,FLEN)
NAN_BOXED(3224994590,32,FLEN)
NAN_BOXED(4043440127,32,FLEN)
NAN_BOXED(2125505186,32,FLEN)
NAN_BOXED(3224994590,32,FLEN)
NAN_BOXED(4043571199,32,FLEN)
NAN_BOXED(2125505186,32,FLEN)
NAN_BOXED(3224994590,32,FLEN)
NAN_BOXED(4043833343,32,FLEN)
NAN_BOXED(2125505186,32,FLEN)
NAN_BOXED(3224994590,32,FLEN)
NAN_BOXED(4044357631,32,FLEN)
NAN_BOXED(2125505186,32,FLEN)
NAN_BOXED(3224994590,32,FLEN)
NAN_BOXED(4045406207,32,FLEN)
NAN_BOXED(2125505186,32,FLEN)
NAN_BOXED(3224994590,32,FLEN)
NAN_BOXED(4047503359,32,FLEN)
NAN_BOXED(2125505186,32,FLEN)
NAN_BOXED(3224994590,32,FLEN)
NAN_BOXED(4047503360,32,FLEN)
NAN_BOXED(2125505186,32,FLEN)
NAN_BOXED(3224994590,32,FLEN)
NAN_BOXED(4049600512,32,FLEN)
NAN_BOXED(2125505186,32,FLEN)
NAN_BOXED(3224994590,32,FLEN)
NAN_BOXED(4050649088,32,FLEN)
NAN_BOXED(2125505186,32,FLEN)
NAN_BOXED(3224994590,32,FLEN)
NAN_BOXED(4051173376,32,FLEN)
NAN_BOXED(2125505186,32,FLEN)
NAN_BOXED(3224994590,32,FLEN)
NAN_BOXED(4051435520,32,FLEN)
NAN_BOXED(2125505186,32,FLEN)
NAN_BOXED(3224994590,32,FLEN)
NAN_BOXED(4051566592,32,FLEN)
NAN_BOXED(2125505186,32,FLEN)
NAN_BOXED(3224994590,32,FLEN)
NAN_BOXED(4051632128,32,FLEN)
NAN_BOXED(2125505186,32,FLEN)
NAN_BOXED(3224994590,32,FLEN)
NAN_BOXED(4051664896,32,FLEN)
NAN_BOXED(2125505186,32,FLEN)
NAN_BOXED(3224994590,32,FLEN)
NAN_BOXED(4051681280,32,FLEN)
NAN_BOXED(2125505186,32,FLEN)
NAN_BOXED(3224994590,32,FLEN)
NAN_BOXED(4051689472,32,FLEN)
NAN_BOXED(2125505186,32,FLEN)
NAN_BOXED(3224994590,32,FLEN)
NAN_BOXED(4051693568,32,FLEN)
NAN_BOXED(2125505186,32,FLEN)
NAN_BOXED(3224994590,32,FLEN)
NAN_BOXED(4051695616,32,FLEN)
NAN_BOXED(2125505186,32,FLEN)
NAN_BOXED(3224994590,32,FLEN)
NAN_BOXED(4051696640,32,FLEN)
NAN_BOXED(2125505186,32,FLEN)
NAN_BOXED(3224994590,32,FLEN)
NAN_BOXED(4051697152,32,FLEN)
NAN_BOXED(2125505186,32,FLEN)
NAN_BOXED(3224994590,32,FLEN)
NAN_BOXED(4051697408,32,FLEN)
NAN_BOXED(2125505186,32,FLEN)
NAN_BOXED(3224994590,32,FLEN)
NAN_BOXED(4051697536,32,FLEN)
NAN_BOXED(2125505186,32,FLEN)
NAN_BOXED(3224994590,32,FLEN)
NAN_BOXED(4051697600,32,FLEN)
NAN_BOXED(2125505186,32,FLEN)
NAN_BOXED(3224994590,32,FLEN)
NAN_BOXED(4051697632,32,FLEN)
NAN_BOXED(2125505186,32,FLEN)
NAN_BOXED(3224994590,32,FLEN)
NAN_BOXED(4051697648,32,FLEN)
NAN_BOXED(2125505186,32,FLEN)
NAN_BOXED(3224994590,32,FLEN)
NAN_BOXED(4051697656,32,FLEN)
NAN_BOXED(2125505186,32,FLEN)
NAN_BOXED(3224994590,32,FLEN)
NAN_BOXED(4051697660,32,FLEN)
NAN_BOXED(2125505186,32,FLEN)
NAN_BOXED(3224994590,32,FLEN)
NAN_BOXED(4051697662,32,FLEN)
NAN_BOXED(2125505186,32,FLEN)
NAN_BOXED(3224994590,32,FLEN)
NAN_BOXED(4051697663,32,FLEN)
NAN_BOXED(2125505186,32,FLEN)
NAN_BOXED(3224994590,32,FLEN)
NAN_BOXED(4278190081,32,FLEN)
NAN_BOXED(2125505186,32,FLEN)
NAN_BOXED(3224994590,32,FLEN)
NAN_BOXED(4278190083,32,FLEN)
NAN_BOXED(2125505186,32,FLEN)
NAN_BOXED(3224994590,32,FLEN)
NAN_BOXED(4278190087,32,FLEN)
NAN_BOXED(2125505186,32,FLEN)
NAN_BOXED(3224994590,32,FLEN)
NAN_BOXED(4279867801,32,FLEN)
NAN_BOXED(2125505186,32,FLEN)
NAN_BOXED(3224994590,32,FLEN)
NAN_BOXED(4280586825,32,FLEN)
NAN_BOXED(2125505186,32,FLEN)
NAN_BOXED(3224994590,32,FLEN)
NAN_BOXED(4281545523,32,FLEN)
NAN_BOXED(2125505186,32,FLEN)
NAN_BOXED(3224994590,32,FLEN)
NAN_BOXED(4281785197,32,FLEN)
NAN_BOXED(2125505186,32,FLEN)
NAN_BOXED(3224994590,32,FLEN)
NAN_BOXED(4282104763,32,FLEN)
NAN_BOXED(2125505186,32,FLEN)
NAN_BOXED(3224994590,32,FLEN)
NAN_BOXED(4282664004,32,FLEN)
NAN_BOXED(2125505186,32,FLEN)
NAN_BOXED(3224994590,32,FLEN)
NAN_BOXED(4283223244,32,FLEN)
NAN_BOXED(2125505186,32,FLEN)
NAN_BOXED(3224994590,32,FLEN)
NAN_BOXED(4284181942,32,FLEN)
NAN_BOXED(2125505186,32,FLEN)
NAN_BOXED(3224994590,32,FLEN)
NAN_BOXED(4284900966,32,FLEN)
NAN_BOXED(2125505186,32,FLEN)
NAN_BOXED(3224994590,32,FLEN)
NAN_BOXED(4285380315,32,FLEN)
NAN_BOXED(2125505186,32,FLEN)
NAN_BOXED(3224994590,32,FLEN)
NAN_BOXED(4286578680,32,FLEN)
NAN_BOXED(2125505186,32,FLEN)
NAN_BOXED(3224994590,32,FLEN)
NAN_BOXED(4286578684,32,FLEN)
NAN_BOXED(2125505186,32,FLEN)
NAN_BOXED(3224994590,32,FLEN)
NAN_BOXED(4286578686,32,FLEN)
NAN_BOXED(2125515803,32,FLEN)
NAN_BOXED(6073293,32,FLEN)
NAN_BOXED(721420288,32,FLEN)
NAN_BOXED(2125515803,32,FLEN)
NAN_BOXED(6073293,32,FLEN)
NAN_BOXED(721420289,32,FLEN)
NAN_BOXED(2125515803,32,FLEN)
NAN_BOXED(6073293,32,FLEN)
NAN_BOXED(721420291,32,FLEN)
NAN_BOXED(2125515803,32,FLEN)
NAN_BOXED(6073293,32,FLEN)
NAN_BOXED(721420295,32,FLEN)
NAN_BOXED(2125515803,32,FLEN)
NAN_BOXED(6073293,32,FLEN)
NAN_BOXED(721420303,32,FLEN)
NAN_BOXED(2125515803,32,FLEN)
NAN_BOXED(6073293,32,FLEN)
NAN_BOXED(721420319,32,FLEN)
NAN_BOXED(2125515803,32,FLEN)
NAN_BOXED(6073293,32,FLEN)
NAN_BOXED(721420351,32,FLEN)
NAN_BOXED(2125515803,32,FLEN)
NAN_BOXED(6073293,32,FLEN)
NAN_BOXED(721420415,32,FLEN)
NAN_BOXED(2125515803,32,FLEN)
NAN_BOXED(6073293,32,FLEN)
NAN_BOXED(721420543,32,FLEN)
NAN_BOXED(2125515803,32,FLEN)
NAN_BOXED(6073293,32,FLEN)
NAN_BOXED(721420799,32,FLEN)
NAN_BOXED(2125515803,32,FLEN)
NAN_BOXED(6073293,32,FLEN)
NAN_BOXED(721421311,32,FLEN)
NAN_BOXED(2125515803,32,FLEN)
NAN_BOXED(6073293,32,FLEN)
NAN_BOXED(721422335,32,FLEN)
NAN_BOXED(2125515803,32,FLEN)
NAN_BOXED(6073293,32,FLEN)
NAN_BOXED(721424383,32,FLEN)
NAN_BOXED(2125515803,32,FLEN)
NAN_BOXED(6073293,32,FLEN)
NAN_BOXED(721428479,32,FLEN)
NAN_BOXED(2125515803,32,FLEN)
NAN_BOXED(6073293,32,FLEN)
NAN_BOXED(721436671,32,FLEN)
NAN_BOXED(2125515803,32,FLEN)
NAN_BOXED(6073293,32,FLEN)
NAN_BOXED(721453055,32,FLEN)
NAN_BOXED(2125515803,32,FLEN)
NAN_BOXED(6073293,32,FLEN)
NAN_BOXED(721485823,32,FLEN)
NAN_BOXED(2125515803,32,FLEN)
NAN_BOXED(6073293,32,FLEN)
NAN_BOXED(721551359,32,FLEN)
NAN_BOXED(2125515803,32,FLEN)
NAN_BOXED(6073293,32,FLEN)
NAN_BOXED(721682431,32,FLEN)
NAN_BOXED(2125515803,32,FLEN)
NAN_BOXED(6073293,32,FLEN)
NAN_BOXED(721944575,32,FLEN)
NAN_BOXED(2125515803,32,FLEN)
NAN_BOXED(6073293,32,FLEN)
NAN_BOXED(722468863,32,FLEN)
NAN_BOXED(2125515803,32,FLEN)
NAN_BOXED(6073293,32,FLEN)
NAN_BOXED(723517439,32,FLEN)
NAN_BOXED(2125515803,32,FLEN)
NAN_BOXED(6073293,32,FLEN)
NAN_BOXED(725614591,32,FLEN)
NAN_BOXED(2125515803,32,FLEN)
NAN_BOXED(6073293,32,FLEN)
NAN_BOXED(725614592,32,FLEN)
NAN_BOXED(2125515803,32,FLEN)
NAN_BOXED(6073293,32,FLEN)
NAN_BOXED(727711744,32,FLEN)
NAN_BOXED(2125515803,32,FLEN)
NAN_BOXED(6073293,32,FLEN)
NAN_BOXED(728760320,32,FLEN)
NAN_BOXED(2125515803,32,FLEN)
NAN_BOXED(6073293,32,FLEN)
NAN_BOXED(729284608,32,FLEN)
NAN_BOXED(2125515803,32,FLEN)
NAN_BOXED(6073293,32,FLEN)
NAN_BOXED(729546752,32,FLEN)
NAN_BOXED(2125515803,32,FLEN)
NAN_BOXED(6073293,32,FLEN)
NAN_BOXED(729677824,32,FLEN)
NAN_BOXED(2125515803,32,FLEN)
NAN_BOXED(6073293,32,FLEN)
NAN_BOXED(729743360,32,FLEN)
NAN_BOXED(2125515803,32,FLEN)
NAN_BOXED(6073293,32,FLEN)
NAN_BOXED(729776128,32,FLEN)
NAN_BOXED(2125515803,32,FLEN)
NAN_BOXED(6073293,32,FLEN)
NAN_BOXED(729792512,32,FLEN)
NAN_BOXED(2125515803,32,FLEN)
NAN_BOXED(6073293,32,FLEN)
NAN_BOXED(729800704,32,FLEN)
NAN_BOXED(2125515803,32,FLEN)
NAN_BOXED(6073293,32,FLEN)
NAN_BOXED(729804800,32,FLEN)
NAN_BOXED(2125515803,32,FLEN)
NAN_BOXED(6073293,32,FLEN)
NAN_BOXED(729806848,32,FLEN)
NAN_BOXED(2125515803,32,FLEN)
NAN_BOXED(6073293,32,FLEN)
NAN_BOXED(729807872,32,FLEN)
NAN_BOXED(2125515803,32,FLEN)
NAN_BOXED(6073293,32,FLEN)
NAN_BOXED(729808384,32,FLEN)
NAN_BOXED(2125515803,32,FLEN)
NAN_BOXED(6073293,32,FLEN)
NAN_BOXED(729808640,32,FLEN)
NAN_BOXED(2125515803,32,FLEN)
NAN_BOXED(6073293,32,FLEN)
NAN_BOXED(729808768,32,FLEN)
NAN_BOXED(2125515803,32,FLEN)
NAN_BOXED(6073293,32,FLEN)
NAN_BOXED(729808832,32,FLEN)
NAN_BOXED(2125515803,32,FLEN)
NAN_BOXED(6073293,32,FLEN)
NAN_BOXED(729808864,32,FLEN)
NAN_BOXED(2125515803,32,FLEN)
NAN_BOXED(6073293,32,FLEN)
NAN_BOXED(729808880,32,FLEN)
NAN_BOXED(2125515803,32,FLEN)
NAN_BOXED(6073293,32,FLEN)
NAN_BOXED(729808888,32,FLEN)
NAN_BOXED(2125515803,32,FLEN)
NAN_BOXED(6073293,32,FLEN)
NAN_BOXED(729808892,32,FLEN)
NAN_BOXED(2125515803,32,FLEN)
NAN_BOXED(6073293,32,FLEN)
NAN_BOXED(729808894,32,FLEN)
NAN_BOXED(2125515803,32,FLEN)
NAN_BOXED(6073293,32,FLEN)
NAN_BOXED(729808895,32,FLEN)
NAN_BOXED(2125515803,32,FLEN)
NAN_BOXED(6073293,32,FLEN)
NAN_BOXED(1065353217,32,FLEN)
NAN_BOXED(2125515803,32,FLEN)
NAN_BOXED(6073293,32,FLEN)
NAN_BOXED(1065353219,32,FLEN)
NAN_BOXED(2125515803,32,FLEN)
NAN_BOXED(6073293,32,FLEN)
NAN_BOXED(1065353223,32,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
