
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 14:18:08 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32F/fnmsub.s.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmsub.s instruction of the RISC-V RV32F_Zicsr,RV32FD_Zicsr,RV64F_Zicsr,RV64FD_Zicsr extension for the fnmsub_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF_Zicsr,RV32IFD_Zicsr,RV64IF_Zicsr,RV64IFD_Zicsr,RV32EF_Zicsr,RV32EFD_Zicsr,RV64EF_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fnmsub_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*F.*);def TEST_CASE_1=True;",fnmsub_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_17664:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30cc1b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5cabcd and fs3 == 0 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0cc1b; op2val:0x5cabcd;
op3val:0x3f999999; valaddr_reg:x3; val_offset:52992*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52992*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17665:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30cc1b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5cabcd and fs3 == 0 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0cc1b; op2val:0x5cabcd;
op3val:0x3fa49249; valaddr_reg:x3; val_offset:52995*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52995*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17666:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30cc1b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5cabcd and fs3 == 0 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0cc1b; op2val:0x5cabcd;
op3val:0x3fb33333; valaddr_reg:x3; val_offset:52998*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52998*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17667:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30cc1b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5cabcd and fs3 == 0 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0cc1b; op2val:0x5cabcd;
op3val:0x3fb6db6d; valaddr_reg:x3; val_offset:53001*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53001*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17668:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30cc1b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5cabcd and fs3 == 0 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0cc1b; op2val:0x5cabcd;
op3val:0x3fbbbbbb; valaddr_reg:x3; val_offset:53004*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53004*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17669:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30cc1b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5cabcd and fs3 == 0 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0cc1b; op2val:0x5cabcd;
op3val:0x3fc44444; valaddr_reg:x3; val_offset:53007*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53007*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17670:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30cc1b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5cabcd and fs3 == 0 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0cc1b; op2val:0x5cabcd;
op3val:0x3fcccccc; valaddr_reg:x3; val_offset:53010*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53010*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17671:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30cc1b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5cabcd and fs3 == 0 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0cc1b; op2val:0x5cabcd;
op3val:0x3fdb6db6; valaddr_reg:x3; val_offset:53013*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53013*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17672:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30cc1b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5cabcd and fs3 == 0 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0cc1b; op2val:0x5cabcd;
op3val:0x3fe66666; valaddr_reg:x3; val_offset:53016*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53016*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17673:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30cc1b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5cabcd and fs3 == 0 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0cc1b; op2val:0x5cabcd;
op3val:0x3fedb6db; valaddr_reg:x3; val_offset:53019*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53019*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17674:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30cc1b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5cabcd and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0cc1b; op2val:0x5cabcd;
op3val:0x3ffffff8; valaddr_reg:x3; val_offset:53022*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53022*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17675:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30cc1b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5cabcd and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0cc1b; op2val:0x5cabcd;
op3val:0x3ffffffc; valaddr_reg:x3; val_offset:53025*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53025*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17676:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30cc1b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5cabcd and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb0cc1b; op2val:0x5cabcd;
op3val:0x3ffffffe; valaddr_reg:x3; val_offset:53028*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53028*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17677:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3254e5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x37bf5e and fs3 == 1 and fe3 == 0xd3 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb254e5; op2val:0xc037bf5e;
op3val:0xe9800000; valaddr_reg:x3; val_offset:53031*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53031*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17678:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3254e5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x37bf5e and fs3 == 1 and fe3 == 0xd3 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb254e5; op2val:0xc037bf5e;
op3val:0xe9800001; valaddr_reg:x3; val_offset:53034*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53034*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17679:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3254e5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x37bf5e and fs3 == 1 and fe3 == 0xd3 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb254e5; op2val:0xc037bf5e;
op3val:0xe9800003; valaddr_reg:x3; val_offset:53037*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53037*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17680:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3254e5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x37bf5e and fs3 == 1 and fe3 == 0xd3 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb254e5; op2val:0xc037bf5e;
op3val:0xe9800007; valaddr_reg:x3; val_offset:53040*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53040*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17681:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3254e5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x37bf5e and fs3 == 1 and fe3 == 0xd3 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb254e5; op2val:0xc037bf5e;
op3val:0xe980000f; valaddr_reg:x3; val_offset:53043*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53043*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17682:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3254e5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x37bf5e and fs3 == 1 and fe3 == 0xd3 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb254e5; op2val:0xc037bf5e;
op3val:0xe980001f; valaddr_reg:x3; val_offset:53046*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53046*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17683:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3254e5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x37bf5e and fs3 == 1 and fe3 == 0xd3 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb254e5; op2val:0xc037bf5e;
op3val:0xe980003f; valaddr_reg:x3; val_offset:53049*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53049*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17684:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3254e5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x37bf5e and fs3 == 1 and fe3 == 0xd3 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb254e5; op2val:0xc037bf5e;
op3val:0xe980007f; valaddr_reg:x3; val_offset:53052*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53052*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17685:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3254e5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x37bf5e and fs3 == 1 and fe3 == 0xd3 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb254e5; op2val:0xc037bf5e;
op3val:0xe98000ff; valaddr_reg:x3; val_offset:53055*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53055*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17686:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3254e5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x37bf5e and fs3 == 1 and fe3 == 0xd3 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb254e5; op2val:0xc037bf5e;
op3val:0xe98001ff; valaddr_reg:x3; val_offset:53058*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53058*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17687:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3254e5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x37bf5e and fs3 == 1 and fe3 == 0xd3 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb254e5; op2val:0xc037bf5e;
op3val:0xe98003ff; valaddr_reg:x3; val_offset:53061*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53061*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17688:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3254e5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x37bf5e and fs3 == 1 and fe3 == 0xd3 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb254e5; op2val:0xc037bf5e;
op3val:0xe98007ff; valaddr_reg:x3; val_offset:53064*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53064*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17689:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3254e5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x37bf5e and fs3 == 1 and fe3 == 0xd3 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb254e5; op2val:0xc037bf5e;
op3val:0xe9800fff; valaddr_reg:x3; val_offset:53067*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53067*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17690:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3254e5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x37bf5e and fs3 == 1 and fe3 == 0xd3 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb254e5; op2val:0xc037bf5e;
op3val:0xe9801fff; valaddr_reg:x3; val_offset:53070*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53070*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17691:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3254e5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x37bf5e and fs3 == 1 and fe3 == 0xd3 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb254e5; op2val:0xc037bf5e;
op3val:0xe9803fff; valaddr_reg:x3; val_offset:53073*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53073*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17692:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3254e5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x37bf5e and fs3 == 1 and fe3 == 0xd3 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb254e5; op2val:0xc037bf5e;
op3val:0xe9807fff; valaddr_reg:x3; val_offset:53076*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53076*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17693:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3254e5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x37bf5e and fs3 == 1 and fe3 == 0xd3 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb254e5; op2val:0xc037bf5e;
op3val:0xe980ffff; valaddr_reg:x3; val_offset:53079*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53079*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17694:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3254e5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x37bf5e and fs3 == 1 and fe3 == 0xd3 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb254e5; op2val:0xc037bf5e;
op3val:0xe981ffff; valaddr_reg:x3; val_offset:53082*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53082*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17695:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3254e5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x37bf5e and fs3 == 1 and fe3 == 0xd3 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb254e5; op2val:0xc037bf5e;
op3val:0xe983ffff; valaddr_reg:x3; val_offset:53085*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53085*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17696:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3254e5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x37bf5e and fs3 == 1 and fe3 == 0xd3 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb254e5; op2val:0xc037bf5e;
op3val:0xe987ffff; valaddr_reg:x3; val_offset:53088*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53088*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17697:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3254e5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x37bf5e and fs3 == 1 and fe3 == 0xd3 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb254e5; op2val:0xc037bf5e;
op3val:0xe98fffff; valaddr_reg:x3; val_offset:53091*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53091*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17698:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3254e5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x37bf5e and fs3 == 1 and fe3 == 0xd3 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb254e5; op2val:0xc037bf5e;
op3val:0xe99fffff; valaddr_reg:x3; val_offset:53094*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53094*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17699:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3254e5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x37bf5e and fs3 == 1 and fe3 == 0xd3 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb254e5; op2val:0xc037bf5e;
op3val:0xe9bfffff; valaddr_reg:x3; val_offset:53097*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53097*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17700:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3254e5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x37bf5e and fs3 == 1 and fe3 == 0xd3 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb254e5; op2val:0xc037bf5e;
op3val:0xe9c00000; valaddr_reg:x3; val_offset:53100*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53100*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17701:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3254e5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x37bf5e and fs3 == 1 and fe3 == 0xd3 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb254e5; op2val:0xc037bf5e;
op3val:0xe9e00000; valaddr_reg:x3; val_offset:53103*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53103*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17702:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3254e5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x37bf5e and fs3 == 1 and fe3 == 0xd3 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb254e5; op2val:0xc037bf5e;
op3val:0xe9f00000; valaddr_reg:x3; val_offset:53106*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53106*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17703:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3254e5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x37bf5e and fs3 == 1 and fe3 == 0xd3 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb254e5; op2val:0xc037bf5e;
op3val:0xe9f80000; valaddr_reg:x3; val_offset:53109*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53109*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17704:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3254e5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x37bf5e and fs3 == 1 and fe3 == 0xd3 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb254e5; op2val:0xc037bf5e;
op3val:0xe9fc0000; valaddr_reg:x3; val_offset:53112*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53112*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17705:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3254e5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x37bf5e and fs3 == 1 and fe3 == 0xd3 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb254e5; op2val:0xc037bf5e;
op3val:0xe9fe0000; valaddr_reg:x3; val_offset:53115*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53115*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17706:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3254e5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x37bf5e and fs3 == 1 and fe3 == 0xd3 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb254e5; op2val:0xc037bf5e;
op3val:0xe9ff0000; valaddr_reg:x3; val_offset:53118*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53118*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17707:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3254e5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x37bf5e and fs3 == 1 and fe3 == 0xd3 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb254e5; op2val:0xc037bf5e;
op3val:0xe9ff8000; valaddr_reg:x3; val_offset:53121*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53121*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17708:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3254e5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x37bf5e and fs3 == 1 and fe3 == 0xd3 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb254e5; op2val:0xc037bf5e;
op3val:0xe9ffc000; valaddr_reg:x3; val_offset:53124*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53124*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17709:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3254e5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x37bf5e and fs3 == 1 and fe3 == 0xd3 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb254e5; op2val:0xc037bf5e;
op3val:0xe9ffe000; valaddr_reg:x3; val_offset:53127*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53127*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17710:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3254e5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x37bf5e and fs3 == 1 and fe3 == 0xd3 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb254e5; op2val:0xc037bf5e;
op3val:0xe9fff000; valaddr_reg:x3; val_offset:53130*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53130*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17711:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3254e5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x37bf5e and fs3 == 1 and fe3 == 0xd3 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb254e5; op2val:0xc037bf5e;
op3val:0xe9fff800; valaddr_reg:x3; val_offset:53133*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53133*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17712:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3254e5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x37bf5e and fs3 == 1 and fe3 == 0xd3 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb254e5; op2val:0xc037bf5e;
op3val:0xe9fffc00; valaddr_reg:x3; val_offset:53136*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53136*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17713:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3254e5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x37bf5e and fs3 == 1 and fe3 == 0xd3 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb254e5; op2val:0xc037bf5e;
op3val:0xe9fffe00; valaddr_reg:x3; val_offset:53139*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53139*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17714:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3254e5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x37bf5e and fs3 == 1 and fe3 == 0xd3 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb254e5; op2val:0xc037bf5e;
op3val:0xe9ffff00; valaddr_reg:x3; val_offset:53142*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53142*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17715:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3254e5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x37bf5e and fs3 == 1 and fe3 == 0xd3 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb254e5; op2val:0xc037bf5e;
op3val:0xe9ffff80; valaddr_reg:x3; val_offset:53145*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53145*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17716:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3254e5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x37bf5e and fs3 == 1 and fe3 == 0xd3 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb254e5; op2val:0xc037bf5e;
op3val:0xe9ffffc0; valaddr_reg:x3; val_offset:53148*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53148*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17717:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3254e5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x37bf5e and fs3 == 1 and fe3 == 0xd3 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb254e5; op2val:0xc037bf5e;
op3val:0xe9ffffe0; valaddr_reg:x3; val_offset:53151*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53151*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17718:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3254e5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x37bf5e and fs3 == 1 and fe3 == 0xd3 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb254e5; op2val:0xc037bf5e;
op3val:0xe9fffff0; valaddr_reg:x3; val_offset:53154*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53154*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17719:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3254e5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x37bf5e and fs3 == 1 and fe3 == 0xd3 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb254e5; op2val:0xc037bf5e;
op3val:0xe9fffff8; valaddr_reg:x3; val_offset:53157*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53157*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17720:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3254e5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x37bf5e and fs3 == 1 and fe3 == 0xd3 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb254e5; op2val:0xc037bf5e;
op3val:0xe9fffffc; valaddr_reg:x3; val_offset:53160*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53160*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17721:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3254e5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x37bf5e and fs3 == 1 and fe3 == 0xd3 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb254e5; op2val:0xc037bf5e;
op3val:0xe9fffffe; valaddr_reg:x3; val_offset:53163*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53163*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17722:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3254e5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x37bf5e and fs3 == 1 and fe3 == 0xd3 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb254e5; op2val:0xc037bf5e;
op3val:0xe9ffffff; valaddr_reg:x3; val_offset:53166*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53166*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17723:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3254e5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x37bf5e and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb254e5; op2val:0xc037bf5e;
op3val:0xff000001; valaddr_reg:x3; val_offset:53169*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53169*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17724:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3254e5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x37bf5e and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb254e5; op2val:0xc037bf5e;
op3val:0xff000003; valaddr_reg:x3; val_offset:53172*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53172*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17725:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3254e5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x37bf5e and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb254e5; op2val:0xc037bf5e;
op3val:0xff000007; valaddr_reg:x3; val_offset:53175*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53175*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17726:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3254e5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x37bf5e and fs3 == 1 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb254e5; op2val:0xc037bf5e;
op3val:0xff199999; valaddr_reg:x3; val_offset:53178*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53178*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17727:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3254e5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x37bf5e and fs3 == 1 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb254e5; op2val:0xc037bf5e;
op3val:0xff249249; valaddr_reg:x3; val_offset:53181*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53181*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17728:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3254e5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x37bf5e and fs3 == 1 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb254e5; op2val:0xc037bf5e;
op3val:0xff333333; valaddr_reg:x3; val_offset:53184*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53184*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17729:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3254e5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x37bf5e and fs3 == 1 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb254e5; op2val:0xc037bf5e;
op3val:0xff36db6d; valaddr_reg:x3; val_offset:53187*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53187*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17730:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3254e5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x37bf5e and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb254e5; op2val:0xc037bf5e;
op3val:0xff3bbbbb; valaddr_reg:x3; val_offset:53190*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53190*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17731:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3254e5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x37bf5e and fs3 == 1 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb254e5; op2val:0xc037bf5e;
op3val:0xff444444; valaddr_reg:x3; val_offset:53193*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53193*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17732:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3254e5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x37bf5e and fs3 == 1 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb254e5; op2val:0xc037bf5e;
op3val:0xff4ccccc; valaddr_reg:x3; val_offset:53196*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53196*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17733:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3254e5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x37bf5e and fs3 == 1 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb254e5; op2val:0xc037bf5e;
op3val:0xff5b6db6; valaddr_reg:x3; val_offset:53199*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53199*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17734:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3254e5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x37bf5e and fs3 == 1 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb254e5; op2val:0xc037bf5e;
op3val:0xff666666; valaddr_reg:x3; val_offset:53202*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53202*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17735:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3254e5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x37bf5e and fs3 == 1 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb254e5; op2val:0xc037bf5e;
op3val:0xff6db6db; valaddr_reg:x3; val_offset:53205*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53205*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17736:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3254e5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x37bf5e and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb254e5; op2val:0xc037bf5e;
op3val:0xff7ffff8; valaddr_reg:x3; val_offset:53208*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53208*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17737:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3254e5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x37bf5e and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb254e5; op2val:0xc037bf5e;
op3val:0xff7ffffc; valaddr_reg:x3; val_offset:53211*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53211*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17738:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3254e5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x37bf5e and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb254e5; op2val:0xc037bf5e;
op3val:0xff7ffffe; valaddr_reg:x3; val_offset:53214*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53214*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17739:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x330a47 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b829c and fs3 == 0 and fe3 == 0x6d and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb30a47; op2val:0x5b829c;
op3val:0x36800000; valaddr_reg:x3; val_offset:53217*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53217*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17740:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x330a47 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b829c and fs3 == 0 and fe3 == 0x6d and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb30a47; op2val:0x5b829c;
op3val:0x36800001; valaddr_reg:x3; val_offset:53220*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53220*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17741:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x330a47 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b829c and fs3 == 0 and fe3 == 0x6d and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb30a47; op2val:0x5b829c;
op3val:0x36800003; valaddr_reg:x3; val_offset:53223*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53223*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17742:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x330a47 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b829c and fs3 == 0 and fe3 == 0x6d and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb30a47; op2val:0x5b829c;
op3val:0x36800007; valaddr_reg:x3; val_offset:53226*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53226*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17743:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x330a47 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b829c and fs3 == 0 and fe3 == 0x6d and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb30a47; op2val:0x5b829c;
op3val:0x3680000f; valaddr_reg:x3; val_offset:53229*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53229*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17744:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x330a47 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b829c and fs3 == 0 and fe3 == 0x6d and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb30a47; op2val:0x5b829c;
op3val:0x3680001f; valaddr_reg:x3; val_offset:53232*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53232*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17745:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x330a47 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b829c and fs3 == 0 and fe3 == 0x6d and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb30a47; op2val:0x5b829c;
op3val:0x3680003f; valaddr_reg:x3; val_offset:53235*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53235*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17746:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x330a47 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b829c and fs3 == 0 and fe3 == 0x6d and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb30a47; op2val:0x5b829c;
op3val:0x3680007f; valaddr_reg:x3; val_offset:53238*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53238*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17747:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x330a47 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b829c and fs3 == 0 and fe3 == 0x6d and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb30a47; op2val:0x5b829c;
op3val:0x368000ff; valaddr_reg:x3; val_offset:53241*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53241*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17748:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x330a47 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b829c and fs3 == 0 and fe3 == 0x6d and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb30a47; op2val:0x5b829c;
op3val:0x368001ff; valaddr_reg:x3; val_offset:53244*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53244*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17749:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x330a47 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b829c and fs3 == 0 and fe3 == 0x6d and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb30a47; op2val:0x5b829c;
op3val:0x368003ff; valaddr_reg:x3; val_offset:53247*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53247*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17750:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x330a47 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b829c and fs3 == 0 and fe3 == 0x6d and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb30a47; op2val:0x5b829c;
op3val:0x368007ff; valaddr_reg:x3; val_offset:53250*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53250*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17751:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x330a47 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b829c and fs3 == 0 and fe3 == 0x6d and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb30a47; op2val:0x5b829c;
op3val:0x36800fff; valaddr_reg:x3; val_offset:53253*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53253*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17752:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x330a47 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b829c and fs3 == 0 and fe3 == 0x6d and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb30a47; op2val:0x5b829c;
op3val:0x36801fff; valaddr_reg:x3; val_offset:53256*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53256*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17753:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x330a47 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b829c and fs3 == 0 and fe3 == 0x6d and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb30a47; op2val:0x5b829c;
op3val:0x36803fff; valaddr_reg:x3; val_offset:53259*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53259*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17754:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x330a47 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b829c and fs3 == 0 and fe3 == 0x6d and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb30a47; op2val:0x5b829c;
op3val:0x36807fff; valaddr_reg:x3; val_offset:53262*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53262*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17755:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x330a47 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b829c and fs3 == 0 and fe3 == 0x6d and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb30a47; op2val:0x5b829c;
op3val:0x3680ffff; valaddr_reg:x3; val_offset:53265*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53265*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17756:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x330a47 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b829c and fs3 == 0 and fe3 == 0x6d and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb30a47; op2val:0x5b829c;
op3val:0x3681ffff; valaddr_reg:x3; val_offset:53268*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53268*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17757:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x330a47 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b829c and fs3 == 0 and fe3 == 0x6d and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb30a47; op2val:0x5b829c;
op3val:0x3683ffff; valaddr_reg:x3; val_offset:53271*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53271*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17758:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x330a47 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b829c and fs3 == 0 and fe3 == 0x6d and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb30a47; op2val:0x5b829c;
op3val:0x3687ffff; valaddr_reg:x3; val_offset:53274*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53274*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17759:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x330a47 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b829c and fs3 == 0 and fe3 == 0x6d and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb30a47; op2val:0x5b829c;
op3val:0x368fffff; valaddr_reg:x3; val_offset:53277*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53277*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17760:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x330a47 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b829c and fs3 == 0 and fe3 == 0x6d and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb30a47; op2val:0x5b829c;
op3val:0x369fffff; valaddr_reg:x3; val_offset:53280*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53280*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17761:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x330a47 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b829c and fs3 == 0 and fe3 == 0x6d and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb30a47; op2val:0x5b829c;
op3val:0x36bfffff; valaddr_reg:x3; val_offset:53283*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53283*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17762:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x330a47 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b829c and fs3 == 0 and fe3 == 0x6d and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb30a47; op2val:0x5b829c;
op3val:0x36c00000; valaddr_reg:x3; val_offset:53286*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53286*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17763:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x330a47 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b829c and fs3 == 0 and fe3 == 0x6d and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb30a47; op2val:0x5b829c;
op3val:0x36e00000; valaddr_reg:x3; val_offset:53289*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53289*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17764:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x330a47 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b829c and fs3 == 0 and fe3 == 0x6d and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb30a47; op2val:0x5b829c;
op3val:0x36f00000; valaddr_reg:x3; val_offset:53292*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53292*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17765:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x330a47 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b829c and fs3 == 0 and fe3 == 0x6d and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb30a47; op2val:0x5b829c;
op3val:0x36f80000; valaddr_reg:x3; val_offset:53295*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53295*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17766:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x330a47 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b829c and fs3 == 0 and fe3 == 0x6d and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb30a47; op2val:0x5b829c;
op3val:0x36fc0000; valaddr_reg:x3; val_offset:53298*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53298*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17767:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x330a47 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b829c and fs3 == 0 and fe3 == 0x6d and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb30a47; op2val:0x5b829c;
op3val:0x36fe0000; valaddr_reg:x3; val_offset:53301*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53301*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17768:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x330a47 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b829c and fs3 == 0 and fe3 == 0x6d and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb30a47; op2val:0x5b829c;
op3val:0x36ff0000; valaddr_reg:x3; val_offset:53304*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53304*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17769:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x330a47 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b829c and fs3 == 0 and fe3 == 0x6d and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb30a47; op2val:0x5b829c;
op3val:0x36ff8000; valaddr_reg:x3; val_offset:53307*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53307*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17770:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x330a47 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b829c and fs3 == 0 and fe3 == 0x6d and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb30a47; op2val:0x5b829c;
op3val:0x36ffc000; valaddr_reg:x3; val_offset:53310*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53310*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17771:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x330a47 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b829c and fs3 == 0 and fe3 == 0x6d and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb30a47; op2val:0x5b829c;
op3val:0x36ffe000; valaddr_reg:x3; val_offset:53313*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53313*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17772:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x330a47 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b829c and fs3 == 0 and fe3 == 0x6d and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb30a47; op2val:0x5b829c;
op3val:0x36fff000; valaddr_reg:x3; val_offset:53316*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53316*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17773:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x330a47 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b829c and fs3 == 0 and fe3 == 0x6d and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb30a47; op2val:0x5b829c;
op3val:0x36fff800; valaddr_reg:x3; val_offset:53319*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53319*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17774:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x330a47 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b829c and fs3 == 0 and fe3 == 0x6d and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb30a47; op2val:0x5b829c;
op3val:0x36fffc00; valaddr_reg:x3; val_offset:53322*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53322*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17775:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x330a47 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b829c and fs3 == 0 and fe3 == 0x6d and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb30a47; op2val:0x5b829c;
op3val:0x36fffe00; valaddr_reg:x3; val_offset:53325*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53325*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17776:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x330a47 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b829c and fs3 == 0 and fe3 == 0x6d and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb30a47; op2val:0x5b829c;
op3val:0x36ffff00; valaddr_reg:x3; val_offset:53328*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53328*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17777:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x330a47 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b829c and fs3 == 0 and fe3 == 0x6d and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb30a47; op2val:0x5b829c;
op3val:0x36ffff80; valaddr_reg:x3; val_offset:53331*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53331*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17778:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x330a47 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b829c and fs3 == 0 and fe3 == 0x6d and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb30a47; op2val:0x5b829c;
op3val:0x36ffffc0; valaddr_reg:x3; val_offset:53334*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53334*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17779:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x330a47 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b829c and fs3 == 0 and fe3 == 0x6d and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb30a47; op2val:0x5b829c;
op3val:0x36ffffe0; valaddr_reg:x3; val_offset:53337*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53337*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17780:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x330a47 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b829c and fs3 == 0 and fe3 == 0x6d and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb30a47; op2val:0x5b829c;
op3val:0x36fffff0; valaddr_reg:x3; val_offset:53340*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53340*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17781:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x330a47 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b829c and fs3 == 0 and fe3 == 0x6d and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb30a47; op2val:0x5b829c;
op3val:0x36fffff8; valaddr_reg:x3; val_offset:53343*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53343*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17782:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x330a47 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b829c and fs3 == 0 and fe3 == 0x6d and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb30a47; op2val:0x5b829c;
op3val:0x36fffffc; valaddr_reg:x3; val_offset:53346*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53346*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17783:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x330a47 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b829c and fs3 == 0 and fe3 == 0x6d and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb30a47; op2val:0x5b829c;
op3val:0x36fffffe; valaddr_reg:x3; val_offset:53349*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53349*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17784:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x330a47 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b829c and fs3 == 0 and fe3 == 0x6d and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb30a47; op2val:0x5b829c;
op3val:0x36ffffff; valaddr_reg:x3; val_offset:53352*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53352*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17785:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x330a47 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b829c and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb30a47; op2val:0x5b829c;
op3val:0x3f800001; valaddr_reg:x3; val_offset:53355*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53355*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17786:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x330a47 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b829c and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb30a47; op2val:0x5b829c;
op3val:0x3f800003; valaddr_reg:x3; val_offset:53358*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53358*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17787:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x330a47 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b829c and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb30a47; op2val:0x5b829c;
op3val:0x3f800007; valaddr_reg:x3; val_offset:53361*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53361*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17788:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x330a47 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b829c and fs3 == 0 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb30a47; op2val:0x5b829c;
op3val:0x3f999999; valaddr_reg:x3; val_offset:53364*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53364*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17789:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x330a47 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b829c and fs3 == 0 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb30a47; op2val:0x5b829c;
op3val:0x3fa49249; valaddr_reg:x3; val_offset:53367*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53367*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17790:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x330a47 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b829c and fs3 == 0 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb30a47; op2val:0x5b829c;
op3val:0x3fb33333; valaddr_reg:x3; val_offset:53370*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53370*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17791:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x330a47 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b829c and fs3 == 0 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb30a47; op2val:0x5b829c;
op3val:0x3fb6db6d; valaddr_reg:x3; val_offset:53373*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 53373*0 + 3*138*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(2125515803,32,FLEN)
NAN_BOXED(6073293,32,FLEN)
NAN_BOXED(1067030937,32,FLEN)
NAN_BOXED(2125515803,32,FLEN)
NAN_BOXED(6073293,32,FLEN)
NAN_BOXED(1067749961,32,FLEN)
NAN_BOXED(2125515803,32,FLEN)
NAN_BOXED(6073293,32,FLEN)
NAN_BOXED(1068708659,32,FLEN)
NAN_BOXED(2125515803,32,FLEN)
NAN_BOXED(6073293,32,FLEN)
NAN_BOXED(1068948333,32,FLEN)
NAN_BOXED(2125515803,32,FLEN)
NAN_BOXED(6073293,32,FLEN)
NAN_BOXED(1069267899,32,FLEN)
NAN_BOXED(2125515803,32,FLEN)
NAN_BOXED(6073293,32,FLEN)
NAN_BOXED(1069827140,32,FLEN)
NAN_BOXED(2125515803,32,FLEN)
NAN_BOXED(6073293,32,FLEN)
NAN_BOXED(1070386380,32,FLEN)
NAN_BOXED(2125515803,32,FLEN)
NAN_BOXED(6073293,32,FLEN)
NAN_BOXED(1071345078,32,FLEN)
NAN_BOXED(2125515803,32,FLEN)
NAN_BOXED(6073293,32,FLEN)
NAN_BOXED(1072064102,32,FLEN)
NAN_BOXED(2125515803,32,FLEN)
NAN_BOXED(6073293,32,FLEN)
NAN_BOXED(1072543451,32,FLEN)
NAN_BOXED(2125515803,32,FLEN)
NAN_BOXED(6073293,32,FLEN)
NAN_BOXED(1073741816,32,FLEN)
NAN_BOXED(2125515803,32,FLEN)
NAN_BOXED(6073293,32,FLEN)
NAN_BOXED(1073741820,32,FLEN)
NAN_BOXED(2125515803,32,FLEN)
NAN_BOXED(6073293,32,FLEN)
NAN_BOXED(1073741822,32,FLEN)
NAN_BOXED(2125616357,32,FLEN)
NAN_BOXED(3224878942,32,FLEN)
NAN_BOXED(3917479936,32,FLEN)
NAN_BOXED(2125616357,32,FLEN)
NAN_BOXED(3224878942,32,FLEN)
NAN_BOXED(3917479937,32,FLEN)
NAN_BOXED(2125616357,32,FLEN)
NAN_BOXED(3224878942,32,FLEN)
NAN_BOXED(3917479939,32,FLEN)
NAN_BOXED(2125616357,32,FLEN)
NAN_BOXED(3224878942,32,FLEN)
NAN_BOXED(3917479943,32,FLEN)
NAN_BOXED(2125616357,32,FLEN)
NAN_BOXED(3224878942,32,FLEN)
NAN_BOXED(3917479951,32,FLEN)
NAN_BOXED(2125616357,32,FLEN)
NAN_BOXED(3224878942,32,FLEN)
NAN_BOXED(3917479967,32,FLEN)
NAN_BOXED(2125616357,32,FLEN)
NAN_BOXED(3224878942,32,FLEN)
NAN_BOXED(3917479999,32,FLEN)
NAN_BOXED(2125616357,32,FLEN)
NAN_BOXED(3224878942,32,FLEN)
NAN_BOXED(3917480063,32,FLEN)
NAN_BOXED(2125616357,32,FLEN)
NAN_BOXED(3224878942,32,FLEN)
NAN_BOXED(3917480191,32,FLEN)
NAN_BOXED(2125616357,32,FLEN)
NAN_BOXED(3224878942,32,FLEN)
NAN_BOXED(3917480447,32,FLEN)
NAN_BOXED(2125616357,32,FLEN)
NAN_BOXED(3224878942,32,FLEN)
NAN_BOXED(3917480959,32,FLEN)
NAN_BOXED(2125616357,32,FLEN)
NAN_BOXED(3224878942,32,FLEN)
NAN_BOXED(3917481983,32,FLEN)
NAN_BOXED(2125616357,32,FLEN)
NAN_BOXED(3224878942,32,FLEN)
NAN_BOXED(3917484031,32,FLEN)
NAN_BOXED(2125616357,32,FLEN)
NAN_BOXED(3224878942,32,FLEN)
NAN_BOXED(3917488127,32,FLEN)
NAN_BOXED(2125616357,32,FLEN)
NAN_BOXED(3224878942,32,FLEN)
NAN_BOXED(3917496319,32,FLEN)
NAN_BOXED(2125616357,32,FLEN)
NAN_BOXED(3224878942,32,FLEN)
NAN_BOXED(3917512703,32,FLEN)
NAN_BOXED(2125616357,32,FLEN)
NAN_BOXED(3224878942,32,FLEN)
NAN_BOXED(3917545471,32,FLEN)
NAN_BOXED(2125616357,32,FLEN)
NAN_BOXED(3224878942,32,FLEN)
NAN_BOXED(3917611007,32,FLEN)
NAN_BOXED(2125616357,32,FLEN)
NAN_BOXED(3224878942,32,FLEN)
NAN_BOXED(3917742079,32,FLEN)
NAN_BOXED(2125616357,32,FLEN)
NAN_BOXED(3224878942,32,FLEN)
NAN_BOXED(3918004223,32,FLEN)
NAN_BOXED(2125616357,32,FLEN)
NAN_BOXED(3224878942,32,FLEN)
NAN_BOXED(3918528511,32,FLEN)
NAN_BOXED(2125616357,32,FLEN)
NAN_BOXED(3224878942,32,FLEN)
NAN_BOXED(3919577087,32,FLEN)
NAN_BOXED(2125616357,32,FLEN)
NAN_BOXED(3224878942,32,FLEN)
NAN_BOXED(3921674239,32,FLEN)
NAN_BOXED(2125616357,32,FLEN)
NAN_BOXED(3224878942,32,FLEN)
NAN_BOXED(3921674240,32,FLEN)
NAN_BOXED(2125616357,32,FLEN)
NAN_BOXED(3224878942,32,FLEN)
NAN_BOXED(3923771392,32,FLEN)
NAN_BOXED(2125616357,32,FLEN)
NAN_BOXED(3224878942,32,FLEN)
NAN_BOXED(3924819968,32,FLEN)
NAN_BOXED(2125616357,32,FLEN)
NAN_BOXED(3224878942,32,FLEN)
NAN_BOXED(3925344256,32,FLEN)
NAN_BOXED(2125616357,32,FLEN)
NAN_BOXED(3224878942,32,FLEN)
NAN_BOXED(3925606400,32,FLEN)
NAN_BOXED(2125616357,32,FLEN)
NAN_BOXED(3224878942,32,FLEN)
NAN_BOXED(3925737472,32,FLEN)
NAN_BOXED(2125616357,32,FLEN)
NAN_BOXED(3224878942,32,FLEN)
NAN_BOXED(3925803008,32,FLEN)
NAN_BOXED(2125616357,32,FLEN)
NAN_BOXED(3224878942,32,FLEN)
NAN_BOXED(3925835776,32,FLEN)
NAN_BOXED(2125616357,32,FLEN)
NAN_BOXED(3224878942,32,FLEN)
NAN_BOXED(3925852160,32,FLEN)
NAN_BOXED(2125616357,32,FLEN)
NAN_BOXED(3224878942,32,FLEN)
NAN_BOXED(3925860352,32,FLEN)
NAN_BOXED(2125616357,32,FLEN)
NAN_BOXED(3224878942,32,FLEN)
NAN_BOXED(3925864448,32,FLEN)
NAN_BOXED(2125616357,32,FLEN)
NAN_BOXED(3224878942,32,FLEN)
NAN_BOXED(3925866496,32,FLEN)
NAN_BOXED(2125616357,32,FLEN)
NAN_BOXED(3224878942,32,FLEN)
NAN_BOXED(3925867520,32,FLEN)
NAN_BOXED(2125616357,32,FLEN)
NAN_BOXED(3224878942,32,FLEN)
NAN_BOXED(3925868032,32,FLEN)
NAN_BOXED(2125616357,32,FLEN)
NAN_BOXED(3224878942,32,FLEN)
NAN_BOXED(3925868288,32,FLEN)
NAN_BOXED(2125616357,32,FLEN)
NAN_BOXED(3224878942,32,FLEN)
NAN_BOXED(3925868416,32,FLEN)
NAN_BOXED(2125616357,32,FLEN)
NAN_BOXED(3224878942,32,FLEN)
NAN_BOXED(3925868480,32,FLEN)
NAN_BOXED(2125616357,32,FLEN)
NAN_BOXED(3224878942,32,FLEN)
NAN_BOXED(3925868512,32,FLEN)
NAN_BOXED(2125616357,32,FLEN)
NAN_BOXED(3224878942,32,FLEN)
NAN_BOXED(3925868528,32,FLEN)
NAN_BOXED(2125616357,32,FLEN)
NAN_BOXED(3224878942,32,FLEN)
NAN_BOXED(3925868536,32,FLEN)
NAN_BOXED(2125616357,32,FLEN)
NAN_BOXED(3224878942,32,FLEN)
NAN_BOXED(3925868540,32,FLEN)
NAN_BOXED(2125616357,32,FLEN)
NAN_BOXED(3224878942,32,FLEN)
NAN_BOXED(3925868542,32,FLEN)
NAN_BOXED(2125616357,32,FLEN)
NAN_BOXED(3224878942,32,FLEN)
NAN_BOXED(3925868543,32,FLEN)
NAN_BOXED(2125616357,32,FLEN)
NAN_BOXED(3224878942,32,FLEN)
NAN_BOXED(4278190081,32,FLEN)
NAN_BOXED(2125616357,32,FLEN)
NAN_BOXED(3224878942,32,FLEN)
NAN_BOXED(4278190083,32,FLEN)
NAN_BOXED(2125616357,32,FLEN)
NAN_BOXED(3224878942,32,FLEN)
NAN_BOXED(4278190087,32,FLEN)
NAN_BOXED(2125616357,32,FLEN)
NAN_BOXED(3224878942,32,FLEN)
NAN_BOXED(4279867801,32,FLEN)
NAN_BOXED(2125616357,32,FLEN)
NAN_BOXED(3224878942,32,FLEN)
NAN_BOXED(4280586825,32,FLEN)
NAN_BOXED(2125616357,32,FLEN)
NAN_BOXED(3224878942,32,FLEN)
NAN_BOXED(4281545523,32,FLEN)
NAN_BOXED(2125616357,32,FLEN)
NAN_BOXED(3224878942,32,FLEN)
NAN_BOXED(4281785197,32,FLEN)
NAN_BOXED(2125616357,32,FLEN)
NAN_BOXED(3224878942,32,FLEN)
NAN_BOXED(4282104763,32,FLEN)
NAN_BOXED(2125616357,32,FLEN)
NAN_BOXED(3224878942,32,FLEN)
NAN_BOXED(4282664004,32,FLEN)
NAN_BOXED(2125616357,32,FLEN)
NAN_BOXED(3224878942,32,FLEN)
NAN_BOXED(4283223244,32,FLEN)
NAN_BOXED(2125616357,32,FLEN)
NAN_BOXED(3224878942,32,FLEN)
NAN_BOXED(4284181942,32,FLEN)
NAN_BOXED(2125616357,32,FLEN)
NAN_BOXED(3224878942,32,FLEN)
NAN_BOXED(4284900966,32,FLEN)
NAN_BOXED(2125616357,32,FLEN)
NAN_BOXED(3224878942,32,FLEN)
NAN_BOXED(4285380315,32,FLEN)
NAN_BOXED(2125616357,32,FLEN)
NAN_BOXED(3224878942,32,FLEN)
NAN_BOXED(4286578680,32,FLEN)
NAN_BOXED(2125616357,32,FLEN)
NAN_BOXED(3224878942,32,FLEN)
NAN_BOXED(4286578684,32,FLEN)
NAN_BOXED(2125616357,32,FLEN)
NAN_BOXED(3224878942,32,FLEN)
NAN_BOXED(4286578686,32,FLEN)
NAN_BOXED(2125662791,32,FLEN)
NAN_BOXED(5997212,32,FLEN)
NAN_BOXED(914358272,32,FLEN)
NAN_BOXED(2125662791,32,FLEN)
NAN_BOXED(5997212,32,FLEN)
NAN_BOXED(914358273,32,FLEN)
NAN_BOXED(2125662791,32,FLEN)
NAN_BOXED(5997212,32,FLEN)
NAN_BOXED(914358275,32,FLEN)
NAN_BOXED(2125662791,32,FLEN)
NAN_BOXED(5997212,32,FLEN)
NAN_BOXED(914358279,32,FLEN)
NAN_BOXED(2125662791,32,FLEN)
NAN_BOXED(5997212,32,FLEN)
NAN_BOXED(914358287,32,FLEN)
NAN_BOXED(2125662791,32,FLEN)
NAN_BOXED(5997212,32,FLEN)
NAN_BOXED(914358303,32,FLEN)
NAN_BOXED(2125662791,32,FLEN)
NAN_BOXED(5997212,32,FLEN)
NAN_BOXED(914358335,32,FLEN)
NAN_BOXED(2125662791,32,FLEN)
NAN_BOXED(5997212,32,FLEN)
NAN_BOXED(914358399,32,FLEN)
NAN_BOXED(2125662791,32,FLEN)
NAN_BOXED(5997212,32,FLEN)
NAN_BOXED(914358527,32,FLEN)
NAN_BOXED(2125662791,32,FLEN)
NAN_BOXED(5997212,32,FLEN)
NAN_BOXED(914358783,32,FLEN)
NAN_BOXED(2125662791,32,FLEN)
NAN_BOXED(5997212,32,FLEN)
NAN_BOXED(914359295,32,FLEN)
NAN_BOXED(2125662791,32,FLEN)
NAN_BOXED(5997212,32,FLEN)
NAN_BOXED(914360319,32,FLEN)
NAN_BOXED(2125662791,32,FLEN)
NAN_BOXED(5997212,32,FLEN)
NAN_BOXED(914362367,32,FLEN)
NAN_BOXED(2125662791,32,FLEN)
NAN_BOXED(5997212,32,FLEN)
NAN_BOXED(914366463,32,FLEN)
NAN_BOXED(2125662791,32,FLEN)
NAN_BOXED(5997212,32,FLEN)
NAN_BOXED(914374655,32,FLEN)
NAN_BOXED(2125662791,32,FLEN)
NAN_BOXED(5997212,32,FLEN)
NAN_BOXED(914391039,32,FLEN)
NAN_BOXED(2125662791,32,FLEN)
NAN_BOXED(5997212,32,FLEN)
NAN_BOXED(914423807,32,FLEN)
NAN_BOXED(2125662791,32,FLEN)
NAN_BOXED(5997212,32,FLEN)
NAN_BOXED(914489343,32,FLEN)
NAN_BOXED(2125662791,32,FLEN)
NAN_BOXED(5997212,32,FLEN)
NAN_BOXED(914620415,32,FLEN)
NAN_BOXED(2125662791,32,FLEN)
NAN_BOXED(5997212,32,FLEN)
NAN_BOXED(914882559,32,FLEN)
NAN_BOXED(2125662791,32,FLEN)
NAN_BOXED(5997212,32,FLEN)
NAN_BOXED(915406847,32,FLEN)
NAN_BOXED(2125662791,32,FLEN)
NAN_BOXED(5997212,32,FLEN)
NAN_BOXED(916455423,32,FLEN)
NAN_BOXED(2125662791,32,FLEN)
NAN_BOXED(5997212,32,FLEN)
NAN_BOXED(918552575,32,FLEN)
NAN_BOXED(2125662791,32,FLEN)
NAN_BOXED(5997212,32,FLEN)
NAN_BOXED(918552576,32,FLEN)
NAN_BOXED(2125662791,32,FLEN)
NAN_BOXED(5997212,32,FLEN)
NAN_BOXED(920649728,32,FLEN)
NAN_BOXED(2125662791,32,FLEN)
NAN_BOXED(5997212,32,FLEN)
NAN_BOXED(921698304,32,FLEN)
NAN_BOXED(2125662791,32,FLEN)
NAN_BOXED(5997212,32,FLEN)
NAN_BOXED(922222592,32,FLEN)
NAN_BOXED(2125662791,32,FLEN)
NAN_BOXED(5997212,32,FLEN)
NAN_BOXED(922484736,32,FLEN)
NAN_BOXED(2125662791,32,FLEN)
NAN_BOXED(5997212,32,FLEN)
NAN_BOXED(922615808,32,FLEN)
NAN_BOXED(2125662791,32,FLEN)
NAN_BOXED(5997212,32,FLEN)
NAN_BOXED(922681344,32,FLEN)
NAN_BOXED(2125662791,32,FLEN)
NAN_BOXED(5997212,32,FLEN)
NAN_BOXED(922714112,32,FLEN)
NAN_BOXED(2125662791,32,FLEN)
NAN_BOXED(5997212,32,FLEN)
NAN_BOXED(922730496,32,FLEN)
NAN_BOXED(2125662791,32,FLEN)
NAN_BOXED(5997212,32,FLEN)
NAN_BOXED(922738688,32,FLEN)
NAN_BOXED(2125662791,32,FLEN)
NAN_BOXED(5997212,32,FLEN)
NAN_BOXED(922742784,32,FLEN)
NAN_BOXED(2125662791,32,FLEN)
NAN_BOXED(5997212,32,FLEN)
NAN_BOXED(922744832,32,FLEN)
NAN_BOXED(2125662791,32,FLEN)
NAN_BOXED(5997212,32,FLEN)
NAN_BOXED(922745856,32,FLEN)
NAN_BOXED(2125662791,32,FLEN)
NAN_BOXED(5997212,32,FLEN)
NAN_BOXED(922746368,32,FLEN)
NAN_BOXED(2125662791,32,FLEN)
NAN_BOXED(5997212,32,FLEN)
NAN_BOXED(922746624,32,FLEN)
NAN_BOXED(2125662791,32,FLEN)
NAN_BOXED(5997212,32,FLEN)
NAN_BOXED(922746752,32,FLEN)
NAN_BOXED(2125662791,32,FLEN)
NAN_BOXED(5997212,32,FLEN)
NAN_BOXED(922746816,32,FLEN)
NAN_BOXED(2125662791,32,FLEN)
NAN_BOXED(5997212,32,FLEN)
NAN_BOXED(922746848,32,FLEN)
NAN_BOXED(2125662791,32,FLEN)
NAN_BOXED(5997212,32,FLEN)
NAN_BOXED(922746864,32,FLEN)
NAN_BOXED(2125662791,32,FLEN)
NAN_BOXED(5997212,32,FLEN)
NAN_BOXED(922746872,32,FLEN)
NAN_BOXED(2125662791,32,FLEN)
NAN_BOXED(5997212,32,FLEN)
NAN_BOXED(922746876,32,FLEN)
NAN_BOXED(2125662791,32,FLEN)
NAN_BOXED(5997212,32,FLEN)
NAN_BOXED(922746878,32,FLEN)
NAN_BOXED(2125662791,32,FLEN)
NAN_BOXED(5997212,32,FLEN)
NAN_BOXED(922746879,32,FLEN)
NAN_BOXED(2125662791,32,FLEN)
NAN_BOXED(5997212,32,FLEN)
NAN_BOXED(1065353217,32,FLEN)
NAN_BOXED(2125662791,32,FLEN)
NAN_BOXED(5997212,32,FLEN)
NAN_BOXED(1065353219,32,FLEN)
NAN_BOXED(2125662791,32,FLEN)
NAN_BOXED(5997212,32,FLEN)
NAN_BOXED(1065353223,32,FLEN)
NAN_BOXED(2125662791,32,FLEN)
NAN_BOXED(5997212,32,FLEN)
NAN_BOXED(1067030937,32,FLEN)
NAN_BOXED(2125662791,32,FLEN)
NAN_BOXED(5997212,32,FLEN)
NAN_BOXED(1067749961,32,FLEN)
NAN_BOXED(2125662791,32,FLEN)
NAN_BOXED(5997212,32,FLEN)
NAN_BOXED(1068708659,32,FLEN)
NAN_BOXED(2125662791,32,FLEN)
NAN_BOXED(5997212,32,FLEN)
NAN_BOXED(1068948333,32,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
