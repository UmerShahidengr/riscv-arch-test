
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 14:18:08 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32F/fnmsub.s.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmsub.s instruction of the RISC-V RV32F_Zicsr,RV32FD_Zicsr,RV64F_Zicsr,RV64FD_Zicsr extension for the fnmsub_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF_Zicsr,RV32IFD_Zicsr,RV64IF_Zicsr,RV64IFD_Zicsr,RV32EF_Zicsr,RV32EFD_Zicsr,RV64EF_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fnmsub_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*F.*);def TEST_CASE_1=True;",fnmsub_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_18688:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3c4401 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2e0d4a and fs3 == 1 and fe3 == 0xeb and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebc4401; op2val:0xc02e0d4a;
op3val:0xf587ffff; valaddr_reg:x3; val_offset:56064*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56064*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18689:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3c4401 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2e0d4a and fs3 == 1 and fe3 == 0xeb and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebc4401; op2val:0xc02e0d4a;
op3val:0xf58fffff; valaddr_reg:x3; val_offset:56067*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56067*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18690:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3c4401 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2e0d4a and fs3 == 1 and fe3 == 0xeb and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebc4401; op2val:0xc02e0d4a;
op3val:0xf59fffff; valaddr_reg:x3; val_offset:56070*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56070*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18691:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3c4401 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2e0d4a and fs3 == 1 and fe3 == 0xeb and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebc4401; op2val:0xc02e0d4a;
op3val:0xf5bfffff; valaddr_reg:x3; val_offset:56073*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56073*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18692:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3c4401 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2e0d4a and fs3 == 1 and fe3 == 0xeb and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebc4401; op2val:0xc02e0d4a;
op3val:0xf5c00000; valaddr_reg:x3; val_offset:56076*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56076*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18693:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3c4401 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2e0d4a and fs3 == 1 and fe3 == 0xeb and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebc4401; op2val:0xc02e0d4a;
op3val:0xf5e00000; valaddr_reg:x3; val_offset:56079*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56079*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18694:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3c4401 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2e0d4a and fs3 == 1 and fe3 == 0xeb and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebc4401; op2val:0xc02e0d4a;
op3val:0xf5f00000; valaddr_reg:x3; val_offset:56082*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56082*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18695:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3c4401 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2e0d4a and fs3 == 1 and fe3 == 0xeb and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebc4401; op2val:0xc02e0d4a;
op3val:0xf5f80000; valaddr_reg:x3; val_offset:56085*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56085*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18696:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3c4401 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2e0d4a and fs3 == 1 and fe3 == 0xeb and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebc4401; op2val:0xc02e0d4a;
op3val:0xf5fc0000; valaddr_reg:x3; val_offset:56088*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56088*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18697:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3c4401 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2e0d4a and fs3 == 1 and fe3 == 0xeb and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebc4401; op2val:0xc02e0d4a;
op3val:0xf5fe0000; valaddr_reg:x3; val_offset:56091*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56091*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18698:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3c4401 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2e0d4a and fs3 == 1 and fe3 == 0xeb and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebc4401; op2val:0xc02e0d4a;
op3val:0xf5ff0000; valaddr_reg:x3; val_offset:56094*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56094*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18699:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3c4401 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2e0d4a and fs3 == 1 and fe3 == 0xeb and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebc4401; op2val:0xc02e0d4a;
op3val:0xf5ff8000; valaddr_reg:x3; val_offset:56097*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56097*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18700:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3c4401 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2e0d4a and fs3 == 1 and fe3 == 0xeb and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebc4401; op2val:0xc02e0d4a;
op3val:0xf5ffc000; valaddr_reg:x3; val_offset:56100*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56100*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18701:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3c4401 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2e0d4a and fs3 == 1 and fe3 == 0xeb and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebc4401; op2val:0xc02e0d4a;
op3val:0xf5ffe000; valaddr_reg:x3; val_offset:56103*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56103*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18702:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3c4401 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2e0d4a and fs3 == 1 and fe3 == 0xeb and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebc4401; op2val:0xc02e0d4a;
op3val:0xf5fff000; valaddr_reg:x3; val_offset:56106*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56106*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18703:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3c4401 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2e0d4a and fs3 == 1 and fe3 == 0xeb and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebc4401; op2val:0xc02e0d4a;
op3val:0xf5fff800; valaddr_reg:x3; val_offset:56109*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56109*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18704:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3c4401 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2e0d4a and fs3 == 1 and fe3 == 0xeb and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebc4401; op2val:0xc02e0d4a;
op3val:0xf5fffc00; valaddr_reg:x3; val_offset:56112*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56112*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18705:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3c4401 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2e0d4a and fs3 == 1 and fe3 == 0xeb and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebc4401; op2val:0xc02e0d4a;
op3val:0xf5fffe00; valaddr_reg:x3; val_offset:56115*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56115*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18706:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3c4401 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2e0d4a and fs3 == 1 and fe3 == 0xeb and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebc4401; op2val:0xc02e0d4a;
op3val:0xf5ffff00; valaddr_reg:x3; val_offset:56118*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56118*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18707:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3c4401 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2e0d4a and fs3 == 1 and fe3 == 0xeb and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebc4401; op2val:0xc02e0d4a;
op3val:0xf5ffff80; valaddr_reg:x3; val_offset:56121*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56121*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18708:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3c4401 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2e0d4a and fs3 == 1 and fe3 == 0xeb and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebc4401; op2val:0xc02e0d4a;
op3val:0xf5ffffc0; valaddr_reg:x3; val_offset:56124*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56124*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18709:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3c4401 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2e0d4a and fs3 == 1 and fe3 == 0xeb and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebc4401; op2val:0xc02e0d4a;
op3val:0xf5ffffe0; valaddr_reg:x3; val_offset:56127*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56127*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18710:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3c4401 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2e0d4a and fs3 == 1 and fe3 == 0xeb and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebc4401; op2val:0xc02e0d4a;
op3val:0xf5fffff0; valaddr_reg:x3; val_offset:56130*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56130*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18711:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3c4401 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2e0d4a and fs3 == 1 and fe3 == 0xeb and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebc4401; op2val:0xc02e0d4a;
op3val:0xf5fffff8; valaddr_reg:x3; val_offset:56133*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56133*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18712:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3c4401 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2e0d4a and fs3 == 1 and fe3 == 0xeb and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebc4401; op2val:0xc02e0d4a;
op3val:0xf5fffffc; valaddr_reg:x3; val_offset:56136*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56136*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18713:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3c4401 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2e0d4a and fs3 == 1 and fe3 == 0xeb and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebc4401; op2val:0xc02e0d4a;
op3val:0xf5fffffe; valaddr_reg:x3; val_offset:56139*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56139*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18714:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3c4401 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2e0d4a and fs3 == 1 and fe3 == 0xeb and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebc4401; op2val:0xc02e0d4a;
op3val:0xf5ffffff; valaddr_reg:x3; val_offset:56142*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56142*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18715:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3c4401 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2e0d4a and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebc4401; op2val:0xc02e0d4a;
op3val:0xff000001; valaddr_reg:x3; val_offset:56145*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56145*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18716:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3c4401 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2e0d4a and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebc4401; op2val:0xc02e0d4a;
op3val:0xff000003; valaddr_reg:x3; val_offset:56148*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56148*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18717:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3c4401 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2e0d4a and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebc4401; op2val:0xc02e0d4a;
op3val:0xff000007; valaddr_reg:x3; val_offset:56151*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56151*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18718:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3c4401 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2e0d4a and fs3 == 1 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebc4401; op2val:0xc02e0d4a;
op3val:0xff199999; valaddr_reg:x3; val_offset:56154*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56154*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18719:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3c4401 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2e0d4a and fs3 == 1 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebc4401; op2val:0xc02e0d4a;
op3val:0xff249249; valaddr_reg:x3; val_offset:56157*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56157*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18720:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3c4401 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2e0d4a and fs3 == 1 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebc4401; op2val:0xc02e0d4a;
op3val:0xff333333; valaddr_reg:x3; val_offset:56160*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56160*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18721:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3c4401 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2e0d4a and fs3 == 1 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebc4401; op2val:0xc02e0d4a;
op3val:0xff36db6d; valaddr_reg:x3; val_offset:56163*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56163*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18722:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3c4401 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2e0d4a and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebc4401; op2val:0xc02e0d4a;
op3val:0xff3bbbbb; valaddr_reg:x3; val_offset:56166*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56166*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18723:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3c4401 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2e0d4a and fs3 == 1 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebc4401; op2val:0xc02e0d4a;
op3val:0xff444444; valaddr_reg:x3; val_offset:56169*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56169*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18724:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3c4401 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2e0d4a and fs3 == 1 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebc4401; op2val:0xc02e0d4a;
op3val:0xff4ccccc; valaddr_reg:x3; val_offset:56172*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56172*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18725:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3c4401 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2e0d4a and fs3 == 1 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebc4401; op2val:0xc02e0d4a;
op3val:0xff5b6db6; valaddr_reg:x3; val_offset:56175*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56175*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18726:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3c4401 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2e0d4a and fs3 == 1 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebc4401; op2val:0xc02e0d4a;
op3val:0xff666666; valaddr_reg:x3; val_offset:56178*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56178*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18727:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3c4401 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2e0d4a and fs3 == 1 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebc4401; op2val:0xc02e0d4a;
op3val:0xff6db6db; valaddr_reg:x3; val_offset:56181*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56181*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18728:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3c4401 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2e0d4a and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebc4401; op2val:0xc02e0d4a;
op3val:0xff7ffff8; valaddr_reg:x3; val_offset:56184*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56184*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18729:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3c4401 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2e0d4a and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebc4401; op2val:0xc02e0d4a;
op3val:0xff7ffffc; valaddr_reg:x3; val_offset:56187*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56187*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18730:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3c4401 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2e0d4a and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebc4401; op2val:0xc02e0d4a;
op3val:0xff7ffffe; valaddr_reg:x3; val_offset:56190*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56190*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18731:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee6da and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2ba602 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee6da; op2val:0xc02ba602;
op3val:0xe6800000; valaddr_reg:x3; val_offset:56193*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56193*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18732:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee6da and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2ba602 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee6da; op2val:0xc02ba602;
op3val:0xe6800001; valaddr_reg:x3; val_offset:56196*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56196*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18733:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee6da and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2ba602 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee6da; op2val:0xc02ba602;
op3val:0xe6800003; valaddr_reg:x3; val_offset:56199*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56199*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18734:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee6da and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2ba602 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee6da; op2val:0xc02ba602;
op3val:0xe6800007; valaddr_reg:x3; val_offset:56202*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56202*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18735:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee6da and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2ba602 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee6da; op2val:0xc02ba602;
op3val:0xe680000f; valaddr_reg:x3; val_offset:56205*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56205*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18736:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee6da and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2ba602 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee6da; op2val:0xc02ba602;
op3val:0xe680001f; valaddr_reg:x3; val_offset:56208*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56208*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18737:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee6da and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2ba602 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee6da; op2val:0xc02ba602;
op3val:0xe680003f; valaddr_reg:x3; val_offset:56211*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56211*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18738:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee6da and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2ba602 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee6da; op2val:0xc02ba602;
op3val:0xe680007f; valaddr_reg:x3; val_offset:56214*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56214*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18739:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee6da and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2ba602 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee6da; op2val:0xc02ba602;
op3val:0xe68000ff; valaddr_reg:x3; val_offset:56217*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56217*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18740:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee6da and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2ba602 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee6da; op2val:0xc02ba602;
op3val:0xe68001ff; valaddr_reg:x3; val_offset:56220*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56220*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18741:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee6da and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2ba602 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee6da; op2val:0xc02ba602;
op3val:0xe68003ff; valaddr_reg:x3; val_offset:56223*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56223*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18742:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee6da and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2ba602 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee6da; op2val:0xc02ba602;
op3val:0xe68007ff; valaddr_reg:x3; val_offset:56226*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56226*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18743:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee6da and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2ba602 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee6da; op2val:0xc02ba602;
op3val:0xe6800fff; valaddr_reg:x3; val_offset:56229*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56229*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18744:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee6da and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2ba602 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee6da; op2val:0xc02ba602;
op3val:0xe6801fff; valaddr_reg:x3; val_offset:56232*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56232*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18745:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee6da and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2ba602 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee6da; op2val:0xc02ba602;
op3val:0xe6803fff; valaddr_reg:x3; val_offset:56235*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56235*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18746:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee6da and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2ba602 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee6da; op2val:0xc02ba602;
op3val:0xe6807fff; valaddr_reg:x3; val_offset:56238*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56238*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18747:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee6da and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2ba602 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee6da; op2val:0xc02ba602;
op3val:0xe680ffff; valaddr_reg:x3; val_offset:56241*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56241*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18748:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee6da and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2ba602 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee6da; op2val:0xc02ba602;
op3val:0xe681ffff; valaddr_reg:x3; val_offset:56244*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56244*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18749:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee6da and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2ba602 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee6da; op2val:0xc02ba602;
op3val:0xe683ffff; valaddr_reg:x3; val_offset:56247*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56247*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18750:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee6da and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2ba602 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee6da; op2val:0xc02ba602;
op3val:0xe687ffff; valaddr_reg:x3; val_offset:56250*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56250*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18751:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee6da and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2ba602 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee6da; op2val:0xc02ba602;
op3val:0xe68fffff; valaddr_reg:x3; val_offset:56253*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56253*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18752:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee6da and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2ba602 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee6da; op2val:0xc02ba602;
op3val:0xe69fffff; valaddr_reg:x3; val_offset:56256*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56256*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18753:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee6da and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2ba602 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee6da; op2val:0xc02ba602;
op3val:0xe6bfffff; valaddr_reg:x3; val_offset:56259*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56259*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18754:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee6da and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2ba602 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee6da; op2val:0xc02ba602;
op3val:0xe6c00000; valaddr_reg:x3; val_offset:56262*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56262*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18755:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee6da and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2ba602 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee6da; op2val:0xc02ba602;
op3val:0xe6e00000; valaddr_reg:x3; val_offset:56265*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56265*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18756:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee6da and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2ba602 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee6da; op2val:0xc02ba602;
op3val:0xe6f00000; valaddr_reg:x3; val_offset:56268*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56268*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18757:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee6da and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2ba602 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee6da; op2val:0xc02ba602;
op3val:0xe6f80000; valaddr_reg:x3; val_offset:56271*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56271*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18758:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee6da and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2ba602 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee6da; op2val:0xc02ba602;
op3val:0xe6fc0000; valaddr_reg:x3; val_offset:56274*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56274*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18759:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee6da and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2ba602 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee6da; op2val:0xc02ba602;
op3val:0xe6fe0000; valaddr_reg:x3; val_offset:56277*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56277*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18760:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee6da and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2ba602 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee6da; op2val:0xc02ba602;
op3val:0xe6ff0000; valaddr_reg:x3; val_offset:56280*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56280*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18761:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee6da and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2ba602 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee6da; op2val:0xc02ba602;
op3val:0xe6ff8000; valaddr_reg:x3; val_offset:56283*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56283*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18762:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee6da and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2ba602 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee6da; op2val:0xc02ba602;
op3val:0xe6ffc000; valaddr_reg:x3; val_offset:56286*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56286*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18763:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee6da and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2ba602 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee6da; op2val:0xc02ba602;
op3val:0xe6ffe000; valaddr_reg:x3; val_offset:56289*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56289*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18764:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee6da and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2ba602 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee6da; op2val:0xc02ba602;
op3val:0xe6fff000; valaddr_reg:x3; val_offset:56292*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56292*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18765:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee6da and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2ba602 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee6da; op2val:0xc02ba602;
op3val:0xe6fff800; valaddr_reg:x3; val_offset:56295*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56295*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18766:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee6da and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2ba602 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee6da; op2val:0xc02ba602;
op3val:0xe6fffc00; valaddr_reg:x3; val_offset:56298*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56298*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18767:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee6da and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2ba602 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee6da; op2val:0xc02ba602;
op3val:0xe6fffe00; valaddr_reg:x3; val_offset:56301*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56301*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18768:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee6da and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2ba602 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee6da; op2val:0xc02ba602;
op3val:0xe6ffff00; valaddr_reg:x3; val_offset:56304*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56304*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18769:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee6da and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2ba602 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee6da; op2val:0xc02ba602;
op3val:0xe6ffff80; valaddr_reg:x3; val_offset:56307*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56307*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18770:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee6da and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2ba602 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee6da; op2val:0xc02ba602;
op3val:0xe6ffffc0; valaddr_reg:x3; val_offset:56310*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56310*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18771:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee6da and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2ba602 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee6da; op2val:0xc02ba602;
op3val:0xe6ffffe0; valaddr_reg:x3; val_offset:56313*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56313*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18772:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee6da and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2ba602 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee6da; op2val:0xc02ba602;
op3val:0xe6fffff0; valaddr_reg:x3; val_offset:56316*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56316*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18773:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee6da and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2ba602 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee6da; op2val:0xc02ba602;
op3val:0xe6fffff8; valaddr_reg:x3; val_offset:56319*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56319*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18774:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee6da and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2ba602 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee6da; op2val:0xc02ba602;
op3val:0xe6fffffc; valaddr_reg:x3; val_offset:56322*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56322*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18775:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee6da and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2ba602 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee6da; op2val:0xc02ba602;
op3val:0xe6fffffe; valaddr_reg:x3; val_offset:56325*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56325*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18776:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee6da and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2ba602 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee6da; op2val:0xc02ba602;
op3val:0xe6ffffff; valaddr_reg:x3; val_offset:56328*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56328*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18777:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee6da and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2ba602 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee6da; op2val:0xc02ba602;
op3val:0xff000001; valaddr_reg:x3; val_offset:56331*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56331*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18778:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee6da and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2ba602 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee6da; op2val:0xc02ba602;
op3val:0xff000003; valaddr_reg:x3; val_offset:56334*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56334*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18779:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee6da and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2ba602 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee6da; op2val:0xc02ba602;
op3val:0xff000007; valaddr_reg:x3; val_offset:56337*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56337*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18780:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee6da and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2ba602 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee6da; op2val:0xc02ba602;
op3val:0xff199999; valaddr_reg:x3; val_offset:56340*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56340*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18781:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee6da and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2ba602 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee6da; op2val:0xc02ba602;
op3val:0xff249249; valaddr_reg:x3; val_offset:56343*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56343*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18782:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee6da and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2ba602 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee6da; op2val:0xc02ba602;
op3val:0xff333333; valaddr_reg:x3; val_offset:56346*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56346*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18783:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee6da and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2ba602 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee6da; op2val:0xc02ba602;
op3val:0xff36db6d; valaddr_reg:x3; val_offset:56349*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56349*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18784:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee6da and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2ba602 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee6da; op2val:0xc02ba602;
op3val:0xff3bbbbb; valaddr_reg:x3; val_offset:56352*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56352*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18785:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee6da and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2ba602 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee6da; op2val:0xc02ba602;
op3val:0xff444444; valaddr_reg:x3; val_offset:56355*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56355*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18786:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee6da and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2ba602 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee6da; op2val:0xc02ba602;
op3val:0xff4ccccc; valaddr_reg:x3; val_offset:56358*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56358*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18787:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee6da and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2ba602 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee6da; op2val:0xc02ba602;
op3val:0xff5b6db6; valaddr_reg:x3; val_offset:56361*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56361*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18788:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee6da and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2ba602 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee6da; op2val:0xc02ba602;
op3val:0xff666666; valaddr_reg:x3; val_offset:56364*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56364*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18789:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee6da and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2ba602 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee6da; op2val:0xc02ba602;
op3val:0xff6db6db; valaddr_reg:x3; val_offset:56367*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56367*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18790:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee6da and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2ba602 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee6da; op2val:0xc02ba602;
op3val:0xff7ffff8; valaddr_reg:x3; val_offset:56370*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56370*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18791:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee6da and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2ba602 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee6da; op2val:0xc02ba602;
op3val:0xff7ffffc; valaddr_reg:x3; val_offset:56373*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56373*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18792:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee6da and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2ba602 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee6da; op2val:0xc02ba602;
op3val:0xff7ffffe; valaddr_reg:x3; val_offset:56376*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56376*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18793:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f2962 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2b6a44 and fs3 == 0 and fe3 == 0xdd and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf2962; op2val:0x402b6a44;
op3val:0x6e800000; valaddr_reg:x3; val_offset:56379*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56379*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18794:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f2962 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2b6a44 and fs3 == 0 and fe3 == 0xdd and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf2962; op2val:0x402b6a44;
op3val:0x6e800001; valaddr_reg:x3; val_offset:56382*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56382*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18795:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f2962 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2b6a44 and fs3 == 0 and fe3 == 0xdd and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf2962; op2val:0x402b6a44;
op3val:0x6e800003; valaddr_reg:x3; val_offset:56385*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56385*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18796:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f2962 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2b6a44 and fs3 == 0 and fe3 == 0xdd and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf2962; op2val:0x402b6a44;
op3val:0x6e800007; valaddr_reg:x3; val_offset:56388*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56388*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18797:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f2962 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2b6a44 and fs3 == 0 and fe3 == 0xdd and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf2962; op2val:0x402b6a44;
op3val:0x6e80000f; valaddr_reg:x3; val_offset:56391*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56391*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18798:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f2962 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2b6a44 and fs3 == 0 and fe3 == 0xdd and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf2962; op2val:0x402b6a44;
op3val:0x6e80001f; valaddr_reg:x3; val_offset:56394*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56394*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18799:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f2962 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2b6a44 and fs3 == 0 and fe3 == 0xdd and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf2962; op2val:0x402b6a44;
op3val:0x6e80003f; valaddr_reg:x3; val_offset:56397*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56397*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18800:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f2962 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2b6a44 and fs3 == 0 and fe3 == 0xdd and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf2962; op2val:0x402b6a44;
op3val:0x6e80007f; valaddr_reg:x3; val_offset:56400*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56400*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18801:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f2962 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2b6a44 and fs3 == 0 and fe3 == 0xdd and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf2962; op2val:0x402b6a44;
op3val:0x6e8000ff; valaddr_reg:x3; val_offset:56403*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56403*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18802:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f2962 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2b6a44 and fs3 == 0 and fe3 == 0xdd and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf2962; op2val:0x402b6a44;
op3val:0x6e8001ff; valaddr_reg:x3; val_offset:56406*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56406*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18803:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f2962 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2b6a44 and fs3 == 0 and fe3 == 0xdd and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf2962; op2val:0x402b6a44;
op3val:0x6e8003ff; valaddr_reg:x3; val_offset:56409*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56409*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18804:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f2962 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2b6a44 and fs3 == 0 and fe3 == 0xdd and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf2962; op2val:0x402b6a44;
op3val:0x6e8007ff; valaddr_reg:x3; val_offset:56412*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56412*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18805:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f2962 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2b6a44 and fs3 == 0 and fe3 == 0xdd and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf2962; op2val:0x402b6a44;
op3val:0x6e800fff; valaddr_reg:x3; val_offset:56415*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56415*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18806:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f2962 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2b6a44 and fs3 == 0 and fe3 == 0xdd and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf2962; op2val:0x402b6a44;
op3val:0x6e801fff; valaddr_reg:x3; val_offset:56418*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56418*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18807:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f2962 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2b6a44 and fs3 == 0 and fe3 == 0xdd and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf2962; op2val:0x402b6a44;
op3val:0x6e803fff; valaddr_reg:x3; val_offset:56421*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56421*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18808:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f2962 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2b6a44 and fs3 == 0 and fe3 == 0xdd and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf2962; op2val:0x402b6a44;
op3val:0x6e807fff; valaddr_reg:x3; val_offset:56424*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56424*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18809:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f2962 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2b6a44 and fs3 == 0 and fe3 == 0xdd and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf2962; op2val:0x402b6a44;
op3val:0x6e80ffff; valaddr_reg:x3; val_offset:56427*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56427*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18810:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f2962 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2b6a44 and fs3 == 0 and fe3 == 0xdd and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf2962; op2val:0x402b6a44;
op3val:0x6e81ffff; valaddr_reg:x3; val_offset:56430*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56430*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18811:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f2962 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2b6a44 and fs3 == 0 and fe3 == 0xdd and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf2962; op2val:0x402b6a44;
op3val:0x6e83ffff; valaddr_reg:x3; val_offset:56433*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56433*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18812:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f2962 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2b6a44 and fs3 == 0 and fe3 == 0xdd and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf2962; op2val:0x402b6a44;
op3val:0x6e87ffff; valaddr_reg:x3; val_offset:56436*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56436*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18813:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f2962 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2b6a44 and fs3 == 0 and fe3 == 0xdd and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf2962; op2val:0x402b6a44;
op3val:0x6e8fffff; valaddr_reg:x3; val_offset:56439*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56439*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18814:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f2962 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2b6a44 and fs3 == 0 and fe3 == 0xdd and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf2962; op2val:0x402b6a44;
op3val:0x6e9fffff; valaddr_reg:x3; val_offset:56442*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56442*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18815:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f2962 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2b6a44 and fs3 == 0 and fe3 == 0xdd and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf2962; op2val:0x402b6a44;
op3val:0x6ebfffff; valaddr_reg:x3; val_offset:56445*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 56445*0 + 3*146*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(2126267393,32,FLEN)
NAN_BOXED(3224243530,32,FLEN)
NAN_BOXED(4119330815,32,FLEN)
NAN_BOXED(2126267393,32,FLEN)
NAN_BOXED(3224243530,32,FLEN)
NAN_BOXED(4119855103,32,FLEN)
NAN_BOXED(2126267393,32,FLEN)
NAN_BOXED(3224243530,32,FLEN)
NAN_BOXED(4120903679,32,FLEN)
NAN_BOXED(2126267393,32,FLEN)
NAN_BOXED(3224243530,32,FLEN)
NAN_BOXED(4123000831,32,FLEN)
NAN_BOXED(2126267393,32,FLEN)
NAN_BOXED(3224243530,32,FLEN)
NAN_BOXED(4123000832,32,FLEN)
NAN_BOXED(2126267393,32,FLEN)
NAN_BOXED(3224243530,32,FLEN)
NAN_BOXED(4125097984,32,FLEN)
NAN_BOXED(2126267393,32,FLEN)
NAN_BOXED(3224243530,32,FLEN)
NAN_BOXED(4126146560,32,FLEN)
NAN_BOXED(2126267393,32,FLEN)
NAN_BOXED(3224243530,32,FLEN)
NAN_BOXED(4126670848,32,FLEN)
NAN_BOXED(2126267393,32,FLEN)
NAN_BOXED(3224243530,32,FLEN)
NAN_BOXED(4126932992,32,FLEN)
NAN_BOXED(2126267393,32,FLEN)
NAN_BOXED(3224243530,32,FLEN)
NAN_BOXED(4127064064,32,FLEN)
NAN_BOXED(2126267393,32,FLEN)
NAN_BOXED(3224243530,32,FLEN)
NAN_BOXED(4127129600,32,FLEN)
NAN_BOXED(2126267393,32,FLEN)
NAN_BOXED(3224243530,32,FLEN)
NAN_BOXED(4127162368,32,FLEN)
NAN_BOXED(2126267393,32,FLEN)
NAN_BOXED(3224243530,32,FLEN)
NAN_BOXED(4127178752,32,FLEN)
NAN_BOXED(2126267393,32,FLEN)
NAN_BOXED(3224243530,32,FLEN)
NAN_BOXED(4127186944,32,FLEN)
NAN_BOXED(2126267393,32,FLEN)
NAN_BOXED(3224243530,32,FLEN)
NAN_BOXED(4127191040,32,FLEN)
NAN_BOXED(2126267393,32,FLEN)
NAN_BOXED(3224243530,32,FLEN)
NAN_BOXED(4127193088,32,FLEN)
NAN_BOXED(2126267393,32,FLEN)
NAN_BOXED(3224243530,32,FLEN)
NAN_BOXED(4127194112,32,FLEN)
NAN_BOXED(2126267393,32,FLEN)
NAN_BOXED(3224243530,32,FLEN)
NAN_BOXED(4127194624,32,FLEN)
NAN_BOXED(2126267393,32,FLEN)
NAN_BOXED(3224243530,32,FLEN)
NAN_BOXED(4127194880,32,FLEN)
NAN_BOXED(2126267393,32,FLEN)
NAN_BOXED(3224243530,32,FLEN)
NAN_BOXED(4127195008,32,FLEN)
NAN_BOXED(2126267393,32,FLEN)
NAN_BOXED(3224243530,32,FLEN)
NAN_BOXED(4127195072,32,FLEN)
NAN_BOXED(2126267393,32,FLEN)
NAN_BOXED(3224243530,32,FLEN)
NAN_BOXED(4127195104,32,FLEN)
NAN_BOXED(2126267393,32,FLEN)
NAN_BOXED(3224243530,32,FLEN)
NAN_BOXED(4127195120,32,FLEN)
NAN_BOXED(2126267393,32,FLEN)
NAN_BOXED(3224243530,32,FLEN)
NAN_BOXED(4127195128,32,FLEN)
NAN_BOXED(2126267393,32,FLEN)
NAN_BOXED(3224243530,32,FLEN)
NAN_BOXED(4127195132,32,FLEN)
NAN_BOXED(2126267393,32,FLEN)
NAN_BOXED(3224243530,32,FLEN)
NAN_BOXED(4127195134,32,FLEN)
NAN_BOXED(2126267393,32,FLEN)
NAN_BOXED(3224243530,32,FLEN)
NAN_BOXED(4127195135,32,FLEN)
NAN_BOXED(2126267393,32,FLEN)
NAN_BOXED(3224243530,32,FLEN)
NAN_BOXED(4278190081,32,FLEN)
NAN_BOXED(2126267393,32,FLEN)
NAN_BOXED(3224243530,32,FLEN)
NAN_BOXED(4278190083,32,FLEN)
NAN_BOXED(2126267393,32,FLEN)
NAN_BOXED(3224243530,32,FLEN)
NAN_BOXED(4278190087,32,FLEN)
NAN_BOXED(2126267393,32,FLEN)
NAN_BOXED(3224243530,32,FLEN)
NAN_BOXED(4279867801,32,FLEN)
NAN_BOXED(2126267393,32,FLEN)
NAN_BOXED(3224243530,32,FLEN)
NAN_BOXED(4280586825,32,FLEN)
NAN_BOXED(2126267393,32,FLEN)
NAN_BOXED(3224243530,32,FLEN)
NAN_BOXED(4281545523,32,FLEN)
NAN_BOXED(2126267393,32,FLEN)
NAN_BOXED(3224243530,32,FLEN)
NAN_BOXED(4281785197,32,FLEN)
NAN_BOXED(2126267393,32,FLEN)
NAN_BOXED(3224243530,32,FLEN)
NAN_BOXED(4282104763,32,FLEN)
NAN_BOXED(2126267393,32,FLEN)
NAN_BOXED(3224243530,32,FLEN)
NAN_BOXED(4282664004,32,FLEN)
NAN_BOXED(2126267393,32,FLEN)
NAN_BOXED(3224243530,32,FLEN)
NAN_BOXED(4283223244,32,FLEN)
NAN_BOXED(2126267393,32,FLEN)
NAN_BOXED(3224243530,32,FLEN)
NAN_BOXED(4284181942,32,FLEN)
NAN_BOXED(2126267393,32,FLEN)
NAN_BOXED(3224243530,32,FLEN)
NAN_BOXED(4284900966,32,FLEN)
NAN_BOXED(2126267393,32,FLEN)
NAN_BOXED(3224243530,32,FLEN)
NAN_BOXED(4285380315,32,FLEN)
NAN_BOXED(2126267393,32,FLEN)
NAN_BOXED(3224243530,32,FLEN)
NAN_BOXED(4286578680,32,FLEN)
NAN_BOXED(2126267393,32,FLEN)
NAN_BOXED(3224243530,32,FLEN)
NAN_BOXED(4286578684,32,FLEN)
NAN_BOXED(2126267393,32,FLEN)
NAN_BOXED(3224243530,32,FLEN)
NAN_BOXED(4286578686,32,FLEN)
NAN_BOXED(2126440154,32,FLEN)
NAN_BOXED(3224086018,32,FLEN)
NAN_BOXED(3867148288,32,FLEN)
NAN_BOXED(2126440154,32,FLEN)
NAN_BOXED(3224086018,32,FLEN)
NAN_BOXED(3867148289,32,FLEN)
NAN_BOXED(2126440154,32,FLEN)
NAN_BOXED(3224086018,32,FLEN)
NAN_BOXED(3867148291,32,FLEN)
NAN_BOXED(2126440154,32,FLEN)
NAN_BOXED(3224086018,32,FLEN)
NAN_BOXED(3867148295,32,FLEN)
NAN_BOXED(2126440154,32,FLEN)
NAN_BOXED(3224086018,32,FLEN)
NAN_BOXED(3867148303,32,FLEN)
NAN_BOXED(2126440154,32,FLEN)
NAN_BOXED(3224086018,32,FLEN)
NAN_BOXED(3867148319,32,FLEN)
NAN_BOXED(2126440154,32,FLEN)
NAN_BOXED(3224086018,32,FLEN)
NAN_BOXED(3867148351,32,FLEN)
NAN_BOXED(2126440154,32,FLEN)
NAN_BOXED(3224086018,32,FLEN)
NAN_BOXED(3867148415,32,FLEN)
NAN_BOXED(2126440154,32,FLEN)
NAN_BOXED(3224086018,32,FLEN)
NAN_BOXED(3867148543,32,FLEN)
NAN_BOXED(2126440154,32,FLEN)
NAN_BOXED(3224086018,32,FLEN)
NAN_BOXED(3867148799,32,FLEN)
NAN_BOXED(2126440154,32,FLEN)
NAN_BOXED(3224086018,32,FLEN)
NAN_BOXED(3867149311,32,FLEN)
NAN_BOXED(2126440154,32,FLEN)
NAN_BOXED(3224086018,32,FLEN)
NAN_BOXED(3867150335,32,FLEN)
NAN_BOXED(2126440154,32,FLEN)
NAN_BOXED(3224086018,32,FLEN)
NAN_BOXED(3867152383,32,FLEN)
NAN_BOXED(2126440154,32,FLEN)
NAN_BOXED(3224086018,32,FLEN)
NAN_BOXED(3867156479,32,FLEN)
NAN_BOXED(2126440154,32,FLEN)
NAN_BOXED(3224086018,32,FLEN)
NAN_BOXED(3867164671,32,FLEN)
NAN_BOXED(2126440154,32,FLEN)
NAN_BOXED(3224086018,32,FLEN)
NAN_BOXED(3867181055,32,FLEN)
NAN_BOXED(2126440154,32,FLEN)
NAN_BOXED(3224086018,32,FLEN)
NAN_BOXED(3867213823,32,FLEN)
NAN_BOXED(2126440154,32,FLEN)
NAN_BOXED(3224086018,32,FLEN)
NAN_BOXED(3867279359,32,FLEN)
NAN_BOXED(2126440154,32,FLEN)
NAN_BOXED(3224086018,32,FLEN)
NAN_BOXED(3867410431,32,FLEN)
NAN_BOXED(2126440154,32,FLEN)
NAN_BOXED(3224086018,32,FLEN)
NAN_BOXED(3867672575,32,FLEN)
NAN_BOXED(2126440154,32,FLEN)
NAN_BOXED(3224086018,32,FLEN)
NAN_BOXED(3868196863,32,FLEN)
NAN_BOXED(2126440154,32,FLEN)
NAN_BOXED(3224086018,32,FLEN)
NAN_BOXED(3869245439,32,FLEN)
NAN_BOXED(2126440154,32,FLEN)
NAN_BOXED(3224086018,32,FLEN)
NAN_BOXED(3871342591,32,FLEN)
NAN_BOXED(2126440154,32,FLEN)
NAN_BOXED(3224086018,32,FLEN)
NAN_BOXED(3871342592,32,FLEN)
NAN_BOXED(2126440154,32,FLEN)
NAN_BOXED(3224086018,32,FLEN)
NAN_BOXED(3873439744,32,FLEN)
NAN_BOXED(2126440154,32,FLEN)
NAN_BOXED(3224086018,32,FLEN)
NAN_BOXED(3874488320,32,FLEN)
NAN_BOXED(2126440154,32,FLEN)
NAN_BOXED(3224086018,32,FLEN)
NAN_BOXED(3875012608,32,FLEN)
NAN_BOXED(2126440154,32,FLEN)
NAN_BOXED(3224086018,32,FLEN)
NAN_BOXED(3875274752,32,FLEN)
NAN_BOXED(2126440154,32,FLEN)
NAN_BOXED(3224086018,32,FLEN)
NAN_BOXED(3875405824,32,FLEN)
NAN_BOXED(2126440154,32,FLEN)
NAN_BOXED(3224086018,32,FLEN)
NAN_BOXED(3875471360,32,FLEN)
NAN_BOXED(2126440154,32,FLEN)
NAN_BOXED(3224086018,32,FLEN)
NAN_BOXED(3875504128,32,FLEN)
NAN_BOXED(2126440154,32,FLEN)
NAN_BOXED(3224086018,32,FLEN)
NAN_BOXED(3875520512,32,FLEN)
NAN_BOXED(2126440154,32,FLEN)
NAN_BOXED(3224086018,32,FLEN)
NAN_BOXED(3875528704,32,FLEN)
NAN_BOXED(2126440154,32,FLEN)
NAN_BOXED(3224086018,32,FLEN)
NAN_BOXED(3875532800,32,FLEN)
NAN_BOXED(2126440154,32,FLEN)
NAN_BOXED(3224086018,32,FLEN)
NAN_BOXED(3875534848,32,FLEN)
NAN_BOXED(2126440154,32,FLEN)
NAN_BOXED(3224086018,32,FLEN)
NAN_BOXED(3875535872,32,FLEN)
NAN_BOXED(2126440154,32,FLEN)
NAN_BOXED(3224086018,32,FLEN)
NAN_BOXED(3875536384,32,FLEN)
NAN_BOXED(2126440154,32,FLEN)
NAN_BOXED(3224086018,32,FLEN)
NAN_BOXED(3875536640,32,FLEN)
NAN_BOXED(2126440154,32,FLEN)
NAN_BOXED(3224086018,32,FLEN)
NAN_BOXED(3875536768,32,FLEN)
NAN_BOXED(2126440154,32,FLEN)
NAN_BOXED(3224086018,32,FLEN)
NAN_BOXED(3875536832,32,FLEN)
NAN_BOXED(2126440154,32,FLEN)
NAN_BOXED(3224086018,32,FLEN)
NAN_BOXED(3875536864,32,FLEN)
NAN_BOXED(2126440154,32,FLEN)
NAN_BOXED(3224086018,32,FLEN)
NAN_BOXED(3875536880,32,FLEN)
NAN_BOXED(2126440154,32,FLEN)
NAN_BOXED(3224086018,32,FLEN)
NAN_BOXED(3875536888,32,FLEN)
NAN_BOXED(2126440154,32,FLEN)
NAN_BOXED(3224086018,32,FLEN)
NAN_BOXED(3875536892,32,FLEN)
NAN_BOXED(2126440154,32,FLEN)
NAN_BOXED(3224086018,32,FLEN)
NAN_BOXED(3875536894,32,FLEN)
NAN_BOXED(2126440154,32,FLEN)
NAN_BOXED(3224086018,32,FLEN)
NAN_BOXED(3875536895,32,FLEN)
NAN_BOXED(2126440154,32,FLEN)
NAN_BOXED(3224086018,32,FLEN)
NAN_BOXED(4278190081,32,FLEN)
NAN_BOXED(2126440154,32,FLEN)
NAN_BOXED(3224086018,32,FLEN)
NAN_BOXED(4278190083,32,FLEN)
NAN_BOXED(2126440154,32,FLEN)
NAN_BOXED(3224086018,32,FLEN)
NAN_BOXED(4278190087,32,FLEN)
NAN_BOXED(2126440154,32,FLEN)
NAN_BOXED(3224086018,32,FLEN)
NAN_BOXED(4279867801,32,FLEN)
NAN_BOXED(2126440154,32,FLEN)
NAN_BOXED(3224086018,32,FLEN)
NAN_BOXED(4280586825,32,FLEN)
NAN_BOXED(2126440154,32,FLEN)
NAN_BOXED(3224086018,32,FLEN)
NAN_BOXED(4281545523,32,FLEN)
NAN_BOXED(2126440154,32,FLEN)
NAN_BOXED(3224086018,32,FLEN)
NAN_BOXED(4281785197,32,FLEN)
NAN_BOXED(2126440154,32,FLEN)
NAN_BOXED(3224086018,32,FLEN)
NAN_BOXED(4282104763,32,FLEN)
NAN_BOXED(2126440154,32,FLEN)
NAN_BOXED(3224086018,32,FLEN)
NAN_BOXED(4282664004,32,FLEN)
NAN_BOXED(2126440154,32,FLEN)
NAN_BOXED(3224086018,32,FLEN)
NAN_BOXED(4283223244,32,FLEN)
NAN_BOXED(2126440154,32,FLEN)
NAN_BOXED(3224086018,32,FLEN)
NAN_BOXED(4284181942,32,FLEN)
NAN_BOXED(2126440154,32,FLEN)
NAN_BOXED(3224086018,32,FLEN)
NAN_BOXED(4284900966,32,FLEN)
NAN_BOXED(2126440154,32,FLEN)
NAN_BOXED(3224086018,32,FLEN)
NAN_BOXED(4285380315,32,FLEN)
NAN_BOXED(2126440154,32,FLEN)
NAN_BOXED(3224086018,32,FLEN)
NAN_BOXED(4286578680,32,FLEN)
NAN_BOXED(2126440154,32,FLEN)
NAN_BOXED(3224086018,32,FLEN)
NAN_BOXED(4286578684,32,FLEN)
NAN_BOXED(2126440154,32,FLEN)
NAN_BOXED(3224086018,32,FLEN)
NAN_BOXED(4286578686,32,FLEN)
NAN_BOXED(2126457186,32,FLEN)
NAN_BOXED(1076587076,32,FLEN)
NAN_BOXED(1853882368,32,FLEN)
NAN_BOXED(2126457186,32,FLEN)
NAN_BOXED(1076587076,32,FLEN)
NAN_BOXED(1853882369,32,FLEN)
NAN_BOXED(2126457186,32,FLEN)
NAN_BOXED(1076587076,32,FLEN)
NAN_BOXED(1853882371,32,FLEN)
NAN_BOXED(2126457186,32,FLEN)
NAN_BOXED(1076587076,32,FLEN)
NAN_BOXED(1853882375,32,FLEN)
NAN_BOXED(2126457186,32,FLEN)
NAN_BOXED(1076587076,32,FLEN)
NAN_BOXED(1853882383,32,FLEN)
NAN_BOXED(2126457186,32,FLEN)
NAN_BOXED(1076587076,32,FLEN)
NAN_BOXED(1853882399,32,FLEN)
NAN_BOXED(2126457186,32,FLEN)
NAN_BOXED(1076587076,32,FLEN)
NAN_BOXED(1853882431,32,FLEN)
NAN_BOXED(2126457186,32,FLEN)
NAN_BOXED(1076587076,32,FLEN)
NAN_BOXED(1853882495,32,FLEN)
NAN_BOXED(2126457186,32,FLEN)
NAN_BOXED(1076587076,32,FLEN)
NAN_BOXED(1853882623,32,FLEN)
NAN_BOXED(2126457186,32,FLEN)
NAN_BOXED(1076587076,32,FLEN)
NAN_BOXED(1853882879,32,FLEN)
NAN_BOXED(2126457186,32,FLEN)
NAN_BOXED(1076587076,32,FLEN)
NAN_BOXED(1853883391,32,FLEN)
NAN_BOXED(2126457186,32,FLEN)
NAN_BOXED(1076587076,32,FLEN)
NAN_BOXED(1853884415,32,FLEN)
NAN_BOXED(2126457186,32,FLEN)
NAN_BOXED(1076587076,32,FLEN)
NAN_BOXED(1853886463,32,FLEN)
NAN_BOXED(2126457186,32,FLEN)
NAN_BOXED(1076587076,32,FLEN)
NAN_BOXED(1853890559,32,FLEN)
NAN_BOXED(2126457186,32,FLEN)
NAN_BOXED(1076587076,32,FLEN)
NAN_BOXED(1853898751,32,FLEN)
NAN_BOXED(2126457186,32,FLEN)
NAN_BOXED(1076587076,32,FLEN)
NAN_BOXED(1853915135,32,FLEN)
NAN_BOXED(2126457186,32,FLEN)
NAN_BOXED(1076587076,32,FLEN)
NAN_BOXED(1853947903,32,FLEN)
NAN_BOXED(2126457186,32,FLEN)
NAN_BOXED(1076587076,32,FLEN)
NAN_BOXED(1854013439,32,FLEN)
NAN_BOXED(2126457186,32,FLEN)
NAN_BOXED(1076587076,32,FLEN)
NAN_BOXED(1854144511,32,FLEN)
NAN_BOXED(2126457186,32,FLEN)
NAN_BOXED(1076587076,32,FLEN)
NAN_BOXED(1854406655,32,FLEN)
NAN_BOXED(2126457186,32,FLEN)
NAN_BOXED(1076587076,32,FLEN)
NAN_BOXED(1854930943,32,FLEN)
NAN_BOXED(2126457186,32,FLEN)
NAN_BOXED(1076587076,32,FLEN)
NAN_BOXED(1855979519,32,FLEN)
NAN_BOXED(2126457186,32,FLEN)
NAN_BOXED(1076587076,32,FLEN)
NAN_BOXED(1858076671,32,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
