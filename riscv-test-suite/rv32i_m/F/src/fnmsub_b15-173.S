
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 14:18:08 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32F/fnmsub.s.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmsub.s instruction of the RISC-V RV32F_Zicsr,RV32FD_Zicsr,RV64F_Zicsr,RV64FD_Zicsr extension for the fnmsub_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF_Zicsr,RV32IFD_Zicsr,RV64IF_Zicsr,RV64IFD_Zicsr,RV32EF_Zicsr,RV32EFD_Zicsr,RV64EF_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fnmsub_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*F.*);def TEST_CASE_1=True;",fnmsub_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_22016:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8886 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8886; op2val:0x0;
op3val:0x333333; valaddr_reg:x3; val_offset:66048*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66048*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22017:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8886 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8886; op2val:0x0;
op3val:0x36db6d; valaddr_reg:x3; val_offset:66051*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66051*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22018:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8886 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8886; op2val:0x0;
op3val:0x3bbbbb; valaddr_reg:x3; val_offset:66054*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66054*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22019:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8886 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8886; op2val:0x0;
op3val:0x444444; valaddr_reg:x3; val_offset:66057*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66057*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22020:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8886 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8886; op2val:0x0;
op3val:0x4ccccc; valaddr_reg:x3; val_offset:66060*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66060*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22021:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8886 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8886; op2val:0x0;
op3val:0x5b6db6; valaddr_reg:x3; val_offset:66063*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66063*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22022:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8886 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8886; op2val:0x0;
op3val:0x666666; valaddr_reg:x3; val_offset:66066*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66066*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22023:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8886 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8886; op2val:0x0;
op3val:0x6db6db; valaddr_reg:x3; val_offset:66069*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66069*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22024:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8886 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8886; op2val:0x0;
op3val:0x7ffff8; valaddr_reg:x3; val_offset:66072*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66072*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22025:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8886 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8886; op2val:0x0;
op3val:0x7ffffc; valaddr_reg:x3; val_offset:66075*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66075*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22026:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8886 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8886; op2val:0x0;
op3val:0x7ffffe; valaddr_reg:x3; val_offset:66078*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66078*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22027:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8886 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1f and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8886; op2val:0x0;
op3val:0xf800000; valaddr_reg:x3; val_offset:66081*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66081*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22028:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8886 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8886; op2val:0x0;
op3val:0xf800001; valaddr_reg:x3; val_offset:66084*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66084*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22029:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8886 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8886; op2val:0x0;
op3val:0xf800003; valaddr_reg:x3; val_offset:66087*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66087*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22030:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8886 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8886; op2val:0x0;
op3val:0xf800007; valaddr_reg:x3; val_offset:66090*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66090*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22031:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8886 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1f and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8886; op2val:0x0;
op3val:0xf80000f; valaddr_reg:x3; val_offset:66093*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66093*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22032:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8886 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1f and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8886; op2val:0x0;
op3val:0xf80001f; valaddr_reg:x3; val_offset:66096*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66096*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22033:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8886 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1f and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8886; op2val:0x0;
op3val:0xf80003f; valaddr_reg:x3; val_offset:66099*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66099*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22034:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8886 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1f and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8886; op2val:0x0;
op3val:0xf80007f; valaddr_reg:x3; val_offset:66102*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66102*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22035:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8886 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1f and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8886; op2val:0x0;
op3val:0xf8000ff; valaddr_reg:x3; val_offset:66105*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66105*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22036:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8886 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1f and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8886; op2val:0x0;
op3val:0xf8001ff; valaddr_reg:x3; val_offset:66108*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66108*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22037:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8886 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1f and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8886; op2val:0x0;
op3val:0xf8003ff; valaddr_reg:x3; val_offset:66111*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66111*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22038:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8886 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1f and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8886; op2val:0x0;
op3val:0xf8007ff; valaddr_reg:x3; val_offset:66114*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66114*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22039:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8886 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1f and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8886; op2val:0x0;
op3val:0xf800fff; valaddr_reg:x3; val_offset:66117*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66117*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22040:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8886 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1f and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8886; op2val:0x0;
op3val:0xf801fff; valaddr_reg:x3; val_offset:66120*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66120*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22041:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8886 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1f and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8886; op2val:0x0;
op3val:0xf803fff; valaddr_reg:x3; val_offset:66123*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66123*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22042:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8886 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1f and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8886; op2val:0x0;
op3val:0xf807fff; valaddr_reg:x3; val_offset:66126*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66126*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22043:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8886 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1f and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8886; op2val:0x0;
op3val:0xf80ffff; valaddr_reg:x3; val_offset:66129*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66129*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22044:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8886 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1f and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8886; op2val:0x0;
op3val:0xf81ffff; valaddr_reg:x3; val_offset:66132*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66132*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22045:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8886 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1f and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8886; op2val:0x0;
op3val:0xf83ffff; valaddr_reg:x3; val_offset:66135*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66135*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22046:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8886 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1f and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8886; op2val:0x0;
op3val:0xf87ffff; valaddr_reg:x3; val_offset:66138*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66138*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22047:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8886 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1f and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8886; op2val:0x0;
op3val:0xf8fffff; valaddr_reg:x3; val_offset:66141*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66141*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22048:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8886 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1f and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8886; op2val:0x0;
op3val:0xf9fffff; valaddr_reg:x3; val_offset:66144*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66144*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22049:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8886 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1f and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8886; op2val:0x0;
op3val:0xfbfffff; valaddr_reg:x3; val_offset:66147*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66147*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22050:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8886 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1f and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8886; op2val:0x0;
op3val:0xfc00000; valaddr_reg:x3; val_offset:66150*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66150*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22051:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8886 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1f and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8886; op2val:0x0;
op3val:0xfe00000; valaddr_reg:x3; val_offset:66153*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66153*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22052:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8886 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1f and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8886; op2val:0x0;
op3val:0xff00000; valaddr_reg:x3; val_offset:66156*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66156*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22053:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8886 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1f and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8886; op2val:0x0;
op3val:0xff80000; valaddr_reg:x3; val_offset:66159*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66159*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22054:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8886 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1f and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8886; op2val:0x0;
op3val:0xffc0000; valaddr_reg:x3; val_offset:66162*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66162*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22055:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8886 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1f and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8886; op2val:0x0;
op3val:0xffe0000; valaddr_reg:x3; val_offset:66165*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66165*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22056:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8886 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1f and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8886; op2val:0x0;
op3val:0xfff0000; valaddr_reg:x3; val_offset:66168*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66168*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22057:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8886 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1f and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8886; op2val:0x0;
op3val:0xfff8000; valaddr_reg:x3; val_offset:66171*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66171*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22058:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8886 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1f and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8886; op2val:0x0;
op3val:0xfffc000; valaddr_reg:x3; val_offset:66174*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66174*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22059:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8886 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1f and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8886; op2val:0x0;
op3val:0xfffe000; valaddr_reg:x3; val_offset:66177*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66177*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22060:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8886 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1f and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8886; op2val:0x0;
op3val:0xffff000; valaddr_reg:x3; val_offset:66180*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66180*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22061:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8886 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1f and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8886; op2val:0x0;
op3val:0xffff800; valaddr_reg:x3; val_offset:66183*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66183*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22062:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8886 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1f and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8886; op2val:0x0;
op3val:0xffffc00; valaddr_reg:x3; val_offset:66186*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66186*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22063:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8886 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1f and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8886; op2val:0x0;
op3val:0xffffe00; valaddr_reg:x3; val_offset:66189*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66189*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22064:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8886 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1f and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8886; op2val:0x0;
op3val:0xfffff00; valaddr_reg:x3; val_offset:66192*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66192*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22065:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8886 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1f and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8886; op2val:0x0;
op3val:0xfffff80; valaddr_reg:x3; val_offset:66195*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66195*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22066:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8886 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1f and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8886; op2val:0x0;
op3val:0xfffffc0; valaddr_reg:x3; val_offset:66198*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66198*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22067:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8886 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1f and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8886; op2val:0x0;
op3val:0xfffffe0; valaddr_reg:x3; val_offset:66201*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66201*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22068:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8886 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1f and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8886; op2val:0x0;
op3val:0xffffff0; valaddr_reg:x3; val_offset:66204*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66204*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22069:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8886 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8886; op2val:0x0;
op3val:0xffffff8; valaddr_reg:x3; val_offset:66207*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66207*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22070:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8886 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8886; op2val:0x0;
op3val:0xffffffc; valaddr_reg:x3; val_offset:66210*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66210*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22071:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8886 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8886; op2val:0x0;
op3val:0xffffffe; valaddr_reg:x3; val_offset:66213*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66213*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22072:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8886 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1f and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8886; op2val:0x0;
op3val:0xfffffff; valaddr_reg:x3; val_offset:66216*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66216*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22073:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8cd3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x49f3a0 and fs3 == 1 and fe3 == 0x60 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8cd3; op2val:0x8049f3a0;
op3val:0xb0000000; valaddr_reg:x3; val_offset:66219*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66219*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22074:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8cd3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x49f3a0 and fs3 == 1 and fe3 == 0x60 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8cd3; op2val:0x8049f3a0;
op3val:0xb0000001; valaddr_reg:x3; val_offset:66222*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66222*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22075:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8cd3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x49f3a0 and fs3 == 1 and fe3 == 0x60 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8cd3; op2val:0x8049f3a0;
op3val:0xb0000003; valaddr_reg:x3; val_offset:66225*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66225*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22076:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8cd3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x49f3a0 and fs3 == 1 and fe3 == 0x60 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8cd3; op2val:0x8049f3a0;
op3val:0xb0000007; valaddr_reg:x3; val_offset:66228*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66228*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22077:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8cd3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x49f3a0 and fs3 == 1 and fe3 == 0x60 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8cd3; op2val:0x8049f3a0;
op3val:0xb000000f; valaddr_reg:x3; val_offset:66231*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66231*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22078:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8cd3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x49f3a0 and fs3 == 1 and fe3 == 0x60 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8cd3; op2val:0x8049f3a0;
op3val:0xb000001f; valaddr_reg:x3; val_offset:66234*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66234*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22079:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8cd3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x49f3a0 and fs3 == 1 and fe3 == 0x60 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8cd3; op2val:0x8049f3a0;
op3val:0xb000003f; valaddr_reg:x3; val_offset:66237*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66237*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22080:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8cd3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x49f3a0 and fs3 == 1 and fe3 == 0x60 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8cd3; op2val:0x8049f3a0;
op3val:0xb000007f; valaddr_reg:x3; val_offset:66240*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66240*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22081:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8cd3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x49f3a0 and fs3 == 1 and fe3 == 0x60 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8cd3; op2val:0x8049f3a0;
op3val:0xb00000ff; valaddr_reg:x3; val_offset:66243*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66243*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22082:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8cd3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x49f3a0 and fs3 == 1 and fe3 == 0x60 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8cd3; op2val:0x8049f3a0;
op3val:0xb00001ff; valaddr_reg:x3; val_offset:66246*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66246*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22083:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8cd3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x49f3a0 and fs3 == 1 and fe3 == 0x60 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8cd3; op2val:0x8049f3a0;
op3val:0xb00003ff; valaddr_reg:x3; val_offset:66249*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66249*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22084:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8cd3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x49f3a0 and fs3 == 1 and fe3 == 0x60 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8cd3; op2val:0x8049f3a0;
op3val:0xb00007ff; valaddr_reg:x3; val_offset:66252*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66252*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22085:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8cd3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x49f3a0 and fs3 == 1 and fe3 == 0x60 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8cd3; op2val:0x8049f3a0;
op3val:0xb0000fff; valaddr_reg:x3; val_offset:66255*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66255*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22086:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8cd3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x49f3a0 and fs3 == 1 and fe3 == 0x60 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8cd3; op2val:0x8049f3a0;
op3val:0xb0001fff; valaddr_reg:x3; val_offset:66258*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66258*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22087:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8cd3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x49f3a0 and fs3 == 1 and fe3 == 0x60 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8cd3; op2val:0x8049f3a0;
op3val:0xb0003fff; valaddr_reg:x3; val_offset:66261*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66261*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22088:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8cd3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x49f3a0 and fs3 == 1 and fe3 == 0x60 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8cd3; op2val:0x8049f3a0;
op3val:0xb0007fff; valaddr_reg:x3; val_offset:66264*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66264*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22089:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8cd3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x49f3a0 and fs3 == 1 and fe3 == 0x60 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8cd3; op2val:0x8049f3a0;
op3val:0xb000ffff; valaddr_reg:x3; val_offset:66267*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66267*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22090:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8cd3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x49f3a0 and fs3 == 1 and fe3 == 0x60 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8cd3; op2val:0x8049f3a0;
op3val:0xb001ffff; valaddr_reg:x3; val_offset:66270*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66270*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22091:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8cd3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x49f3a0 and fs3 == 1 and fe3 == 0x60 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8cd3; op2val:0x8049f3a0;
op3val:0xb003ffff; valaddr_reg:x3; val_offset:66273*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66273*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22092:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8cd3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x49f3a0 and fs3 == 1 and fe3 == 0x60 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8cd3; op2val:0x8049f3a0;
op3val:0xb007ffff; valaddr_reg:x3; val_offset:66276*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66276*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22093:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8cd3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x49f3a0 and fs3 == 1 and fe3 == 0x60 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8cd3; op2val:0x8049f3a0;
op3val:0xb00fffff; valaddr_reg:x3; val_offset:66279*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66279*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22094:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8cd3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x49f3a0 and fs3 == 1 and fe3 == 0x60 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8cd3; op2val:0x8049f3a0;
op3val:0xb01fffff; valaddr_reg:x3; val_offset:66282*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66282*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22095:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8cd3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x49f3a0 and fs3 == 1 and fe3 == 0x60 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8cd3; op2val:0x8049f3a0;
op3val:0xb03fffff; valaddr_reg:x3; val_offset:66285*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66285*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22096:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8cd3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x49f3a0 and fs3 == 1 and fe3 == 0x60 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8cd3; op2val:0x8049f3a0;
op3val:0xb0400000; valaddr_reg:x3; val_offset:66288*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66288*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22097:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8cd3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x49f3a0 and fs3 == 1 and fe3 == 0x60 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8cd3; op2val:0x8049f3a0;
op3val:0xb0600000; valaddr_reg:x3; val_offset:66291*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66291*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22098:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8cd3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x49f3a0 and fs3 == 1 and fe3 == 0x60 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8cd3; op2val:0x8049f3a0;
op3val:0xb0700000; valaddr_reg:x3; val_offset:66294*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66294*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22099:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8cd3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x49f3a0 and fs3 == 1 and fe3 == 0x60 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8cd3; op2val:0x8049f3a0;
op3val:0xb0780000; valaddr_reg:x3; val_offset:66297*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66297*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22100:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8cd3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x49f3a0 and fs3 == 1 and fe3 == 0x60 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8cd3; op2val:0x8049f3a0;
op3val:0xb07c0000; valaddr_reg:x3; val_offset:66300*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66300*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22101:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8cd3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x49f3a0 and fs3 == 1 and fe3 == 0x60 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8cd3; op2val:0x8049f3a0;
op3val:0xb07e0000; valaddr_reg:x3; val_offset:66303*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66303*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22102:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8cd3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x49f3a0 and fs3 == 1 and fe3 == 0x60 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8cd3; op2val:0x8049f3a0;
op3val:0xb07f0000; valaddr_reg:x3; val_offset:66306*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66306*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22103:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8cd3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x49f3a0 and fs3 == 1 and fe3 == 0x60 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8cd3; op2val:0x8049f3a0;
op3val:0xb07f8000; valaddr_reg:x3; val_offset:66309*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66309*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22104:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8cd3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x49f3a0 and fs3 == 1 and fe3 == 0x60 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8cd3; op2val:0x8049f3a0;
op3val:0xb07fc000; valaddr_reg:x3; val_offset:66312*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66312*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22105:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8cd3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x49f3a0 and fs3 == 1 and fe3 == 0x60 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8cd3; op2val:0x8049f3a0;
op3val:0xb07fe000; valaddr_reg:x3; val_offset:66315*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66315*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22106:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8cd3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x49f3a0 and fs3 == 1 and fe3 == 0x60 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8cd3; op2val:0x8049f3a0;
op3val:0xb07ff000; valaddr_reg:x3; val_offset:66318*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66318*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22107:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8cd3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x49f3a0 and fs3 == 1 and fe3 == 0x60 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8cd3; op2val:0x8049f3a0;
op3val:0xb07ff800; valaddr_reg:x3; val_offset:66321*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66321*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22108:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8cd3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x49f3a0 and fs3 == 1 and fe3 == 0x60 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8cd3; op2val:0x8049f3a0;
op3val:0xb07ffc00; valaddr_reg:x3; val_offset:66324*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66324*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22109:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8cd3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x49f3a0 and fs3 == 1 and fe3 == 0x60 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8cd3; op2val:0x8049f3a0;
op3val:0xb07ffe00; valaddr_reg:x3; val_offset:66327*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66327*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22110:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8cd3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x49f3a0 and fs3 == 1 and fe3 == 0x60 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8cd3; op2val:0x8049f3a0;
op3val:0xb07fff00; valaddr_reg:x3; val_offset:66330*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66330*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22111:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8cd3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x49f3a0 and fs3 == 1 and fe3 == 0x60 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8cd3; op2val:0x8049f3a0;
op3val:0xb07fff80; valaddr_reg:x3; val_offset:66333*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66333*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22112:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8cd3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x49f3a0 and fs3 == 1 and fe3 == 0x60 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8cd3; op2val:0x8049f3a0;
op3val:0xb07fffc0; valaddr_reg:x3; val_offset:66336*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66336*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22113:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8cd3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x49f3a0 and fs3 == 1 and fe3 == 0x60 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8cd3; op2val:0x8049f3a0;
op3val:0xb07fffe0; valaddr_reg:x3; val_offset:66339*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66339*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22114:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8cd3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x49f3a0 and fs3 == 1 and fe3 == 0x60 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8cd3; op2val:0x8049f3a0;
op3val:0xb07ffff0; valaddr_reg:x3; val_offset:66342*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66342*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22115:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8cd3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x49f3a0 and fs3 == 1 and fe3 == 0x60 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8cd3; op2val:0x8049f3a0;
op3val:0xb07ffff8; valaddr_reg:x3; val_offset:66345*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66345*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22116:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8cd3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x49f3a0 and fs3 == 1 and fe3 == 0x60 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8cd3; op2val:0x8049f3a0;
op3val:0xb07ffffc; valaddr_reg:x3; val_offset:66348*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66348*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22117:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8cd3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x49f3a0 and fs3 == 1 and fe3 == 0x60 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8cd3; op2val:0x8049f3a0;
op3val:0xb07ffffe; valaddr_reg:x3; val_offset:66351*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66351*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22118:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8cd3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x49f3a0 and fs3 == 1 and fe3 == 0x60 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8cd3; op2val:0x8049f3a0;
op3val:0xb07fffff; valaddr_reg:x3; val_offset:66354*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66354*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22119:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8cd3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x49f3a0 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8cd3; op2val:0x8049f3a0;
op3val:0xbf800001; valaddr_reg:x3; val_offset:66357*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66357*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22120:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8cd3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x49f3a0 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8cd3; op2val:0x8049f3a0;
op3val:0xbf800003; valaddr_reg:x3; val_offset:66360*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66360*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22121:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8cd3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x49f3a0 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8cd3; op2val:0x8049f3a0;
op3val:0xbf800007; valaddr_reg:x3; val_offset:66363*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66363*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22122:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8cd3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x49f3a0 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8cd3; op2val:0x8049f3a0;
op3val:0xbf999999; valaddr_reg:x3; val_offset:66366*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66366*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22123:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8cd3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x49f3a0 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8cd3; op2val:0x8049f3a0;
op3val:0xbfa49249; valaddr_reg:x3; val_offset:66369*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66369*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22124:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8cd3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x49f3a0 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8cd3; op2val:0x8049f3a0;
op3val:0xbfb33333; valaddr_reg:x3; val_offset:66372*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66372*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22125:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8cd3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x49f3a0 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8cd3; op2val:0x8049f3a0;
op3val:0xbfb6db6d; valaddr_reg:x3; val_offset:66375*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66375*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22126:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8cd3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x49f3a0 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8cd3; op2val:0x8049f3a0;
op3val:0xbfbbbbbb; valaddr_reg:x3; val_offset:66378*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66378*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22127:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8cd3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x49f3a0 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8cd3; op2val:0x8049f3a0;
op3val:0xbfc44444; valaddr_reg:x3; val_offset:66381*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66381*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22128:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8cd3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x49f3a0 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8cd3; op2val:0x8049f3a0;
op3val:0xbfcccccc; valaddr_reg:x3; val_offset:66384*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66384*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22129:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8cd3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x49f3a0 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8cd3; op2val:0x8049f3a0;
op3val:0xbfdb6db6; valaddr_reg:x3; val_offset:66387*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66387*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22130:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8cd3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x49f3a0 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8cd3; op2val:0x8049f3a0;
op3val:0xbfe66666; valaddr_reg:x3; val_offset:66390*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66390*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22131:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8cd3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x49f3a0 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8cd3; op2val:0x8049f3a0;
op3val:0xbfedb6db; valaddr_reg:x3; val_offset:66393*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66393*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22132:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8cd3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x49f3a0 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8cd3; op2val:0x8049f3a0;
op3val:0xbffffff8; valaddr_reg:x3; val_offset:66396*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66396*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22133:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8cd3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x49f3a0 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8cd3; op2val:0x8049f3a0;
op3val:0xbffffffc; valaddr_reg:x3; val_offset:66399*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66399*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22134:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8cd3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x49f3a0 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd8cd3; op2val:0x8049f3a0;
op3val:0xbffffffe; valaddr_reg:x3; val_offset:66402*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66402*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22135:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5e5d86 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ede5d86; op2val:0x80000000;
op3val:0x80000001; valaddr_reg:x3; val_offset:66405*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66405*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22136:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5e5d86 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ede5d86; op2val:0x80000000;
op3val:0x80000003; valaddr_reg:x3; val_offset:66408*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66408*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22137:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5e5d86 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ede5d86; op2val:0x80000000;
op3val:0x80000007; valaddr_reg:x3; val_offset:66411*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66411*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22138:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5e5d86 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ede5d86; op2val:0x80000000;
op3val:0x80199999; valaddr_reg:x3; val_offset:66414*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66414*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22139:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5e5d86 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ede5d86; op2val:0x80000000;
op3val:0x80249249; valaddr_reg:x3; val_offset:66417*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66417*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22140:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5e5d86 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ede5d86; op2val:0x80000000;
op3val:0x80333333; valaddr_reg:x3; val_offset:66420*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66420*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22141:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5e5d86 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ede5d86; op2val:0x80000000;
op3val:0x8036db6d; valaddr_reg:x3; val_offset:66423*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66423*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22142:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5e5d86 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ede5d86; op2val:0x80000000;
op3val:0x803bbbbb; valaddr_reg:x3; val_offset:66426*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66426*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22143:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5e5d86 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ede5d86; op2val:0x80000000;
op3val:0x80444444; valaddr_reg:x3; val_offset:66429*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66429*0 + 3*172*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(2128447622,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3355443,32,FLEN)
NAN_BOXED(2128447622,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3595117,32,FLEN)
NAN_BOXED(2128447622,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3914683,32,FLEN)
NAN_BOXED(2128447622,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(4473924,32,FLEN)
NAN_BOXED(2128447622,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5033164,32,FLEN)
NAN_BOXED(2128447622,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5991862,32,FLEN)
NAN_BOXED(2128447622,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(6710886,32,FLEN)
NAN_BOXED(2128447622,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7190235,32,FLEN)
NAN_BOXED(2128447622,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388600,32,FLEN)
NAN_BOXED(2128447622,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388604,32,FLEN)
NAN_BOXED(2128447622,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388606,32,FLEN)
NAN_BOXED(2128447622,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(260046848,32,FLEN)
NAN_BOXED(2128447622,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(260046849,32,FLEN)
NAN_BOXED(2128447622,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(260046851,32,FLEN)
NAN_BOXED(2128447622,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(260046855,32,FLEN)
NAN_BOXED(2128447622,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(260046863,32,FLEN)
NAN_BOXED(2128447622,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(260046879,32,FLEN)
NAN_BOXED(2128447622,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(260046911,32,FLEN)
NAN_BOXED(2128447622,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(260046975,32,FLEN)
NAN_BOXED(2128447622,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(260047103,32,FLEN)
NAN_BOXED(2128447622,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(260047359,32,FLEN)
NAN_BOXED(2128447622,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(260047871,32,FLEN)
NAN_BOXED(2128447622,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(260048895,32,FLEN)
NAN_BOXED(2128447622,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(260050943,32,FLEN)
NAN_BOXED(2128447622,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(260055039,32,FLEN)
NAN_BOXED(2128447622,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(260063231,32,FLEN)
NAN_BOXED(2128447622,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(260079615,32,FLEN)
NAN_BOXED(2128447622,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(260112383,32,FLEN)
NAN_BOXED(2128447622,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(260177919,32,FLEN)
NAN_BOXED(2128447622,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(260308991,32,FLEN)
NAN_BOXED(2128447622,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(260571135,32,FLEN)
NAN_BOXED(2128447622,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(261095423,32,FLEN)
NAN_BOXED(2128447622,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(262143999,32,FLEN)
NAN_BOXED(2128447622,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(264241151,32,FLEN)
NAN_BOXED(2128447622,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(264241152,32,FLEN)
NAN_BOXED(2128447622,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(266338304,32,FLEN)
NAN_BOXED(2128447622,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(267386880,32,FLEN)
NAN_BOXED(2128447622,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(267911168,32,FLEN)
NAN_BOXED(2128447622,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(268173312,32,FLEN)
NAN_BOXED(2128447622,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(268304384,32,FLEN)
NAN_BOXED(2128447622,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(268369920,32,FLEN)
NAN_BOXED(2128447622,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(268402688,32,FLEN)
NAN_BOXED(2128447622,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(268419072,32,FLEN)
NAN_BOXED(2128447622,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(268427264,32,FLEN)
NAN_BOXED(2128447622,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(268431360,32,FLEN)
NAN_BOXED(2128447622,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(268433408,32,FLEN)
NAN_BOXED(2128447622,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(268434432,32,FLEN)
NAN_BOXED(2128447622,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(268434944,32,FLEN)
NAN_BOXED(2128447622,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(268435200,32,FLEN)
NAN_BOXED(2128447622,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(268435328,32,FLEN)
NAN_BOXED(2128447622,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(268435392,32,FLEN)
NAN_BOXED(2128447622,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(268435424,32,FLEN)
NAN_BOXED(2128447622,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(268435440,32,FLEN)
NAN_BOXED(2128447622,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(268435448,32,FLEN)
NAN_BOXED(2128447622,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(268435452,32,FLEN)
NAN_BOXED(2128447622,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(268435454,32,FLEN)
NAN_BOXED(2128447622,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(268435455,32,FLEN)
NAN_BOXED(2128448723,32,FLEN)
NAN_BOXED(2152330144,32,FLEN)
NAN_BOXED(2952790016,32,FLEN)
NAN_BOXED(2128448723,32,FLEN)
NAN_BOXED(2152330144,32,FLEN)
NAN_BOXED(2952790017,32,FLEN)
NAN_BOXED(2128448723,32,FLEN)
NAN_BOXED(2152330144,32,FLEN)
NAN_BOXED(2952790019,32,FLEN)
NAN_BOXED(2128448723,32,FLEN)
NAN_BOXED(2152330144,32,FLEN)
NAN_BOXED(2952790023,32,FLEN)
NAN_BOXED(2128448723,32,FLEN)
NAN_BOXED(2152330144,32,FLEN)
NAN_BOXED(2952790031,32,FLEN)
NAN_BOXED(2128448723,32,FLEN)
NAN_BOXED(2152330144,32,FLEN)
NAN_BOXED(2952790047,32,FLEN)
NAN_BOXED(2128448723,32,FLEN)
NAN_BOXED(2152330144,32,FLEN)
NAN_BOXED(2952790079,32,FLEN)
NAN_BOXED(2128448723,32,FLEN)
NAN_BOXED(2152330144,32,FLEN)
NAN_BOXED(2952790143,32,FLEN)
NAN_BOXED(2128448723,32,FLEN)
NAN_BOXED(2152330144,32,FLEN)
NAN_BOXED(2952790271,32,FLEN)
NAN_BOXED(2128448723,32,FLEN)
NAN_BOXED(2152330144,32,FLEN)
NAN_BOXED(2952790527,32,FLEN)
NAN_BOXED(2128448723,32,FLEN)
NAN_BOXED(2152330144,32,FLEN)
NAN_BOXED(2952791039,32,FLEN)
NAN_BOXED(2128448723,32,FLEN)
NAN_BOXED(2152330144,32,FLEN)
NAN_BOXED(2952792063,32,FLEN)
NAN_BOXED(2128448723,32,FLEN)
NAN_BOXED(2152330144,32,FLEN)
NAN_BOXED(2952794111,32,FLEN)
NAN_BOXED(2128448723,32,FLEN)
NAN_BOXED(2152330144,32,FLEN)
NAN_BOXED(2952798207,32,FLEN)
NAN_BOXED(2128448723,32,FLEN)
NAN_BOXED(2152330144,32,FLEN)
NAN_BOXED(2952806399,32,FLEN)
NAN_BOXED(2128448723,32,FLEN)
NAN_BOXED(2152330144,32,FLEN)
NAN_BOXED(2952822783,32,FLEN)
NAN_BOXED(2128448723,32,FLEN)
NAN_BOXED(2152330144,32,FLEN)
NAN_BOXED(2952855551,32,FLEN)
NAN_BOXED(2128448723,32,FLEN)
NAN_BOXED(2152330144,32,FLEN)
NAN_BOXED(2952921087,32,FLEN)
NAN_BOXED(2128448723,32,FLEN)
NAN_BOXED(2152330144,32,FLEN)
NAN_BOXED(2953052159,32,FLEN)
NAN_BOXED(2128448723,32,FLEN)
NAN_BOXED(2152330144,32,FLEN)
NAN_BOXED(2953314303,32,FLEN)
NAN_BOXED(2128448723,32,FLEN)
NAN_BOXED(2152330144,32,FLEN)
NAN_BOXED(2953838591,32,FLEN)
NAN_BOXED(2128448723,32,FLEN)
NAN_BOXED(2152330144,32,FLEN)
NAN_BOXED(2954887167,32,FLEN)
NAN_BOXED(2128448723,32,FLEN)
NAN_BOXED(2152330144,32,FLEN)
NAN_BOXED(2956984319,32,FLEN)
NAN_BOXED(2128448723,32,FLEN)
NAN_BOXED(2152330144,32,FLEN)
NAN_BOXED(2956984320,32,FLEN)
NAN_BOXED(2128448723,32,FLEN)
NAN_BOXED(2152330144,32,FLEN)
NAN_BOXED(2959081472,32,FLEN)
NAN_BOXED(2128448723,32,FLEN)
NAN_BOXED(2152330144,32,FLEN)
NAN_BOXED(2960130048,32,FLEN)
NAN_BOXED(2128448723,32,FLEN)
NAN_BOXED(2152330144,32,FLEN)
NAN_BOXED(2960654336,32,FLEN)
NAN_BOXED(2128448723,32,FLEN)
NAN_BOXED(2152330144,32,FLEN)
NAN_BOXED(2960916480,32,FLEN)
NAN_BOXED(2128448723,32,FLEN)
NAN_BOXED(2152330144,32,FLEN)
NAN_BOXED(2961047552,32,FLEN)
NAN_BOXED(2128448723,32,FLEN)
NAN_BOXED(2152330144,32,FLEN)
NAN_BOXED(2961113088,32,FLEN)
NAN_BOXED(2128448723,32,FLEN)
NAN_BOXED(2152330144,32,FLEN)
NAN_BOXED(2961145856,32,FLEN)
NAN_BOXED(2128448723,32,FLEN)
NAN_BOXED(2152330144,32,FLEN)
NAN_BOXED(2961162240,32,FLEN)
NAN_BOXED(2128448723,32,FLEN)
NAN_BOXED(2152330144,32,FLEN)
NAN_BOXED(2961170432,32,FLEN)
NAN_BOXED(2128448723,32,FLEN)
NAN_BOXED(2152330144,32,FLEN)
NAN_BOXED(2961174528,32,FLEN)
NAN_BOXED(2128448723,32,FLEN)
NAN_BOXED(2152330144,32,FLEN)
NAN_BOXED(2961176576,32,FLEN)
NAN_BOXED(2128448723,32,FLEN)
NAN_BOXED(2152330144,32,FLEN)
NAN_BOXED(2961177600,32,FLEN)
NAN_BOXED(2128448723,32,FLEN)
NAN_BOXED(2152330144,32,FLEN)
NAN_BOXED(2961178112,32,FLEN)
NAN_BOXED(2128448723,32,FLEN)
NAN_BOXED(2152330144,32,FLEN)
NAN_BOXED(2961178368,32,FLEN)
NAN_BOXED(2128448723,32,FLEN)
NAN_BOXED(2152330144,32,FLEN)
NAN_BOXED(2961178496,32,FLEN)
NAN_BOXED(2128448723,32,FLEN)
NAN_BOXED(2152330144,32,FLEN)
NAN_BOXED(2961178560,32,FLEN)
NAN_BOXED(2128448723,32,FLEN)
NAN_BOXED(2152330144,32,FLEN)
NAN_BOXED(2961178592,32,FLEN)
NAN_BOXED(2128448723,32,FLEN)
NAN_BOXED(2152330144,32,FLEN)
NAN_BOXED(2961178608,32,FLEN)
NAN_BOXED(2128448723,32,FLEN)
NAN_BOXED(2152330144,32,FLEN)
NAN_BOXED(2961178616,32,FLEN)
NAN_BOXED(2128448723,32,FLEN)
NAN_BOXED(2152330144,32,FLEN)
NAN_BOXED(2961178620,32,FLEN)
NAN_BOXED(2128448723,32,FLEN)
NAN_BOXED(2152330144,32,FLEN)
NAN_BOXED(2961178622,32,FLEN)
NAN_BOXED(2128448723,32,FLEN)
NAN_BOXED(2152330144,32,FLEN)
NAN_BOXED(2961178623,32,FLEN)
NAN_BOXED(2128448723,32,FLEN)
NAN_BOXED(2152330144,32,FLEN)
NAN_BOXED(3212836865,32,FLEN)
NAN_BOXED(2128448723,32,FLEN)
NAN_BOXED(2152330144,32,FLEN)
NAN_BOXED(3212836867,32,FLEN)
NAN_BOXED(2128448723,32,FLEN)
NAN_BOXED(2152330144,32,FLEN)
NAN_BOXED(3212836871,32,FLEN)
NAN_BOXED(2128448723,32,FLEN)
NAN_BOXED(2152330144,32,FLEN)
NAN_BOXED(3214514585,32,FLEN)
NAN_BOXED(2128448723,32,FLEN)
NAN_BOXED(2152330144,32,FLEN)
NAN_BOXED(3215233609,32,FLEN)
NAN_BOXED(2128448723,32,FLEN)
NAN_BOXED(2152330144,32,FLEN)
NAN_BOXED(3216192307,32,FLEN)
NAN_BOXED(2128448723,32,FLEN)
NAN_BOXED(2152330144,32,FLEN)
NAN_BOXED(3216431981,32,FLEN)
NAN_BOXED(2128448723,32,FLEN)
NAN_BOXED(2152330144,32,FLEN)
NAN_BOXED(3216751547,32,FLEN)
NAN_BOXED(2128448723,32,FLEN)
NAN_BOXED(2152330144,32,FLEN)
NAN_BOXED(3217310788,32,FLEN)
NAN_BOXED(2128448723,32,FLEN)
NAN_BOXED(2152330144,32,FLEN)
NAN_BOXED(3217870028,32,FLEN)
NAN_BOXED(2128448723,32,FLEN)
NAN_BOXED(2152330144,32,FLEN)
NAN_BOXED(3218828726,32,FLEN)
NAN_BOXED(2128448723,32,FLEN)
NAN_BOXED(2152330144,32,FLEN)
NAN_BOXED(3219547750,32,FLEN)
NAN_BOXED(2128448723,32,FLEN)
NAN_BOXED(2152330144,32,FLEN)
NAN_BOXED(3220027099,32,FLEN)
NAN_BOXED(2128448723,32,FLEN)
NAN_BOXED(2152330144,32,FLEN)
NAN_BOXED(3221225464,32,FLEN)
NAN_BOXED(2128448723,32,FLEN)
NAN_BOXED(2152330144,32,FLEN)
NAN_BOXED(3221225468,32,FLEN)
NAN_BOXED(2128448723,32,FLEN)
NAN_BOXED(2152330144,32,FLEN)
NAN_BOXED(3221225470,32,FLEN)
NAN_BOXED(2128502150,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2128502150,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483651,32,FLEN)
NAN_BOXED(2128502150,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483655,32,FLEN)
NAN_BOXED(2128502150,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149161369,32,FLEN)
NAN_BOXED(2128502150,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149880393,32,FLEN)
NAN_BOXED(2128502150,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2150839091,32,FLEN)
NAN_BOXED(2128502150,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151078765,32,FLEN)
NAN_BOXED(2128502150,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151398331,32,FLEN)
NAN_BOXED(2128502150,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151957572,32,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
