
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 14:18:08 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32F/fnmsub.s.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmsub.s instruction of the RISC-V RV32F_Zicsr,RV32FD_Zicsr,RV64F_Zicsr,RV64FD_Zicsr extension for the fnmsub_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF_Zicsr,RV32IFD_Zicsr,RV64IF_Zicsr,RV64IFD_Zicsr,RV32EF_Zicsr,RV32EFD_Zicsr,RV64EF_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fnmsub_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*F.*);def TEST_CASE_1=True;",fnmsub_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_22272:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5eb4e5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x499150 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edeb4e5; op2val:0x499150;
op3val:0x33801fff; valaddr_reg:x3; val_offset:66816*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66816*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22273:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5eb4e5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x499150 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edeb4e5; op2val:0x499150;
op3val:0x33803fff; valaddr_reg:x3; val_offset:66819*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66819*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22274:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5eb4e5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x499150 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edeb4e5; op2val:0x499150;
op3val:0x33807fff; valaddr_reg:x3; val_offset:66822*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66822*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22275:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5eb4e5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x499150 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edeb4e5; op2val:0x499150;
op3val:0x3380ffff; valaddr_reg:x3; val_offset:66825*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66825*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22276:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5eb4e5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x499150 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edeb4e5; op2val:0x499150;
op3val:0x3381ffff; valaddr_reg:x3; val_offset:66828*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66828*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22277:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5eb4e5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x499150 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edeb4e5; op2val:0x499150;
op3val:0x3383ffff; valaddr_reg:x3; val_offset:66831*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66831*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22278:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5eb4e5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x499150 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edeb4e5; op2val:0x499150;
op3val:0x3387ffff; valaddr_reg:x3; val_offset:66834*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66834*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22279:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5eb4e5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x499150 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edeb4e5; op2val:0x499150;
op3val:0x338fffff; valaddr_reg:x3; val_offset:66837*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66837*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22280:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5eb4e5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x499150 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edeb4e5; op2val:0x499150;
op3val:0x339fffff; valaddr_reg:x3; val_offset:66840*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66840*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22281:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5eb4e5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x499150 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edeb4e5; op2val:0x499150;
op3val:0x33bfffff; valaddr_reg:x3; val_offset:66843*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66843*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22282:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5eb4e5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x499150 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edeb4e5; op2val:0x499150;
op3val:0x33c00000; valaddr_reg:x3; val_offset:66846*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66846*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22283:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5eb4e5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x499150 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edeb4e5; op2val:0x499150;
op3val:0x33e00000; valaddr_reg:x3; val_offset:66849*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66849*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22284:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5eb4e5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x499150 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edeb4e5; op2val:0x499150;
op3val:0x33f00000; valaddr_reg:x3; val_offset:66852*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66852*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22285:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5eb4e5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x499150 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edeb4e5; op2val:0x499150;
op3val:0x33f80000; valaddr_reg:x3; val_offset:66855*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66855*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22286:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5eb4e5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x499150 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edeb4e5; op2val:0x499150;
op3val:0x33fc0000; valaddr_reg:x3; val_offset:66858*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66858*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22287:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5eb4e5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x499150 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edeb4e5; op2val:0x499150;
op3val:0x33fe0000; valaddr_reg:x3; val_offset:66861*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66861*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22288:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5eb4e5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x499150 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edeb4e5; op2val:0x499150;
op3val:0x33ff0000; valaddr_reg:x3; val_offset:66864*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66864*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22289:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5eb4e5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x499150 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edeb4e5; op2val:0x499150;
op3val:0x33ff8000; valaddr_reg:x3; val_offset:66867*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66867*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22290:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5eb4e5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x499150 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edeb4e5; op2val:0x499150;
op3val:0x33ffc000; valaddr_reg:x3; val_offset:66870*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66870*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22291:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5eb4e5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x499150 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edeb4e5; op2val:0x499150;
op3val:0x33ffe000; valaddr_reg:x3; val_offset:66873*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66873*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22292:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5eb4e5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x499150 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edeb4e5; op2val:0x499150;
op3val:0x33fff000; valaddr_reg:x3; val_offset:66876*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66876*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22293:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5eb4e5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x499150 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edeb4e5; op2val:0x499150;
op3val:0x33fff800; valaddr_reg:x3; val_offset:66879*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66879*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22294:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5eb4e5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x499150 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edeb4e5; op2val:0x499150;
op3val:0x33fffc00; valaddr_reg:x3; val_offset:66882*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66882*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22295:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5eb4e5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x499150 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edeb4e5; op2val:0x499150;
op3val:0x33fffe00; valaddr_reg:x3; val_offset:66885*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66885*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22296:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5eb4e5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x499150 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edeb4e5; op2val:0x499150;
op3val:0x33ffff00; valaddr_reg:x3; val_offset:66888*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66888*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22297:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5eb4e5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x499150 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edeb4e5; op2val:0x499150;
op3val:0x33ffff80; valaddr_reg:x3; val_offset:66891*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66891*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22298:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5eb4e5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x499150 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edeb4e5; op2val:0x499150;
op3val:0x33ffffc0; valaddr_reg:x3; val_offset:66894*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66894*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22299:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5eb4e5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x499150 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edeb4e5; op2val:0x499150;
op3val:0x33ffffe0; valaddr_reg:x3; val_offset:66897*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66897*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22300:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5eb4e5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x499150 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edeb4e5; op2val:0x499150;
op3val:0x33fffff0; valaddr_reg:x3; val_offset:66900*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66900*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22301:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5eb4e5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x499150 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edeb4e5; op2val:0x499150;
op3val:0x33fffff8; valaddr_reg:x3; val_offset:66903*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66903*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22302:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5eb4e5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x499150 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edeb4e5; op2val:0x499150;
op3val:0x33fffffc; valaddr_reg:x3; val_offset:66906*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66906*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22303:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5eb4e5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x499150 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edeb4e5; op2val:0x499150;
op3val:0x33fffffe; valaddr_reg:x3; val_offset:66909*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66909*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22304:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5eb4e5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x499150 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edeb4e5; op2val:0x499150;
op3val:0x33ffffff; valaddr_reg:x3; val_offset:66912*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66912*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22305:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5eb4e5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x499150 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edeb4e5; op2val:0x499150;
op3val:0x3f800001; valaddr_reg:x3; val_offset:66915*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66915*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22306:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5eb4e5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x499150 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edeb4e5; op2val:0x499150;
op3val:0x3f800003; valaddr_reg:x3; val_offset:66918*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66918*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22307:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5eb4e5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x499150 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edeb4e5; op2val:0x499150;
op3val:0x3f800007; valaddr_reg:x3; val_offset:66921*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66921*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22308:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5eb4e5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x499150 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edeb4e5; op2val:0x499150;
op3val:0x3f999999; valaddr_reg:x3; val_offset:66924*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66924*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22309:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5eb4e5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x499150 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edeb4e5; op2val:0x499150;
op3val:0x3fa49249; valaddr_reg:x3; val_offset:66927*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66927*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22310:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5eb4e5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x499150 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edeb4e5; op2val:0x499150;
op3val:0x3fb33333; valaddr_reg:x3; val_offset:66930*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66930*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22311:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5eb4e5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x499150 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edeb4e5; op2val:0x499150;
op3val:0x3fb6db6d; valaddr_reg:x3; val_offset:66933*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66933*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22312:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5eb4e5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x499150 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edeb4e5; op2val:0x499150;
op3val:0x3fbbbbbb; valaddr_reg:x3; val_offset:66936*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66936*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22313:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5eb4e5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x499150 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edeb4e5; op2val:0x499150;
op3val:0x3fc44444; valaddr_reg:x3; val_offset:66939*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66939*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22314:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5eb4e5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x499150 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edeb4e5; op2val:0x499150;
op3val:0x3fcccccc; valaddr_reg:x3; val_offset:66942*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66942*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22315:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5eb4e5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x499150 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edeb4e5; op2val:0x499150;
op3val:0x3fdb6db6; valaddr_reg:x3; val_offset:66945*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66945*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22316:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5eb4e5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x499150 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edeb4e5; op2val:0x499150;
op3val:0x3fe66666; valaddr_reg:x3; val_offset:66948*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66948*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22317:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5eb4e5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x499150 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edeb4e5; op2val:0x499150;
op3val:0x3fedb6db; valaddr_reg:x3; val_offset:66951*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66951*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22318:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5eb4e5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x499150 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edeb4e5; op2val:0x499150;
op3val:0x3ffffff8; valaddr_reg:x3; val_offset:66954*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66954*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22319:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5eb4e5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x499150 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edeb4e5; op2val:0x499150;
op3val:0x3ffffffc; valaddr_reg:x3; val_offset:66957*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66957*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22320:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5eb4e5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x499150 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edeb4e5; op2val:0x499150;
op3val:0x3ffffffe; valaddr_reg:x3; val_offset:66960*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66960*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22321:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5f0c14 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edf0c14; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:66963*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66963*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22322:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5f0c14 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edf0c14; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:66966*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66966*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22323:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5f0c14 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edf0c14; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:66969*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66969*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22324:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5f0c14 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edf0c14; op2val:0x0;
op3val:0x199999; valaddr_reg:x3; val_offset:66972*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66972*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22325:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5f0c14 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edf0c14; op2val:0x0;
op3val:0x249249; valaddr_reg:x3; val_offset:66975*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66975*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22326:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5f0c14 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edf0c14; op2val:0x0;
op3val:0x333333; valaddr_reg:x3; val_offset:66978*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66978*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22327:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5f0c14 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edf0c14; op2val:0x0;
op3val:0x36db6d; valaddr_reg:x3; val_offset:66981*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66981*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22328:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5f0c14 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edf0c14; op2val:0x0;
op3val:0x3bbbbb; valaddr_reg:x3; val_offset:66984*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66984*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22329:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5f0c14 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edf0c14; op2val:0x0;
op3val:0x444444; valaddr_reg:x3; val_offset:66987*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66987*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22330:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5f0c14 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edf0c14; op2val:0x0;
op3val:0x4ccccc; valaddr_reg:x3; val_offset:66990*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66990*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22331:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5f0c14 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edf0c14; op2val:0x0;
op3val:0x5b6db6; valaddr_reg:x3; val_offset:66993*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66993*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22332:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5f0c14 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edf0c14; op2val:0x0;
op3val:0x666666; valaddr_reg:x3; val_offset:66996*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66996*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22333:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5f0c14 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edf0c14; op2val:0x0;
op3val:0x6db6db; valaddr_reg:x3; val_offset:66999*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66999*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22334:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5f0c14 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edf0c14; op2val:0x0;
op3val:0x7ffff8; valaddr_reg:x3; val_offset:67002*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67002*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22335:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5f0c14 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edf0c14; op2val:0x0;
op3val:0x7ffffc; valaddr_reg:x3; val_offset:67005*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67005*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22336:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5f0c14 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edf0c14; op2val:0x0;
op3val:0x7ffffe; valaddr_reg:x3; val_offset:67008*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67008*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22337:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5f0c14 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edf0c14; op2val:0x0;
op3val:0x1000000; valaddr_reg:x3; val_offset:67011*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67011*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22338:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5f0c14 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edf0c14; op2val:0x0;
op3val:0x1000001; valaddr_reg:x3; val_offset:67014*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67014*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22339:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5f0c14 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edf0c14; op2val:0x0;
op3val:0x1000003; valaddr_reg:x3; val_offset:67017*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67017*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22340:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5f0c14 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edf0c14; op2val:0x0;
op3val:0x1000007; valaddr_reg:x3; val_offset:67020*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67020*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22341:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5f0c14 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edf0c14; op2val:0x0;
op3val:0x100000f; valaddr_reg:x3; val_offset:67023*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67023*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22342:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5f0c14 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edf0c14; op2val:0x0;
op3val:0x100001f; valaddr_reg:x3; val_offset:67026*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67026*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22343:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5f0c14 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edf0c14; op2val:0x0;
op3val:0x100003f; valaddr_reg:x3; val_offset:67029*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67029*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22344:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5f0c14 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edf0c14; op2val:0x0;
op3val:0x100007f; valaddr_reg:x3; val_offset:67032*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67032*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22345:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5f0c14 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edf0c14; op2val:0x0;
op3val:0x10000ff; valaddr_reg:x3; val_offset:67035*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67035*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22346:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5f0c14 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edf0c14; op2val:0x0;
op3val:0x10001ff; valaddr_reg:x3; val_offset:67038*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67038*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22347:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5f0c14 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edf0c14; op2val:0x0;
op3val:0x10003ff; valaddr_reg:x3; val_offset:67041*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67041*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22348:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5f0c14 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edf0c14; op2val:0x0;
op3val:0x10007ff; valaddr_reg:x3; val_offset:67044*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67044*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22349:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5f0c14 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edf0c14; op2val:0x0;
op3val:0x1000fff; valaddr_reg:x3; val_offset:67047*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67047*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22350:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5f0c14 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edf0c14; op2val:0x0;
op3val:0x1001fff; valaddr_reg:x3; val_offset:67050*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67050*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22351:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5f0c14 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edf0c14; op2val:0x0;
op3val:0x1003fff; valaddr_reg:x3; val_offset:67053*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67053*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22352:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5f0c14 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edf0c14; op2val:0x0;
op3val:0x1007fff; valaddr_reg:x3; val_offset:67056*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67056*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22353:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5f0c14 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edf0c14; op2val:0x0;
op3val:0x100ffff; valaddr_reg:x3; val_offset:67059*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67059*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22354:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5f0c14 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edf0c14; op2val:0x0;
op3val:0x101ffff; valaddr_reg:x3; val_offset:67062*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67062*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22355:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5f0c14 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edf0c14; op2val:0x0;
op3val:0x103ffff; valaddr_reg:x3; val_offset:67065*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67065*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22356:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5f0c14 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edf0c14; op2val:0x0;
op3val:0x107ffff; valaddr_reg:x3; val_offset:67068*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67068*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22357:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5f0c14 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edf0c14; op2val:0x0;
op3val:0x10fffff; valaddr_reg:x3; val_offset:67071*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67071*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22358:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5f0c14 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edf0c14; op2val:0x0;
op3val:0x11fffff; valaddr_reg:x3; val_offset:67074*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67074*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22359:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5f0c14 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edf0c14; op2val:0x0;
op3val:0x13fffff; valaddr_reg:x3; val_offset:67077*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67077*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22360:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5f0c14 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edf0c14; op2val:0x0;
op3val:0x1400000; valaddr_reg:x3; val_offset:67080*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67080*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22361:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5f0c14 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edf0c14; op2val:0x0;
op3val:0x1600000; valaddr_reg:x3; val_offset:67083*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67083*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22362:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5f0c14 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edf0c14; op2val:0x0;
op3val:0x1700000; valaddr_reg:x3; val_offset:67086*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67086*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22363:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5f0c14 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edf0c14; op2val:0x0;
op3val:0x1780000; valaddr_reg:x3; val_offset:67089*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67089*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22364:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5f0c14 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edf0c14; op2val:0x0;
op3val:0x17c0000; valaddr_reg:x3; val_offset:67092*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67092*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22365:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5f0c14 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edf0c14; op2val:0x0;
op3val:0x17e0000; valaddr_reg:x3; val_offset:67095*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67095*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22366:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5f0c14 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edf0c14; op2val:0x0;
op3val:0x17f0000; valaddr_reg:x3; val_offset:67098*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67098*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22367:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5f0c14 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edf0c14; op2val:0x0;
op3val:0x17f8000; valaddr_reg:x3; val_offset:67101*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67101*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22368:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5f0c14 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edf0c14; op2val:0x0;
op3val:0x17fc000; valaddr_reg:x3; val_offset:67104*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67104*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22369:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5f0c14 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edf0c14; op2val:0x0;
op3val:0x17fe000; valaddr_reg:x3; val_offset:67107*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67107*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22370:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5f0c14 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edf0c14; op2val:0x0;
op3val:0x17ff000; valaddr_reg:x3; val_offset:67110*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67110*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22371:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5f0c14 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edf0c14; op2val:0x0;
op3val:0x17ff800; valaddr_reg:x3; val_offset:67113*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67113*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22372:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5f0c14 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edf0c14; op2val:0x0;
op3val:0x17ffc00; valaddr_reg:x3; val_offset:67116*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67116*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22373:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5f0c14 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edf0c14; op2val:0x0;
op3val:0x17ffe00; valaddr_reg:x3; val_offset:67119*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67119*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22374:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5f0c14 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edf0c14; op2val:0x0;
op3val:0x17fff00; valaddr_reg:x3; val_offset:67122*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67122*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22375:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5f0c14 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edf0c14; op2val:0x0;
op3val:0x17fff80; valaddr_reg:x3; val_offset:67125*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67125*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22376:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5f0c14 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edf0c14; op2val:0x0;
op3val:0x17fffc0; valaddr_reg:x3; val_offset:67128*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67128*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22377:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5f0c14 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edf0c14; op2val:0x0;
op3val:0x17fffe0; valaddr_reg:x3; val_offset:67131*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67131*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22378:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5f0c14 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edf0c14; op2val:0x0;
op3val:0x17ffff0; valaddr_reg:x3; val_offset:67134*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67134*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22379:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5f0c14 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edf0c14; op2val:0x0;
op3val:0x17ffff8; valaddr_reg:x3; val_offset:67137*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67137*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22380:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5f0c14 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edf0c14; op2val:0x0;
op3val:0x17ffffc; valaddr_reg:x3; val_offset:67140*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67140*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22381:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5f0c14 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edf0c14; op2val:0x0;
op3val:0x17ffffe; valaddr_reg:x3; val_offset:67143*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67143*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22382:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5f0c14 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edf0c14; op2val:0x0;
op3val:0x17fffff; valaddr_reg:x3; val_offset:67146*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67146*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22383:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x605a49 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee05a49; op2val:0x80000000;
op3val:0x80000001; valaddr_reg:x3; val_offset:67149*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67149*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22384:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x605a49 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee05a49; op2val:0x80000000;
op3val:0x80000003; valaddr_reg:x3; val_offset:67152*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67152*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22385:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x605a49 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee05a49; op2val:0x80000000;
op3val:0x80000007; valaddr_reg:x3; val_offset:67155*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67155*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22386:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x605a49 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee05a49; op2val:0x80000000;
op3val:0x80199999; valaddr_reg:x3; val_offset:67158*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67158*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22387:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x605a49 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee05a49; op2val:0x80000000;
op3val:0x80249249; valaddr_reg:x3; val_offset:67161*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67161*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22388:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x605a49 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee05a49; op2val:0x80000000;
op3val:0x80333333; valaddr_reg:x3; val_offset:67164*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67164*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22389:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x605a49 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee05a49; op2val:0x80000000;
op3val:0x8036db6d; valaddr_reg:x3; val_offset:67167*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67167*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22390:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x605a49 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee05a49; op2val:0x80000000;
op3val:0x803bbbbb; valaddr_reg:x3; val_offset:67170*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67170*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22391:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x605a49 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee05a49; op2val:0x80000000;
op3val:0x80444444; valaddr_reg:x3; val_offset:67173*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67173*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22392:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x605a49 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee05a49; op2val:0x80000000;
op3val:0x804ccccc; valaddr_reg:x3; val_offset:67176*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67176*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22393:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x605a49 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee05a49; op2val:0x80000000;
op3val:0x805b6db6; valaddr_reg:x3; val_offset:67179*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67179*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22394:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x605a49 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee05a49; op2val:0x80000000;
op3val:0x80666666; valaddr_reg:x3; val_offset:67182*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67182*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22395:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x605a49 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee05a49; op2val:0x80000000;
op3val:0x806db6db; valaddr_reg:x3; val_offset:67185*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67185*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22396:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x605a49 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee05a49; op2val:0x80000000;
op3val:0x807ffff8; valaddr_reg:x3; val_offset:67188*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67188*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22397:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x605a49 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee05a49; op2val:0x80000000;
op3val:0x807ffffc; valaddr_reg:x3; val_offset:67191*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67191*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22398:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x605a49 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee05a49; op2val:0x80000000;
op3val:0x807ffffe; valaddr_reg:x3; val_offset:67194*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67194*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22399:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x605a49 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee05a49; op2val:0x80000000;
op3val:0x85000000; valaddr_reg:x3; val_offset:67197*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67197*0 + 3*174*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(2128524517,32,FLEN)
NAN_BOXED(4821328,32,FLEN)
NAN_BOXED(864034815,32,FLEN)
NAN_BOXED(2128524517,32,FLEN)
NAN_BOXED(4821328,32,FLEN)
NAN_BOXED(864043007,32,FLEN)
NAN_BOXED(2128524517,32,FLEN)
NAN_BOXED(4821328,32,FLEN)
NAN_BOXED(864059391,32,FLEN)
NAN_BOXED(2128524517,32,FLEN)
NAN_BOXED(4821328,32,FLEN)
NAN_BOXED(864092159,32,FLEN)
NAN_BOXED(2128524517,32,FLEN)
NAN_BOXED(4821328,32,FLEN)
NAN_BOXED(864157695,32,FLEN)
NAN_BOXED(2128524517,32,FLEN)
NAN_BOXED(4821328,32,FLEN)
NAN_BOXED(864288767,32,FLEN)
NAN_BOXED(2128524517,32,FLEN)
NAN_BOXED(4821328,32,FLEN)
NAN_BOXED(864550911,32,FLEN)
NAN_BOXED(2128524517,32,FLEN)
NAN_BOXED(4821328,32,FLEN)
NAN_BOXED(865075199,32,FLEN)
NAN_BOXED(2128524517,32,FLEN)
NAN_BOXED(4821328,32,FLEN)
NAN_BOXED(866123775,32,FLEN)
NAN_BOXED(2128524517,32,FLEN)
NAN_BOXED(4821328,32,FLEN)
NAN_BOXED(868220927,32,FLEN)
NAN_BOXED(2128524517,32,FLEN)
NAN_BOXED(4821328,32,FLEN)
NAN_BOXED(868220928,32,FLEN)
NAN_BOXED(2128524517,32,FLEN)
NAN_BOXED(4821328,32,FLEN)
NAN_BOXED(870318080,32,FLEN)
NAN_BOXED(2128524517,32,FLEN)
NAN_BOXED(4821328,32,FLEN)
NAN_BOXED(871366656,32,FLEN)
NAN_BOXED(2128524517,32,FLEN)
NAN_BOXED(4821328,32,FLEN)
NAN_BOXED(871890944,32,FLEN)
NAN_BOXED(2128524517,32,FLEN)
NAN_BOXED(4821328,32,FLEN)
NAN_BOXED(872153088,32,FLEN)
NAN_BOXED(2128524517,32,FLEN)
NAN_BOXED(4821328,32,FLEN)
NAN_BOXED(872284160,32,FLEN)
NAN_BOXED(2128524517,32,FLEN)
NAN_BOXED(4821328,32,FLEN)
NAN_BOXED(872349696,32,FLEN)
NAN_BOXED(2128524517,32,FLEN)
NAN_BOXED(4821328,32,FLEN)
NAN_BOXED(872382464,32,FLEN)
NAN_BOXED(2128524517,32,FLEN)
NAN_BOXED(4821328,32,FLEN)
NAN_BOXED(872398848,32,FLEN)
NAN_BOXED(2128524517,32,FLEN)
NAN_BOXED(4821328,32,FLEN)
NAN_BOXED(872407040,32,FLEN)
NAN_BOXED(2128524517,32,FLEN)
NAN_BOXED(4821328,32,FLEN)
NAN_BOXED(872411136,32,FLEN)
NAN_BOXED(2128524517,32,FLEN)
NAN_BOXED(4821328,32,FLEN)
NAN_BOXED(872413184,32,FLEN)
NAN_BOXED(2128524517,32,FLEN)
NAN_BOXED(4821328,32,FLEN)
NAN_BOXED(872414208,32,FLEN)
NAN_BOXED(2128524517,32,FLEN)
NAN_BOXED(4821328,32,FLEN)
NAN_BOXED(872414720,32,FLEN)
NAN_BOXED(2128524517,32,FLEN)
NAN_BOXED(4821328,32,FLEN)
NAN_BOXED(872414976,32,FLEN)
NAN_BOXED(2128524517,32,FLEN)
NAN_BOXED(4821328,32,FLEN)
NAN_BOXED(872415104,32,FLEN)
NAN_BOXED(2128524517,32,FLEN)
NAN_BOXED(4821328,32,FLEN)
NAN_BOXED(872415168,32,FLEN)
NAN_BOXED(2128524517,32,FLEN)
NAN_BOXED(4821328,32,FLEN)
NAN_BOXED(872415200,32,FLEN)
NAN_BOXED(2128524517,32,FLEN)
NAN_BOXED(4821328,32,FLEN)
NAN_BOXED(872415216,32,FLEN)
NAN_BOXED(2128524517,32,FLEN)
NAN_BOXED(4821328,32,FLEN)
NAN_BOXED(872415224,32,FLEN)
NAN_BOXED(2128524517,32,FLEN)
NAN_BOXED(4821328,32,FLEN)
NAN_BOXED(872415228,32,FLEN)
NAN_BOXED(2128524517,32,FLEN)
NAN_BOXED(4821328,32,FLEN)
NAN_BOXED(872415230,32,FLEN)
NAN_BOXED(2128524517,32,FLEN)
NAN_BOXED(4821328,32,FLEN)
NAN_BOXED(872415231,32,FLEN)
NAN_BOXED(2128524517,32,FLEN)
NAN_BOXED(4821328,32,FLEN)
NAN_BOXED(1065353217,32,FLEN)
NAN_BOXED(2128524517,32,FLEN)
NAN_BOXED(4821328,32,FLEN)
NAN_BOXED(1065353219,32,FLEN)
NAN_BOXED(2128524517,32,FLEN)
NAN_BOXED(4821328,32,FLEN)
NAN_BOXED(1065353223,32,FLEN)
NAN_BOXED(2128524517,32,FLEN)
NAN_BOXED(4821328,32,FLEN)
NAN_BOXED(1067030937,32,FLEN)
NAN_BOXED(2128524517,32,FLEN)
NAN_BOXED(4821328,32,FLEN)
NAN_BOXED(1067749961,32,FLEN)
NAN_BOXED(2128524517,32,FLEN)
NAN_BOXED(4821328,32,FLEN)
NAN_BOXED(1068708659,32,FLEN)
NAN_BOXED(2128524517,32,FLEN)
NAN_BOXED(4821328,32,FLEN)
NAN_BOXED(1068948333,32,FLEN)
NAN_BOXED(2128524517,32,FLEN)
NAN_BOXED(4821328,32,FLEN)
NAN_BOXED(1069267899,32,FLEN)
NAN_BOXED(2128524517,32,FLEN)
NAN_BOXED(4821328,32,FLEN)
NAN_BOXED(1069827140,32,FLEN)
NAN_BOXED(2128524517,32,FLEN)
NAN_BOXED(4821328,32,FLEN)
NAN_BOXED(1070386380,32,FLEN)
NAN_BOXED(2128524517,32,FLEN)
NAN_BOXED(4821328,32,FLEN)
NAN_BOXED(1071345078,32,FLEN)
NAN_BOXED(2128524517,32,FLEN)
NAN_BOXED(4821328,32,FLEN)
NAN_BOXED(1072064102,32,FLEN)
NAN_BOXED(2128524517,32,FLEN)
NAN_BOXED(4821328,32,FLEN)
NAN_BOXED(1072543451,32,FLEN)
NAN_BOXED(2128524517,32,FLEN)
NAN_BOXED(4821328,32,FLEN)
NAN_BOXED(1073741816,32,FLEN)
NAN_BOXED(2128524517,32,FLEN)
NAN_BOXED(4821328,32,FLEN)
NAN_BOXED(1073741820,32,FLEN)
NAN_BOXED(2128524517,32,FLEN)
NAN_BOXED(4821328,32,FLEN)
NAN_BOXED(1073741822,32,FLEN)
NAN_BOXED(2128546836,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(2128546836,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3,32,FLEN)
NAN_BOXED(2128546836,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7,32,FLEN)
NAN_BOXED(2128546836,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1677721,32,FLEN)
NAN_BOXED(2128546836,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2396745,32,FLEN)
NAN_BOXED(2128546836,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3355443,32,FLEN)
NAN_BOXED(2128546836,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3595117,32,FLEN)
NAN_BOXED(2128546836,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3914683,32,FLEN)
NAN_BOXED(2128546836,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(4473924,32,FLEN)
NAN_BOXED(2128546836,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5033164,32,FLEN)
NAN_BOXED(2128546836,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5991862,32,FLEN)
NAN_BOXED(2128546836,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(6710886,32,FLEN)
NAN_BOXED(2128546836,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7190235,32,FLEN)
NAN_BOXED(2128546836,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388600,32,FLEN)
NAN_BOXED(2128546836,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388604,32,FLEN)
NAN_BOXED(2128546836,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388606,32,FLEN)
NAN_BOXED(2128546836,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777216,32,FLEN)
NAN_BOXED(2128546836,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777217,32,FLEN)
NAN_BOXED(2128546836,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777219,32,FLEN)
NAN_BOXED(2128546836,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777223,32,FLEN)
NAN_BOXED(2128546836,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777231,32,FLEN)
NAN_BOXED(2128546836,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777247,32,FLEN)
NAN_BOXED(2128546836,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777279,32,FLEN)
NAN_BOXED(2128546836,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777343,32,FLEN)
NAN_BOXED(2128546836,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777471,32,FLEN)
NAN_BOXED(2128546836,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777727,32,FLEN)
NAN_BOXED(2128546836,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16778239,32,FLEN)
NAN_BOXED(2128546836,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16779263,32,FLEN)
NAN_BOXED(2128546836,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16781311,32,FLEN)
NAN_BOXED(2128546836,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16785407,32,FLEN)
NAN_BOXED(2128546836,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16793599,32,FLEN)
NAN_BOXED(2128546836,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16809983,32,FLEN)
NAN_BOXED(2128546836,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16842751,32,FLEN)
NAN_BOXED(2128546836,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16908287,32,FLEN)
NAN_BOXED(2128546836,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(17039359,32,FLEN)
NAN_BOXED(2128546836,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(17301503,32,FLEN)
NAN_BOXED(2128546836,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(17825791,32,FLEN)
NAN_BOXED(2128546836,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(18874367,32,FLEN)
NAN_BOXED(2128546836,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(20971519,32,FLEN)
NAN_BOXED(2128546836,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(20971520,32,FLEN)
NAN_BOXED(2128546836,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(23068672,32,FLEN)
NAN_BOXED(2128546836,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(24117248,32,FLEN)
NAN_BOXED(2128546836,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(24641536,32,FLEN)
NAN_BOXED(2128546836,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(24903680,32,FLEN)
NAN_BOXED(2128546836,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25034752,32,FLEN)
NAN_BOXED(2128546836,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25100288,32,FLEN)
NAN_BOXED(2128546836,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25133056,32,FLEN)
NAN_BOXED(2128546836,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25149440,32,FLEN)
NAN_BOXED(2128546836,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25157632,32,FLEN)
NAN_BOXED(2128546836,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25161728,32,FLEN)
NAN_BOXED(2128546836,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25163776,32,FLEN)
NAN_BOXED(2128546836,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25164800,32,FLEN)
NAN_BOXED(2128546836,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25165312,32,FLEN)
NAN_BOXED(2128546836,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25165568,32,FLEN)
NAN_BOXED(2128546836,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25165696,32,FLEN)
NAN_BOXED(2128546836,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25165760,32,FLEN)
NAN_BOXED(2128546836,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25165792,32,FLEN)
NAN_BOXED(2128546836,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25165808,32,FLEN)
NAN_BOXED(2128546836,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25165816,32,FLEN)
NAN_BOXED(2128546836,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25165820,32,FLEN)
NAN_BOXED(2128546836,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25165822,32,FLEN)
NAN_BOXED(2128546836,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25165823,32,FLEN)
NAN_BOXED(2128632393,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2128632393,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483651,32,FLEN)
NAN_BOXED(2128632393,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483655,32,FLEN)
NAN_BOXED(2128632393,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149161369,32,FLEN)
NAN_BOXED(2128632393,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149880393,32,FLEN)
NAN_BOXED(2128632393,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2150839091,32,FLEN)
NAN_BOXED(2128632393,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151078765,32,FLEN)
NAN_BOXED(2128632393,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151398331,32,FLEN)
NAN_BOXED(2128632393,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151957572,32,FLEN)
NAN_BOXED(2128632393,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2152516812,32,FLEN)
NAN_BOXED(2128632393,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2153475510,32,FLEN)
NAN_BOXED(2128632393,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154194534,32,FLEN)
NAN_BOXED(2128632393,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154673883,32,FLEN)
NAN_BOXED(2128632393,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872248,32,FLEN)
NAN_BOXED(2128632393,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872252,32,FLEN)
NAN_BOXED(2128632393,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872254,32,FLEN)
NAN_BOXED(2128632393,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231369728,32,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
