
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 14:18:08 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32F/fnmsub.s.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmsub.s instruction of the RISC-V RV32F_Zicsr,RV32FD_Zicsr,RV64F_Zicsr,RV64FD_Zicsr extension for the fnmsub_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF_Zicsr,RV32IFD_Zicsr,RV64IF_Zicsr,RV64IFD_Zicsr,RV32EF_Zicsr,RV32EFD_Zicsr,RV64EF_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fnmsub_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*F.*);def TEST_CASE_1=True;",fnmsub_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_29184:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x10dc38 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x16 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f10dc38; op2val:0x80000000;
op3val:0x8b7fffff; valaddr_reg:x3; val_offset:87552*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87552*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29185:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x112520 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x61c2a8 and fs3 == 0 and fe3 == 0xe6 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f112520; op2val:0x3fe1c2a8;
op3val:0x73000000; valaddr_reg:x3; val_offset:87555*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87555*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29186:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x112520 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x61c2a8 and fs3 == 0 and fe3 == 0xe6 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f112520; op2val:0x3fe1c2a8;
op3val:0x73000001; valaddr_reg:x3; val_offset:87558*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87558*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29187:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x112520 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x61c2a8 and fs3 == 0 and fe3 == 0xe6 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f112520; op2val:0x3fe1c2a8;
op3val:0x73000003; valaddr_reg:x3; val_offset:87561*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87561*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29188:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x112520 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x61c2a8 and fs3 == 0 and fe3 == 0xe6 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f112520; op2val:0x3fe1c2a8;
op3val:0x73000007; valaddr_reg:x3; val_offset:87564*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87564*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29189:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x112520 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x61c2a8 and fs3 == 0 and fe3 == 0xe6 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f112520; op2val:0x3fe1c2a8;
op3val:0x7300000f; valaddr_reg:x3; val_offset:87567*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87567*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29190:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x112520 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x61c2a8 and fs3 == 0 and fe3 == 0xe6 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f112520; op2val:0x3fe1c2a8;
op3val:0x7300001f; valaddr_reg:x3; val_offset:87570*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87570*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29191:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x112520 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x61c2a8 and fs3 == 0 and fe3 == 0xe6 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f112520; op2val:0x3fe1c2a8;
op3val:0x7300003f; valaddr_reg:x3; val_offset:87573*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87573*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29192:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x112520 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x61c2a8 and fs3 == 0 and fe3 == 0xe6 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f112520; op2val:0x3fe1c2a8;
op3val:0x7300007f; valaddr_reg:x3; val_offset:87576*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87576*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29193:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x112520 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x61c2a8 and fs3 == 0 and fe3 == 0xe6 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f112520; op2val:0x3fe1c2a8;
op3val:0x730000ff; valaddr_reg:x3; val_offset:87579*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87579*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29194:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x112520 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x61c2a8 and fs3 == 0 and fe3 == 0xe6 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f112520; op2val:0x3fe1c2a8;
op3val:0x730001ff; valaddr_reg:x3; val_offset:87582*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87582*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29195:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x112520 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x61c2a8 and fs3 == 0 and fe3 == 0xe6 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f112520; op2val:0x3fe1c2a8;
op3val:0x730003ff; valaddr_reg:x3; val_offset:87585*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87585*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29196:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x112520 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x61c2a8 and fs3 == 0 and fe3 == 0xe6 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f112520; op2val:0x3fe1c2a8;
op3val:0x730007ff; valaddr_reg:x3; val_offset:87588*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87588*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29197:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x112520 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x61c2a8 and fs3 == 0 and fe3 == 0xe6 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f112520; op2val:0x3fe1c2a8;
op3val:0x73000fff; valaddr_reg:x3; val_offset:87591*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87591*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29198:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x112520 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x61c2a8 and fs3 == 0 and fe3 == 0xe6 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f112520; op2val:0x3fe1c2a8;
op3val:0x73001fff; valaddr_reg:x3; val_offset:87594*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87594*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29199:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x112520 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x61c2a8 and fs3 == 0 and fe3 == 0xe6 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f112520; op2val:0x3fe1c2a8;
op3val:0x73003fff; valaddr_reg:x3; val_offset:87597*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87597*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29200:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x112520 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x61c2a8 and fs3 == 0 and fe3 == 0xe6 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f112520; op2val:0x3fe1c2a8;
op3val:0x73007fff; valaddr_reg:x3; val_offset:87600*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87600*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29201:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x112520 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x61c2a8 and fs3 == 0 and fe3 == 0xe6 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f112520; op2val:0x3fe1c2a8;
op3val:0x7300ffff; valaddr_reg:x3; val_offset:87603*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87603*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29202:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x112520 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x61c2a8 and fs3 == 0 and fe3 == 0xe6 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f112520; op2val:0x3fe1c2a8;
op3val:0x7301ffff; valaddr_reg:x3; val_offset:87606*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87606*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29203:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x112520 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x61c2a8 and fs3 == 0 and fe3 == 0xe6 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f112520; op2val:0x3fe1c2a8;
op3val:0x7303ffff; valaddr_reg:x3; val_offset:87609*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87609*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29204:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x112520 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x61c2a8 and fs3 == 0 and fe3 == 0xe6 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f112520; op2val:0x3fe1c2a8;
op3val:0x7307ffff; valaddr_reg:x3; val_offset:87612*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87612*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29205:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x112520 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x61c2a8 and fs3 == 0 and fe3 == 0xe6 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f112520; op2val:0x3fe1c2a8;
op3val:0x730fffff; valaddr_reg:x3; val_offset:87615*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87615*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29206:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x112520 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x61c2a8 and fs3 == 0 and fe3 == 0xe6 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f112520; op2val:0x3fe1c2a8;
op3val:0x731fffff; valaddr_reg:x3; val_offset:87618*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87618*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29207:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x112520 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x61c2a8 and fs3 == 0 and fe3 == 0xe6 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f112520; op2val:0x3fe1c2a8;
op3val:0x733fffff; valaddr_reg:x3; val_offset:87621*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87621*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29208:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x112520 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x61c2a8 and fs3 == 0 and fe3 == 0xe6 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f112520; op2val:0x3fe1c2a8;
op3val:0x73400000; valaddr_reg:x3; val_offset:87624*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87624*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29209:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x112520 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x61c2a8 and fs3 == 0 and fe3 == 0xe6 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f112520; op2val:0x3fe1c2a8;
op3val:0x73600000; valaddr_reg:x3; val_offset:87627*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87627*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29210:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x112520 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x61c2a8 and fs3 == 0 and fe3 == 0xe6 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f112520; op2val:0x3fe1c2a8;
op3val:0x73700000; valaddr_reg:x3; val_offset:87630*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87630*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29211:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x112520 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x61c2a8 and fs3 == 0 and fe3 == 0xe6 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f112520; op2val:0x3fe1c2a8;
op3val:0x73780000; valaddr_reg:x3; val_offset:87633*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87633*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29212:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x112520 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x61c2a8 and fs3 == 0 and fe3 == 0xe6 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f112520; op2val:0x3fe1c2a8;
op3val:0x737c0000; valaddr_reg:x3; val_offset:87636*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87636*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29213:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x112520 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x61c2a8 and fs3 == 0 and fe3 == 0xe6 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f112520; op2val:0x3fe1c2a8;
op3val:0x737e0000; valaddr_reg:x3; val_offset:87639*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87639*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29214:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x112520 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x61c2a8 and fs3 == 0 and fe3 == 0xe6 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f112520; op2val:0x3fe1c2a8;
op3val:0x737f0000; valaddr_reg:x3; val_offset:87642*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87642*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29215:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x112520 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x61c2a8 and fs3 == 0 and fe3 == 0xe6 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f112520; op2val:0x3fe1c2a8;
op3val:0x737f8000; valaddr_reg:x3; val_offset:87645*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87645*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29216:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x112520 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x61c2a8 and fs3 == 0 and fe3 == 0xe6 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f112520; op2val:0x3fe1c2a8;
op3val:0x737fc000; valaddr_reg:x3; val_offset:87648*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87648*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29217:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x112520 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x61c2a8 and fs3 == 0 and fe3 == 0xe6 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f112520; op2val:0x3fe1c2a8;
op3val:0x737fe000; valaddr_reg:x3; val_offset:87651*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87651*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29218:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x112520 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x61c2a8 and fs3 == 0 and fe3 == 0xe6 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f112520; op2val:0x3fe1c2a8;
op3val:0x737ff000; valaddr_reg:x3; val_offset:87654*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87654*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29219:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x112520 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x61c2a8 and fs3 == 0 and fe3 == 0xe6 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f112520; op2val:0x3fe1c2a8;
op3val:0x737ff800; valaddr_reg:x3; val_offset:87657*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87657*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29220:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x112520 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x61c2a8 and fs3 == 0 and fe3 == 0xe6 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f112520; op2val:0x3fe1c2a8;
op3val:0x737ffc00; valaddr_reg:x3; val_offset:87660*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87660*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29221:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x112520 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x61c2a8 and fs3 == 0 and fe3 == 0xe6 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f112520; op2val:0x3fe1c2a8;
op3val:0x737ffe00; valaddr_reg:x3; val_offset:87663*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87663*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29222:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x112520 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x61c2a8 and fs3 == 0 and fe3 == 0xe6 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f112520; op2val:0x3fe1c2a8;
op3val:0x737fff00; valaddr_reg:x3; val_offset:87666*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87666*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29223:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x112520 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x61c2a8 and fs3 == 0 and fe3 == 0xe6 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f112520; op2val:0x3fe1c2a8;
op3val:0x737fff80; valaddr_reg:x3; val_offset:87669*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87669*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29224:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x112520 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x61c2a8 and fs3 == 0 and fe3 == 0xe6 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f112520; op2val:0x3fe1c2a8;
op3val:0x737fffc0; valaddr_reg:x3; val_offset:87672*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87672*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29225:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x112520 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x61c2a8 and fs3 == 0 and fe3 == 0xe6 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f112520; op2val:0x3fe1c2a8;
op3val:0x737fffe0; valaddr_reg:x3; val_offset:87675*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87675*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29226:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x112520 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x61c2a8 and fs3 == 0 and fe3 == 0xe6 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f112520; op2val:0x3fe1c2a8;
op3val:0x737ffff0; valaddr_reg:x3; val_offset:87678*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87678*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29227:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x112520 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x61c2a8 and fs3 == 0 and fe3 == 0xe6 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f112520; op2val:0x3fe1c2a8;
op3val:0x737ffff8; valaddr_reg:x3; val_offset:87681*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87681*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29228:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x112520 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x61c2a8 and fs3 == 0 and fe3 == 0xe6 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f112520; op2val:0x3fe1c2a8;
op3val:0x737ffffc; valaddr_reg:x3; val_offset:87684*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87684*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29229:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x112520 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x61c2a8 and fs3 == 0 and fe3 == 0xe6 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f112520; op2val:0x3fe1c2a8;
op3val:0x737ffffe; valaddr_reg:x3; val_offset:87687*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87687*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29230:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x112520 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x61c2a8 and fs3 == 0 and fe3 == 0xe6 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f112520; op2val:0x3fe1c2a8;
op3val:0x737fffff; valaddr_reg:x3; val_offset:87690*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87690*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29231:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x112520 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x61c2a8 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f112520; op2val:0x3fe1c2a8;
op3val:0x7f000001; valaddr_reg:x3; val_offset:87693*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87693*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29232:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x112520 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x61c2a8 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f112520; op2val:0x3fe1c2a8;
op3val:0x7f000003; valaddr_reg:x3; val_offset:87696*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87696*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29233:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x112520 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x61c2a8 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f112520; op2val:0x3fe1c2a8;
op3val:0x7f000007; valaddr_reg:x3; val_offset:87699*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87699*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29234:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x112520 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x61c2a8 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f112520; op2val:0x3fe1c2a8;
op3val:0x7f199999; valaddr_reg:x3; val_offset:87702*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87702*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29235:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x112520 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x61c2a8 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f112520; op2val:0x3fe1c2a8;
op3val:0x7f249249; valaddr_reg:x3; val_offset:87705*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87705*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29236:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x112520 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x61c2a8 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f112520; op2val:0x3fe1c2a8;
op3val:0x7f333333; valaddr_reg:x3; val_offset:87708*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87708*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29237:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x112520 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x61c2a8 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f112520; op2val:0x3fe1c2a8;
op3val:0x7f36db6d; valaddr_reg:x3; val_offset:87711*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87711*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29238:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x112520 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x61c2a8 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f112520; op2val:0x3fe1c2a8;
op3val:0x7f3bbbbb; valaddr_reg:x3; val_offset:87714*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87714*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29239:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x112520 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x61c2a8 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f112520; op2val:0x3fe1c2a8;
op3val:0x7f444444; valaddr_reg:x3; val_offset:87717*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87717*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29240:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x112520 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x61c2a8 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f112520; op2val:0x3fe1c2a8;
op3val:0x7f4ccccc; valaddr_reg:x3; val_offset:87720*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87720*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29241:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x112520 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x61c2a8 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f112520; op2val:0x3fe1c2a8;
op3val:0x7f5b6db6; valaddr_reg:x3; val_offset:87723*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87723*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29242:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x112520 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x61c2a8 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f112520; op2val:0x3fe1c2a8;
op3val:0x7f666666; valaddr_reg:x3; val_offset:87726*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87726*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29243:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x112520 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x61c2a8 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f112520; op2val:0x3fe1c2a8;
op3val:0x7f6db6db; valaddr_reg:x3; val_offset:87729*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87729*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29244:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x112520 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x61c2a8 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f112520; op2val:0x3fe1c2a8;
op3val:0x7f7ffff8; valaddr_reg:x3; val_offset:87732*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87732*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29245:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x112520 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x61c2a8 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f112520; op2val:0x3fe1c2a8;
op3val:0x7f7ffffc; valaddr_reg:x3; val_offset:87735*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87735*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29246:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x112520 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x61c2a8 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f112520; op2val:0x3fe1c2a8;
op3val:0x7f7ffffe; valaddr_reg:x3; val_offset:87738*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87738*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29247:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1150a9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x617f06 and fs3 == 1 and fe3 == 0xc6 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1150a9; op2val:0xbfe17f06;
op3val:0xe3000000; valaddr_reg:x3; val_offset:87741*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87741*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29248:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1150a9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x617f06 and fs3 == 1 and fe3 == 0xc6 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1150a9; op2val:0xbfe17f06;
op3val:0xe3000001; valaddr_reg:x3; val_offset:87744*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87744*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29249:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1150a9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x617f06 and fs3 == 1 and fe3 == 0xc6 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1150a9; op2val:0xbfe17f06;
op3val:0xe3000003; valaddr_reg:x3; val_offset:87747*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87747*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29250:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1150a9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x617f06 and fs3 == 1 and fe3 == 0xc6 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1150a9; op2val:0xbfe17f06;
op3val:0xe3000007; valaddr_reg:x3; val_offset:87750*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87750*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29251:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1150a9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x617f06 and fs3 == 1 and fe3 == 0xc6 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1150a9; op2val:0xbfe17f06;
op3val:0xe300000f; valaddr_reg:x3; val_offset:87753*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87753*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29252:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1150a9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x617f06 and fs3 == 1 and fe3 == 0xc6 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1150a9; op2val:0xbfe17f06;
op3val:0xe300001f; valaddr_reg:x3; val_offset:87756*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87756*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29253:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1150a9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x617f06 and fs3 == 1 and fe3 == 0xc6 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1150a9; op2val:0xbfe17f06;
op3val:0xe300003f; valaddr_reg:x3; val_offset:87759*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87759*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29254:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1150a9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x617f06 and fs3 == 1 and fe3 == 0xc6 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1150a9; op2val:0xbfe17f06;
op3val:0xe300007f; valaddr_reg:x3; val_offset:87762*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87762*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29255:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1150a9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x617f06 and fs3 == 1 and fe3 == 0xc6 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1150a9; op2val:0xbfe17f06;
op3val:0xe30000ff; valaddr_reg:x3; val_offset:87765*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87765*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29256:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1150a9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x617f06 and fs3 == 1 and fe3 == 0xc6 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1150a9; op2val:0xbfe17f06;
op3val:0xe30001ff; valaddr_reg:x3; val_offset:87768*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87768*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29257:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1150a9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x617f06 and fs3 == 1 and fe3 == 0xc6 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1150a9; op2val:0xbfe17f06;
op3val:0xe30003ff; valaddr_reg:x3; val_offset:87771*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87771*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29258:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1150a9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x617f06 and fs3 == 1 and fe3 == 0xc6 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1150a9; op2val:0xbfe17f06;
op3val:0xe30007ff; valaddr_reg:x3; val_offset:87774*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87774*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29259:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1150a9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x617f06 and fs3 == 1 and fe3 == 0xc6 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1150a9; op2val:0xbfe17f06;
op3val:0xe3000fff; valaddr_reg:x3; val_offset:87777*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87777*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29260:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1150a9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x617f06 and fs3 == 1 and fe3 == 0xc6 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1150a9; op2val:0xbfe17f06;
op3val:0xe3001fff; valaddr_reg:x3; val_offset:87780*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87780*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29261:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1150a9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x617f06 and fs3 == 1 and fe3 == 0xc6 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1150a9; op2val:0xbfe17f06;
op3val:0xe3003fff; valaddr_reg:x3; val_offset:87783*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87783*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29262:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1150a9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x617f06 and fs3 == 1 and fe3 == 0xc6 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1150a9; op2val:0xbfe17f06;
op3val:0xe3007fff; valaddr_reg:x3; val_offset:87786*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87786*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29263:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1150a9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x617f06 and fs3 == 1 and fe3 == 0xc6 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1150a9; op2val:0xbfe17f06;
op3val:0xe300ffff; valaddr_reg:x3; val_offset:87789*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87789*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29264:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1150a9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x617f06 and fs3 == 1 and fe3 == 0xc6 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1150a9; op2val:0xbfe17f06;
op3val:0xe301ffff; valaddr_reg:x3; val_offset:87792*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87792*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29265:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1150a9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x617f06 and fs3 == 1 and fe3 == 0xc6 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1150a9; op2val:0xbfe17f06;
op3val:0xe303ffff; valaddr_reg:x3; val_offset:87795*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87795*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29266:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1150a9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x617f06 and fs3 == 1 and fe3 == 0xc6 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1150a9; op2val:0xbfe17f06;
op3val:0xe307ffff; valaddr_reg:x3; val_offset:87798*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87798*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29267:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1150a9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x617f06 and fs3 == 1 and fe3 == 0xc6 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1150a9; op2val:0xbfe17f06;
op3val:0xe30fffff; valaddr_reg:x3; val_offset:87801*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87801*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29268:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1150a9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x617f06 and fs3 == 1 and fe3 == 0xc6 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1150a9; op2val:0xbfe17f06;
op3val:0xe31fffff; valaddr_reg:x3; val_offset:87804*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87804*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29269:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1150a9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x617f06 and fs3 == 1 and fe3 == 0xc6 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1150a9; op2val:0xbfe17f06;
op3val:0xe33fffff; valaddr_reg:x3; val_offset:87807*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87807*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29270:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1150a9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x617f06 and fs3 == 1 and fe3 == 0xc6 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1150a9; op2val:0xbfe17f06;
op3val:0xe3400000; valaddr_reg:x3; val_offset:87810*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87810*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29271:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1150a9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x617f06 and fs3 == 1 and fe3 == 0xc6 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1150a9; op2val:0xbfe17f06;
op3val:0xe3600000; valaddr_reg:x3; val_offset:87813*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87813*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29272:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1150a9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x617f06 and fs3 == 1 and fe3 == 0xc6 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1150a9; op2val:0xbfe17f06;
op3val:0xe3700000; valaddr_reg:x3; val_offset:87816*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87816*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29273:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1150a9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x617f06 and fs3 == 1 and fe3 == 0xc6 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1150a9; op2val:0xbfe17f06;
op3val:0xe3780000; valaddr_reg:x3; val_offset:87819*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87819*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29274:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1150a9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x617f06 and fs3 == 1 and fe3 == 0xc6 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1150a9; op2val:0xbfe17f06;
op3val:0xe37c0000; valaddr_reg:x3; val_offset:87822*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87822*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29275:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1150a9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x617f06 and fs3 == 1 and fe3 == 0xc6 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1150a9; op2val:0xbfe17f06;
op3val:0xe37e0000; valaddr_reg:x3; val_offset:87825*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87825*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29276:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1150a9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x617f06 and fs3 == 1 and fe3 == 0xc6 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1150a9; op2val:0xbfe17f06;
op3val:0xe37f0000; valaddr_reg:x3; val_offset:87828*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87828*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29277:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1150a9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x617f06 and fs3 == 1 and fe3 == 0xc6 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1150a9; op2val:0xbfe17f06;
op3val:0xe37f8000; valaddr_reg:x3; val_offset:87831*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87831*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29278:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1150a9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x617f06 and fs3 == 1 and fe3 == 0xc6 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1150a9; op2val:0xbfe17f06;
op3val:0xe37fc000; valaddr_reg:x3; val_offset:87834*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87834*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29279:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1150a9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x617f06 and fs3 == 1 and fe3 == 0xc6 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1150a9; op2val:0xbfe17f06;
op3val:0xe37fe000; valaddr_reg:x3; val_offset:87837*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87837*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29280:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1150a9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x617f06 and fs3 == 1 and fe3 == 0xc6 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1150a9; op2val:0xbfe17f06;
op3val:0xe37ff000; valaddr_reg:x3; val_offset:87840*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87840*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29281:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1150a9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x617f06 and fs3 == 1 and fe3 == 0xc6 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1150a9; op2val:0xbfe17f06;
op3val:0xe37ff800; valaddr_reg:x3; val_offset:87843*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87843*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29282:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1150a9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x617f06 and fs3 == 1 and fe3 == 0xc6 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1150a9; op2val:0xbfe17f06;
op3val:0xe37ffc00; valaddr_reg:x3; val_offset:87846*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87846*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29283:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1150a9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x617f06 and fs3 == 1 and fe3 == 0xc6 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1150a9; op2val:0xbfe17f06;
op3val:0xe37ffe00; valaddr_reg:x3; val_offset:87849*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87849*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29284:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1150a9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x617f06 and fs3 == 1 and fe3 == 0xc6 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1150a9; op2val:0xbfe17f06;
op3val:0xe37fff00; valaddr_reg:x3; val_offset:87852*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87852*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29285:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1150a9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x617f06 and fs3 == 1 and fe3 == 0xc6 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1150a9; op2val:0xbfe17f06;
op3val:0xe37fff80; valaddr_reg:x3; val_offset:87855*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87855*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29286:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1150a9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x617f06 and fs3 == 1 and fe3 == 0xc6 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1150a9; op2val:0xbfe17f06;
op3val:0xe37fffc0; valaddr_reg:x3; val_offset:87858*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87858*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29287:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1150a9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x617f06 and fs3 == 1 and fe3 == 0xc6 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1150a9; op2val:0xbfe17f06;
op3val:0xe37fffe0; valaddr_reg:x3; val_offset:87861*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87861*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29288:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1150a9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x617f06 and fs3 == 1 and fe3 == 0xc6 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1150a9; op2val:0xbfe17f06;
op3val:0xe37ffff0; valaddr_reg:x3; val_offset:87864*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87864*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29289:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1150a9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x617f06 and fs3 == 1 and fe3 == 0xc6 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1150a9; op2val:0xbfe17f06;
op3val:0xe37ffff8; valaddr_reg:x3; val_offset:87867*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87867*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29290:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1150a9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x617f06 and fs3 == 1 and fe3 == 0xc6 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1150a9; op2val:0xbfe17f06;
op3val:0xe37ffffc; valaddr_reg:x3; val_offset:87870*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87870*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29291:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1150a9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x617f06 and fs3 == 1 and fe3 == 0xc6 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1150a9; op2val:0xbfe17f06;
op3val:0xe37ffffe; valaddr_reg:x3; val_offset:87873*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87873*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29292:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1150a9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x617f06 and fs3 == 1 and fe3 == 0xc6 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1150a9; op2val:0xbfe17f06;
op3val:0xe37fffff; valaddr_reg:x3; val_offset:87876*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87876*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29293:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1150a9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x617f06 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1150a9; op2val:0xbfe17f06;
op3val:0xff000001; valaddr_reg:x3; val_offset:87879*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87879*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29294:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1150a9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x617f06 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1150a9; op2val:0xbfe17f06;
op3val:0xff000003; valaddr_reg:x3; val_offset:87882*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87882*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29295:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1150a9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x617f06 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1150a9; op2val:0xbfe17f06;
op3val:0xff000007; valaddr_reg:x3; val_offset:87885*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87885*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29296:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1150a9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x617f06 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1150a9; op2val:0xbfe17f06;
op3val:0xff199999; valaddr_reg:x3; val_offset:87888*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87888*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29297:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1150a9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x617f06 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1150a9; op2val:0xbfe17f06;
op3val:0xff249249; valaddr_reg:x3; val_offset:87891*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87891*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29298:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1150a9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x617f06 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1150a9; op2val:0xbfe17f06;
op3val:0xff333333; valaddr_reg:x3; val_offset:87894*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87894*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29299:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1150a9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x617f06 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1150a9; op2val:0xbfe17f06;
op3val:0xff36db6d; valaddr_reg:x3; val_offset:87897*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87897*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29300:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1150a9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x617f06 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1150a9; op2val:0xbfe17f06;
op3val:0xff3bbbbb; valaddr_reg:x3; val_offset:87900*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87900*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29301:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1150a9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x617f06 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1150a9; op2val:0xbfe17f06;
op3val:0xff444444; valaddr_reg:x3; val_offset:87903*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87903*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29302:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1150a9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x617f06 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1150a9; op2val:0xbfe17f06;
op3val:0xff4ccccc; valaddr_reg:x3; val_offset:87906*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87906*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29303:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1150a9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x617f06 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1150a9; op2val:0xbfe17f06;
op3val:0xff5b6db6; valaddr_reg:x3; val_offset:87909*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87909*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29304:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1150a9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x617f06 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1150a9; op2val:0xbfe17f06;
op3val:0xff666666; valaddr_reg:x3; val_offset:87912*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87912*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29305:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1150a9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x617f06 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1150a9; op2val:0xbfe17f06;
op3val:0xff6db6db; valaddr_reg:x3; val_offset:87915*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87915*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29306:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1150a9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x617f06 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1150a9; op2val:0xbfe17f06;
op3val:0xff7ffff8; valaddr_reg:x3; val_offset:87918*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87918*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29307:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1150a9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x617f06 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1150a9; op2val:0xbfe17f06;
op3val:0xff7ffffc; valaddr_reg:x3; val_offset:87921*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87921*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29308:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1150a9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x617f06 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1150a9; op2val:0xbfe17f06;
op3val:0xff7ffffe; valaddr_reg:x3; val_offset:87924*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87924*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29309:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x115cea and fs2 == 1 and fe2 == 0x7f and fm2 == 0x616c03 and fs3 == 1 and fe3 == 0xd4 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f115cea; op2val:0xbfe16c03;
op3val:0xea000000; valaddr_reg:x3; val_offset:87927*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87927*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29310:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x115cea and fs2 == 1 and fe2 == 0x7f and fm2 == 0x616c03 and fs3 == 1 and fe3 == 0xd4 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f115cea; op2val:0xbfe16c03;
op3val:0xea000001; valaddr_reg:x3; val_offset:87930*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87930*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29311:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x115cea and fs2 == 1 and fe2 == 0x7f and fm2 == 0x616c03 and fs3 == 1 and fe3 == 0xd4 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f115cea; op2val:0xbfe16c03;
op3val:0xea000003; valaddr_reg:x3; val_offset:87933*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87933*0 + 3*228*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(2131811384,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2340421631,32,FLEN)
NAN_BOXED(2131830048,32,FLEN)
NAN_BOXED(1071760040,32,FLEN)
NAN_BOXED(1929379840,32,FLEN)
NAN_BOXED(2131830048,32,FLEN)
NAN_BOXED(1071760040,32,FLEN)
NAN_BOXED(1929379841,32,FLEN)
NAN_BOXED(2131830048,32,FLEN)
NAN_BOXED(1071760040,32,FLEN)
NAN_BOXED(1929379843,32,FLEN)
NAN_BOXED(2131830048,32,FLEN)
NAN_BOXED(1071760040,32,FLEN)
NAN_BOXED(1929379847,32,FLEN)
NAN_BOXED(2131830048,32,FLEN)
NAN_BOXED(1071760040,32,FLEN)
NAN_BOXED(1929379855,32,FLEN)
NAN_BOXED(2131830048,32,FLEN)
NAN_BOXED(1071760040,32,FLEN)
NAN_BOXED(1929379871,32,FLEN)
NAN_BOXED(2131830048,32,FLEN)
NAN_BOXED(1071760040,32,FLEN)
NAN_BOXED(1929379903,32,FLEN)
NAN_BOXED(2131830048,32,FLEN)
NAN_BOXED(1071760040,32,FLEN)
NAN_BOXED(1929379967,32,FLEN)
NAN_BOXED(2131830048,32,FLEN)
NAN_BOXED(1071760040,32,FLEN)
NAN_BOXED(1929380095,32,FLEN)
NAN_BOXED(2131830048,32,FLEN)
NAN_BOXED(1071760040,32,FLEN)
NAN_BOXED(1929380351,32,FLEN)
NAN_BOXED(2131830048,32,FLEN)
NAN_BOXED(1071760040,32,FLEN)
NAN_BOXED(1929380863,32,FLEN)
NAN_BOXED(2131830048,32,FLEN)
NAN_BOXED(1071760040,32,FLEN)
NAN_BOXED(1929381887,32,FLEN)
NAN_BOXED(2131830048,32,FLEN)
NAN_BOXED(1071760040,32,FLEN)
NAN_BOXED(1929383935,32,FLEN)
NAN_BOXED(2131830048,32,FLEN)
NAN_BOXED(1071760040,32,FLEN)
NAN_BOXED(1929388031,32,FLEN)
NAN_BOXED(2131830048,32,FLEN)
NAN_BOXED(1071760040,32,FLEN)
NAN_BOXED(1929396223,32,FLEN)
NAN_BOXED(2131830048,32,FLEN)
NAN_BOXED(1071760040,32,FLEN)
NAN_BOXED(1929412607,32,FLEN)
NAN_BOXED(2131830048,32,FLEN)
NAN_BOXED(1071760040,32,FLEN)
NAN_BOXED(1929445375,32,FLEN)
NAN_BOXED(2131830048,32,FLEN)
NAN_BOXED(1071760040,32,FLEN)
NAN_BOXED(1929510911,32,FLEN)
NAN_BOXED(2131830048,32,FLEN)
NAN_BOXED(1071760040,32,FLEN)
NAN_BOXED(1929641983,32,FLEN)
NAN_BOXED(2131830048,32,FLEN)
NAN_BOXED(1071760040,32,FLEN)
NAN_BOXED(1929904127,32,FLEN)
NAN_BOXED(2131830048,32,FLEN)
NAN_BOXED(1071760040,32,FLEN)
NAN_BOXED(1930428415,32,FLEN)
NAN_BOXED(2131830048,32,FLEN)
NAN_BOXED(1071760040,32,FLEN)
NAN_BOXED(1931476991,32,FLEN)
NAN_BOXED(2131830048,32,FLEN)
NAN_BOXED(1071760040,32,FLEN)
NAN_BOXED(1933574143,32,FLEN)
NAN_BOXED(2131830048,32,FLEN)
NAN_BOXED(1071760040,32,FLEN)
NAN_BOXED(1933574144,32,FLEN)
NAN_BOXED(2131830048,32,FLEN)
NAN_BOXED(1071760040,32,FLEN)
NAN_BOXED(1935671296,32,FLEN)
NAN_BOXED(2131830048,32,FLEN)
NAN_BOXED(1071760040,32,FLEN)
NAN_BOXED(1936719872,32,FLEN)
NAN_BOXED(2131830048,32,FLEN)
NAN_BOXED(1071760040,32,FLEN)
NAN_BOXED(1937244160,32,FLEN)
NAN_BOXED(2131830048,32,FLEN)
NAN_BOXED(1071760040,32,FLEN)
NAN_BOXED(1937506304,32,FLEN)
NAN_BOXED(2131830048,32,FLEN)
NAN_BOXED(1071760040,32,FLEN)
NAN_BOXED(1937637376,32,FLEN)
NAN_BOXED(2131830048,32,FLEN)
NAN_BOXED(1071760040,32,FLEN)
NAN_BOXED(1937702912,32,FLEN)
NAN_BOXED(2131830048,32,FLEN)
NAN_BOXED(1071760040,32,FLEN)
NAN_BOXED(1937735680,32,FLEN)
NAN_BOXED(2131830048,32,FLEN)
NAN_BOXED(1071760040,32,FLEN)
NAN_BOXED(1937752064,32,FLEN)
NAN_BOXED(2131830048,32,FLEN)
NAN_BOXED(1071760040,32,FLEN)
NAN_BOXED(1937760256,32,FLEN)
NAN_BOXED(2131830048,32,FLEN)
NAN_BOXED(1071760040,32,FLEN)
NAN_BOXED(1937764352,32,FLEN)
NAN_BOXED(2131830048,32,FLEN)
NAN_BOXED(1071760040,32,FLEN)
NAN_BOXED(1937766400,32,FLEN)
NAN_BOXED(2131830048,32,FLEN)
NAN_BOXED(1071760040,32,FLEN)
NAN_BOXED(1937767424,32,FLEN)
NAN_BOXED(2131830048,32,FLEN)
NAN_BOXED(1071760040,32,FLEN)
NAN_BOXED(1937767936,32,FLEN)
NAN_BOXED(2131830048,32,FLEN)
NAN_BOXED(1071760040,32,FLEN)
NAN_BOXED(1937768192,32,FLEN)
NAN_BOXED(2131830048,32,FLEN)
NAN_BOXED(1071760040,32,FLEN)
NAN_BOXED(1937768320,32,FLEN)
NAN_BOXED(2131830048,32,FLEN)
NAN_BOXED(1071760040,32,FLEN)
NAN_BOXED(1937768384,32,FLEN)
NAN_BOXED(2131830048,32,FLEN)
NAN_BOXED(1071760040,32,FLEN)
NAN_BOXED(1937768416,32,FLEN)
NAN_BOXED(2131830048,32,FLEN)
NAN_BOXED(1071760040,32,FLEN)
NAN_BOXED(1937768432,32,FLEN)
NAN_BOXED(2131830048,32,FLEN)
NAN_BOXED(1071760040,32,FLEN)
NAN_BOXED(1937768440,32,FLEN)
NAN_BOXED(2131830048,32,FLEN)
NAN_BOXED(1071760040,32,FLEN)
NAN_BOXED(1937768444,32,FLEN)
NAN_BOXED(2131830048,32,FLEN)
NAN_BOXED(1071760040,32,FLEN)
NAN_BOXED(1937768446,32,FLEN)
NAN_BOXED(2131830048,32,FLEN)
NAN_BOXED(1071760040,32,FLEN)
NAN_BOXED(1937768447,32,FLEN)
NAN_BOXED(2131830048,32,FLEN)
NAN_BOXED(1071760040,32,FLEN)
NAN_BOXED(2130706433,32,FLEN)
NAN_BOXED(2131830048,32,FLEN)
NAN_BOXED(1071760040,32,FLEN)
NAN_BOXED(2130706435,32,FLEN)
NAN_BOXED(2131830048,32,FLEN)
NAN_BOXED(1071760040,32,FLEN)
NAN_BOXED(2130706439,32,FLEN)
NAN_BOXED(2131830048,32,FLEN)
NAN_BOXED(1071760040,32,FLEN)
NAN_BOXED(2132384153,32,FLEN)
NAN_BOXED(2131830048,32,FLEN)
NAN_BOXED(1071760040,32,FLEN)
NAN_BOXED(2133103177,32,FLEN)
NAN_BOXED(2131830048,32,FLEN)
NAN_BOXED(1071760040,32,FLEN)
NAN_BOXED(2134061875,32,FLEN)
NAN_BOXED(2131830048,32,FLEN)
NAN_BOXED(1071760040,32,FLEN)
NAN_BOXED(2134301549,32,FLEN)
NAN_BOXED(2131830048,32,FLEN)
NAN_BOXED(1071760040,32,FLEN)
NAN_BOXED(2134621115,32,FLEN)
NAN_BOXED(2131830048,32,FLEN)
NAN_BOXED(1071760040,32,FLEN)
NAN_BOXED(2135180356,32,FLEN)
NAN_BOXED(2131830048,32,FLEN)
NAN_BOXED(1071760040,32,FLEN)
NAN_BOXED(2135739596,32,FLEN)
NAN_BOXED(2131830048,32,FLEN)
NAN_BOXED(1071760040,32,FLEN)
NAN_BOXED(2136698294,32,FLEN)
NAN_BOXED(2131830048,32,FLEN)
NAN_BOXED(1071760040,32,FLEN)
NAN_BOXED(2137417318,32,FLEN)
NAN_BOXED(2131830048,32,FLEN)
NAN_BOXED(1071760040,32,FLEN)
NAN_BOXED(2137896667,32,FLEN)
NAN_BOXED(2131830048,32,FLEN)
NAN_BOXED(1071760040,32,FLEN)
NAN_BOXED(2139095032,32,FLEN)
NAN_BOXED(2131830048,32,FLEN)
NAN_BOXED(1071760040,32,FLEN)
NAN_BOXED(2139095036,32,FLEN)
NAN_BOXED(2131830048,32,FLEN)
NAN_BOXED(1071760040,32,FLEN)
NAN_BOXED(2139095038,32,FLEN)
NAN_BOXED(2131841193,32,FLEN)
NAN_BOXED(3219226374,32,FLEN)
NAN_BOXED(3808428032,32,FLEN)
NAN_BOXED(2131841193,32,FLEN)
NAN_BOXED(3219226374,32,FLEN)
NAN_BOXED(3808428033,32,FLEN)
NAN_BOXED(2131841193,32,FLEN)
NAN_BOXED(3219226374,32,FLEN)
NAN_BOXED(3808428035,32,FLEN)
NAN_BOXED(2131841193,32,FLEN)
NAN_BOXED(3219226374,32,FLEN)
NAN_BOXED(3808428039,32,FLEN)
NAN_BOXED(2131841193,32,FLEN)
NAN_BOXED(3219226374,32,FLEN)
NAN_BOXED(3808428047,32,FLEN)
NAN_BOXED(2131841193,32,FLEN)
NAN_BOXED(3219226374,32,FLEN)
NAN_BOXED(3808428063,32,FLEN)
NAN_BOXED(2131841193,32,FLEN)
NAN_BOXED(3219226374,32,FLEN)
NAN_BOXED(3808428095,32,FLEN)
NAN_BOXED(2131841193,32,FLEN)
NAN_BOXED(3219226374,32,FLEN)
NAN_BOXED(3808428159,32,FLEN)
NAN_BOXED(2131841193,32,FLEN)
NAN_BOXED(3219226374,32,FLEN)
NAN_BOXED(3808428287,32,FLEN)
NAN_BOXED(2131841193,32,FLEN)
NAN_BOXED(3219226374,32,FLEN)
NAN_BOXED(3808428543,32,FLEN)
NAN_BOXED(2131841193,32,FLEN)
NAN_BOXED(3219226374,32,FLEN)
NAN_BOXED(3808429055,32,FLEN)
NAN_BOXED(2131841193,32,FLEN)
NAN_BOXED(3219226374,32,FLEN)
NAN_BOXED(3808430079,32,FLEN)
NAN_BOXED(2131841193,32,FLEN)
NAN_BOXED(3219226374,32,FLEN)
NAN_BOXED(3808432127,32,FLEN)
NAN_BOXED(2131841193,32,FLEN)
NAN_BOXED(3219226374,32,FLEN)
NAN_BOXED(3808436223,32,FLEN)
NAN_BOXED(2131841193,32,FLEN)
NAN_BOXED(3219226374,32,FLEN)
NAN_BOXED(3808444415,32,FLEN)
NAN_BOXED(2131841193,32,FLEN)
NAN_BOXED(3219226374,32,FLEN)
NAN_BOXED(3808460799,32,FLEN)
NAN_BOXED(2131841193,32,FLEN)
NAN_BOXED(3219226374,32,FLEN)
NAN_BOXED(3808493567,32,FLEN)
NAN_BOXED(2131841193,32,FLEN)
NAN_BOXED(3219226374,32,FLEN)
NAN_BOXED(3808559103,32,FLEN)
NAN_BOXED(2131841193,32,FLEN)
NAN_BOXED(3219226374,32,FLEN)
NAN_BOXED(3808690175,32,FLEN)
NAN_BOXED(2131841193,32,FLEN)
NAN_BOXED(3219226374,32,FLEN)
NAN_BOXED(3808952319,32,FLEN)
NAN_BOXED(2131841193,32,FLEN)
NAN_BOXED(3219226374,32,FLEN)
NAN_BOXED(3809476607,32,FLEN)
NAN_BOXED(2131841193,32,FLEN)
NAN_BOXED(3219226374,32,FLEN)
NAN_BOXED(3810525183,32,FLEN)
NAN_BOXED(2131841193,32,FLEN)
NAN_BOXED(3219226374,32,FLEN)
NAN_BOXED(3812622335,32,FLEN)
NAN_BOXED(2131841193,32,FLEN)
NAN_BOXED(3219226374,32,FLEN)
NAN_BOXED(3812622336,32,FLEN)
NAN_BOXED(2131841193,32,FLEN)
NAN_BOXED(3219226374,32,FLEN)
NAN_BOXED(3814719488,32,FLEN)
NAN_BOXED(2131841193,32,FLEN)
NAN_BOXED(3219226374,32,FLEN)
NAN_BOXED(3815768064,32,FLEN)
NAN_BOXED(2131841193,32,FLEN)
NAN_BOXED(3219226374,32,FLEN)
NAN_BOXED(3816292352,32,FLEN)
NAN_BOXED(2131841193,32,FLEN)
NAN_BOXED(3219226374,32,FLEN)
NAN_BOXED(3816554496,32,FLEN)
NAN_BOXED(2131841193,32,FLEN)
NAN_BOXED(3219226374,32,FLEN)
NAN_BOXED(3816685568,32,FLEN)
NAN_BOXED(2131841193,32,FLEN)
NAN_BOXED(3219226374,32,FLEN)
NAN_BOXED(3816751104,32,FLEN)
NAN_BOXED(2131841193,32,FLEN)
NAN_BOXED(3219226374,32,FLEN)
NAN_BOXED(3816783872,32,FLEN)
NAN_BOXED(2131841193,32,FLEN)
NAN_BOXED(3219226374,32,FLEN)
NAN_BOXED(3816800256,32,FLEN)
NAN_BOXED(2131841193,32,FLEN)
NAN_BOXED(3219226374,32,FLEN)
NAN_BOXED(3816808448,32,FLEN)
NAN_BOXED(2131841193,32,FLEN)
NAN_BOXED(3219226374,32,FLEN)
NAN_BOXED(3816812544,32,FLEN)
NAN_BOXED(2131841193,32,FLEN)
NAN_BOXED(3219226374,32,FLEN)
NAN_BOXED(3816814592,32,FLEN)
NAN_BOXED(2131841193,32,FLEN)
NAN_BOXED(3219226374,32,FLEN)
NAN_BOXED(3816815616,32,FLEN)
NAN_BOXED(2131841193,32,FLEN)
NAN_BOXED(3219226374,32,FLEN)
NAN_BOXED(3816816128,32,FLEN)
NAN_BOXED(2131841193,32,FLEN)
NAN_BOXED(3219226374,32,FLEN)
NAN_BOXED(3816816384,32,FLEN)
NAN_BOXED(2131841193,32,FLEN)
NAN_BOXED(3219226374,32,FLEN)
NAN_BOXED(3816816512,32,FLEN)
NAN_BOXED(2131841193,32,FLEN)
NAN_BOXED(3219226374,32,FLEN)
NAN_BOXED(3816816576,32,FLEN)
NAN_BOXED(2131841193,32,FLEN)
NAN_BOXED(3219226374,32,FLEN)
NAN_BOXED(3816816608,32,FLEN)
NAN_BOXED(2131841193,32,FLEN)
NAN_BOXED(3219226374,32,FLEN)
NAN_BOXED(3816816624,32,FLEN)
NAN_BOXED(2131841193,32,FLEN)
NAN_BOXED(3219226374,32,FLEN)
NAN_BOXED(3816816632,32,FLEN)
NAN_BOXED(2131841193,32,FLEN)
NAN_BOXED(3219226374,32,FLEN)
NAN_BOXED(3816816636,32,FLEN)
NAN_BOXED(2131841193,32,FLEN)
NAN_BOXED(3219226374,32,FLEN)
NAN_BOXED(3816816638,32,FLEN)
NAN_BOXED(2131841193,32,FLEN)
NAN_BOXED(3219226374,32,FLEN)
NAN_BOXED(3816816639,32,FLEN)
NAN_BOXED(2131841193,32,FLEN)
NAN_BOXED(3219226374,32,FLEN)
NAN_BOXED(4278190081,32,FLEN)
NAN_BOXED(2131841193,32,FLEN)
NAN_BOXED(3219226374,32,FLEN)
NAN_BOXED(4278190083,32,FLEN)
NAN_BOXED(2131841193,32,FLEN)
NAN_BOXED(3219226374,32,FLEN)
NAN_BOXED(4278190087,32,FLEN)
NAN_BOXED(2131841193,32,FLEN)
NAN_BOXED(3219226374,32,FLEN)
NAN_BOXED(4279867801,32,FLEN)
NAN_BOXED(2131841193,32,FLEN)
NAN_BOXED(3219226374,32,FLEN)
NAN_BOXED(4280586825,32,FLEN)
NAN_BOXED(2131841193,32,FLEN)
NAN_BOXED(3219226374,32,FLEN)
NAN_BOXED(4281545523,32,FLEN)
NAN_BOXED(2131841193,32,FLEN)
NAN_BOXED(3219226374,32,FLEN)
NAN_BOXED(4281785197,32,FLEN)
NAN_BOXED(2131841193,32,FLEN)
NAN_BOXED(3219226374,32,FLEN)
NAN_BOXED(4282104763,32,FLEN)
NAN_BOXED(2131841193,32,FLEN)
NAN_BOXED(3219226374,32,FLEN)
NAN_BOXED(4282664004,32,FLEN)
NAN_BOXED(2131841193,32,FLEN)
NAN_BOXED(3219226374,32,FLEN)
NAN_BOXED(4283223244,32,FLEN)
NAN_BOXED(2131841193,32,FLEN)
NAN_BOXED(3219226374,32,FLEN)
NAN_BOXED(4284181942,32,FLEN)
NAN_BOXED(2131841193,32,FLEN)
NAN_BOXED(3219226374,32,FLEN)
NAN_BOXED(4284900966,32,FLEN)
NAN_BOXED(2131841193,32,FLEN)
NAN_BOXED(3219226374,32,FLEN)
NAN_BOXED(4285380315,32,FLEN)
NAN_BOXED(2131841193,32,FLEN)
NAN_BOXED(3219226374,32,FLEN)
NAN_BOXED(4286578680,32,FLEN)
NAN_BOXED(2131841193,32,FLEN)
NAN_BOXED(3219226374,32,FLEN)
NAN_BOXED(4286578684,32,FLEN)
NAN_BOXED(2131841193,32,FLEN)
NAN_BOXED(3219226374,32,FLEN)
NAN_BOXED(4286578686,32,FLEN)
NAN_BOXED(2131844330,32,FLEN)
NAN_BOXED(3219221507,32,FLEN)
NAN_BOXED(3925868544,32,FLEN)
NAN_BOXED(2131844330,32,FLEN)
NAN_BOXED(3219221507,32,FLEN)
NAN_BOXED(3925868545,32,FLEN)
NAN_BOXED(2131844330,32,FLEN)
NAN_BOXED(3219221507,32,FLEN)
NAN_BOXED(3925868547,32,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
