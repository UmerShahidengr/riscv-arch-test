
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 14:18:08 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32F/fnmsub.s.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmsub.s instruction of the RISC-V RV32F_Zicsr,RV32FD_Zicsr,RV64F_Zicsr,RV64FD_Zicsr extension for the fnmsub_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF_Zicsr,RV32IFD_Zicsr,RV64IF_Zicsr,RV64IFD_Zicsr,RV32EF_Zicsr,RV32EFD_Zicsr,RV64EF_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fnmsub_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*F.*);def TEST_CASE_1=True;",fnmsub_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_29312:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x115cea and fs2 == 1 and fe2 == 0x7f and fm2 == 0x616c03 and fs3 == 1 and fe3 == 0xd4 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f115cea; op2val:0xbfe16c03;
op3val:0xea000007; valaddr_reg:x3; val_offset:87936*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87936*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29313:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x115cea and fs2 == 1 and fe2 == 0x7f and fm2 == 0x616c03 and fs3 == 1 and fe3 == 0xd4 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f115cea; op2val:0xbfe16c03;
op3val:0xea00000f; valaddr_reg:x3; val_offset:87939*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87939*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29314:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x115cea and fs2 == 1 and fe2 == 0x7f and fm2 == 0x616c03 and fs3 == 1 and fe3 == 0xd4 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f115cea; op2val:0xbfe16c03;
op3val:0xea00001f; valaddr_reg:x3; val_offset:87942*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87942*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29315:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x115cea and fs2 == 1 and fe2 == 0x7f and fm2 == 0x616c03 and fs3 == 1 and fe3 == 0xd4 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f115cea; op2val:0xbfe16c03;
op3val:0xea00003f; valaddr_reg:x3; val_offset:87945*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87945*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29316:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x115cea and fs2 == 1 and fe2 == 0x7f and fm2 == 0x616c03 and fs3 == 1 and fe3 == 0xd4 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f115cea; op2val:0xbfe16c03;
op3val:0xea00007f; valaddr_reg:x3; val_offset:87948*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87948*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29317:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x115cea and fs2 == 1 and fe2 == 0x7f and fm2 == 0x616c03 and fs3 == 1 and fe3 == 0xd4 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f115cea; op2val:0xbfe16c03;
op3val:0xea0000ff; valaddr_reg:x3; val_offset:87951*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87951*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29318:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x115cea and fs2 == 1 and fe2 == 0x7f and fm2 == 0x616c03 and fs3 == 1 and fe3 == 0xd4 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f115cea; op2val:0xbfe16c03;
op3val:0xea0001ff; valaddr_reg:x3; val_offset:87954*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87954*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29319:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x115cea and fs2 == 1 and fe2 == 0x7f and fm2 == 0x616c03 and fs3 == 1 and fe3 == 0xd4 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f115cea; op2val:0xbfe16c03;
op3val:0xea0003ff; valaddr_reg:x3; val_offset:87957*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87957*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29320:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x115cea and fs2 == 1 and fe2 == 0x7f and fm2 == 0x616c03 and fs3 == 1 and fe3 == 0xd4 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f115cea; op2val:0xbfe16c03;
op3val:0xea0007ff; valaddr_reg:x3; val_offset:87960*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87960*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29321:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x115cea and fs2 == 1 and fe2 == 0x7f and fm2 == 0x616c03 and fs3 == 1 and fe3 == 0xd4 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f115cea; op2val:0xbfe16c03;
op3val:0xea000fff; valaddr_reg:x3; val_offset:87963*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87963*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29322:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x115cea and fs2 == 1 and fe2 == 0x7f and fm2 == 0x616c03 and fs3 == 1 and fe3 == 0xd4 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f115cea; op2val:0xbfe16c03;
op3val:0xea001fff; valaddr_reg:x3; val_offset:87966*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87966*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29323:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x115cea and fs2 == 1 and fe2 == 0x7f and fm2 == 0x616c03 and fs3 == 1 and fe3 == 0xd4 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f115cea; op2val:0xbfe16c03;
op3val:0xea003fff; valaddr_reg:x3; val_offset:87969*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87969*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29324:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x115cea and fs2 == 1 and fe2 == 0x7f and fm2 == 0x616c03 and fs3 == 1 and fe3 == 0xd4 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f115cea; op2val:0xbfe16c03;
op3val:0xea007fff; valaddr_reg:x3; val_offset:87972*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87972*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29325:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x115cea and fs2 == 1 and fe2 == 0x7f and fm2 == 0x616c03 and fs3 == 1 and fe3 == 0xd4 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f115cea; op2val:0xbfe16c03;
op3val:0xea00ffff; valaddr_reg:x3; val_offset:87975*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87975*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29326:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x115cea and fs2 == 1 and fe2 == 0x7f and fm2 == 0x616c03 and fs3 == 1 and fe3 == 0xd4 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f115cea; op2val:0xbfe16c03;
op3val:0xea01ffff; valaddr_reg:x3; val_offset:87978*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87978*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29327:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x115cea and fs2 == 1 and fe2 == 0x7f and fm2 == 0x616c03 and fs3 == 1 and fe3 == 0xd4 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f115cea; op2val:0xbfe16c03;
op3val:0xea03ffff; valaddr_reg:x3; val_offset:87981*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87981*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29328:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x115cea and fs2 == 1 and fe2 == 0x7f and fm2 == 0x616c03 and fs3 == 1 and fe3 == 0xd4 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f115cea; op2val:0xbfe16c03;
op3val:0xea07ffff; valaddr_reg:x3; val_offset:87984*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87984*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29329:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x115cea and fs2 == 1 and fe2 == 0x7f and fm2 == 0x616c03 and fs3 == 1 and fe3 == 0xd4 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f115cea; op2val:0xbfe16c03;
op3val:0xea0fffff; valaddr_reg:x3; val_offset:87987*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87987*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29330:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x115cea and fs2 == 1 and fe2 == 0x7f and fm2 == 0x616c03 and fs3 == 1 and fe3 == 0xd4 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f115cea; op2val:0xbfe16c03;
op3val:0xea1fffff; valaddr_reg:x3; val_offset:87990*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87990*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29331:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x115cea and fs2 == 1 and fe2 == 0x7f and fm2 == 0x616c03 and fs3 == 1 and fe3 == 0xd4 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f115cea; op2val:0xbfe16c03;
op3val:0xea3fffff; valaddr_reg:x3; val_offset:87993*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87993*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29332:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x115cea and fs2 == 1 and fe2 == 0x7f and fm2 == 0x616c03 and fs3 == 1 and fe3 == 0xd4 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f115cea; op2val:0xbfe16c03;
op3val:0xea400000; valaddr_reg:x3; val_offset:87996*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87996*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29333:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x115cea and fs2 == 1 and fe2 == 0x7f and fm2 == 0x616c03 and fs3 == 1 and fe3 == 0xd4 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f115cea; op2val:0xbfe16c03;
op3val:0xea600000; valaddr_reg:x3; val_offset:87999*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87999*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29334:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x115cea and fs2 == 1 and fe2 == 0x7f and fm2 == 0x616c03 and fs3 == 1 and fe3 == 0xd4 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f115cea; op2val:0xbfe16c03;
op3val:0xea700000; valaddr_reg:x3; val_offset:88002*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88002*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29335:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x115cea and fs2 == 1 and fe2 == 0x7f and fm2 == 0x616c03 and fs3 == 1 and fe3 == 0xd4 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f115cea; op2val:0xbfe16c03;
op3val:0xea780000; valaddr_reg:x3; val_offset:88005*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88005*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29336:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x115cea and fs2 == 1 and fe2 == 0x7f and fm2 == 0x616c03 and fs3 == 1 and fe3 == 0xd4 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f115cea; op2val:0xbfe16c03;
op3val:0xea7c0000; valaddr_reg:x3; val_offset:88008*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88008*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29337:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x115cea and fs2 == 1 and fe2 == 0x7f and fm2 == 0x616c03 and fs3 == 1 and fe3 == 0xd4 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f115cea; op2val:0xbfe16c03;
op3val:0xea7e0000; valaddr_reg:x3; val_offset:88011*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88011*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29338:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x115cea and fs2 == 1 and fe2 == 0x7f and fm2 == 0x616c03 and fs3 == 1 and fe3 == 0xd4 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f115cea; op2val:0xbfe16c03;
op3val:0xea7f0000; valaddr_reg:x3; val_offset:88014*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88014*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29339:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x115cea and fs2 == 1 and fe2 == 0x7f and fm2 == 0x616c03 and fs3 == 1 and fe3 == 0xd4 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f115cea; op2val:0xbfe16c03;
op3val:0xea7f8000; valaddr_reg:x3; val_offset:88017*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88017*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29340:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x115cea and fs2 == 1 and fe2 == 0x7f and fm2 == 0x616c03 and fs3 == 1 and fe3 == 0xd4 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f115cea; op2val:0xbfe16c03;
op3val:0xea7fc000; valaddr_reg:x3; val_offset:88020*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88020*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29341:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x115cea and fs2 == 1 and fe2 == 0x7f and fm2 == 0x616c03 and fs3 == 1 and fe3 == 0xd4 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f115cea; op2val:0xbfe16c03;
op3val:0xea7fe000; valaddr_reg:x3; val_offset:88023*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88023*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29342:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x115cea and fs2 == 1 and fe2 == 0x7f and fm2 == 0x616c03 and fs3 == 1 and fe3 == 0xd4 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f115cea; op2val:0xbfe16c03;
op3val:0xea7ff000; valaddr_reg:x3; val_offset:88026*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88026*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29343:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x115cea and fs2 == 1 and fe2 == 0x7f and fm2 == 0x616c03 and fs3 == 1 and fe3 == 0xd4 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f115cea; op2val:0xbfe16c03;
op3val:0xea7ff800; valaddr_reg:x3; val_offset:88029*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88029*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29344:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x115cea and fs2 == 1 and fe2 == 0x7f and fm2 == 0x616c03 and fs3 == 1 and fe3 == 0xd4 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f115cea; op2val:0xbfe16c03;
op3val:0xea7ffc00; valaddr_reg:x3; val_offset:88032*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88032*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29345:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x115cea and fs2 == 1 and fe2 == 0x7f and fm2 == 0x616c03 and fs3 == 1 and fe3 == 0xd4 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f115cea; op2val:0xbfe16c03;
op3val:0xea7ffe00; valaddr_reg:x3; val_offset:88035*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88035*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29346:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x115cea and fs2 == 1 and fe2 == 0x7f and fm2 == 0x616c03 and fs3 == 1 and fe3 == 0xd4 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f115cea; op2val:0xbfe16c03;
op3val:0xea7fff00; valaddr_reg:x3; val_offset:88038*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88038*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29347:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x115cea and fs2 == 1 and fe2 == 0x7f and fm2 == 0x616c03 and fs3 == 1 and fe3 == 0xd4 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f115cea; op2val:0xbfe16c03;
op3val:0xea7fff80; valaddr_reg:x3; val_offset:88041*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88041*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29348:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x115cea and fs2 == 1 and fe2 == 0x7f and fm2 == 0x616c03 and fs3 == 1 and fe3 == 0xd4 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f115cea; op2val:0xbfe16c03;
op3val:0xea7fffc0; valaddr_reg:x3; val_offset:88044*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88044*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29349:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x115cea and fs2 == 1 and fe2 == 0x7f and fm2 == 0x616c03 and fs3 == 1 and fe3 == 0xd4 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f115cea; op2val:0xbfe16c03;
op3val:0xea7fffe0; valaddr_reg:x3; val_offset:88047*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88047*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29350:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x115cea and fs2 == 1 and fe2 == 0x7f and fm2 == 0x616c03 and fs3 == 1 and fe3 == 0xd4 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f115cea; op2val:0xbfe16c03;
op3val:0xea7ffff0; valaddr_reg:x3; val_offset:88050*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88050*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29351:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x115cea and fs2 == 1 and fe2 == 0x7f and fm2 == 0x616c03 and fs3 == 1 and fe3 == 0xd4 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f115cea; op2val:0xbfe16c03;
op3val:0xea7ffff8; valaddr_reg:x3; val_offset:88053*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88053*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29352:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x115cea and fs2 == 1 and fe2 == 0x7f and fm2 == 0x616c03 and fs3 == 1 and fe3 == 0xd4 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f115cea; op2val:0xbfe16c03;
op3val:0xea7ffffc; valaddr_reg:x3; val_offset:88056*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88056*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29353:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x115cea and fs2 == 1 and fe2 == 0x7f and fm2 == 0x616c03 and fs3 == 1 and fe3 == 0xd4 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f115cea; op2val:0xbfe16c03;
op3val:0xea7ffffe; valaddr_reg:x3; val_offset:88059*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88059*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29354:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x115cea and fs2 == 1 and fe2 == 0x7f and fm2 == 0x616c03 and fs3 == 1 and fe3 == 0xd4 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f115cea; op2val:0xbfe16c03;
op3val:0xea7fffff; valaddr_reg:x3; val_offset:88062*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88062*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29355:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x115cea and fs2 == 1 and fe2 == 0x7f and fm2 == 0x616c03 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f115cea; op2val:0xbfe16c03;
op3val:0xff000001; valaddr_reg:x3; val_offset:88065*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88065*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29356:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x115cea and fs2 == 1 and fe2 == 0x7f and fm2 == 0x616c03 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f115cea; op2val:0xbfe16c03;
op3val:0xff000003; valaddr_reg:x3; val_offset:88068*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88068*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29357:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x115cea and fs2 == 1 and fe2 == 0x7f and fm2 == 0x616c03 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f115cea; op2val:0xbfe16c03;
op3val:0xff000007; valaddr_reg:x3; val_offset:88071*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88071*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29358:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x115cea and fs2 == 1 and fe2 == 0x7f and fm2 == 0x616c03 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f115cea; op2val:0xbfe16c03;
op3val:0xff199999; valaddr_reg:x3; val_offset:88074*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88074*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29359:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x115cea and fs2 == 1 and fe2 == 0x7f and fm2 == 0x616c03 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f115cea; op2val:0xbfe16c03;
op3val:0xff249249; valaddr_reg:x3; val_offset:88077*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88077*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29360:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x115cea and fs2 == 1 and fe2 == 0x7f and fm2 == 0x616c03 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f115cea; op2val:0xbfe16c03;
op3val:0xff333333; valaddr_reg:x3; val_offset:88080*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88080*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29361:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x115cea and fs2 == 1 and fe2 == 0x7f and fm2 == 0x616c03 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f115cea; op2val:0xbfe16c03;
op3val:0xff36db6d; valaddr_reg:x3; val_offset:88083*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88083*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29362:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x115cea and fs2 == 1 and fe2 == 0x7f and fm2 == 0x616c03 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f115cea; op2val:0xbfe16c03;
op3val:0xff3bbbbb; valaddr_reg:x3; val_offset:88086*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88086*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29363:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x115cea and fs2 == 1 and fe2 == 0x7f and fm2 == 0x616c03 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f115cea; op2val:0xbfe16c03;
op3val:0xff444444; valaddr_reg:x3; val_offset:88089*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88089*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29364:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x115cea and fs2 == 1 and fe2 == 0x7f and fm2 == 0x616c03 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f115cea; op2val:0xbfe16c03;
op3val:0xff4ccccc; valaddr_reg:x3; val_offset:88092*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88092*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29365:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x115cea and fs2 == 1 and fe2 == 0x7f and fm2 == 0x616c03 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f115cea; op2val:0xbfe16c03;
op3val:0xff5b6db6; valaddr_reg:x3; val_offset:88095*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88095*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29366:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x115cea and fs2 == 1 and fe2 == 0x7f and fm2 == 0x616c03 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f115cea; op2val:0xbfe16c03;
op3val:0xff666666; valaddr_reg:x3; val_offset:88098*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88098*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29367:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x115cea and fs2 == 1 and fe2 == 0x7f and fm2 == 0x616c03 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f115cea; op2val:0xbfe16c03;
op3val:0xff6db6db; valaddr_reg:x3; val_offset:88101*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88101*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29368:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x115cea and fs2 == 1 and fe2 == 0x7f and fm2 == 0x616c03 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f115cea; op2val:0xbfe16c03;
op3val:0xff7ffff8; valaddr_reg:x3; val_offset:88104*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88104*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29369:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x115cea and fs2 == 1 and fe2 == 0x7f and fm2 == 0x616c03 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f115cea; op2val:0xbfe16c03;
op3val:0xff7ffffc; valaddr_reg:x3; val_offset:88107*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88107*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29370:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x115cea and fs2 == 1 and fe2 == 0x7f and fm2 == 0x616c03 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f115cea; op2val:0xbfe16c03;
op3val:0xff7ffffe; valaddr_reg:x3; val_offset:88110*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88110*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29371:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11eda9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11eda9; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:88113*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88113*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29372:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11eda9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11eda9; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:88116*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88116*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29373:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11eda9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11eda9; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:88119*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88119*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29374:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11eda9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11eda9; op2val:0x0;
op3val:0x199999; valaddr_reg:x3; val_offset:88122*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88122*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29375:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11eda9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11eda9; op2val:0x0;
op3val:0x249249; valaddr_reg:x3; val_offset:88125*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88125*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29376:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11eda9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11eda9; op2val:0x0;
op3val:0x333333; valaddr_reg:x3; val_offset:88128*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88128*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29377:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11eda9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11eda9; op2val:0x0;
op3val:0x36db6d; valaddr_reg:x3; val_offset:88131*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88131*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29378:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11eda9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11eda9; op2val:0x0;
op3val:0x3bbbbb; valaddr_reg:x3; val_offset:88134*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88134*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29379:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11eda9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11eda9; op2val:0x0;
op3val:0x444444; valaddr_reg:x3; val_offset:88137*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88137*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29380:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11eda9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11eda9; op2val:0x0;
op3val:0x4ccccc; valaddr_reg:x3; val_offset:88140*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88140*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29381:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11eda9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11eda9; op2val:0x0;
op3val:0x5b6db6; valaddr_reg:x3; val_offset:88143*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88143*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29382:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11eda9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11eda9; op2val:0x0;
op3val:0x666666; valaddr_reg:x3; val_offset:88146*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88146*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29383:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11eda9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11eda9; op2val:0x0;
op3val:0x6db6db; valaddr_reg:x3; val_offset:88149*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88149*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29384:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11eda9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11eda9; op2val:0x0;
op3val:0x7ffff8; valaddr_reg:x3; val_offset:88152*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88152*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29385:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11eda9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11eda9; op2val:0x0;
op3val:0x7ffffc; valaddr_reg:x3; val_offset:88155*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88155*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29386:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11eda9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11eda9; op2val:0x0;
op3val:0x7ffffe; valaddr_reg:x3; val_offset:88158*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88158*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29387:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11eda9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xa0 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11eda9; op2val:0x0;
op3val:0x50000000; valaddr_reg:x3; val_offset:88161*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88161*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29388:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11eda9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xa0 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11eda9; op2val:0x0;
op3val:0x50000001; valaddr_reg:x3; val_offset:88164*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88164*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29389:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11eda9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xa0 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11eda9; op2val:0x0;
op3val:0x50000003; valaddr_reg:x3; val_offset:88167*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88167*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29390:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11eda9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xa0 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11eda9; op2val:0x0;
op3val:0x50000007; valaddr_reg:x3; val_offset:88170*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88170*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29391:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11eda9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xa0 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11eda9; op2val:0x0;
op3val:0x5000000f; valaddr_reg:x3; val_offset:88173*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88173*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29392:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11eda9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xa0 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11eda9; op2val:0x0;
op3val:0x5000001f; valaddr_reg:x3; val_offset:88176*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88176*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29393:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11eda9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xa0 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11eda9; op2val:0x0;
op3val:0x5000003f; valaddr_reg:x3; val_offset:88179*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88179*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29394:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11eda9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xa0 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11eda9; op2val:0x0;
op3val:0x5000007f; valaddr_reg:x3; val_offset:88182*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88182*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29395:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11eda9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xa0 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11eda9; op2val:0x0;
op3val:0x500000ff; valaddr_reg:x3; val_offset:88185*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88185*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29396:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11eda9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xa0 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11eda9; op2val:0x0;
op3val:0x500001ff; valaddr_reg:x3; val_offset:88188*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88188*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29397:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11eda9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xa0 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11eda9; op2val:0x0;
op3val:0x500003ff; valaddr_reg:x3; val_offset:88191*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88191*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29398:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11eda9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xa0 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11eda9; op2val:0x0;
op3val:0x500007ff; valaddr_reg:x3; val_offset:88194*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88194*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29399:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11eda9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xa0 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11eda9; op2val:0x0;
op3val:0x50000fff; valaddr_reg:x3; val_offset:88197*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88197*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29400:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11eda9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xa0 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11eda9; op2val:0x0;
op3val:0x50001fff; valaddr_reg:x3; val_offset:88200*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88200*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29401:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11eda9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xa0 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11eda9; op2val:0x0;
op3val:0x50003fff; valaddr_reg:x3; val_offset:88203*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88203*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29402:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11eda9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xa0 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11eda9; op2val:0x0;
op3val:0x50007fff; valaddr_reg:x3; val_offset:88206*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88206*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29403:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11eda9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xa0 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11eda9; op2val:0x0;
op3val:0x5000ffff; valaddr_reg:x3; val_offset:88209*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88209*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29404:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11eda9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xa0 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11eda9; op2val:0x0;
op3val:0x5001ffff; valaddr_reg:x3; val_offset:88212*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88212*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29405:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11eda9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xa0 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11eda9; op2val:0x0;
op3val:0x5003ffff; valaddr_reg:x3; val_offset:88215*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88215*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29406:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11eda9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xa0 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11eda9; op2val:0x0;
op3val:0x5007ffff; valaddr_reg:x3; val_offset:88218*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88218*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29407:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11eda9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xa0 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11eda9; op2val:0x0;
op3val:0x500fffff; valaddr_reg:x3; val_offset:88221*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88221*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29408:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11eda9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xa0 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11eda9; op2val:0x0;
op3val:0x501fffff; valaddr_reg:x3; val_offset:88224*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88224*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29409:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11eda9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xa0 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11eda9; op2val:0x0;
op3val:0x503fffff; valaddr_reg:x3; val_offset:88227*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88227*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29410:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11eda9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xa0 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11eda9; op2val:0x0;
op3val:0x50400000; valaddr_reg:x3; val_offset:88230*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88230*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29411:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11eda9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xa0 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11eda9; op2val:0x0;
op3val:0x50600000; valaddr_reg:x3; val_offset:88233*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88233*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29412:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11eda9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xa0 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11eda9; op2val:0x0;
op3val:0x50700000; valaddr_reg:x3; val_offset:88236*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88236*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29413:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11eda9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xa0 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11eda9; op2val:0x0;
op3val:0x50780000; valaddr_reg:x3; val_offset:88239*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88239*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29414:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11eda9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xa0 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11eda9; op2val:0x0;
op3val:0x507c0000; valaddr_reg:x3; val_offset:88242*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88242*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29415:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11eda9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xa0 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11eda9; op2val:0x0;
op3val:0x507e0000; valaddr_reg:x3; val_offset:88245*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88245*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29416:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11eda9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xa0 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11eda9; op2val:0x0;
op3val:0x507f0000; valaddr_reg:x3; val_offset:88248*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88248*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29417:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11eda9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xa0 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11eda9; op2val:0x0;
op3val:0x507f8000; valaddr_reg:x3; val_offset:88251*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88251*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29418:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11eda9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xa0 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11eda9; op2val:0x0;
op3val:0x507fc000; valaddr_reg:x3; val_offset:88254*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88254*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29419:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11eda9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xa0 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11eda9; op2val:0x0;
op3val:0x507fe000; valaddr_reg:x3; val_offset:88257*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88257*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29420:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11eda9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xa0 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11eda9; op2val:0x0;
op3val:0x507ff000; valaddr_reg:x3; val_offset:88260*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88260*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29421:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11eda9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xa0 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11eda9; op2val:0x0;
op3val:0x507ff800; valaddr_reg:x3; val_offset:88263*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88263*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29422:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11eda9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xa0 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11eda9; op2val:0x0;
op3val:0x507ffc00; valaddr_reg:x3; val_offset:88266*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88266*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29423:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11eda9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xa0 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11eda9; op2val:0x0;
op3val:0x507ffe00; valaddr_reg:x3; val_offset:88269*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88269*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29424:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11eda9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xa0 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11eda9; op2val:0x0;
op3val:0x507fff00; valaddr_reg:x3; val_offset:88272*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88272*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29425:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11eda9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xa0 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11eda9; op2val:0x0;
op3val:0x507fff80; valaddr_reg:x3; val_offset:88275*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88275*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29426:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11eda9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xa0 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11eda9; op2val:0x0;
op3val:0x507fffc0; valaddr_reg:x3; val_offset:88278*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88278*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29427:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11eda9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xa0 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11eda9; op2val:0x0;
op3val:0x507fffe0; valaddr_reg:x3; val_offset:88281*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88281*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29428:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11eda9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xa0 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11eda9; op2val:0x0;
op3val:0x507ffff0; valaddr_reg:x3; val_offset:88284*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88284*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29429:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11eda9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xa0 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11eda9; op2val:0x0;
op3val:0x507ffff8; valaddr_reg:x3; val_offset:88287*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88287*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29430:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11eda9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xa0 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11eda9; op2val:0x0;
op3val:0x507ffffc; valaddr_reg:x3; val_offset:88290*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88290*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29431:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11eda9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xa0 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11eda9; op2val:0x0;
op3val:0x507ffffe; valaddr_reg:x3; val_offset:88293*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88293*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29432:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11eda9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xa0 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11eda9; op2val:0x0;
op3val:0x507fffff; valaddr_reg:x3; val_offset:88296*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88296*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29433:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x135827 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f135827; op2val:0x80000000;
op3val:0x80000001; valaddr_reg:x3; val_offset:88299*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88299*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29434:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x135827 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f135827; op2val:0x80000000;
op3val:0x80000003; valaddr_reg:x3; val_offset:88302*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88302*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29435:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x135827 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f135827; op2val:0x80000000;
op3val:0x80000007; valaddr_reg:x3; val_offset:88305*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88305*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29436:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x135827 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f135827; op2val:0x80000000;
op3val:0x80199999; valaddr_reg:x3; val_offset:88308*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88308*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29437:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x135827 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f135827; op2val:0x80000000;
op3val:0x80249249; valaddr_reg:x3; val_offset:88311*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88311*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29438:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x135827 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f135827; op2val:0x80000000;
op3val:0x80333333; valaddr_reg:x3; val_offset:88314*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88314*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29439:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x135827 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f135827; op2val:0x80000000;
op3val:0x8036db6d; valaddr_reg:x3; val_offset:88317*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88317*0 + 3*229*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(2131844330,32,FLEN)
NAN_BOXED(3219221507,32,FLEN)
NAN_BOXED(3925868551,32,FLEN)
NAN_BOXED(2131844330,32,FLEN)
NAN_BOXED(3219221507,32,FLEN)
NAN_BOXED(3925868559,32,FLEN)
NAN_BOXED(2131844330,32,FLEN)
NAN_BOXED(3219221507,32,FLEN)
NAN_BOXED(3925868575,32,FLEN)
NAN_BOXED(2131844330,32,FLEN)
NAN_BOXED(3219221507,32,FLEN)
NAN_BOXED(3925868607,32,FLEN)
NAN_BOXED(2131844330,32,FLEN)
NAN_BOXED(3219221507,32,FLEN)
NAN_BOXED(3925868671,32,FLEN)
NAN_BOXED(2131844330,32,FLEN)
NAN_BOXED(3219221507,32,FLEN)
NAN_BOXED(3925868799,32,FLEN)
NAN_BOXED(2131844330,32,FLEN)
NAN_BOXED(3219221507,32,FLEN)
NAN_BOXED(3925869055,32,FLEN)
NAN_BOXED(2131844330,32,FLEN)
NAN_BOXED(3219221507,32,FLEN)
NAN_BOXED(3925869567,32,FLEN)
NAN_BOXED(2131844330,32,FLEN)
NAN_BOXED(3219221507,32,FLEN)
NAN_BOXED(3925870591,32,FLEN)
NAN_BOXED(2131844330,32,FLEN)
NAN_BOXED(3219221507,32,FLEN)
NAN_BOXED(3925872639,32,FLEN)
NAN_BOXED(2131844330,32,FLEN)
NAN_BOXED(3219221507,32,FLEN)
NAN_BOXED(3925876735,32,FLEN)
NAN_BOXED(2131844330,32,FLEN)
NAN_BOXED(3219221507,32,FLEN)
NAN_BOXED(3925884927,32,FLEN)
NAN_BOXED(2131844330,32,FLEN)
NAN_BOXED(3219221507,32,FLEN)
NAN_BOXED(3925901311,32,FLEN)
NAN_BOXED(2131844330,32,FLEN)
NAN_BOXED(3219221507,32,FLEN)
NAN_BOXED(3925934079,32,FLEN)
NAN_BOXED(2131844330,32,FLEN)
NAN_BOXED(3219221507,32,FLEN)
NAN_BOXED(3925999615,32,FLEN)
NAN_BOXED(2131844330,32,FLEN)
NAN_BOXED(3219221507,32,FLEN)
NAN_BOXED(3926130687,32,FLEN)
NAN_BOXED(2131844330,32,FLEN)
NAN_BOXED(3219221507,32,FLEN)
NAN_BOXED(3926392831,32,FLEN)
NAN_BOXED(2131844330,32,FLEN)
NAN_BOXED(3219221507,32,FLEN)
NAN_BOXED(3926917119,32,FLEN)
NAN_BOXED(2131844330,32,FLEN)
NAN_BOXED(3219221507,32,FLEN)
NAN_BOXED(3927965695,32,FLEN)
NAN_BOXED(2131844330,32,FLEN)
NAN_BOXED(3219221507,32,FLEN)
NAN_BOXED(3930062847,32,FLEN)
NAN_BOXED(2131844330,32,FLEN)
NAN_BOXED(3219221507,32,FLEN)
NAN_BOXED(3930062848,32,FLEN)
NAN_BOXED(2131844330,32,FLEN)
NAN_BOXED(3219221507,32,FLEN)
NAN_BOXED(3932160000,32,FLEN)
NAN_BOXED(2131844330,32,FLEN)
NAN_BOXED(3219221507,32,FLEN)
NAN_BOXED(3933208576,32,FLEN)
NAN_BOXED(2131844330,32,FLEN)
NAN_BOXED(3219221507,32,FLEN)
NAN_BOXED(3933732864,32,FLEN)
NAN_BOXED(2131844330,32,FLEN)
NAN_BOXED(3219221507,32,FLEN)
NAN_BOXED(3933995008,32,FLEN)
NAN_BOXED(2131844330,32,FLEN)
NAN_BOXED(3219221507,32,FLEN)
NAN_BOXED(3934126080,32,FLEN)
NAN_BOXED(2131844330,32,FLEN)
NAN_BOXED(3219221507,32,FLEN)
NAN_BOXED(3934191616,32,FLEN)
NAN_BOXED(2131844330,32,FLEN)
NAN_BOXED(3219221507,32,FLEN)
NAN_BOXED(3934224384,32,FLEN)
NAN_BOXED(2131844330,32,FLEN)
NAN_BOXED(3219221507,32,FLEN)
NAN_BOXED(3934240768,32,FLEN)
NAN_BOXED(2131844330,32,FLEN)
NAN_BOXED(3219221507,32,FLEN)
NAN_BOXED(3934248960,32,FLEN)
NAN_BOXED(2131844330,32,FLEN)
NAN_BOXED(3219221507,32,FLEN)
NAN_BOXED(3934253056,32,FLEN)
NAN_BOXED(2131844330,32,FLEN)
NAN_BOXED(3219221507,32,FLEN)
NAN_BOXED(3934255104,32,FLEN)
NAN_BOXED(2131844330,32,FLEN)
NAN_BOXED(3219221507,32,FLEN)
NAN_BOXED(3934256128,32,FLEN)
NAN_BOXED(2131844330,32,FLEN)
NAN_BOXED(3219221507,32,FLEN)
NAN_BOXED(3934256640,32,FLEN)
NAN_BOXED(2131844330,32,FLEN)
NAN_BOXED(3219221507,32,FLEN)
NAN_BOXED(3934256896,32,FLEN)
NAN_BOXED(2131844330,32,FLEN)
NAN_BOXED(3219221507,32,FLEN)
NAN_BOXED(3934257024,32,FLEN)
NAN_BOXED(2131844330,32,FLEN)
NAN_BOXED(3219221507,32,FLEN)
NAN_BOXED(3934257088,32,FLEN)
NAN_BOXED(2131844330,32,FLEN)
NAN_BOXED(3219221507,32,FLEN)
NAN_BOXED(3934257120,32,FLEN)
NAN_BOXED(2131844330,32,FLEN)
NAN_BOXED(3219221507,32,FLEN)
NAN_BOXED(3934257136,32,FLEN)
NAN_BOXED(2131844330,32,FLEN)
NAN_BOXED(3219221507,32,FLEN)
NAN_BOXED(3934257144,32,FLEN)
NAN_BOXED(2131844330,32,FLEN)
NAN_BOXED(3219221507,32,FLEN)
NAN_BOXED(3934257148,32,FLEN)
NAN_BOXED(2131844330,32,FLEN)
NAN_BOXED(3219221507,32,FLEN)
NAN_BOXED(3934257150,32,FLEN)
NAN_BOXED(2131844330,32,FLEN)
NAN_BOXED(3219221507,32,FLEN)
NAN_BOXED(3934257151,32,FLEN)
NAN_BOXED(2131844330,32,FLEN)
NAN_BOXED(3219221507,32,FLEN)
NAN_BOXED(4278190081,32,FLEN)
NAN_BOXED(2131844330,32,FLEN)
NAN_BOXED(3219221507,32,FLEN)
NAN_BOXED(4278190083,32,FLEN)
NAN_BOXED(2131844330,32,FLEN)
NAN_BOXED(3219221507,32,FLEN)
NAN_BOXED(4278190087,32,FLEN)
NAN_BOXED(2131844330,32,FLEN)
NAN_BOXED(3219221507,32,FLEN)
NAN_BOXED(4279867801,32,FLEN)
NAN_BOXED(2131844330,32,FLEN)
NAN_BOXED(3219221507,32,FLEN)
NAN_BOXED(4280586825,32,FLEN)
NAN_BOXED(2131844330,32,FLEN)
NAN_BOXED(3219221507,32,FLEN)
NAN_BOXED(4281545523,32,FLEN)
NAN_BOXED(2131844330,32,FLEN)
NAN_BOXED(3219221507,32,FLEN)
NAN_BOXED(4281785197,32,FLEN)
NAN_BOXED(2131844330,32,FLEN)
NAN_BOXED(3219221507,32,FLEN)
NAN_BOXED(4282104763,32,FLEN)
NAN_BOXED(2131844330,32,FLEN)
NAN_BOXED(3219221507,32,FLEN)
NAN_BOXED(4282664004,32,FLEN)
NAN_BOXED(2131844330,32,FLEN)
NAN_BOXED(3219221507,32,FLEN)
NAN_BOXED(4283223244,32,FLEN)
NAN_BOXED(2131844330,32,FLEN)
NAN_BOXED(3219221507,32,FLEN)
NAN_BOXED(4284181942,32,FLEN)
NAN_BOXED(2131844330,32,FLEN)
NAN_BOXED(3219221507,32,FLEN)
NAN_BOXED(4284900966,32,FLEN)
NAN_BOXED(2131844330,32,FLEN)
NAN_BOXED(3219221507,32,FLEN)
NAN_BOXED(4285380315,32,FLEN)
NAN_BOXED(2131844330,32,FLEN)
NAN_BOXED(3219221507,32,FLEN)
NAN_BOXED(4286578680,32,FLEN)
NAN_BOXED(2131844330,32,FLEN)
NAN_BOXED(3219221507,32,FLEN)
NAN_BOXED(4286578684,32,FLEN)
NAN_BOXED(2131844330,32,FLEN)
NAN_BOXED(3219221507,32,FLEN)
NAN_BOXED(4286578686,32,FLEN)
NAN_BOXED(2131881385,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(2131881385,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3,32,FLEN)
NAN_BOXED(2131881385,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7,32,FLEN)
NAN_BOXED(2131881385,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1677721,32,FLEN)
NAN_BOXED(2131881385,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2396745,32,FLEN)
NAN_BOXED(2131881385,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3355443,32,FLEN)
NAN_BOXED(2131881385,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3595117,32,FLEN)
NAN_BOXED(2131881385,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3914683,32,FLEN)
NAN_BOXED(2131881385,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(4473924,32,FLEN)
NAN_BOXED(2131881385,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5033164,32,FLEN)
NAN_BOXED(2131881385,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5991862,32,FLEN)
NAN_BOXED(2131881385,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(6710886,32,FLEN)
NAN_BOXED(2131881385,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7190235,32,FLEN)
NAN_BOXED(2131881385,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388600,32,FLEN)
NAN_BOXED(2131881385,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388604,32,FLEN)
NAN_BOXED(2131881385,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388606,32,FLEN)
NAN_BOXED(2131881385,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1342177280,32,FLEN)
NAN_BOXED(2131881385,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1342177281,32,FLEN)
NAN_BOXED(2131881385,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1342177283,32,FLEN)
NAN_BOXED(2131881385,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1342177287,32,FLEN)
NAN_BOXED(2131881385,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1342177295,32,FLEN)
NAN_BOXED(2131881385,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1342177311,32,FLEN)
NAN_BOXED(2131881385,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1342177343,32,FLEN)
NAN_BOXED(2131881385,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1342177407,32,FLEN)
NAN_BOXED(2131881385,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1342177535,32,FLEN)
NAN_BOXED(2131881385,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1342177791,32,FLEN)
NAN_BOXED(2131881385,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1342178303,32,FLEN)
NAN_BOXED(2131881385,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1342179327,32,FLEN)
NAN_BOXED(2131881385,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1342181375,32,FLEN)
NAN_BOXED(2131881385,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1342185471,32,FLEN)
NAN_BOXED(2131881385,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1342193663,32,FLEN)
NAN_BOXED(2131881385,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1342210047,32,FLEN)
NAN_BOXED(2131881385,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1342242815,32,FLEN)
NAN_BOXED(2131881385,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1342308351,32,FLEN)
NAN_BOXED(2131881385,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1342439423,32,FLEN)
NAN_BOXED(2131881385,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1342701567,32,FLEN)
NAN_BOXED(2131881385,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1343225855,32,FLEN)
NAN_BOXED(2131881385,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1344274431,32,FLEN)
NAN_BOXED(2131881385,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1346371583,32,FLEN)
NAN_BOXED(2131881385,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1346371584,32,FLEN)
NAN_BOXED(2131881385,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1348468736,32,FLEN)
NAN_BOXED(2131881385,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1349517312,32,FLEN)
NAN_BOXED(2131881385,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1350041600,32,FLEN)
NAN_BOXED(2131881385,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1350303744,32,FLEN)
NAN_BOXED(2131881385,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1350434816,32,FLEN)
NAN_BOXED(2131881385,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1350500352,32,FLEN)
NAN_BOXED(2131881385,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1350533120,32,FLEN)
NAN_BOXED(2131881385,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1350549504,32,FLEN)
NAN_BOXED(2131881385,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1350557696,32,FLEN)
NAN_BOXED(2131881385,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1350561792,32,FLEN)
NAN_BOXED(2131881385,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1350563840,32,FLEN)
NAN_BOXED(2131881385,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1350564864,32,FLEN)
NAN_BOXED(2131881385,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1350565376,32,FLEN)
NAN_BOXED(2131881385,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1350565632,32,FLEN)
NAN_BOXED(2131881385,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1350565760,32,FLEN)
NAN_BOXED(2131881385,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1350565824,32,FLEN)
NAN_BOXED(2131881385,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1350565856,32,FLEN)
NAN_BOXED(2131881385,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1350565872,32,FLEN)
NAN_BOXED(2131881385,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1350565880,32,FLEN)
NAN_BOXED(2131881385,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1350565884,32,FLEN)
NAN_BOXED(2131881385,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1350565886,32,FLEN)
NAN_BOXED(2131881385,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1350565887,32,FLEN)
NAN_BOXED(2131974183,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2131974183,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483651,32,FLEN)
NAN_BOXED(2131974183,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483655,32,FLEN)
NAN_BOXED(2131974183,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149161369,32,FLEN)
NAN_BOXED(2131974183,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149880393,32,FLEN)
NAN_BOXED(2131974183,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2150839091,32,FLEN)
NAN_BOXED(2131974183,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151078765,32,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
