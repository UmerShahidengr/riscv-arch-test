
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 14:18:08 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32F/fnmsub.s.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmsub.s instruction of the RISC-V RV32F_Zicsr,RV32FD_Zicsr,RV64F_Zicsr,RV64FD_Zicsr extension for the fnmsub_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF_Zicsr,RV32IFD_Zicsr,RV64IF_Zicsr,RV64IFD_Zicsr,RV32EF_Zicsr,RV32EFD_Zicsr,RV64EF_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fnmsub_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*F.*);def TEST_CASE_1=True;",fnmsub_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_30592:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19b6dc and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19b6dc; op2val:0x80000000;
op3val:0x8ffc0000; valaddr_reg:x3; val_offset:91776*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91776*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30593:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19b6dc and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19b6dc; op2val:0x80000000;
op3val:0x8ffe0000; valaddr_reg:x3; val_offset:91779*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91779*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30594:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19b6dc and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19b6dc; op2val:0x80000000;
op3val:0x8fff0000; valaddr_reg:x3; val_offset:91782*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91782*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30595:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19b6dc and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19b6dc; op2val:0x80000000;
op3val:0x8fff8000; valaddr_reg:x3; val_offset:91785*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91785*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30596:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19b6dc and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19b6dc; op2val:0x80000000;
op3val:0x8fffc000; valaddr_reg:x3; val_offset:91788*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91788*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30597:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19b6dc and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19b6dc; op2val:0x80000000;
op3val:0x8fffe000; valaddr_reg:x3; val_offset:91791*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91791*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30598:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19b6dc and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19b6dc; op2val:0x80000000;
op3val:0x8ffff000; valaddr_reg:x3; val_offset:91794*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91794*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30599:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19b6dc and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19b6dc; op2val:0x80000000;
op3val:0x8ffff800; valaddr_reg:x3; val_offset:91797*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91797*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30600:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19b6dc and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19b6dc; op2val:0x80000000;
op3val:0x8ffffc00; valaddr_reg:x3; val_offset:91800*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91800*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30601:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19b6dc and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19b6dc; op2val:0x80000000;
op3val:0x8ffffe00; valaddr_reg:x3; val_offset:91803*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91803*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30602:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19b6dc and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19b6dc; op2val:0x80000000;
op3val:0x8fffff00; valaddr_reg:x3; val_offset:91806*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91806*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30603:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19b6dc and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19b6dc; op2val:0x80000000;
op3val:0x8fffff80; valaddr_reg:x3; val_offset:91809*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91809*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30604:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19b6dc and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19b6dc; op2val:0x80000000;
op3val:0x8fffffc0; valaddr_reg:x3; val_offset:91812*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91812*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30605:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19b6dc and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19b6dc; op2val:0x80000000;
op3val:0x8fffffe0; valaddr_reg:x3; val_offset:91815*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91815*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30606:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19b6dc and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19b6dc; op2val:0x80000000;
op3val:0x8ffffff0; valaddr_reg:x3; val_offset:91818*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91818*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30607:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19b6dc and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19b6dc; op2val:0x80000000;
op3val:0x8ffffff8; valaddr_reg:x3; val_offset:91821*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91821*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30608:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19b6dc and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19b6dc; op2val:0x80000000;
op3val:0x8ffffffc; valaddr_reg:x3; val_offset:91824*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91824*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30609:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19b6dc and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19b6dc; op2val:0x80000000;
op3val:0x8ffffffe; valaddr_reg:x3; val_offset:91827*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91827*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30610:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19b6dc and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19b6dc; op2val:0x80000000;
op3val:0x8fffffff; valaddr_reg:x3; val_offset:91830*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91830*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30611:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19d2a8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x35418c and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19d2a8; op2val:0x8035418c;
op3val:0xbf800001; valaddr_reg:x3; val_offset:91833*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91833*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30612:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19d2a8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x35418c and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19d2a8; op2val:0x8035418c;
op3val:0xbf800003; valaddr_reg:x3; val_offset:91836*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91836*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30613:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19d2a8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x35418c and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19d2a8; op2val:0x8035418c;
op3val:0xbf800007; valaddr_reg:x3; val_offset:91839*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91839*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30614:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19d2a8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x35418c and fs3 == 1 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19d2a8; op2val:0x8035418c;
op3val:0xbf999999; valaddr_reg:x3; val_offset:91842*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91842*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30615:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19d2a8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x35418c and fs3 == 1 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19d2a8; op2val:0x8035418c;
op3val:0xbfa49249; valaddr_reg:x3; val_offset:91845*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91845*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30616:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19d2a8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x35418c and fs3 == 1 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19d2a8; op2val:0x8035418c;
op3val:0xbfb33333; valaddr_reg:x3; val_offset:91848*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91848*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30617:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19d2a8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x35418c and fs3 == 1 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19d2a8; op2val:0x8035418c;
op3val:0xbfb6db6d; valaddr_reg:x3; val_offset:91851*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91851*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30618:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19d2a8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x35418c and fs3 == 1 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19d2a8; op2val:0x8035418c;
op3val:0xbfbbbbbb; valaddr_reg:x3; val_offset:91854*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91854*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30619:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19d2a8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x35418c and fs3 == 1 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19d2a8; op2val:0x8035418c;
op3val:0xbfc44444; valaddr_reg:x3; val_offset:91857*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91857*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30620:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19d2a8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x35418c and fs3 == 1 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19d2a8; op2val:0x8035418c;
op3val:0xbfcccccc; valaddr_reg:x3; val_offset:91860*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91860*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30621:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19d2a8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x35418c and fs3 == 1 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19d2a8; op2val:0x8035418c;
op3val:0xbfdb6db6; valaddr_reg:x3; val_offset:91863*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91863*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30622:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19d2a8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x35418c and fs3 == 1 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19d2a8; op2val:0x8035418c;
op3val:0xbfe66666; valaddr_reg:x3; val_offset:91866*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91866*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30623:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19d2a8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x35418c and fs3 == 1 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19d2a8; op2val:0x8035418c;
op3val:0xbfedb6db; valaddr_reg:x3; val_offset:91869*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91869*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30624:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19d2a8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x35418c and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19d2a8; op2val:0x8035418c;
op3val:0xbffffff8; valaddr_reg:x3; val_offset:91872*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91872*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30625:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19d2a8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x35418c and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19d2a8; op2val:0x8035418c;
op3val:0xbffffffc; valaddr_reg:x3; val_offset:91875*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91875*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30626:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19d2a8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x35418c and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19d2a8; op2val:0x8035418c;
op3val:0xbffffffe; valaddr_reg:x3; val_offset:91878*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91878*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30627:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19d2a8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x35418c and fs3 == 1 and fe3 == 0x9d and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19d2a8; op2val:0x8035418c;
op3val:0xce800000; valaddr_reg:x3; val_offset:91881*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91881*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30628:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19d2a8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x35418c and fs3 == 1 and fe3 == 0x9d and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19d2a8; op2val:0x8035418c;
op3val:0xce800001; valaddr_reg:x3; val_offset:91884*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91884*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30629:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19d2a8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x35418c and fs3 == 1 and fe3 == 0x9d and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19d2a8; op2val:0x8035418c;
op3val:0xce800003; valaddr_reg:x3; val_offset:91887*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91887*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30630:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19d2a8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x35418c and fs3 == 1 and fe3 == 0x9d and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19d2a8; op2val:0x8035418c;
op3val:0xce800007; valaddr_reg:x3; val_offset:91890*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91890*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30631:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19d2a8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x35418c and fs3 == 1 and fe3 == 0x9d and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19d2a8; op2val:0x8035418c;
op3val:0xce80000f; valaddr_reg:x3; val_offset:91893*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91893*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30632:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19d2a8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x35418c and fs3 == 1 and fe3 == 0x9d and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19d2a8; op2val:0x8035418c;
op3val:0xce80001f; valaddr_reg:x3; val_offset:91896*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91896*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30633:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19d2a8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x35418c and fs3 == 1 and fe3 == 0x9d and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19d2a8; op2val:0x8035418c;
op3val:0xce80003f; valaddr_reg:x3; val_offset:91899*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91899*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30634:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19d2a8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x35418c and fs3 == 1 and fe3 == 0x9d and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19d2a8; op2val:0x8035418c;
op3val:0xce80007f; valaddr_reg:x3; val_offset:91902*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91902*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30635:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19d2a8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x35418c and fs3 == 1 and fe3 == 0x9d and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19d2a8; op2val:0x8035418c;
op3val:0xce8000ff; valaddr_reg:x3; val_offset:91905*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91905*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30636:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19d2a8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x35418c and fs3 == 1 and fe3 == 0x9d and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19d2a8; op2val:0x8035418c;
op3val:0xce8001ff; valaddr_reg:x3; val_offset:91908*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91908*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30637:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19d2a8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x35418c and fs3 == 1 and fe3 == 0x9d and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19d2a8; op2val:0x8035418c;
op3val:0xce8003ff; valaddr_reg:x3; val_offset:91911*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91911*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30638:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19d2a8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x35418c and fs3 == 1 and fe3 == 0x9d and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19d2a8; op2val:0x8035418c;
op3val:0xce8007ff; valaddr_reg:x3; val_offset:91914*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91914*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30639:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19d2a8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x35418c and fs3 == 1 and fe3 == 0x9d and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19d2a8; op2val:0x8035418c;
op3val:0xce800fff; valaddr_reg:x3; val_offset:91917*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91917*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30640:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19d2a8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x35418c and fs3 == 1 and fe3 == 0x9d and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19d2a8; op2val:0x8035418c;
op3val:0xce801fff; valaddr_reg:x3; val_offset:91920*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91920*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30641:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19d2a8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x35418c and fs3 == 1 and fe3 == 0x9d and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19d2a8; op2val:0x8035418c;
op3val:0xce803fff; valaddr_reg:x3; val_offset:91923*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91923*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30642:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19d2a8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x35418c and fs3 == 1 and fe3 == 0x9d and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19d2a8; op2val:0x8035418c;
op3val:0xce807fff; valaddr_reg:x3; val_offset:91926*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91926*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30643:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19d2a8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x35418c and fs3 == 1 and fe3 == 0x9d and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19d2a8; op2val:0x8035418c;
op3val:0xce80ffff; valaddr_reg:x3; val_offset:91929*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91929*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30644:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19d2a8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x35418c and fs3 == 1 and fe3 == 0x9d and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19d2a8; op2val:0x8035418c;
op3val:0xce81ffff; valaddr_reg:x3; val_offset:91932*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91932*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30645:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19d2a8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x35418c and fs3 == 1 and fe3 == 0x9d and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19d2a8; op2val:0x8035418c;
op3val:0xce83ffff; valaddr_reg:x3; val_offset:91935*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91935*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30646:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19d2a8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x35418c and fs3 == 1 and fe3 == 0x9d and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19d2a8; op2val:0x8035418c;
op3val:0xce87ffff; valaddr_reg:x3; val_offset:91938*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91938*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30647:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19d2a8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x35418c and fs3 == 1 and fe3 == 0x9d and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19d2a8; op2val:0x8035418c;
op3val:0xce8fffff; valaddr_reg:x3; val_offset:91941*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91941*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30648:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19d2a8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x35418c and fs3 == 1 and fe3 == 0x9d and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19d2a8; op2val:0x8035418c;
op3val:0xce9fffff; valaddr_reg:x3; val_offset:91944*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91944*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30649:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19d2a8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x35418c and fs3 == 1 and fe3 == 0x9d and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19d2a8; op2val:0x8035418c;
op3val:0xcebfffff; valaddr_reg:x3; val_offset:91947*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91947*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30650:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19d2a8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x35418c and fs3 == 1 and fe3 == 0x9d and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19d2a8; op2val:0x8035418c;
op3val:0xcec00000; valaddr_reg:x3; val_offset:91950*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91950*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30651:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19d2a8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x35418c and fs3 == 1 and fe3 == 0x9d and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19d2a8; op2val:0x8035418c;
op3val:0xcee00000; valaddr_reg:x3; val_offset:91953*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91953*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30652:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19d2a8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x35418c and fs3 == 1 and fe3 == 0x9d and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19d2a8; op2val:0x8035418c;
op3val:0xcef00000; valaddr_reg:x3; val_offset:91956*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91956*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30653:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19d2a8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x35418c and fs3 == 1 and fe3 == 0x9d and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19d2a8; op2val:0x8035418c;
op3val:0xcef80000; valaddr_reg:x3; val_offset:91959*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91959*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30654:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19d2a8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x35418c and fs3 == 1 and fe3 == 0x9d and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19d2a8; op2val:0x8035418c;
op3val:0xcefc0000; valaddr_reg:x3; val_offset:91962*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91962*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30655:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19d2a8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x35418c and fs3 == 1 and fe3 == 0x9d and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19d2a8; op2val:0x8035418c;
op3val:0xcefe0000; valaddr_reg:x3; val_offset:91965*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91965*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30656:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19d2a8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x35418c and fs3 == 1 and fe3 == 0x9d and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19d2a8; op2val:0x8035418c;
op3val:0xceff0000; valaddr_reg:x3; val_offset:91968*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91968*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30657:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19d2a8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x35418c and fs3 == 1 and fe3 == 0x9d and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19d2a8; op2val:0x8035418c;
op3val:0xceff8000; valaddr_reg:x3; val_offset:91971*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91971*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30658:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19d2a8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x35418c and fs3 == 1 and fe3 == 0x9d and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19d2a8; op2val:0x8035418c;
op3val:0xceffc000; valaddr_reg:x3; val_offset:91974*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91974*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30659:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19d2a8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x35418c and fs3 == 1 and fe3 == 0x9d and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19d2a8; op2val:0x8035418c;
op3val:0xceffe000; valaddr_reg:x3; val_offset:91977*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91977*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30660:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19d2a8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x35418c and fs3 == 1 and fe3 == 0x9d and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19d2a8; op2val:0x8035418c;
op3val:0xcefff000; valaddr_reg:x3; val_offset:91980*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91980*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30661:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19d2a8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x35418c and fs3 == 1 and fe3 == 0x9d and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19d2a8; op2val:0x8035418c;
op3val:0xcefff800; valaddr_reg:x3; val_offset:91983*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91983*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30662:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19d2a8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x35418c and fs3 == 1 and fe3 == 0x9d and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19d2a8; op2val:0x8035418c;
op3val:0xcefffc00; valaddr_reg:x3; val_offset:91986*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91986*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30663:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19d2a8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x35418c and fs3 == 1 and fe3 == 0x9d and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19d2a8; op2val:0x8035418c;
op3val:0xcefffe00; valaddr_reg:x3; val_offset:91989*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91989*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30664:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19d2a8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x35418c and fs3 == 1 and fe3 == 0x9d and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19d2a8; op2val:0x8035418c;
op3val:0xceffff00; valaddr_reg:x3; val_offset:91992*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91992*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30665:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19d2a8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x35418c and fs3 == 1 and fe3 == 0x9d and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19d2a8; op2val:0x8035418c;
op3val:0xceffff80; valaddr_reg:x3; val_offset:91995*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91995*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30666:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19d2a8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x35418c and fs3 == 1 and fe3 == 0x9d and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19d2a8; op2val:0x8035418c;
op3val:0xceffffc0; valaddr_reg:x3; val_offset:91998*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91998*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30667:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19d2a8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x35418c and fs3 == 1 and fe3 == 0x9d and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19d2a8; op2val:0x8035418c;
op3val:0xceffffe0; valaddr_reg:x3; val_offset:92001*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92001*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30668:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19d2a8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x35418c and fs3 == 1 and fe3 == 0x9d and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19d2a8; op2val:0x8035418c;
op3val:0xcefffff0; valaddr_reg:x3; val_offset:92004*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92004*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30669:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19d2a8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x35418c and fs3 == 1 and fe3 == 0x9d and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19d2a8; op2val:0x8035418c;
op3val:0xcefffff8; valaddr_reg:x3; val_offset:92007*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92007*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30670:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19d2a8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x35418c and fs3 == 1 and fe3 == 0x9d and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19d2a8; op2val:0x8035418c;
op3val:0xcefffffc; valaddr_reg:x3; val_offset:92010*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92010*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30671:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19d2a8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x35418c and fs3 == 1 and fe3 == 0x9d and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19d2a8; op2val:0x8035418c;
op3val:0xcefffffe; valaddr_reg:x3; val_offset:92013*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92013*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30672:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19d2a8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x35418c and fs3 == 1 and fe3 == 0x9d and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19d2a8; op2val:0x8035418c;
op3val:0xceffffff; valaddr_reg:x3; val_offset:92016*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92016*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30673:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1a33ce and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1a33ce; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:92019*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92019*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30674:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1a33ce and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1a33ce; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:92022*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92022*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30675:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1a33ce and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1a33ce; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:92025*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92025*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30676:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1a33ce and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1a33ce; op2val:0x0;
op3val:0x199999; valaddr_reg:x3; val_offset:92028*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92028*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30677:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1a33ce and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1a33ce; op2val:0x0;
op3val:0x249249; valaddr_reg:x3; val_offset:92031*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92031*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30678:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1a33ce and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1a33ce; op2val:0x0;
op3val:0x333333; valaddr_reg:x3; val_offset:92034*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92034*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30679:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1a33ce and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1a33ce; op2val:0x0;
op3val:0x36db6d; valaddr_reg:x3; val_offset:92037*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92037*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30680:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1a33ce and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1a33ce; op2val:0x0;
op3val:0x3bbbbb; valaddr_reg:x3; val_offset:92040*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92040*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30681:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1a33ce and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1a33ce; op2val:0x0;
op3val:0x444444; valaddr_reg:x3; val_offset:92043*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92043*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30682:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1a33ce and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1a33ce; op2val:0x0;
op3val:0x4ccccc; valaddr_reg:x3; val_offset:92046*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92046*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30683:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1a33ce and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1a33ce; op2val:0x0;
op3val:0x5b6db6; valaddr_reg:x3; val_offset:92049*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92049*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30684:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1a33ce and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1a33ce; op2val:0x0;
op3val:0x666666; valaddr_reg:x3; val_offset:92052*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92052*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30685:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1a33ce and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1a33ce; op2val:0x0;
op3val:0x6db6db; valaddr_reg:x3; val_offset:92055*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92055*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30686:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1a33ce and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1a33ce; op2val:0x0;
op3val:0x7ffff8; valaddr_reg:x3; val_offset:92058*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92058*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30687:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1a33ce and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1a33ce; op2val:0x0;
op3val:0x7ffffc; valaddr_reg:x3; val_offset:92061*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92061*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30688:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1a33ce and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1a33ce; op2val:0x0;
op3val:0x7ffffe; valaddr_reg:x3; val_offset:92064*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92064*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30689:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1a33ce and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x07 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1a33ce; op2val:0x0;
op3val:0x3800000; valaddr_reg:x3; val_offset:92067*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92067*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30690:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1a33ce and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x07 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1a33ce; op2val:0x0;
op3val:0x3800001; valaddr_reg:x3; val_offset:92070*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92070*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30691:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1a33ce and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x07 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1a33ce; op2val:0x0;
op3val:0x3800003; valaddr_reg:x3; val_offset:92073*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92073*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30692:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1a33ce and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x07 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1a33ce; op2val:0x0;
op3val:0x3800007; valaddr_reg:x3; val_offset:92076*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92076*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30693:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1a33ce and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x07 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1a33ce; op2val:0x0;
op3val:0x380000f; valaddr_reg:x3; val_offset:92079*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92079*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30694:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1a33ce and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x07 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1a33ce; op2val:0x0;
op3val:0x380001f; valaddr_reg:x3; val_offset:92082*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92082*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30695:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1a33ce and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x07 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1a33ce; op2val:0x0;
op3val:0x380003f; valaddr_reg:x3; val_offset:92085*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92085*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30696:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1a33ce and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x07 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1a33ce; op2val:0x0;
op3val:0x380007f; valaddr_reg:x3; val_offset:92088*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92088*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30697:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1a33ce and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x07 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1a33ce; op2val:0x0;
op3val:0x38000ff; valaddr_reg:x3; val_offset:92091*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92091*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30698:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1a33ce and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x07 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1a33ce; op2val:0x0;
op3val:0x38001ff; valaddr_reg:x3; val_offset:92094*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92094*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30699:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1a33ce and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x07 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1a33ce; op2val:0x0;
op3val:0x38003ff; valaddr_reg:x3; val_offset:92097*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92097*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30700:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1a33ce and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x07 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1a33ce; op2val:0x0;
op3val:0x38007ff; valaddr_reg:x3; val_offset:92100*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92100*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30701:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1a33ce and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x07 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1a33ce; op2val:0x0;
op3val:0x3800fff; valaddr_reg:x3; val_offset:92103*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92103*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30702:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1a33ce and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x07 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1a33ce; op2val:0x0;
op3val:0x3801fff; valaddr_reg:x3; val_offset:92106*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92106*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30703:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1a33ce and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x07 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1a33ce; op2val:0x0;
op3val:0x3803fff; valaddr_reg:x3; val_offset:92109*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92109*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30704:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1a33ce and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x07 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1a33ce; op2val:0x0;
op3val:0x3807fff; valaddr_reg:x3; val_offset:92112*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92112*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30705:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1a33ce and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x07 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1a33ce; op2val:0x0;
op3val:0x380ffff; valaddr_reg:x3; val_offset:92115*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92115*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30706:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1a33ce and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x07 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1a33ce; op2val:0x0;
op3val:0x381ffff; valaddr_reg:x3; val_offset:92118*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92118*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30707:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1a33ce and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x07 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1a33ce; op2val:0x0;
op3val:0x383ffff; valaddr_reg:x3; val_offset:92121*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92121*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30708:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1a33ce and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x07 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1a33ce; op2val:0x0;
op3val:0x387ffff; valaddr_reg:x3; val_offset:92124*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92124*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30709:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1a33ce and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x07 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1a33ce; op2val:0x0;
op3val:0x38fffff; valaddr_reg:x3; val_offset:92127*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92127*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30710:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1a33ce and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x07 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1a33ce; op2val:0x0;
op3val:0x39fffff; valaddr_reg:x3; val_offset:92130*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92130*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30711:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1a33ce and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x07 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1a33ce; op2val:0x0;
op3val:0x3bfffff; valaddr_reg:x3; val_offset:92133*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92133*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30712:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1a33ce and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x07 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1a33ce; op2val:0x0;
op3val:0x3c00000; valaddr_reg:x3; val_offset:92136*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92136*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30713:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1a33ce and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x07 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1a33ce; op2val:0x0;
op3val:0x3e00000; valaddr_reg:x3; val_offset:92139*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92139*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30714:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1a33ce and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x07 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1a33ce; op2val:0x0;
op3val:0x3f00000; valaddr_reg:x3; val_offset:92142*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92142*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30715:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1a33ce and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x07 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1a33ce; op2val:0x0;
op3val:0x3f80000; valaddr_reg:x3; val_offset:92145*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92145*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30716:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1a33ce and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x07 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1a33ce; op2val:0x0;
op3val:0x3fc0000; valaddr_reg:x3; val_offset:92148*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92148*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30717:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1a33ce and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x07 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1a33ce; op2val:0x0;
op3val:0x3fe0000; valaddr_reg:x3; val_offset:92151*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92151*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30718:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1a33ce and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x07 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1a33ce; op2val:0x0;
op3val:0x3ff0000; valaddr_reg:x3; val_offset:92154*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92154*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30719:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1a33ce and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x07 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1a33ce; op2val:0x0;
op3val:0x3ff8000; valaddr_reg:x3; val_offset:92157*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92157*0 + 3*239*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(2132391644,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415656960,32,FLEN)
NAN_BOXED(2132391644,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415788032,32,FLEN)
NAN_BOXED(2132391644,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415853568,32,FLEN)
NAN_BOXED(2132391644,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415886336,32,FLEN)
NAN_BOXED(2132391644,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415902720,32,FLEN)
NAN_BOXED(2132391644,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415910912,32,FLEN)
NAN_BOXED(2132391644,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415915008,32,FLEN)
NAN_BOXED(2132391644,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415917056,32,FLEN)
NAN_BOXED(2132391644,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415918080,32,FLEN)
NAN_BOXED(2132391644,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415918592,32,FLEN)
NAN_BOXED(2132391644,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415918848,32,FLEN)
NAN_BOXED(2132391644,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415918976,32,FLEN)
NAN_BOXED(2132391644,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415919040,32,FLEN)
NAN_BOXED(2132391644,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415919072,32,FLEN)
NAN_BOXED(2132391644,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415919088,32,FLEN)
NAN_BOXED(2132391644,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415919096,32,FLEN)
NAN_BOXED(2132391644,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415919100,32,FLEN)
NAN_BOXED(2132391644,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415919102,32,FLEN)
NAN_BOXED(2132391644,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415919103,32,FLEN)
NAN_BOXED(2132398760,32,FLEN)
NAN_BOXED(2150973836,32,FLEN)
NAN_BOXED(3212836865,32,FLEN)
NAN_BOXED(2132398760,32,FLEN)
NAN_BOXED(2150973836,32,FLEN)
NAN_BOXED(3212836867,32,FLEN)
NAN_BOXED(2132398760,32,FLEN)
NAN_BOXED(2150973836,32,FLEN)
NAN_BOXED(3212836871,32,FLEN)
NAN_BOXED(2132398760,32,FLEN)
NAN_BOXED(2150973836,32,FLEN)
NAN_BOXED(3214514585,32,FLEN)
NAN_BOXED(2132398760,32,FLEN)
NAN_BOXED(2150973836,32,FLEN)
NAN_BOXED(3215233609,32,FLEN)
NAN_BOXED(2132398760,32,FLEN)
NAN_BOXED(2150973836,32,FLEN)
NAN_BOXED(3216192307,32,FLEN)
NAN_BOXED(2132398760,32,FLEN)
NAN_BOXED(2150973836,32,FLEN)
NAN_BOXED(3216431981,32,FLEN)
NAN_BOXED(2132398760,32,FLEN)
NAN_BOXED(2150973836,32,FLEN)
NAN_BOXED(3216751547,32,FLEN)
NAN_BOXED(2132398760,32,FLEN)
NAN_BOXED(2150973836,32,FLEN)
NAN_BOXED(3217310788,32,FLEN)
NAN_BOXED(2132398760,32,FLEN)
NAN_BOXED(2150973836,32,FLEN)
NAN_BOXED(3217870028,32,FLEN)
NAN_BOXED(2132398760,32,FLEN)
NAN_BOXED(2150973836,32,FLEN)
NAN_BOXED(3218828726,32,FLEN)
NAN_BOXED(2132398760,32,FLEN)
NAN_BOXED(2150973836,32,FLEN)
NAN_BOXED(3219547750,32,FLEN)
NAN_BOXED(2132398760,32,FLEN)
NAN_BOXED(2150973836,32,FLEN)
NAN_BOXED(3220027099,32,FLEN)
NAN_BOXED(2132398760,32,FLEN)
NAN_BOXED(2150973836,32,FLEN)
NAN_BOXED(3221225464,32,FLEN)
NAN_BOXED(2132398760,32,FLEN)
NAN_BOXED(2150973836,32,FLEN)
NAN_BOXED(3221225468,32,FLEN)
NAN_BOXED(2132398760,32,FLEN)
NAN_BOXED(2150973836,32,FLEN)
NAN_BOXED(3221225470,32,FLEN)
NAN_BOXED(2132398760,32,FLEN)
NAN_BOXED(2150973836,32,FLEN)
NAN_BOXED(3464495104,32,FLEN)
NAN_BOXED(2132398760,32,FLEN)
NAN_BOXED(2150973836,32,FLEN)
NAN_BOXED(3464495105,32,FLEN)
NAN_BOXED(2132398760,32,FLEN)
NAN_BOXED(2150973836,32,FLEN)
NAN_BOXED(3464495107,32,FLEN)
NAN_BOXED(2132398760,32,FLEN)
NAN_BOXED(2150973836,32,FLEN)
NAN_BOXED(3464495111,32,FLEN)
NAN_BOXED(2132398760,32,FLEN)
NAN_BOXED(2150973836,32,FLEN)
NAN_BOXED(3464495119,32,FLEN)
NAN_BOXED(2132398760,32,FLEN)
NAN_BOXED(2150973836,32,FLEN)
NAN_BOXED(3464495135,32,FLEN)
NAN_BOXED(2132398760,32,FLEN)
NAN_BOXED(2150973836,32,FLEN)
NAN_BOXED(3464495167,32,FLEN)
NAN_BOXED(2132398760,32,FLEN)
NAN_BOXED(2150973836,32,FLEN)
NAN_BOXED(3464495231,32,FLEN)
NAN_BOXED(2132398760,32,FLEN)
NAN_BOXED(2150973836,32,FLEN)
NAN_BOXED(3464495359,32,FLEN)
NAN_BOXED(2132398760,32,FLEN)
NAN_BOXED(2150973836,32,FLEN)
NAN_BOXED(3464495615,32,FLEN)
NAN_BOXED(2132398760,32,FLEN)
NAN_BOXED(2150973836,32,FLEN)
NAN_BOXED(3464496127,32,FLEN)
NAN_BOXED(2132398760,32,FLEN)
NAN_BOXED(2150973836,32,FLEN)
NAN_BOXED(3464497151,32,FLEN)
NAN_BOXED(2132398760,32,FLEN)
NAN_BOXED(2150973836,32,FLEN)
NAN_BOXED(3464499199,32,FLEN)
NAN_BOXED(2132398760,32,FLEN)
NAN_BOXED(2150973836,32,FLEN)
NAN_BOXED(3464503295,32,FLEN)
NAN_BOXED(2132398760,32,FLEN)
NAN_BOXED(2150973836,32,FLEN)
NAN_BOXED(3464511487,32,FLEN)
NAN_BOXED(2132398760,32,FLEN)
NAN_BOXED(2150973836,32,FLEN)
NAN_BOXED(3464527871,32,FLEN)
NAN_BOXED(2132398760,32,FLEN)
NAN_BOXED(2150973836,32,FLEN)
NAN_BOXED(3464560639,32,FLEN)
NAN_BOXED(2132398760,32,FLEN)
NAN_BOXED(2150973836,32,FLEN)
NAN_BOXED(3464626175,32,FLEN)
NAN_BOXED(2132398760,32,FLEN)
NAN_BOXED(2150973836,32,FLEN)
NAN_BOXED(3464757247,32,FLEN)
NAN_BOXED(2132398760,32,FLEN)
NAN_BOXED(2150973836,32,FLEN)
NAN_BOXED(3465019391,32,FLEN)
NAN_BOXED(2132398760,32,FLEN)
NAN_BOXED(2150973836,32,FLEN)
NAN_BOXED(3465543679,32,FLEN)
NAN_BOXED(2132398760,32,FLEN)
NAN_BOXED(2150973836,32,FLEN)
NAN_BOXED(3466592255,32,FLEN)
NAN_BOXED(2132398760,32,FLEN)
NAN_BOXED(2150973836,32,FLEN)
NAN_BOXED(3468689407,32,FLEN)
NAN_BOXED(2132398760,32,FLEN)
NAN_BOXED(2150973836,32,FLEN)
NAN_BOXED(3468689408,32,FLEN)
NAN_BOXED(2132398760,32,FLEN)
NAN_BOXED(2150973836,32,FLEN)
NAN_BOXED(3470786560,32,FLEN)
NAN_BOXED(2132398760,32,FLEN)
NAN_BOXED(2150973836,32,FLEN)
NAN_BOXED(3471835136,32,FLEN)
NAN_BOXED(2132398760,32,FLEN)
NAN_BOXED(2150973836,32,FLEN)
NAN_BOXED(3472359424,32,FLEN)
NAN_BOXED(2132398760,32,FLEN)
NAN_BOXED(2150973836,32,FLEN)
NAN_BOXED(3472621568,32,FLEN)
NAN_BOXED(2132398760,32,FLEN)
NAN_BOXED(2150973836,32,FLEN)
NAN_BOXED(3472752640,32,FLEN)
NAN_BOXED(2132398760,32,FLEN)
NAN_BOXED(2150973836,32,FLEN)
NAN_BOXED(3472818176,32,FLEN)
NAN_BOXED(2132398760,32,FLEN)
NAN_BOXED(2150973836,32,FLEN)
NAN_BOXED(3472850944,32,FLEN)
NAN_BOXED(2132398760,32,FLEN)
NAN_BOXED(2150973836,32,FLEN)
NAN_BOXED(3472867328,32,FLEN)
NAN_BOXED(2132398760,32,FLEN)
NAN_BOXED(2150973836,32,FLEN)
NAN_BOXED(3472875520,32,FLEN)
NAN_BOXED(2132398760,32,FLEN)
NAN_BOXED(2150973836,32,FLEN)
NAN_BOXED(3472879616,32,FLEN)
NAN_BOXED(2132398760,32,FLEN)
NAN_BOXED(2150973836,32,FLEN)
NAN_BOXED(3472881664,32,FLEN)
NAN_BOXED(2132398760,32,FLEN)
NAN_BOXED(2150973836,32,FLEN)
NAN_BOXED(3472882688,32,FLEN)
NAN_BOXED(2132398760,32,FLEN)
NAN_BOXED(2150973836,32,FLEN)
NAN_BOXED(3472883200,32,FLEN)
NAN_BOXED(2132398760,32,FLEN)
NAN_BOXED(2150973836,32,FLEN)
NAN_BOXED(3472883456,32,FLEN)
NAN_BOXED(2132398760,32,FLEN)
NAN_BOXED(2150973836,32,FLEN)
NAN_BOXED(3472883584,32,FLEN)
NAN_BOXED(2132398760,32,FLEN)
NAN_BOXED(2150973836,32,FLEN)
NAN_BOXED(3472883648,32,FLEN)
NAN_BOXED(2132398760,32,FLEN)
NAN_BOXED(2150973836,32,FLEN)
NAN_BOXED(3472883680,32,FLEN)
NAN_BOXED(2132398760,32,FLEN)
NAN_BOXED(2150973836,32,FLEN)
NAN_BOXED(3472883696,32,FLEN)
NAN_BOXED(2132398760,32,FLEN)
NAN_BOXED(2150973836,32,FLEN)
NAN_BOXED(3472883704,32,FLEN)
NAN_BOXED(2132398760,32,FLEN)
NAN_BOXED(2150973836,32,FLEN)
NAN_BOXED(3472883708,32,FLEN)
NAN_BOXED(2132398760,32,FLEN)
NAN_BOXED(2150973836,32,FLEN)
NAN_BOXED(3472883710,32,FLEN)
NAN_BOXED(2132398760,32,FLEN)
NAN_BOXED(2150973836,32,FLEN)
NAN_BOXED(3472883711,32,FLEN)
NAN_BOXED(2132423630,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(2132423630,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3,32,FLEN)
NAN_BOXED(2132423630,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7,32,FLEN)
NAN_BOXED(2132423630,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1677721,32,FLEN)
NAN_BOXED(2132423630,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2396745,32,FLEN)
NAN_BOXED(2132423630,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3355443,32,FLEN)
NAN_BOXED(2132423630,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3595117,32,FLEN)
NAN_BOXED(2132423630,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3914683,32,FLEN)
NAN_BOXED(2132423630,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(4473924,32,FLEN)
NAN_BOXED(2132423630,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5033164,32,FLEN)
NAN_BOXED(2132423630,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5991862,32,FLEN)
NAN_BOXED(2132423630,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(6710886,32,FLEN)
NAN_BOXED(2132423630,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7190235,32,FLEN)
NAN_BOXED(2132423630,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388600,32,FLEN)
NAN_BOXED(2132423630,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388604,32,FLEN)
NAN_BOXED(2132423630,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388606,32,FLEN)
NAN_BOXED(2132423630,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(58720256,32,FLEN)
NAN_BOXED(2132423630,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(58720257,32,FLEN)
NAN_BOXED(2132423630,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(58720259,32,FLEN)
NAN_BOXED(2132423630,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(58720263,32,FLEN)
NAN_BOXED(2132423630,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(58720271,32,FLEN)
NAN_BOXED(2132423630,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(58720287,32,FLEN)
NAN_BOXED(2132423630,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(58720319,32,FLEN)
NAN_BOXED(2132423630,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(58720383,32,FLEN)
NAN_BOXED(2132423630,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(58720511,32,FLEN)
NAN_BOXED(2132423630,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(58720767,32,FLEN)
NAN_BOXED(2132423630,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(58721279,32,FLEN)
NAN_BOXED(2132423630,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(58722303,32,FLEN)
NAN_BOXED(2132423630,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(58724351,32,FLEN)
NAN_BOXED(2132423630,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(58728447,32,FLEN)
NAN_BOXED(2132423630,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(58736639,32,FLEN)
NAN_BOXED(2132423630,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(58753023,32,FLEN)
NAN_BOXED(2132423630,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(58785791,32,FLEN)
NAN_BOXED(2132423630,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(58851327,32,FLEN)
NAN_BOXED(2132423630,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(58982399,32,FLEN)
NAN_BOXED(2132423630,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(59244543,32,FLEN)
NAN_BOXED(2132423630,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(59768831,32,FLEN)
NAN_BOXED(2132423630,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(60817407,32,FLEN)
NAN_BOXED(2132423630,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(62914559,32,FLEN)
NAN_BOXED(2132423630,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(62914560,32,FLEN)
NAN_BOXED(2132423630,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(65011712,32,FLEN)
NAN_BOXED(2132423630,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(66060288,32,FLEN)
NAN_BOXED(2132423630,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(66584576,32,FLEN)
NAN_BOXED(2132423630,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(66846720,32,FLEN)
NAN_BOXED(2132423630,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(66977792,32,FLEN)
NAN_BOXED(2132423630,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(67043328,32,FLEN)
NAN_BOXED(2132423630,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(67076096,32,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
