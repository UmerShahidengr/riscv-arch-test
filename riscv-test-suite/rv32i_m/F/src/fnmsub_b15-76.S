
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 14:18:08 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32F/fnmsub.s.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmsub.s instruction of the RISC-V RV32F_Zicsr,RV32FD_Zicsr,RV64F_Zicsr,RV64FD_Zicsr extension for the fnmsub_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF_Zicsr,RV32IFD_Zicsr,RV64IF_Zicsr,RV64IFD_Zicsr,RV32EF_Zicsr,RV32EFD_Zicsr,RV64EF_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fnmsub_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*F.*);def TEST_CASE_1=True;",fnmsub_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_9600:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x43d898 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e43d898; op2val:0x80000000;
op3val:0x8e0003ff; valaddr_reg:x3; val_offset:28800*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28800*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9601:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x43d898 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e43d898; op2val:0x80000000;
op3val:0x8e0007ff; valaddr_reg:x3; val_offset:28803*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28803*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9602:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x43d898 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e43d898; op2val:0x80000000;
op3val:0x8e000fff; valaddr_reg:x3; val_offset:28806*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28806*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9603:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x43d898 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e43d898; op2val:0x80000000;
op3val:0x8e001fff; valaddr_reg:x3; val_offset:28809*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28809*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9604:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x43d898 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e43d898; op2val:0x80000000;
op3val:0x8e003fff; valaddr_reg:x3; val_offset:28812*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28812*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9605:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x43d898 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e43d898; op2val:0x80000000;
op3val:0x8e007fff; valaddr_reg:x3; val_offset:28815*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28815*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9606:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x43d898 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e43d898; op2val:0x80000000;
op3val:0x8e00ffff; valaddr_reg:x3; val_offset:28818*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28818*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9607:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x43d898 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e43d898; op2val:0x80000000;
op3val:0x8e01ffff; valaddr_reg:x3; val_offset:28821*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28821*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9608:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x43d898 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e43d898; op2val:0x80000000;
op3val:0x8e03ffff; valaddr_reg:x3; val_offset:28824*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28824*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9609:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x43d898 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e43d898; op2val:0x80000000;
op3val:0x8e07ffff; valaddr_reg:x3; val_offset:28827*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28827*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9610:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x43d898 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e43d898; op2val:0x80000000;
op3val:0x8e0fffff; valaddr_reg:x3; val_offset:28830*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28830*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9611:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x43d898 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e43d898; op2val:0x80000000;
op3val:0x8e1fffff; valaddr_reg:x3; val_offset:28833*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28833*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9612:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x43d898 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e43d898; op2val:0x80000000;
op3val:0x8e3fffff; valaddr_reg:x3; val_offset:28836*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28836*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9613:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x43d898 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e43d898; op2val:0x80000000;
op3val:0x8e400000; valaddr_reg:x3; val_offset:28839*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28839*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9614:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x43d898 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e43d898; op2val:0x80000000;
op3val:0x8e600000; valaddr_reg:x3; val_offset:28842*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28842*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9615:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x43d898 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e43d898; op2val:0x80000000;
op3val:0x8e700000; valaddr_reg:x3; val_offset:28845*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28845*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9616:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x43d898 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e43d898; op2val:0x80000000;
op3val:0x8e780000; valaddr_reg:x3; val_offset:28848*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28848*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9617:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x43d898 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e43d898; op2val:0x80000000;
op3val:0x8e7c0000; valaddr_reg:x3; val_offset:28851*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28851*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9618:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x43d898 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e43d898; op2val:0x80000000;
op3val:0x8e7e0000; valaddr_reg:x3; val_offset:28854*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28854*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9619:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x43d898 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e43d898; op2val:0x80000000;
op3val:0x8e7f0000; valaddr_reg:x3; val_offset:28857*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28857*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9620:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x43d898 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e43d898; op2val:0x80000000;
op3val:0x8e7f8000; valaddr_reg:x3; val_offset:28860*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28860*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9621:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x43d898 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e43d898; op2val:0x80000000;
op3val:0x8e7fc000; valaddr_reg:x3; val_offset:28863*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28863*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9622:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x43d898 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e43d898; op2val:0x80000000;
op3val:0x8e7fe000; valaddr_reg:x3; val_offset:28866*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28866*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9623:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x43d898 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e43d898; op2val:0x80000000;
op3val:0x8e7ff000; valaddr_reg:x3; val_offset:28869*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28869*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9624:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x43d898 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e43d898; op2val:0x80000000;
op3val:0x8e7ff800; valaddr_reg:x3; val_offset:28872*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28872*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9625:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x43d898 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e43d898; op2val:0x80000000;
op3val:0x8e7ffc00; valaddr_reg:x3; val_offset:28875*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28875*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9626:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x43d898 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e43d898; op2val:0x80000000;
op3val:0x8e7ffe00; valaddr_reg:x3; val_offset:28878*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28878*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9627:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x43d898 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e43d898; op2val:0x80000000;
op3val:0x8e7fff00; valaddr_reg:x3; val_offset:28881*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28881*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9628:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x43d898 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e43d898; op2val:0x80000000;
op3val:0x8e7fff80; valaddr_reg:x3; val_offset:28884*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28884*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9629:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x43d898 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e43d898; op2val:0x80000000;
op3val:0x8e7fffc0; valaddr_reg:x3; val_offset:28887*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28887*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9630:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x43d898 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e43d898; op2val:0x80000000;
op3val:0x8e7fffe0; valaddr_reg:x3; val_offset:28890*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28890*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9631:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x43d898 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e43d898; op2val:0x80000000;
op3val:0x8e7ffff0; valaddr_reg:x3; val_offset:28893*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28893*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9632:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x43d898 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e43d898; op2val:0x80000000;
op3val:0x8e7ffff8; valaddr_reg:x3; val_offset:28896*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28896*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9633:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x43d898 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e43d898; op2val:0x80000000;
op3val:0x8e7ffffc; valaddr_reg:x3; val_offset:28899*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28899*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9634:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x43d898 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e43d898; op2val:0x80000000;
op3val:0x8e7ffffe; valaddr_reg:x3; val_offset:28902*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28902*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9635:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x43d898 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e43d898; op2val:0x80000000;
op3val:0x8e7fffff; valaddr_reg:x3; val_offset:28905*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28905*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9636:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x80000001; valaddr_reg:x3; val_offset:28908*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28908*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9637:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x80000003; valaddr_reg:x3; val_offset:28911*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28911*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9638:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x80000007; valaddr_reg:x3; val_offset:28914*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28914*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9639:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x80199999; valaddr_reg:x3; val_offset:28917*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28917*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9640:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x80249249; valaddr_reg:x3; val_offset:28920*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28920*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9641:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x80333333; valaddr_reg:x3; val_offset:28923*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28923*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9642:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x8036db6d; valaddr_reg:x3; val_offset:28926*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28926*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9643:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x803bbbbb; valaddr_reg:x3; val_offset:28929*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28929*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9644:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x80444444; valaddr_reg:x3; val_offset:28932*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28932*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9645:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x804ccccc; valaddr_reg:x3; val_offset:28935*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28935*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9646:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x805b6db6; valaddr_reg:x3; val_offset:28938*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28938*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9647:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x80666666; valaddr_reg:x3; val_offset:28941*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28941*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9648:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x806db6db; valaddr_reg:x3; val_offset:28944*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28944*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9649:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x807ffff8; valaddr_reg:x3; val_offset:28947*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28947*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9650:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x807ffffc; valaddr_reg:x3; val_offset:28950*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28950*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9651:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x807ffffe; valaddr_reg:x3; val_offset:28953*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28953*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9652:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x8b800000; valaddr_reg:x3; val_offset:28956*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28956*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9653:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x8b800001; valaddr_reg:x3; val_offset:28959*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28959*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9654:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x8b800003; valaddr_reg:x3; val_offset:28962*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28962*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9655:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x8b800007; valaddr_reg:x3; val_offset:28965*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28965*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9656:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x8b80000f; valaddr_reg:x3; val_offset:28968*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28968*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9657:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x8b80001f; valaddr_reg:x3; val_offset:28971*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28971*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9658:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x8b80003f; valaddr_reg:x3; val_offset:28974*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28974*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9659:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x8b80007f; valaddr_reg:x3; val_offset:28977*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28977*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9660:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x8b8000ff; valaddr_reg:x3; val_offset:28980*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28980*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9661:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x8b8001ff; valaddr_reg:x3; val_offset:28983*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28983*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9662:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x8b8003ff; valaddr_reg:x3; val_offset:28986*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28986*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9663:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x8b8007ff; valaddr_reg:x3; val_offset:28989*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28989*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9664:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x8b800fff; valaddr_reg:x3; val_offset:28992*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28992*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9665:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x8b801fff; valaddr_reg:x3; val_offset:28995*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28995*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9666:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x8b803fff; valaddr_reg:x3; val_offset:28998*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28998*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9667:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x8b807fff; valaddr_reg:x3; val_offset:29001*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29001*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9668:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x8b80ffff; valaddr_reg:x3; val_offset:29004*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29004*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9669:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x8b81ffff; valaddr_reg:x3; val_offset:29007*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29007*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9670:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x8b83ffff; valaddr_reg:x3; val_offset:29010*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29010*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9671:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x8b87ffff; valaddr_reg:x3; val_offset:29013*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29013*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9672:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x8b8fffff; valaddr_reg:x3; val_offset:29016*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29016*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9673:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x8b9fffff; valaddr_reg:x3; val_offset:29019*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29019*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9674:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x8bbfffff; valaddr_reg:x3; val_offset:29022*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29022*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9675:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x8bc00000; valaddr_reg:x3; val_offset:29025*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29025*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9676:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x8be00000; valaddr_reg:x3; val_offset:29028*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29028*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9677:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x8bf00000; valaddr_reg:x3; val_offset:29031*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29031*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9678:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x8bf80000; valaddr_reg:x3; val_offset:29034*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29034*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9679:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x8bfc0000; valaddr_reg:x3; val_offset:29037*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29037*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9680:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x8bfe0000; valaddr_reg:x3; val_offset:29040*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29040*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9681:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x8bff0000; valaddr_reg:x3; val_offset:29043*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29043*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9682:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x8bff8000; valaddr_reg:x3; val_offset:29046*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29046*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9683:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x8bffc000; valaddr_reg:x3; val_offset:29049*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29049*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9684:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x8bffe000; valaddr_reg:x3; val_offset:29052*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29052*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9685:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x8bfff000; valaddr_reg:x3; val_offset:29055*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29055*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9686:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x8bfff800; valaddr_reg:x3; val_offset:29058*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29058*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9687:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x8bfffc00; valaddr_reg:x3; val_offset:29061*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29061*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9688:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x8bfffe00; valaddr_reg:x3; val_offset:29064*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29064*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9689:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x8bffff00; valaddr_reg:x3; val_offset:29067*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29067*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9690:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x8bffff80; valaddr_reg:x3; val_offset:29070*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29070*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9691:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x8bffffc0; valaddr_reg:x3; val_offset:29073*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29073*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9692:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x8bffffe0; valaddr_reg:x3; val_offset:29076*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29076*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9693:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x8bfffff0; valaddr_reg:x3; val_offset:29079*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29079*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9694:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x8bfffff8; valaddr_reg:x3; val_offset:29082*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29082*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9695:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x8bfffffc; valaddr_reg:x3; val_offset:29085*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29085*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9696:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x8bfffffe; valaddr_reg:x3; val_offset:29088*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29088*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9697:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x8bffffff; valaddr_reg:x3; val_offset:29091*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29091*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9698:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ae313 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ae313; op2val:0x0;
op3val:0x800001; valaddr_reg:x3; val_offset:29094*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29094*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9699:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ae313 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ae313; op2val:0x0;
op3val:0x800003; valaddr_reg:x3; val_offset:29097*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29097*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9700:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ae313 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ae313; op2val:0x0;
op3val:0x800007; valaddr_reg:x3; val_offset:29100*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29100*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9701:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ae313 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ae313; op2val:0x0;
op3val:0x999999; valaddr_reg:x3; val_offset:29103*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29103*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9702:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ae313 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ae313; op2val:0x0;
op3val:0xa49249; valaddr_reg:x3; val_offset:29106*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29106*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9703:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ae313 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ae313; op2val:0x0;
op3val:0xb33333; valaddr_reg:x3; val_offset:29109*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29109*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9704:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ae313 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ae313; op2val:0x0;
op3val:0xb6db6d; valaddr_reg:x3; val_offset:29112*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29112*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9705:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ae313 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ae313; op2val:0x0;
op3val:0xbbbbbb; valaddr_reg:x3; val_offset:29115*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29115*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9706:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ae313 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ae313; op2val:0x0;
op3val:0xc44444; valaddr_reg:x3; val_offset:29118*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29118*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9707:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ae313 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ae313; op2val:0x0;
op3val:0xcccccc; valaddr_reg:x3; val_offset:29121*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29121*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9708:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ae313 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ae313; op2val:0x0;
op3val:0xdb6db6; valaddr_reg:x3; val_offset:29124*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29124*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9709:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ae313 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ae313; op2val:0x0;
op3val:0xe66666; valaddr_reg:x3; val_offset:29127*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29127*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9710:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ae313 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ae313; op2val:0x0;
op3val:0xedb6db; valaddr_reg:x3; val_offset:29130*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29130*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9711:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ae313 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ae313; op2val:0x0;
op3val:0xfffff8; valaddr_reg:x3; val_offset:29133*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29133*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9712:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ae313 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ae313; op2val:0x0;
op3val:0xfffffc; valaddr_reg:x3; val_offset:29136*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29136*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9713:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ae313 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ae313; op2val:0x0;
op3val:0xfffffe; valaddr_reg:x3; val_offset:29139*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29139*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9714:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ae313 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x39 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ae313; op2val:0x0;
op3val:0x1c800000; valaddr_reg:x3; val_offset:29142*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29142*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9715:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ae313 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x39 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ae313; op2val:0x0;
op3val:0x1c800001; valaddr_reg:x3; val_offset:29145*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29145*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9716:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ae313 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x39 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ae313; op2val:0x0;
op3val:0x1c800003; valaddr_reg:x3; val_offset:29148*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29148*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9717:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ae313 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x39 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ae313; op2val:0x0;
op3val:0x1c800007; valaddr_reg:x3; val_offset:29151*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29151*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9718:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ae313 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x39 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ae313; op2val:0x0;
op3val:0x1c80000f; valaddr_reg:x3; val_offset:29154*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29154*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9719:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ae313 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x39 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ae313; op2val:0x0;
op3val:0x1c80001f; valaddr_reg:x3; val_offset:29157*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29157*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9720:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ae313 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x39 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ae313; op2val:0x0;
op3val:0x1c80003f; valaddr_reg:x3; val_offset:29160*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29160*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9721:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ae313 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x39 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ae313; op2val:0x0;
op3val:0x1c80007f; valaddr_reg:x3; val_offset:29163*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29163*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9722:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ae313 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x39 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ae313; op2val:0x0;
op3val:0x1c8000ff; valaddr_reg:x3; val_offset:29166*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29166*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9723:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ae313 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x39 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ae313; op2val:0x0;
op3val:0x1c8001ff; valaddr_reg:x3; val_offset:29169*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29169*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9724:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ae313 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x39 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ae313; op2val:0x0;
op3val:0x1c8003ff; valaddr_reg:x3; val_offset:29172*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29172*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9725:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ae313 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x39 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ae313; op2val:0x0;
op3val:0x1c8007ff; valaddr_reg:x3; val_offset:29175*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29175*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9726:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ae313 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x39 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ae313; op2val:0x0;
op3val:0x1c800fff; valaddr_reg:x3; val_offset:29178*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29178*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9727:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ae313 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x39 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ae313; op2val:0x0;
op3val:0x1c801fff; valaddr_reg:x3; val_offset:29181*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29181*0 + 3*75*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(2118375576,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382365695,32,FLEN)
NAN_BOXED(2118375576,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382366719,32,FLEN)
NAN_BOXED(2118375576,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382368767,32,FLEN)
NAN_BOXED(2118375576,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382372863,32,FLEN)
NAN_BOXED(2118375576,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382381055,32,FLEN)
NAN_BOXED(2118375576,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382397439,32,FLEN)
NAN_BOXED(2118375576,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382430207,32,FLEN)
NAN_BOXED(2118375576,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382495743,32,FLEN)
NAN_BOXED(2118375576,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382626815,32,FLEN)
NAN_BOXED(2118375576,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382888959,32,FLEN)
NAN_BOXED(2118375576,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2383413247,32,FLEN)
NAN_BOXED(2118375576,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2384461823,32,FLEN)
NAN_BOXED(2118375576,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2386558975,32,FLEN)
NAN_BOXED(2118375576,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2386558976,32,FLEN)
NAN_BOXED(2118375576,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2388656128,32,FLEN)
NAN_BOXED(2118375576,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2389704704,32,FLEN)
NAN_BOXED(2118375576,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2390228992,32,FLEN)
NAN_BOXED(2118375576,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2390491136,32,FLEN)
NAN_BOXED(2118375576,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2390622208,32,FLEN)
NAN_BOXED(2118375576,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2390687744,32,FLEN)
NAN_BOXED(2118375576,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2390720512,32,FLEN)
NAN_BOXED(2118375576,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2390736896,32,FLEN)
NAN_BOXED(2118375576,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2390745088,32,FLEN)
NAN_BOXED(2118375576,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2390749184,32,FLEN)
NAN_BOXED(2118375576,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2390751232,32,FLEN)
NAN_BOXED(2118375576,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2390752256,32,FLEN)
NAN_BOXED(2118375576,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2390752768,32,FLEN)
NAN_BOXED(2118375576,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2390753024,32,FLEN)
NAN_BOXED(2118375576,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2390753152,32,FLEN)
NAN_BOXED(2118375576,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2390753216,32,FLEN)
NAN_BOXED(2118375576,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2390753248,32,FLEN)
NAN_BOXED(2118375576,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2390753264,32,FLEN)
NAN_BOXED(2118375576,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2390753272,32,FLEN)
NAN_BOXED(2118375576,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2390753276,32,FLEN)
NAN_BOXED(2118375576,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2390753278,32,FLEN)
NAN_BOXED(2118375576,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2390753279,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483651,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483655,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149161369,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149880393,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2150839091,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151078765,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151398331,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151957572,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2152516812,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2153475510,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154194534,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154673883,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872248,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872252,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872254,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2340421632,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2340421633,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2340421635,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2340421639,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2340421647,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2340421663,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2340421695,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2340421759,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2340421887,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2340422143,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2340422655,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2340423679,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2340425727,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2340429823,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2340438015,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2340454399,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2340487167,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2340552703,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2340683775,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2340945919,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2341470207,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2342518783,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2344615935,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2344615936,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2346713088,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2347761664,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348285952,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348548096,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348679168,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348744704,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348777472,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348793856,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348802048,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348806144,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348808192,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348809216,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348809728,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348809984,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348810112,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348810176,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348810208,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348810224,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348810232,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348810236,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348810238,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348810239,32,FLEN)
NAN_BOXED(2118837011,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388609,32,FLEN)
NAN_BOXED(2118837011,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388611,32,FLEN)
NAN_BOXED(2118837011,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388615,32,FLEN)
NAN_BOXED(2118837011,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(10066329,32,FLEN)
NAN_BOXED(2118837011,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(10785353,32,FLEN)
NAN_BOXED(2118837011,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(11744051,32,FLEN)
NAN_BOXED(2118837011,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(11983725,32,FLEN)
NAN_BOXED(2118837011,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(12303291,32,FLEN)
NAN_BOXED(2118837011,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(12862532,32,FLEN)
NAN_BOXED(2118837011,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(13421772,32,FLEN)
NAN_BOXED(2118837011,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(14380470,32,FLEN)
NAN_BOXED(2118837011,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(15099494,32,FLEN)
NAN_BOXED(2118837011,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(15578843,32,FLEN)
NAN_BOXED(2118837011,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777208,32,FLEN)
NAN_BOXED(2118837011,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777212,32,FLEN)
NAN_BOXED(2118837011,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777214,32,FLEN)
NAN_BOXED(2118837011,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(478150656,32,FLEN)
NAN_BOXED(2118837011,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(478150657,32,FLEN)
NAN_BOXED(2118837011,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(478150659,32,FLEN)
NAN_BOXED(2118837011,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(478150663,32,FLEN)
NAN_BOXED(2118837011,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(478150671,32,FLEN)
NAN_BOXED(2118837011,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(478150687,32,FLEN)
NAN_BOXED(2118837011,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(478150719,32,FLEN)
NAN_BOXED(2118837011,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(478150783,32,FLEN)
NAN_BOXED(2118837011,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(478150911,32,FLEN)
NAN_BOXED(2118837011,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(478151167,32,FLEN)
NAN_BOXED(2118837011,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(478151679,32,FLEN)
NAN_BOXED(2118837011,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(478152703,32,FLEN)
NAN_BOXED(2118837011,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(478154751,32,FLEN)
NAN_BOXED(2118837011,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(478158847,32,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
